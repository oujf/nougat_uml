format 213
"content" // android::frameworks::base::core::java::android::content
  revision 5
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/core/java/android/content/"
  java_package "android.content"
  classview 128567 "content"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 5875511 "AssetTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 11450167 // mAssets (<unidirectional association>)
	relation 11450167 --->
	  a role_name "mAssets" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11450167 // mAssets (<unidirectional association>)
	  b parent class_ref 151095 // AssetManager
      end

      operation 47850807 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47850935 "verifyTextAsset"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "is" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47851063 "testReadToEnd"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 47851191 "xxtestListDir"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XXX failing"
      end
    end

    class 5875639 "BrickDeniedTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Test to make sure brick intents <b>don't</b> work without permission. "
      operation 47851319 "testBrick"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end
    end

    class 5875767 "ContentProviderOperationTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SmallTest
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      extra_member 258999 "initialization"
	
	cpp "" ""
	java "  static {
        sTestValues1 = new ContentValues();
        sTestValues1.put(\"a\", 1);
        sTestValues1.put(\"b\", \"two\");
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 47851447 "testInsert"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "OperationApplicationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47851575 "testInsertNoValues"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "OperationApplicationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47851703 "testInsertFailed"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47851831 "testInsertWithBackRefs"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "OperationApplicationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47851959 "testUpdate"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "OperationApplicationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852087 "testAssert"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852215 "testAssertNoValues"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852343 "getCursor"
	private explicit_return_type "Cursor"
	nparams 2
	  param inout name "contentValues" explicit_type "ContentValues"
	  param in name "numRows" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Build a {@link Cursor} with a single row that contains all values
provided through the given {@link ContentValues}.
"
      end

      operation 47852471 "testValueBackRefs"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852599 "testSelectionBackRefs"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852727 "testParcelingOperation"
	public explicit_return_type "void"
	nparams 0
	nexceptions 5
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	  explicit_exception "NoSuchMethodException"
	  explicit_exception "InvocationTargetException"
	  explicit_exception "InstantiationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852855 "newOperationFromBuilder"
	class_operation private explicit_return_type "ContentProviderOperation"
	nparams 1
	  param inout name "builder" explicit_type "Builder"
	nexceptions 4
	  explicit_exception "NoSuchMethodException"
	  explicit_exception "InstantiationException"
	  explicit_exception "IllegalAccessException"
	  explicit_exception "InvocationTargetException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47852983 "builderSetSelectionArgsBackReferences"
	private explicit_return_type "void"
	nparams 2
	  param inout name "builder" explicit_type "Builder"
	  param inout name "selArgsBackRef" explicit_type "HashMap<Integer, Integer>"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853111 "builderSetValuesBackReferences"
	private explicit_return_type "void"
	nparams 2
	  param inout name "builder" explicit_type "Builder"
	  param inout name "valuesBackReferences" explicit_type "ContentValues"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853239 "builderSetSelection"
	private explicit_return_type "void"
	nparams 2
	  param inout name "builder" explicit_type "Builder"
	  param inout name "selection" explicit_type "String"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853367 "builderSetSelectionArgs"
	private explicit_return_type "void"
	nparams 2
	  param inout name "builder" explicit_type "Builder"
	  param inout name "selArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853495 "builderSetValues"
	private explicit_return_type "void"
	nparams 2
	  param inout name "builder" explicit_type "Builder"
	  param inout name "values" explicit_type "ContentValues"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853623 "builderSetExpectedCount"
	private explicit_return_type "void"
	nparams 2
	  param inout name "builder" explicit_type "Builder"
	  param inout name "expectedCount" explicit_type "Integer"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853751 "operationGetType"
	private explicit_return_type "int"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47853879 "operationGetUri"
	private explicit_return_type "Uri"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854007 "operationGetSelection"
	private explicit_return_type "String"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854135 "operationGetSelectionArgs"
	private explicit_return_type "String"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854263 "operationGetValues"
	private explicit_return_type "ContentValues"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854391 "operationGetExpectedCount"
	private explicit_return_type "Integer"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854519 "operationGetValuesBackReferences"
	private explicit_return_type "ContentValues"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854647 "operationGetSelectionArgsBackReferences"
	private explicit_return_type "Map<Integer, Integer>"
	nparams 1
	  param inout name "operation" explicit_type "ContentProviderOperation"
	nexceptions 2
	  explicit_exception "NoSuchFieldException"
	  explicit_exception "IllegalAccessException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47854775 "testParcelingResult"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 5875895 "TestContentProvider"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 47854903 "onCreate"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47855031 "query"
	  public explicit_return_type "Cursor"
	  nparams 5
	    param inout name "uri" explicit_type "Uri"
	    param inout name "projection" explicit_type "String"
	  multiplicity "[]"
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	    param inout name "sortOrder" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47855159 "getType"
	  public explicit_return_type "String"
	  nparams 1
	    param inout name "uri" explicit_type "Uri"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47855287 "insert"
	  public explicit_return_type "Uri"
	  nparams 2
	    param inout name "uri" explicit_type "Uri"
	    param inout name "values" explicit_type "ContentValues"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47855415 "delete"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "uri" explicit_type "Uri"
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47855543 "update"
	  public explicit_return_type "int"
	  nparams 4
	    param inout name "uri" explicit_type "Uri"
	    param inout name "values" explicit_type "ContentValues"
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 5876023 "ContentQueryMapTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Suppress
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Test of {@link ContentQueryMap} 
 Failing.
 Failing."
      class 5876151 "LooperThread"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 19979319 "mError"
	  public explicit_type "Throwable"
	  init_value " null"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 19979447 "mSuccess"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 47855671 "go"
	  abstract package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47855799 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 47855927 "testContentQueryMap"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 5876279 "ContentResolverTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Suppress
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Failing.
 Failing."
      operation 47856055 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47856183 "testCursorFinalizer"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end
    end

    class 5876407 "ContentTests"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 47856311 "suite"
	class_operation public explicit_return_type "TestSuite"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 5876535 "MemoryFileProvider"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Simple test provider that runs in the local process. "
      attribute 19979575 "TEST_BLOB"
	class_attribute const_attribute public explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[] {
        -12,  127, 0, 3, 1, 2, 3, 4, 5, 6, 1, -128, -1, -54, -65, 35,
        -53, -96, -74, -74, -55, -43, -69, 3, 52, -58,
        -121, 127, 87, -73, 16, -13, -103, -65, -128, -36,
        107, 24, 118, -17, 97, 97, -88, 19, -94, -54,
        53, 43, 44, -27, -124, 28, -74, 26, 35, -36,
        16, -124, -31, -31, -128, -79, 108, 116, 43, -17 }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " some random data
"
      end

      attribute 19979703 "DATA_ID_BLOB"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 19979831 "HUGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 19979959 "FILE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 259127 "initialization"
	
	cpp "" ""
	java "  static {
        sURLMatcher.addURI(\"*\", \"data/#/blob\", DATA_ID_BLOB);
        sURLMatcher.addURI(\"*\", \"huge\", HUGE);
        sURLMatcher.addURI(\"*\", \"file\", FILE);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 5876663 "DatabaseHelper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 19980087 "DATABASE_VERSION"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 47856439 "DatabaseHelper"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "context" explicit_type "Context"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 47856567 "onCreate"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "db" explicit_type "SQLiteDatabase"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 47856695 "onUpgrade"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "db" explicit_type "SQLiteDatabase"
	    param in name "oldVersion" explicit_type "int"
	    param in name "currentVersion" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 47856823 "MemoryFileProvider"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47856951 "onCreate"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47857079 "query"
	public explicit_return_type "Cursor"
	nparams 5
	  param inout name "url" explicit_type "Uri"
	  param inout name "projectionIn" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sort" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47857207 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" explicit_type "Uri"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47857335 "openFile"
	public explicit_return_type "ParcelFileDescriptor"
	nparams 2
	  param inout name "url" explicit_type "Uri"
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47857463 "getBlobColumnAsFile"
	private explicit_return_type "ParcelFileDescriptor"
	nparams 3
	  param inout name "url" explicit_type "Uri"
	  param inout name "mode" explicit_type "String"
	  param inout name "sql" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47857591 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "url" explicit_type "Uri"
	  param inout name "values" explicit_type "ContentValues"
	  param inout name "where" explicit_type "String"
	  param inout name "whereArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47857719 "insert"
	public explicit_return_type "Uri"
	nparams 2
	  param inout name "url" explicit_type "Uri"
	  param inout name "initialValues" explicit_type "ContentValues"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47857847 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "url" explicit_type "Uri"
	  param inout name "where" explicit_type "String"
	  param inout name "whereArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 5876791 "MemoryFileProviderTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Tests reading a MemoryFile-based AssestFile from a ContentProvider running
in a different process.
"
      operation 47857975 "testRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
	comment " reads from a cross-process AssetFileDescriptor for a MemoryFile"
      end

      operation 47858103 "testClose"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
	comment " tests that we don't leak file descriptors or virtual address space"
      end

      operation 47858231 "testFile"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " tests that we haven't broken AssestFileDescriptors for normal files."
      end
    end

    class 5876919 "RestrictionsManagerTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 47858359 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47858487 "testGetManifestRestrictions"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47858615 "testConvertRestrictionsToBundle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6923575 "ContextWrapper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Proxying implementation of Context that simply delegates all of its calls to
another Context.  Can be subclassed to modify behavior without changing
the original Context.
"
      classrelation 14946871 // <generalisation>
	relation 14946871 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 14946871 // <generalisation>
	  b parent class_ref 6923703 // Context
      end

      classrelation 14946999 // mBase (<unidirectional association>)
	relation 14946999 --->
	  a role_name "mBase" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 14946999 // mBase (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 77037367 "ContextWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "base" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77037495 "attachBaseContext"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "base" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base context for this ContextWrapper.  All calls will then be
delegated to the base context.  Throws
IllegalStateException if a base context has already been set.

@param base The new base context for this wrapper.
"
      end

      operation 77037623 "getBaseContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the base context as set by the constructor or setBaseContext
"
      end

      operation 77037751 "getAssets"
	public return_type class_ref 151095 // AssetManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77037879 "getResources"
	public return_type class_ref 6923959 // Resources
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038007 "getPackageManager"
	public return_type class_ref 6924087 // PackageManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038135 "getContentResolver"
	public return_type class_ref 6924215 // ContentResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038263 "getMainLooper"
	public return_type class_ref 134967 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038391 "getApplicationContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038519 "setTheme"
	public explicit_return_type "void"
	nparams 1
	  param in name "resid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038647 "getThemeResId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77038775 "getTheme"
	public return_type class_ref 6924599 // Theme
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77038903 "getClassLoader"
	public explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77039031 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77039159 "getBasePackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77039287 "getOpPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77039415 "getApplicationInfo"
	public return_type class_ref 152503 // ApplicationInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77039543 "getPackageResourcePath"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77039671 "getPackageCodePath"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77039799 "getSharedPreferences"
	public return_type class_ref 6925111 // SharedPreferences
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77039927 "getSharedPreferences"
	public return_type class_ref 6925111 // SharedPreferences
	nparams 2
	  param inout name "file" explicit_type "File"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @removed "
      end

      operation 77040055 "moveSharedPreferencesFrom"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sourceContext" type class_ref 6923703 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77040183 "deleteSharedPreferences"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77040311 "openFileInput"
	public explicit_return_type "FileInputStream"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77040439 "openFileOutput"
	public explicit_return_type "FileOutputStream"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77040567 "deleteFile"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77040695 "getFileStreamPath"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77040823 "getSharedPreferencesPath"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @removed "
      end

      operation 77040951 "fileList"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041079 "getDataDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041207 "getFilesDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041335 "getNoBackupFilesDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041463 "getExternalFilesDir"
	public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041591 "getExternalFilesDirs"
	public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041719 "getObbDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041847 "getObbDirs"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77041975 "getCacheDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042103 "getCodeCacheDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042231 "getExternalCacheDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042359 "getExternalCacheDirs"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042487 "getExternalMediaDirs"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042615 "getDir"
	public explicit_return_type "File"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042743 "openOrCreateDatabase"
	public return_type class_ref 6925239 // SQLiteDatabase
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" type class_ref 6925367 // CursorFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042871 "openOrCreateDatabase"
	public return_type class_ref 6925239 // SQLiteDatabase
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" type class_ref 6925367 // CursorFactory
	  param inout name "errorHandler" type class_ref 6925495 // DatabaseErrorHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77042999 "moveDatabaseFrom"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sourceContext" type class_ref 6923703 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77043127 "deleteDatabase"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77043255 "getDatabasePath"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77043383 "databaseList"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77043511 "getWallpaper"
	public return_type class_ref 5787831 // Drawable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77043639 "peekWallpaper"
	public return_type class_ref 5787831 // Drawable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77043767 "getWallpaperDesiredMinimumWidth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77043895 "getWallpaperDesiredMinimumHeight"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77044023 "setWallpaper"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" type class_ref 5824951 // Bitmap
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77044151 "setWallpaper"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77044279 "clearWallpaper"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77044407 "startActivity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77044535 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77044663 "startActivityForResult"
	public explicit_return_type "void"
	nparams 4
	  param in name "who" explicit_type "String"
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "requestCode" explicit_type "int"
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide *"
      end

      operation 77044791 "canStartActivityForResult"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide *"
      end

      operation 77044919 "startActivity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77045047 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77045175 "startActivities"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intents" type class_ref 6925623 // Intent
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77045303 "startActivities"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intents" type class_ref 6925623 // Intent
	multiplicity "[]"
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77045431 "startActivitiesAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intents" type class_ref 6925623 // Intent
	multiplicity "[]"
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "userHandle" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77045559 "startIntentSender"
	public explicit_return_type "void"
	nparams 5
	  param inout name "intent" type class_ref 6926007 // IntentSender
	  param inout name "fillInIntent" type class_ref 6925623 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6926135 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77045687 "startIntentSender"
	public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 6926007 // IntentSender
	  param inout name "fillInIntent" type class_ref 6925623 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6926135 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77045815 "sendBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77045943 "sendBroadcast"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77046071 "sendBroadcastMultiplePermissions"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "receiverPermissions" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77046199 "sendBroadcast"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@Override
"
	
	
	
	comment " @hide "
      end

      operation 77046327 "sendBroadcast"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77046455 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77046583 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77046711 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@Override
"
	
	
	
	comment " @hide "
      end

      operation 77046839 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77046967 "sendBroadcastAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77047095 "sendBroadcastAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77047223 "sendBroadcastAsUser"
	public explicit_return_type "void"
	nparams 4
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77047351 "sendOrderedBroadcastAsUser"
	public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77047479 "sendOrderedBroadcastAsUser"
	public explicit_return_type "void"
	nparams 9
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77047607 "sendOrderedBroadcastAsUser"
	public explicit_return_type "void"
	nparams 10
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77047735 "sendStickyBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77047863 "sendStickyOrderedBroadcast"
	public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77047991 "removeStickyBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77048119 "sendStickyBroadcastAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77048247 "sendStickyBroadcastAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
	comment " @hide "
      end

      operation 77048375 "sendStickyOrderedBroadcastAsUser"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77048503 "removeStickyBroadcastAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Deprecated
"
	
	
	
      end

      operation 77048631 "registerReceiver"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "filter" type class_ref 6926519 // IntentFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77048759 "registerReceiver"
	public return_type class_ref 6925623 // Intent
	nparams 4
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "filter" type class_ref 6926519 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77048887 "registerReceiverAsUser"
	public return_type class_ref 6925623 // Intent
	nparams 5
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param inout name "filter" type class_ref 6926519 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77049015 "unregisterReceiver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77049143 "startService"
	public return_type class_ref 6926647 // ComponentName
	nparams 1
	  param inout name "service" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77049271 "stopService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77049399 "startServiceAsUser"
	public return_type class_ref 6926647 // ComponentName
	nparams 2
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77049527 "stopServiceAsUser"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77049655 "bindService"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77049783 "bindServiceAsUser"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77049911 "unbindService"
	public explicit_return_type "void"
	nparams 1
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050039 "startInstrumentation"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "className" type class_ref 6926647 // ComponentName
	  param in name "profileFile" explicit_type "String"
	  param inout name "arguments" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050167 "getSystemService"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050295 "getSystemServiceName"
	public explicit_return_type "String"
	nparams 1
	  param inout name "serviceClass" explicit_type "Class<?>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050423 "checkPermission"
	public explicit_return_type "int"
	nparams 3
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050551 "checkPermission"
	public explicit_return_type "int"
	nparams 4
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77050679 "checkCallingPermission"
	public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050807 "checkCallingOrSelfPermission"
	public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77050935 "checkSelfPermission"
	public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051063 "enforcePermission"
	public explicit_return_type "void"
	nparams 4
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051191 "enforceCallingPermission"
	public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051319 "enforceCallingOrSelfPermission"
	public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051447 "grantUriPermission"
	public explicit_return_type "void"
	nparams 3
	  param in name "toPackage" explicit_type "String"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051575 "revokeUriPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051703 "checkUriPermission"
	public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77051831 "checkUriPermission"
	public explicit_return_type "int"
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77051959 "checkCallingUriPermission"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052087 "checkCallingOrSelfUriPermission"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052215 "checkUriPermission"
	public explicit_return_type "int"
	nparams 6
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052343 "enforceUriPermission"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052471 "enforceCallingUriPermission"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052599 "enforceCallingOrSelfUriPermission"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052727 "enforceUriPermission"
	public explicit_return_type "void"
	nparams 7
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052855 "createPackageContext"
	public return_type class_ref 6923703 // Context
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6927415 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77052983 "createPackageContextAsUser"
	public return_type class_ref 6923703 // Context
	nparams 3
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 6925751 // UserHandle
	nexceptions 1
	  exception class_ref 6927415 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77053111 "createApplicationContext"
	public return_type class_ref 6923703 // Context
	nparams 2
	  param inout name "application" type class_ref 152503 // ApplicationInfo
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6927415 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77053239 "getUserId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77053367 "createConfigurationContext"
	public return_type class_ref 6923703 // Context
	nparams 1
	  param inout name "overrideConfiguration" type class_ref 6927543 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77053495 "createDisplayContext"
	public return_type class_ref 6923703 // Context
	nparams 1
	  param inout name "display" type class_ref 6927671 // Display
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77053623 "isRestricted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77053751 "getDisplayAdjustments"
	public return_type class_ref 6927799 // DisplayAdjustments
	nparams 1
	  param in name "displayId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 77053879 "getDisplay"
	public return_type class_ref 6927671 // Display
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide
"
      end

      operation 77054007 "createDeviceProtectedStorageContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77054135 "createCredentialProtectedStorageContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@Override
"
	
	
	
	comment " {@hide} "
      end

      operation 77054263 "isDeviceProtectedStorage"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77054391 "isCredentialProtectedStorage"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@Override
"
	
	
	
	comment " {@hide} "
      end
    end

    class 6923703 "Context"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface to global information about an application environment.  This is
an abstract class whose implementation is provided by
the Android system.  It
allows access to application-specific resources and classes, as well as
up-calls for application-level operations such as launching activities,
broadcasting and receiving intents, etc.
"
      attribute 23829559 "MODE_PRIVATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "File creation mode: the default mode, where the created file can only
be accessed by the calling application (or all applications sharing the
same user ID).

"
      end

      attribute 23829687 "MODE_WORLD_READABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "File creation mode: allow all other applications to have read access to
the created file.
<p>
As of {@link android.os.Build.VERSION_CODES#N} attempting to use this
mode will throw a {@link SecurityException}.

@deprecated Creating world-readable files is very dangerous, and likely
            to cause security holes in applications. It is strongly
            discouraged; instead, applications should use more formal
            mechanism for interactions such as {@link ContentProvider},
            {@link BroadcastReceiver}, and {@link android.app.Service}.
            There are no guarantees that this access mode will remain on
            a file, such as when it goes through a backup and restore.
@see android.support.v4.content.FileProvider
@see Intent#FLAG_GRANT_WRITE_URI_PERMISSION

"
      end

      attribute 23829815 "MODE_WORLD_WRITEABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "File creation mode: allow all other applications to have write access to
the created file.
<p>
As of {@link android.os.Build.VERSION_CODES#N} attempting to use this
mode will throw a {@link SecurityException}.

@deprecated Creating world-writable files is very dangerous, and likely
            to cause security holes in applications. It is strongly
            discouraged; instead, applications should use more formal
            mechanism for interactions such as {@link ContentProvider},
            {@link BroadcastReceiver}, and {@link android.app.Service}.
            There are no guarantees that this access mode will remain on
            a file, such as when it goes through a backup and restore.
@see android.support.v4.content.FileProvider
@see Intent#FLAG_GRANT_WRITE_URI_PERMISSION

"
      end

      attribute 23829943 "MODE_APPEND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "File creation mode: for use with {@link #openFileOutput}, if the file
already exists then write data to the end of the existing file
instead of erasing it.
@see #openFileOutput

"
      end

      attribute 23830071 "MODE_MULTI_PROCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "SharedPreference loading flag: when set, the file on disk will
be checked for modification even if the shared preferences
instance is already loaded in this process.  This behavior is
sometimes desired in cases where the application has multiple
processes, all writing to the same SharedPreferences file.
Generally there are better forms of communication between
processes, though.

<p>This was the legacy (but undocumented) behavior in and
before Gingerbread (Android 2.3) and this flag is implied when
targetting such releases.  For applications targetting SDK
versions <em>greater than</em> Android 2.3, this flag must be
explicitly set if desired.

@see #getSharedPreferences

@deprecated MODE_MULTI_PROCESS does not work reliably in
some versions of Android, and furthermore does not provide any
mechanism for reconciling concurrent modifications across
processes.  Applications should not attempt to use it.  Instead,
they should use an explicit cross-process data management
approach such as {@link android.content.ContentProvider ContentProvider}.

"
      end

      attribute 23830199 "MODE_ENABLE_WRITE_AHEAD_LOGGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0008"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Database open flag: when set, the database is opened with write-ahead
logging enabled by default.

@see #openOrCreateDatabase(String, int, CursorFactory)
@see #openOrCreateDatabase(String, int, CursorFactory, DatabaseErrorHandler)
@see SQLiteDatabase#enableWriteAheadLogging

"
      end

      attribute 23830327 "MODE_NO_LOCALIZED_COLLATORS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0010"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Database open flag: when set, the database is opened without support for
localized collators.

@see #openOrCreateDatabase(String, int, CursorFactory)
@see #openOrCreateDatabase(String, int, CursorFactory, DatabaseErrorHandler)
@see SQLiteDatabase#NO_LOCALIZED_COLLATORS

"
      end

      class 6923831 "BindServiceFlags"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true,
            value = {
                BIND_AUTO_CREATE,
                BIND_DEBUG_UNBIND,
                BIND_NOT_FOREGROUND,
                BIND_ABOVE_CLIENT,
                BIND_ALLOW_OOM_MANAGEMENT,
                BIND_WAIVE_PRIORITY,
                BIND_IMPORTANT,
                BIND_ADJUST_WITH_ACTIVITY
            })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 23830455 "BIND_AUTO_CREATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: automatically create the service as long
as the binding exists.  Note that while this will create the service,
its {@link android.app.Service#onStartCommand}
method will still only be called due to an
explicit call to {@link #startService}.  Even without that, though,
this still provides you with access to the service object while the
service is created.

<p>Note that prior to {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH},
not supplying this flag would also impact how important the system
consider's the target service's process to be.  When set, the only way
for it to be raised was by binding from a service in which case it will
only be important when that activity is in the foreground.  Now to
achieve this behavior you must explicitly supply the new flag
{@link #BIND_ADJUST_WITH_ACTIVITY}.  For compatibility, old applications
that don't specify {@link #BIND_AUTO_CREATE} will automatically have
the flags {@link #BIND_WAIVE_PRIORITY} and
{@link #BIND_ADJUST_WITH_ACTIVITY} set for them in order to achieve
the same result.

"
      end

      attribute 23830583 "BIND_DEBUG_UNBIND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: include debugging help for mismatched
calls to unbind.  When this flag is set, the callstack of the following
{@link #unbindService} call is retained, to be printed if a later
incorrect unbind call is made.  Note that doing this requires retaining
information about the binding that was made for the lifetime of the app,
resulting in a leak -- this should only be used for debugging.

"
      end

      attribute 23830711 "BIND_NOT_FOREGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: don't allow this binding to raise
the target service's process to the foreground scheduling priority.
It will still be raised to at least the same memory priority
as the client (so that its process will not be killable in any
situation where the client is not killable), but for CPU scheduling
purposes it may be left in the background.  This only has an impact
in the situation where the binding client is a foreground process
and the target service is in a background process.

"
      end

      attribute 23830839 "BIND_ABOVE_CLIENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0008"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: indicates that the client application
binding to this service considers the service to be more important than
the app itself.  When set, the platform will try to have the out of
memory killer kill the app before it kills the service it is bound to, though
this is not guaranteed to be the case.

"
      end

      attribute 23830967 "BIND_ALLOW_OOM_MANAGEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0010"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: allow the process hosting the bound
service to go through its normal memory management.  It will be
treated more like a running service, allowing the system to
(temporarily) expunge the process if low on memory or for some other
whim it may have, and being more aggressive about making it a candidate
to be killed (and restarted) if running for a long time.

"
      end

      attribute 23831095 "BIND_WAIVE_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0020"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: don't impact the scheduling or
memory management priority of the target service's hosting process.
Allows the service's process to be managed on the background LRU list
just like a regular application process in the background.

"
      end

      attribute 23831223 "BIND_IMPORTANT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0040"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: this service is very important to
the client, so should be brought to the foreground process level
when the client is.  Normally a process can only be raised to the
visibility level by a client, even if that client is in the foreground.

"
      end

      attribute 23831351 "BIND_ADJUST_WITH_ACTIVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0080"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: If binding from an activity, allow the
target service's process importance to be raised based on whether the
activity is visible to the user, regardless whether another flag is
used to reduce the amount that the client process's overall importance
is used to impact it.

"
      end

      attribute 23831479 "BIND_ALLOW_WHITELIST_MANAGEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide Flag for {@link #bindService}: allows application hosting service to manage whitelists
such as temporary allowing a {@code PendingIntent} to bypass Power Save mode.

"
      end

      attribute 23831607 "BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide Flag for {@link #bindService}: Like {@link #BIND_FOREGROUND_SERVICE},
but only applies while the device is awake.

"
      end

      attribute 23831735 "BIND_FOREGROUND_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide Flag for {@link #bindService}: For only the case where the binding
is coming from the system, set the process state to FOREGROUND_SERVICE
instead of the normal maximum of IMPORTANT_FOREGROUND.  That is, this is
saying that the process shouldn't participate in the normal power reduction
modes (removing network access etc).

"
      end

      attribute 23831863 "BIND_TREAT_LIKE_ACTIVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide Flag for {@link #bindService}: Treat the binding as hosting
an activity, an unbinding as the activity going in the background.
That is, when unbinding, the process when empty will go on the activity
LRU list instead of the regular one, keeping it around more aggressively
than it otherwise would be.  This is intended for use with IMEs to try
to keep IME processes around for faster keyboard switching.

"
      end

      attribute 23831991 "BIND_VISIBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide An idea that is not yet implemented.
Flag for {@link #bindService}: If binding from an activity, consider
this service to be visible like the binding activity is.  That is,
it will be treated as something more important to keep around than
invisible background activities.  This will impact the number of
recent activities the user can switch between without having them
restart.  There is no guarantee this will be respected, as the system
tries to balance such requests from one app vs. the importantance of
keeping other apps around.

"
      end

      attribute 23832119 "BIND_SHOWING_UI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide
Flag for {@link #bindService}: Consider this binding to be causing the target
process to be showing UI, so it will be do a UI_HIDDEN memory trim when it goes
away.

"
      end

      attribute 23832247 "BIND_NOT_VISIBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: Don't consider the bound service to be
visible, even if the caller is visible.
@hide

"
      end

      attribute 23832375 "BIND_EXTERNAL_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #bindService}: The service being bound is an
{@link android.R.attr#isolatedProcess isolated},
{@link android.R.attr#externalService external} service.  This binds the service into the
calling application's package, rather than the package in which the service is declared.
<p>
When using this flag, the code for the service being bound will execute under the calling
application's package name and user ID.  Because the service must be an isolated process,
it will not have direct access to the application's data, though.

The purpose of this flag is to allow applications to provide services that are attributed
to the app using the service, rather than the application providing the service.
</p>

"
      end

      operation 77017911 "getAssets"
	abstract public return_type class_ref 151095 // AssetManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an AssetManager instance for the application's package.
<p>
<strong>Note:</strong> Implementations of this method should return
an AssetManager instance that is consistent with the Resources instance
returned by {@link #getResources()}. For example, they should share the
same {@link Configuration} object.

@return an AssetManager instance for the application's package
@see #getResources()
"
      end

      operation 77018039 "getResources"
	abstract public return_type class_ref 6923959 // Resources
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Resources instance for the application's package.
<p>
<strong>Note:</strong> Implementations of this method should return
a Resources instance that is consistent with the AssetManager instance
returned by {@link #getAssets()}. For example, they should share the
same {@link Configuration} object.

@return a Resources instance for the application's package
@see #getAssets()
"
      end

      operation 77018167 "getPackageManager"
	abstract public return_type class_ref 6924087 // PackageManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return PackageManager instance to find global package information. "
      end

      operation 77018295 "getContentResolver"
	abstract public return_type class_ref 6924215 // ContentResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a ContentResolver instance for your application's package. "
      end

      operation 77018423 "getMainLooper"
	abstract public return_type class_ref 134967 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Looper for the main thread of the current process.  This is
the thread used to dispatch calls to application components (activities,
services, etc).
<p>
By definition, this method returns the same result as would be obtained
by calling {@link Looper#getMainLooper() Looper.getMainLooper()}.
</p>

@return The main looper.
"
      end

      operation 77018551 "getApplicationContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the context of the single, global Application object of the
current process.  This generally should only be used if you need a
Context whose lifecycle is separate from the current context, that is
tied to the lifetime of the process rather than the current component.

<p>Consider for example how this interacts with
{@link #registerReceiver(BroadcastReceiver, IntentFilter)}:
<ul>
<li> <p>If used from an Activity context, the receiver is being registered
within that activity.  This means that you are expected to unregister
before the activity is done being destroyed; in fact if you do not do
so, the framework will clean up your leaked registration as it removes
the activity and log an error.  Thus, if you use the Activity context
to register a receiver that is static (global to the process, not
associated with an Activity instance) then that registration will be
removed on you at whatever point the activity you used is destroyed.
<li> <p>If used from the Context returned here, the receiver is being
registered with the global state associated with your application.  Thus
it will never be unregistered for you.  This is necessary if the receiver
is associated with static data, not a particular component.  However
using the ApplicationContext elsewhere can easily lead to serious leaks
if you forget to unregister, unbind, etc.
</ul>
"
      end

      operation 77018679 "registerComponentCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 6924343 // ComponentCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new {@link ComponentCallbacks} to the base application of the
Context, which will be called at the same times as the ComponentCallbacks
methods of activities and other components are called.  Note that you
<em>must</em> be sure to use {@link #unregisterComponentCallbacks} when
appropriate in the future; this will not be removed for you.

@param callback The interface to call.  This can be either a
{@link ComponentCallbacks} or {@link ComponentCallbacks2} interface.
"
      end

      operation 77018807 "unregisterComponentCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 6924343 // ComponentCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a {@link ComponentCallbacks} object that was previously registered
with {@link #registerComponentCallbacks(ComponentCallbacks)}.
"
      end

      operation 77018935 "getText"
	public explicit_return_type "CharSequence"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized, styled CharSequence from the application's package's
default string table.

@param resId Resource id for the CharSequence text
"
      end

      operation 77019063 "getString"
	public explicit_return_type "String"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns a localized string from the application's package's
default string table.

@param resId Resource id for the string
@return The string data associated with the resource, stripped of styled
        text information.
"
      end

      operation 77019191 "getString"
	public explicit_return_type "String"
	nparams 2
	  param in name "resId" explicit_type "int"
	  param inout name "" explicit_type "Object...formatArgs"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns a localized formatted string from the application's package's
default string table, substituting the format arguments as defined in
{@link java.util.Formatter} and {@link java.lang.String#format}.

@param resId Resource id for the format string
@param formatArgs The format arguments that will be used for
                  substitution.
@return The string data associated with the resource, formatted and
        stripped of styled text information.
"
      end

      operation 77019319 "getColor"
	public explicit_return_type "int"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ColorInt
"
	
	
	
	comment "Returns a color associated with a particular resource ID and styled for
the current theme.

@param id The desired resource identifier, as generated by the aapt
          tool. This integer encodes the package, type, and resource
          entry. The value 0 is an invalid identifier.
@return A single color value in the form 0xAARRGGBB.
@throws android.content.res.Resources.NotFoundException if the given ID
        does not exist.
"
      end

      operation 77019447 "getDrawable"
	public return_type class_ref 5787831 // Drawable
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@DrawableRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns a drawable object associated with a particular resource ID and
styled for the current theme.

@param id The desired resource identifier, as generated by the aapt
          tool. This integer encodes the package, type, and resource
          entry. The value 0 is an invalid identifier.
@return An object that can be used to draw this resource, or
        {@code null} if the resource could not be resolved.
@throws android.content.res.Resources.NotFoundException if the given ID
        does not exist.
"
      end

      operation 77019575 "getColorStateList"
	public return_type class_ref 6924471 // ColorStateList
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns a color state list associated with a particular resource ID and
styled for the current theme.

@param id The desired resource identifier, as generated by the aapt
          tool. This integer encodes the package, type, and resource
          entry. The value 0 is an invalid identifier.
@return A color state list, or {@code null} if the resource could not be
        resolved.
@throws android.content.res.Resources.NotFoundException if the given ID
        does not exist.
"
      end

      operation 77019703 "setTheme"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "resid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StyleRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base theme for this context.  Note that this should be called
before any views are instantiated in the Context (for example before
calling {@link android.app.Activity#setContentView} or
{@link android.view.LayoutInflater#inflate}).

@param resid The style resource describing the theme.
"
      end

      operation 77019831 "getThemeResId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide Needed for some internal implementation...  not public because
you can't assume this actually means anything. "
      end

      operation 77019959 "getTheme"
	abstract public return_type class_ref 6924599 // Theme
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ViewDebug.ExportedProperty(deepExport = true)
"
	
	
	
	comment "Return the Theme object associated with this Context.
"
      end

      operation 77020087 "obtainStyledAttributes"
	public return_type class_ref 6924727 // TypedArray
	nparams 1
	  param inout name "attrs" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StyleableRes ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link android.content.res.Resources.Theme#obtainStyledAttributes(int[])}
for more information.

@see android.content.res.Resources.Theme#obtainStyledAttributes(int[])
"
      end

      operation 77020215 "obtainStyledAttributes"
	public return_type class_ref 6924727 // TypedArray
	nparams 2
	  param in name "resid" explicit_type "int"
	  param inout name "attrs" explicit_type "int"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6924855 // NotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StyleRes ${t0} ${p0}, @StyleableRes ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link android.content.res.Resources.Theme#obtainStyledAttributes(int, int[])}
for more information.

@see android.content.res.Resources.Theme#obtainStyledAttributes(int, int[])
"
      end

      operation 77020343 "obtainStyledAttributes"
	public return_type class_ref 6924727 // TypedArray
	nparams 2
	  param inout name "set" type class_ref 6924983 // AttributeSet
	  param inout name "attrs" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @StyleableRes ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)}
for more information.

@see android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)
"
      end

      operation 77020471 "obtainStyledAttributes"
	public return_type class_ref 6924727 // TypedArray
	nparams 4
	  param inout name "set" type class_ref 6924983 // AttributeSet
	  param inout name "attrs" explicit_type "int"
	multiplicity "[]"
	  param in name "defStyleAttr" explicit_type "int"
	  param in name "defStyleRes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @StyleableRes ${t1}[] ${p1}, @AttrRes ${t2} ${p2}, @StyleRes ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)}
for more information.

@see android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)
"
      end

      operation 77020599 "getClassLoader"
	abstract public explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a class loader you can use to retrieve classes in this package.
"
      end

      operation 77020727 "getPackageName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the name of this application's package. "
      end

      operation 77020855 "getBasePackageName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide Return the name of the base context this context is derived from. "
      end

      operation 77020983 "getOpPackageName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide Return the package name that should be used for app ops calls from
this context.  This is the same as {@link #getBasePackageName()} except in
cases where system components are loaded into other app processes, in which
case this will be the name of the primary package in that process (so that app
ops uid verification will work with the name). "
      end

      operation 77021111 "getApplicationInfo"
	abstract public return_type class_ref 152503 // ApplicationInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the full application info for this context's package. "
      end

      operation 77021239 "getPackageResourcePath"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the full path to this context's primary Android package.
The Android package is a ZIP file which contains the application's
primary resources.

<p>Note: this is not generally useful for applications, since they should
not be directly accessing the file system.

@return String Path to the resources.
"
      end

      operation 77021367 "getPackageCodePath"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the full path to this context's primary Android package.
The Android package is a ZIP file which contains application's
primary code and assets.

<p>Note: this is not generally useful for applications, since they should
not be directly accessing the file system.

@return String Path to the code and assets.
"
      end

      operation 77021495 "getSharedPrefsFile"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@hide
@deprecated use {@link #getSharedPreferencesPath(String)}
"
      end

      operation 77021623 "getSharedPreferences"
	abstract public return_type class_ref 6925111 // SharedPreferences
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve and hold the contents of the preferences file 'name', returning
a SharedPreferences through which you can retrieve and modify its
values.  Only one instance of the SharedPreferences object is returned
to any callers for the same name, meaning they will see each other's
edits as soon as they are made.

@param name Desired preferences file. If a preferences file by this name
does not exist, it will be created when you retrieve an
editor (SharedPreferences.edit()) and then commit changes (Editor.commit()).
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
default operation.

@return The single {@link SharedPreferences} instance that can be used
        to retrieve and modify the preference values.

@see #MODE_PRIVATE
"
      end

      operation 77021751 "getSharedPreferences"
	abstract public return_type class_ref 6925111 // SharedPreferences
	nparams 2
	  param inout name "file" explicit_type "File"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve and hold the contents of the preferences file, returning
a SharedPreferences through which you can retrieve and modify its
values.  Only one instance of the SharedPreferences object is returned
to any callers for the same name, meaning they will see each other's
edits as soon as they are made.

@param file Desired preferences file. If a preferences file by this name
does not exist, it will be created when you retrieve an
editor (SharedPreferences.edit()) and then commit changes (Editor.commit()).
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
default operation.

@return The single {@link SharedPreferences} instance that can be used
        to retrieve and modify the preference values.

@see #getSharedPreferencesPath(String)
@see #MODE_PRIVATE
@removed
"
      end

      operation 77021879 "moveSharedPreferencesFrom"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "sourceContext" type class_ref 6923703 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move an existing shared preferences file from the given source storage
context to this context. This is typically used to migrate data between
storage locations after an upgrade, such as moving to device protected
storage.

@param sourceContext The source context which contains the existing
           shared preferences to move.
@param name The name of the shared preferences file.
@return {@code true} if the move was successful or if the shared
        preferences didn't exist in the source context, otherwise
        {@code false}.
@see #createDeviceProtectedStorageContext()
"
      end

      operation 77022007 "migrateSharedPreferencesFrom"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sourceContext" type class_ref 6923703 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 77022135 "deleteSharedPreferences"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete an existing shared preferences file.

@param name The name (unique in the application package) of the shared
           preferences file.
@return {@code true} if the shared preferences file was successfully
        deleted; else {@code false}.
@see #getSharedPreferences(String, int)
"
      end

      operation 77022263 "openFileInput"
	abstract public explicit_return_type "FileInputStream"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a private file associated with this Context's application package
for reading.

@param name The name of the file to open; can not contain path
            separators.

@return The resulting {@link FileInputStream}.

@see #openFileOutput
@see #fileList
@see #deleteFile
@see java.io.FileInputStream#FileInputStream(String)
"
      end

      operation 77022391 "openFileOutput"
	abstract public explicit_return_type "FileOutputStream"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a private file associated with this Context's application package
for writing. Creates the file if it doesn't already exist.
<p>
No additional permissions are required for the calling app to read or
write the returned file.

@param name The name of the file to open; can not contain path
           separators.
@param mode Operating mode. Use 0 or {@link #MODE_PRIVATE} for the
           default operation. Use {@link #MODE_APPEND} to append to an
           existing file.
@return The resulting {@link FileOutputStream}.
@see #MODE_APPEND
@see #MODE_PRIVATE
@see #openFileInput
@see #fileList
@see #deleteFile
@see java.io.FileOutputStream#FileOutputStream(String)
"
      end

      operation 77022519 "deleteFile"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete the given private file associated with this Context's
application package.

@param name The name of the file to delete; can not contain path
            separators.

@return {@code true} if the file was successfully deleted; else
        {@code false}.

@see #openFileInput
@see #openFileOutput
@see #fileList
@see java.io.File#delete()
"
      end

      operation 77022647 "getFileStreamPath"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path on the filesystem where a file created with
{@link #openFileOutput} is stored.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.

@param name The name of the file for which you would like to get
         its path.

@return An absolute path to the given file.

@see #openFileOutput
@see #getFilesDir
@see #getDir
"
      end

      operation 77022775 "getSharedPreferencesPath"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path on the filesystem where a file created with
{@link #getSharedPreferences(String, int)} is stored.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.

@param name The name of the shared preferences for which you would like
           to get a path.
@return An absolute path to the given file.
@see #getSharedPreferences(String, int)
@removed
"
      end

      operation 77022903 "getDataDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the directory on the filesystem where all
private files belonging to this app are stored. Apps should not use this
path directly; they should instead use {@link #getFilesDir()},
{@link #getCacheDir()}, {@link #getDir(String, int)}, or other storage
APIs on this class.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path.

@see ApplicationInfo#dataDir
"
      end

      operation 77023031 "getFilesDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the directory on the filesystem where files
created with {@link #openFileOutput} are stored.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path.

@return The path of the directory holding application files.
@see #openFileOutput
@see #getFileStreamPath
@see #getDir
"
      end

      operation 77023159 "getNoBackupFilesDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the directory on the filesystem similar to
{@link #getFilesDir()}. The difference is that files placed under this
directory will be excluded from automatic backup to remote storage. See
{@link android.app.backup.BackupAgent BackupAgent} for a full discussion
of the automatic backup mechanism in Android.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path.

@return The path of the directory holding application files that will not
        be automatically backed up to remote storage.
@see #openFileOutput
@see #getFileStreamPath
@see #getDir
@see android.app.backup.BackupAgent
"
      end

      operation 77023287 "getExternalFilesDir"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the absolute path to the directory on the primary shared/external
storage device where the application can place persistent files it owns.
These files are internal to the applications, and not typically visible
to the user as media.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted
when the application is uninstalled, however there are some important
differences:
<ul>
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
If a shared storage device is emulated (as determined by
{@link Environment#isExternalStorageEmulated(File)}), it's contents are
backed by a private user data partition, which means there is little
benefit to storing data here instead of the private directories returned
by {@link #getFilesDir()}, etc.
<p>
Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, no permissions
are required to read or write to the returned path; it's always
accessible to the calling app. This only applies to paths generated for
package name of the calling application. To access paths belonging to
other packages,
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} and/or
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} are required.
<p>
On devices with multiple users (as described by {@link UserManager}),
each user has their own isolated shared storage. Applications only have
access to the shared storage for the user they're running as.
<p>
The returned path may change over time if different shared storage media
is inserted, so only relative paths should be persisted.
<p>
Here is an example of typical code to manipulate a file in an
application's shared storage:
</p>
{@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java
private_file}
<p>
If you supply a non-null <var>type</var> to this function, the returned
file will be a path to a sub-directory of the given type. Though these
files are not automatically scanned by the media scanner, you can
explicitly add them to the media database with
{@link android.media.MediaScannerConnection#scanFile(Context, String[], String[], android.media.MediaScannerConnection.OnScanCompletedListener)
MediaScannerConnection.scanFile}. Note that this is not the same as
{@link android.os.Environment#getExternalStoragePublicDirectory
Environment.getExternalStoragePublicDirectory()}, which provides
directories of media shared by all applications. The directories returned
here are owned by the application, and their contents will be removed
when the application is uninstalled. Unlike
{@link android.os.Environment#getExternalStoragePublicDirectory
Environment.getExternalStoragePublicDirectory()}, the directory returned
here will be automatically created for you.
<p>
Here is an example of typical code to manipulate a picture in an
application's shared storage and add it to the media database:
</p>
{@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java
private_picture}

@param type The type of files directory to return. May be {@code null}
           for the root of the files directory or one of the following
           constants for a subdirectory:
           {@link android.os.Environment#DIRECTORY_MUSIC},
           {@link android.os.Environment#DIRECTORY_PODCASTS},
           {@link android.os.Environment#DIRECTORY_RINGTONES},
           {@link android.os.Environment#DIRECTORY_ALARMS},
           {@link android.os.Environment#DIRECTORY_NOTIFICATIONS},
           {@link android.os.Environment#DIRECTORY_PICTURES}, or
           {@link android.os.Environment#DIRECTORY_MOVIES}.
@return the absolute path to application-specific directory. May return
        {@code null} if shared storage is not currently available.
@see #getFilesDir
@see #getExternalFilesDirs(String)
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77023415 "getExternalFilesDirs"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
shared/external storage devices where the application can place
persistent files it owns. These files are internal to the application,
and not typically visible to the user as media.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted
when the application is uninstalled, however there are some important
differences:
<ul>
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
If a shared storage device is emulated (as determined by
{@link Environment#isExternalStorageEmulated(File)}), it's contents are
backed by a private user data partition, which means there is little
benefit to storing data here instead of the private directories returned
by {@link #getFilesDir()}, etc.
<p>
Shared storage devices returned here are considered a stable part of the
device, including physical media slots under a protective cover. The
returned paths do not include transient devices, such as USB flash drives
connected to handheld devices.
<p>
An application may store data on any or all of the returned devices. For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path. Write access outside of these paths
on secondary external storage devices is not available.
<p>
The returned path may change over time if different shared storage media
is inserted, so only relative paths should be persisted.

@param type The type of files directory to return. May be {@code null}
           for the root of the files directory or one of the following
           constants for a subdirectory:
           {@link android.os.Environment#DIRECTORY_MUSIC},
           {@link android.os.Environment#DIRECTORY_PODCASTS},
           {@link android.os.Environment#DIRECTORY_RINGTONES},
           {@link android.os.Environment#DIRECTORY_ALARMS},
           {@link android.os.Environment#DIRECTORY_NOTIFICATIONS},
           {@link android.os.Environment#DIRECTORY_PICTURES}, or
           {@link android.os.Environment#DIRECTORY_MOVIES}.
@return the absolute paths to application-specific directories. Some
        individual paths may be {@code null} if that shared storage is
        not currently available. The first path returned is the same as
        {@link #getExternalFilesDir(String)}.
@see #getExternalFilesDir(String)
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77023543 "getObbDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the primary shared/external storage directory where this
application's OBB files (if there are any) can be found. Note if the
application does not have any OBB files, this directory may not exist.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted
when the application is uninstalled, however there are some important
differences:
<ul>
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, no permissions
are required to read or write to the returned path; it's always
accessible to the calling app. This only applies to paths generated for
package name of the calling application. To access paths belonging to
other packages,
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} and/or
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} are required.
<p>
On devices with multiple users (as described by {@link UserManager}),
multiple users may share the same OBB storage location. Applications
should ensure that multiple instances running under different users don't
interfere with each other.

@return the absolute path to application-specific directory. May return
        {@code null} if shared storage is not currently available.
@see #getObbDirs()
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77023671 "getObbDirs"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
shared/external storage devices where the application's OBB files (if
there are any) can be found. Note if the application does not have any
OBB files, these directories may not exist.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted
when the application is uninstalled, however there are some important
differences:
<ul>
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
Shared storage devices returned here are considered a stable part of the
device, including physical media slots under a protective cover. The
returned paths do not include transient devices, such as USB flash drives
connected to handheld devices.
<p>
An application may store data on any or all of the returned devices. For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path. Write access outside of these paths
on secondary external storage devices is not available.

@return the absolute paths to application-specific directories. Some
        individual paths may be {@code null} if that shared storage is
        not currently available. The first path returned is the same as
        {@link #getObbDir()}
@see #getObbDir()
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77023799 "getCacheDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the application specific cache directory on
the filesystem. These files will be ones that get deleted first when the
device runs low on storage. There is no guarantee when these files will
be deleted.
<p>
<strong>Note: you should not <em>rely</em> on the system deleting these
files for you; you should always have a reasonable maximum, such as 1 MB,
for the amount of space you consume with cache files, and prune those
files when exceeding that space.</strong>
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.
<p>
Apps require no extra permissions to read or write to the returned path,
since this path lives in their private storage.

@return The path of the directory holding application cache files.
@see #openFileOutput
@see #getFileStreamPath
@see #getDir
"
      end

      operation 77023927 "getCodeCacheDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the application specific cache directory on
the filesystem designed for storing cached code. The system will delete
any files stored in this location both when your specific application is
upgraded, and when the entire platform is upgraded.
<p>
This location is optimal for storing compiled or optimized code generated
by your application at runtime.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.
<p>
Apps require no extra permissions to read or write to the returned path,
since this path lives in their private storage.

@return The path of the directory holding application code cache files.
"
      end

      operation 77024055 "getExternalCacheDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns absolute path to application-specific directory on the primary
shared/external storage device where the application can place cache
files it owns. These files are internal to the application, and not
typically visible to the user as media.
<p>
This is like {@link #getCacheDir()} in that these files will be deleted
when the application is uninstalled, however there are some important
differences:
<ul>
<li>The platform does not always monitor the space available in shared
storage, and thus may not automatically delete these files. Apps should
always manage the maximum space used in this location. Currently the only
time files here will be deleted by the platform is when running on
{@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR1} or later and
{@link Environment#isExternalStorageEmulated(File)} returns true.
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
If a shared storage device is emulated (as determined by
{@link Environment#isExternalStorageEmulated(File)}), it's contents are
backed by a private user data partition, which means there is little
benefit to storing data here instead of the private directory returned by
{@link #getCacheDir()}.
<p>
Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, no permissions
are required to read or write to the returned path; it's always
accessible to the calling app. This only applies to paths generated for
package name of the calling application. To access paths belonging to
other packages,
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} and/or
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} are required.
<p>
On devices with multiple users (as described by {@link UserManager}),
each user has their own isolated shared storage. Applications only have
access to the shared storage for the user they're running as.
<p>
The returned path may change over time if different shared storage media
is inserted, so only relative paths should be persisted.

@return the absolute path to application-specific directory. May return
        {@code null} if shared storage is not currently available.
@see #getCacheDir
@see #getExternalCacheDirs()
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77024183 "getExternalCacheDirs"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
shared/external storage devices where the application can place cache
files it owns. These files are internal to the application, and not
typically visible to the user as media.
<p>
This is like {@link #getCacheDir()} in that these files will be deleted
when the application is uninstalled, however there are some important
differences:
<ul>
<li>The platform does not always monitor the space available in shared
storage, and thus may not automatically delete these files. Apps should
always manage the maximum space used in this location. Currently the only
time files here will be deleted by the platform is when running on
{@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR1} or later and
{@link Environment#isExternalStorageEmulated(File)} returns true.
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
If a shared storage device is emulated (as determined by
{@link Environment#isExternalStorageEmulated(File)}), it's contents are
backed by a private user data partition, which means there is little
benefit to storing data here instead of the private directory returned by
{@link #getCacheDir()}.
<p>
Shared storage devices returned here are considered a stable part of the
device, including physical media slots under a protective cover. The
returned paths do not include transient devices, such as USB flash drives
connected to handheld devices.
<p>
An application may store data on any or all of the returned devices. For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path. Write access outside of these paths
on secondary external storage devices is not available.
<p>
The returned paths may change over time if different shared storage media
is inserted, so only relative paths should be persisted.

@return the absolute paths to application-specific directories. Some
        individual paths may be {@code null} if that shared storage is
        not currently available. The first path returned is the same as
        {@link #getExternalCacheDir()}.
@see #getExternalCacheDir()
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77024311 "getExternalMediaDirs"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
shared/external storage devices where the application can place media
files. These files are scanned and made available to other apps through
{@link MediaStore}.
<p>
This is like {@link #getExternalFilesDirs} in that these files will be
deleted when the application is uninstalled, however there are some
important differences:
<ul>
<li>Shared storage may not always be available, since removable media can
be ejected by the user. Media state can be checked using
{@link Environment#getExternalStorageState(File)}.
<li>There is no security enforced with these files. For example, any
application holding
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
Shared storage devices returned here are considered a stable part of the
device, including physical media slots under a protective cover. The
returned paths do not include transient devices, such as USB flash drives
connected to handheld devices.
<p>
An application may store data on any or all of the returned devices. For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No additional permissions are required for the calling app to read or
write files under the returned path. Write access outside of these paths
on secondary external storage devices is not available.
<p>
The returned paths may change over time if different shared storage media
is inserted, so only relative paths should be persisted.

@return the absolute paths to application-specific directories. Some
        individual paths may be {@code null} if that shared storage is
        not currently available.
@see Environment#getExternalStorageState(File)
@see Environment#isExternalStorageEmulated(File)
@see Environment#isExternalStorageRemovable(File)
"
      end

      operation 77024439 "fileList"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings naming the private files associated with
this Context's application package.

@return Array of strings naming the private files.

@see #openFileInput
@see #openFileOutput
@see #deleteFile
"
      end

      operation 77024567 "getDir"
	abstract public explicit_return_type "File"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve, creating if needed, a new directory in which the application
can place its own custom data files.  You can use the returned File
object to create and access files in this directory.  Note that files
created through a File object will only be accessible by your own
application; you can only set the mode of the entire directory, not
of individual files.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.
<p>
Apps require no extra permissions to read or write to the returned path,
since this path lives in their private storage.

@param name Name of the directory to retrieve.  This is a directory
that is created as part of your application data.
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
default operation.

@return A {@link File} object for the requested directory.  The directory
will have been created if it does not already exist.

@see #openFileOutput(String, int)
"
      end

      operation 77024695 "openOrCreateDatabase"
	abstract public return_type class_ref 6925239 // SQLiteDatabase
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" type class_ref 6925367 // CursorFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a new private SQLiteDatabase associated with this Context's
application package. Create the database file if it doesn't exist.

@param name The name (unique in the application package) of the database.
@param mode Operating mode. Use 0 or {@link #MODE_PRIVATE} for the
           default operation. Use
           {@link #MODE_ENABLE_WRITE_AHEAD_LOGGING} to enable write-ahead
           logging by default. Use {@link #MODE_NO_LOCALIZED_COLLATORS}
           to disable localized collators.
@param factory An optional factory class that is called to instantiate a
           cursor when query is called.
@return The contents of a newly created database with the given name.
@throws android.database.sqlite.SQLiteException if the database file
            could not be opened.
@see #MODE_PRIVATE
@see #MODE_ENABLE_WRITE_AHEAD_LOGGING
@see #MODE_NO_LOCALIZED_COLLATORS
@see #deleteDatabase
"
      end

      operation 77024823 "openOrCreateDatabase"
	abstract public return_type class_ref 6925239 // SQLiteDatabase
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" type class_ref 6925367 // CursorFactory
	  param inout name "errorHandler" type class_ref 6925495 // DatabaseErrorHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a new private SQLiteDatabase associated with this Context's
application package. Creates the database file if it doesn't exist.
<p>
Accepts input param: a concrete instance of {@link DatabaseErrorHandler}
to be used to handle corruption when sqlite reports database corruption.
</p>

@param name The name (unique in the application package) of the database.
@param mode Operating mode. Use 0 or {@link #MODE_PRIVATE} for the
           default operation. Use
           {@link #MODE_ENABLE_WRITE_AHEAD_LOGGING} to enable write-ahead
           logging by default. Use {@link #MODE_NO_LOCALIZED_COLLATORS}
           to disable localized collators.
@param factory An optional factory class that is called to instantiate a
           cursor when query is called.
@param errorHandler the {@link DatabaseErrorHandler} to be used when
           sqlite reports database corruption. if null,
           {@link android.database.DefaultDatabaseErrorHandler} is
           assumed.
@return The contents of a newly created database with the given name.
@throws android.database.sqlite.SQLiteException if the database file
            could not be opened.
@see #MODE_PRIVATE
@see #MODE_ENABLE_WRITE_AHEAD_LOGGING
@see #MODE_NO_LOCALIZED_COLLATORS
@see #deleteDatabase
"
      end

      operation 77024951 "moveDatabaseFrom"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "sourceContext" type class_ref 6923703 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move an existing database file from the given source storage context to
this context. This is typically used to migrate data between storage
locations after an upgrade, such as migrating to device protected
storage.
<p>
The database must be closed before being moved.

@param sourceContext The source context which contains the existing
           database to move.
@param name The name of the database file.
@return {@code true} if the move was successful or if the database didn't
        exist in the source context, otherwise {@code false}.
@see #createDeviceProtectedStorageContext()
"
      end

      operation 77025079 "migrateDatabaseFrom"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sourceContext" type class_ref 6923703 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 77025207 "deleteDatabase"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete an existing private SQLiteDatabase associated with this Context's
application package.

@param name The name (unique in the application package) of the
            database.

@return {@code true} if the database was successfully deleted; else {@code false}.

@see #openOrCreateDatabase
"
      end

      operation 77025335 "getDatabasePath"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path on the filesystem where a database created with
{@link #openOrCreateDatabase} is stored.
<p>
The returned path may change over time if the calling app is moved to an
adopted storage device, so only relative paths should be persisted.

@param name The name of the database for which you would like to get
         its path.

@return An absolute path to the given database.

@see #openOrCreateDatabase
"
      end

      operation 77025463 "databaseList"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings naming the private databases associated with
this Context's application package.

@return Array of strings naming the private databases.

@see #openOrCreateDatabase
@see #deleteDatabase
"
      end

      operation 77025591 "getWallpaper"
	abstract public return_type class_ref 5787831 // Drawable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#getDrawable
WallpaperManager.get()} instead.
"
      end

      operation 77025719 "peekWallpaper"
	abstract public return_type class_ref 5787831 // Drawable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#peekDrawable
WallpaperManager.peek()} instead.
"
      end

      operation 77025847 "getWallpaperDesiredMinimumWidth"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#getDesiredMinimumWidth()
WallpaperManager.getDesiredMinimumWidth()} instead.
"
      end

      operation 77025975 "getWallpaperDesiredMinimumHeight"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#getDesiredMinimumHeight()
WallpaperManager.getDesiredMinimumHeight()} instead.
"
      end

      operation 77026103 "setWallpaper"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" type class_ref 5824951 // Bitmap
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#setBitmap(Bitmap)
WallpaperManager.set()} instead.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#SET_WALLPAPER}.
"
      end

      operation 77026231 "setWallpaper"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#setStream(InputStream)
WallpaperManager.set()} instead.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#SET_WALLPAPER}.
"
      end

      operation 77026359 "clearWallpaper"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#clear
WallpaperManager.clear()} instead.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#SET_WALLPAPER}.
"
      end

      operation 77026487 "startActivity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #startActivity(Intent, Bundle)} with no options
specified.

@param intent The description of the activity to start.

@throws ActivityNotFoundException &nbsp;
`
@see #startActivity(Intent, Bundle)
@see PackageManager#resolveActivity
"
      end

      operation 77026615 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #startActivity(Intent)} that allows you to specify the
user the activity will be started for.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS_FULL permission.
@param intent The description of the activity to start.
@param user The UserHandle of the user to start this activity for.
@throws ActivityNotFoundException &nbsp;
@hide
"
      end

      operation 77026743 "startActivity"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launch a new activity.  You will not receive any information about when
the activity exits.

<p>Note that if this method is being called from outside of an
{@link android.app.Activity} Context, then the Intent must include
the {@link Intent#FLAG_ACTIVITY_NEW_TASK} launch flag.  This is because,
without being started from an existing Activity, there is no existing
task in which to place the new activity and thus it needs to be placed
in its own separate task.

<p>This method throws {@link ActivityNotFoundException}
if there was no Activity found to run the given Intent.

@param intent The description of the activity to start.
@param options Additional options for how the Activity should be started.
May be null if there are no options.  See {@link android.app.ActivityOptions}
for how to build the Bundle supplied here; there are no supported definitions
for building it manually.

@throws ActivityNotFoundException &nbsp;

@see #startActivity(Intent)
@see PackageManager#resolveActivity
"
      end

      operation 77026871 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "userId" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, @Nullable ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #startActivity(Intent, Bundle)} that allows you to specify the
user the activity will be started for.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS_FULL permission.
@param intent The description of the activity to start.
@param options Additional options for how the Activity should be started.
May be null if there are no options.  See {@link android.app.ActivityOptions}
for how to build the Bundle supplied here; there are no supported definitions
for building it manually.
@param userId The UserHandle of the user to start this activity for.
@throws ActivityNotFoundException &nbsp;
@hide
"
      end

      operation 77026999 "startActivityForResult"
	public explicit_return_type "void"
	nparams 4
	  param in name "who" explicit_type "String"
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "requestCode" explicit_type "int"
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #startActivity(Intent, Bundle)} that returns a result to the caller. This
is only supported for Views and Fragments.
@param who The identifier for the calling element that will receive the result.
@param intent The intent to start.
@param requestCode The code that will be returned with onActivityResult() identifying this
         request.
@param options Additional options for how the Activity should be started.
         May be null if there are no options.  See {@link android.app.ActivityOptions}
         for how to build the Bundle supplied here; there are no supported definitions
         for building it manually.
@hide
"
      end

      operation 77027127 "canStartActivityForResult"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identifies whether this Context instance will be able to process calls to
{@link #startActivityForResult(String, Intent, int, Bundle)}.
@hide
"
      end

      operation 77027255 "startActivities"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intents" type class_ref 6925623 // Intent
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #startActivities(Intent[], Bundle)} with no options
specified.

@param intents An array of Intents to be started.

@throws ActivityNotFoundException &nbsp;

@see #startActivities(Intent[], Bundle)
@see PackageManager#resolveActivity
"
      end

      operation 77027383 "startActivities"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intents" type class_ref 6925623 // Intent
	multiplicity "[]"
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launch multiple new activities.  This is generally the same as calling
{@link #startActivity(Intent)} for the first Intent in the array,
that activity during its creation calling {@link #startActivity(Intent)}
for the second entry, etc.  Note that unlike that approach, generally
none of the activities except the last in the array will be created
at this point, but rather will be created when the user first visits
them (due to pressing back from the activity on top).

<p>This method throws {@link ActivityNotFoundException}
if there was no Activity found for <em>any</em> given Intent.  In this
case the state of the activity stack is undefined (some Intents in the
list may be on it, some not), so you probably want to avoid such situations.

@param intents An array of Intents to be started.
@param options Additional options for how the Activity should be started.
See {@link android.content.Context#startActivity(Intent, Bundle)
Context.startActivity(Intent, Bundle)} for more details.

@throws ActivityNotFoundException &nbsp;

@see #startActivities(Intent[])
@see PackageManager#resolveActivity
"
      end

      operation 77027511 "startActivitiesAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intents" type class_ref 6925623 // Intent
	multiplicity "[]"
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "userHandle" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Launch multiple new activities.  This is generally the same as calling
{@link #startActivity(Intent)} for the first Intent in the array,
that activity during its creation calling {@link #startActivity(Intent)}
for the second entry, etc.  Note that unlike that approach, generally
none of the activities except the last in the array will be created
at this point, but rather will be created when the user first visits
them (due to pressing back from the activity on top).

<p>This method throws {@link ActivityNotFoundException}
if there was no Activity found for <em>any</em> given Intent.  In this
case the state of the activity stack is undefined (some Intents in the
list may be on it, some not), so you probably want to avoid such situations.

@param intents An array of Intents to be started.
@param options Additional options for how the Activity should be started.
@param userHandle The user for whom to launch the activities
See {@link android.content.Context#startActivity(Intent, Bundle)
Context.startActivity(Intent, Bundle)} for more details.

@throws ActivityNotFoundException &nbsp;

@see #startActivities(Intent[])
@see PackageManager#resolveActivity
"
      end

      operation 77027639 "startIntentSender"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "intent" type class_ref 6926007 // IntentSender
	  param inout name "fillInIntent" type class_ref 6925623 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6926135 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #startIntentSender(IntentSender, Intent, int, int, int, Bundle)}
with no options specified.

@param intent The IntentSender to launch.
@param fillInIntent If non-null, this will be provided as the
intent parameter to {@link IntentSender#sendIntent}.
@param flagsMask Intent flags in the original IntentSender that you
would like to change.
@param flagsValues Desired values for any bits set in
<var>flagsMask</var>
@param extraFlags Always set to 0.

@see #startActivity(Intent)
@see #startIntentSender(IntentSender, Intent, int, int, int, Bundle)
"
      end

      operation 77027767 "startIntentSender"
	abstract public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 6926007 // IntentSender
	  param inout name "fillInIntent" type class_ref 6925623 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6926135 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #startActivity(Intent, Bundle)}, but taking a IntentSender
to start.  If the IntentSender is for an activity, that activity will be started
as if you had called the regular {@link #startActivity(Intent)}
here; otherwise, its associated action will be executed (such as
sending a broadcast) as if you had called
{@link IntentSender#sendIntent IntentSender.sendIntent} on it.

@param intent The IntentSender to launch.
@param fillInIntent If non-null, this will be provided as the
intent parameter to {@link IntentSender#sendIntent}.
@param flagsMask Intent flags in the original IntentSender that you
would like to change.
@param flagsValues Desired values for any bits set in
<var>flagsMask</var>
@param extraFlags Always set to 0.
@param options Additional options for how the Activity should be started.
See {@link android.content.Context#startActivity(Intent, Bundle)
Context.startActivity(Intent, Bundle)} for more details.  If options
have also been supplied by the IntentSender, options given here will
override any that conflict with those given by the IntentSender.

@see #startActivity(Intent, Bundle)
@see #startIntentSender(IntentSender, Intent, int, int, int)
"
      end

      operation 77027895 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.  No results are propagated from
receivers and receivers can not abort the broadcast. If you want
to allow receivers to propagate results or abort the broadcast, you must
send an ordered broadcast using
{@link #sendOrderedBroadcast(Intent, String)}.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)
"
      end

      operation 77028023 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers, allowing
an optional required permission to be enforced.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.  No results are propagated from
receivers and receivers can not abort the broadcast. If you want
to allow receivers to propagate results or abort the broadcast, you must
send an ordered broadcast using
{@link #sendOrderedBroadcast(Intent, String)}.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission (optional) String naming a permission that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent)
@see #sendOrderedBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)
"
      end

      operation 77028151 "sendBroadcastMultiplePermissions"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "receiverPermissions" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers, allowing
an array of required permissions to be enforced.  This call is asynchronous; it returns
immediately, and you will continue executing while the receivers are run.  No results are
propagated from receivers and receivers can not abort the broadcast. If you want to allow
receivers to propagate results or abort the broadcast, you must send an ordered broadcast
using {@link #sendOrderedBroadcast(Intent, String)}.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermissions Array of names of permissions that a receiver must hold
                           in order to receive your broadcast.
                           If null or empty, no permissions are required.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent)
@see #sendOrderedBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)
@hide
"
      end

      operation 77028279 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers, allowing
an optional required permission to be enforced.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.  No results are propagated from
receivers and receivers can not abort the broadcast. If you want
to allow receivers to propagate results or abort the broadcast, you must
send an ordered broadcast using
{@link #sendOrderedBroadcast(Intent, String)}.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission (optional) String naming a permission that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param options (optional) Additional sending options, generated from a
{@link android.app.BroadcastOptions}.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent)
@see #sendOrderedBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)
@hide
"
      end

      operation 77028407 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #sendBroadcast(Intent, String)}, but also allows specification
of an associated app op as per {@link android.app.AppOpsManager}.
@hide
"
      end

      operation 77028535 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers, delivering
them one at a time to allow more preferred receivers to consume the
broadcast before it is delivered to less preferred receivers.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission (optional) String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)
"
      end

      operation 77028663 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}, ${t4} ${p4}, @Nullable ${t5} ${p5}, @Nullable ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent)} that allows you to
receive data back from the broadcast.  This is accomplished by
supplying your own BroadcastReceiver when calling, which will be
treated as a final receiver at the end of the broadcast -- its
{@link BroadcastReceiver#onReceive} method will be called with
the result values collected from the other receivers.  The broadcast will
be serialized in the same way as calling
{@link #sendOrderedBroadcast(Intent, String)}.

<p>Like {@link #sendBroadcast(Intent)}, this method is
asynchronous; it will return before
resultReceiver.onReceive() is called.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendBroadcast(Intent)
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see android.content.BroadcastReceiver
@see #registerReceiver
@see android.app.Activity#RESULT_OK
"
      end

      operation 77028791 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}, @Nullable ${t4} ${p4}, ${t5} ${p5}, @Nullable ${t6} ${p6}, @Nullable ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent)} that allows you to
receive data back from the broadcast.  This is accomplished by
supplying your own BroadcastReceiver when calling, which will be
treated as a final receiver at the end of the broadcast -- its
{@link BroadcastReceiver#onReceive} method will be called with
the result values collected from the other receivers.  The broadcast will
be serialized in the same way as calling
{@link #sendOrderedBroadcast(Intent, String)}.

<p>Like {@link #sendBroadcast(Intent)}, this method is
asynchronous; it will return before
resultReceiver.onReceive() is called.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.


@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param options (optional) Additional sending options, generated from a
{@link android.app.BroadcastOptions}.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.
@see #sendBroadcast(Intent)
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see android.content.BroadcastReceiver
@see #registerReceiver
@see android.app.Activity#RESULT_OK
@hide
"
      end

      operation 77028919 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler,
int, String, android.os.Bundle)}, but also allows specification
of an associated app op as per {@link android.app.AppOpsManager}.
@hide
"
      end

      operation 77029047 "sendBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.
@param intent The intent to broadcast
@param user UserHandle to send the intent to.
@see #sendBroadcast(Intent)
"
      end

      operation 77029175 "sendBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent, String)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param receiverPermission (optional) String naming a permission that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.

@see #sendBroadcast(Intent, String)
"
      end

      operation 77029303 "sendBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent, String)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param receiverPermission (optional) String naming a permission that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param appOp The app op associated with the broadcast.

@see #sendBroadcast(Intent, String)

@hide
"
      end

      operation 77029431 "sendOrderedBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, @Nullable ${t4} ${p4}, ${t5} ${p5}, @Nullable ${t6} ${p6}, @Nullable ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of
{@link #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)}
that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param receiverPermission String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)
"
      end

      operation 77029559 "sendOrderedBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 9
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, @Nullable ${t5} ${p5}, ${t6} ${p6}, @Nullable ${t7} ${p7}, @Nullable ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similar to above but takes an appOp as well, to enforce restrictions.
@see #sendOrderedBroadcastAsUser(Intent, UserHandle, String,
      BroadcastReceiver, Handler, int, String, Bundle)
@hide
"
      end

      operation 77029687 "sendOrderedBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 10
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "options" type class_ref 6925879 // Bundle
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, @Nullable ${t4} ${p4}, ${t5} ${p5}, @Nullable ${t6} ${p6}, ${t7} ${p7}, @Nullable ${t8} ${p8}, @Nullable ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similar to above but takes an appOp as well, to enforce restrictions, and an options Bundle.
@see #sendOrderedBroadcastAsUser(Intent, UserHandle, String,
      BroadcastReceiver, Handler, int, String, Bundle)
@hide
"
      end

      operation 77029815 "sendStickyBroadcast"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>Perform a {@link #sendBroadcast(Intent)} that is \"sticky,\" meaning the
Intent you are sending stays around after the broadcast is complete,
so that others can quickly retrieve that data through the return
value of {@link #registerReceiver(BroadcastReceiver, IntentFilter)}.  In
all other ways, this behaves the same as
{@link #sendBroadcast(Intent)}.

<p>You must hold the {@link android.Manifest.permission#BROADCAST_STICKY}
permission in order to use this API.  If you do not hold that
permission, {@link SecurityException} will be thrown.

@deprecated Sticky broadcasts should not be used.  They provide no security (anyone
can access them), no protection (anyone can modify them), and many other problems.
The recommended pattern is to use a non-sticky broadcast to report that <em>something</em>
has changed, with another mechanism for apps to retrieve the current value whenever
desired.

@param intent The Intent to broadcast; all receivers matching this
Intent will receive the broadcast, and the Intent will be held to
be re-broadcast to future receivers.

@see #sendBroadcast(Intent)
@see #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)
"
      end

      operation 77029943 "sendStickyOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, @Nullable ${t4} ${p4}, @Nullable ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>Version of {@link #sendStickyBroadcast} that allows you to
receive data back from the broadcast.  This is accomplished by
supplying your own BroadcastReceiver when calling, which will be
treated as a final receiver at the end of the broadcast -- its
{@link BroadcastReceiver#onReceive} method will be called with
the result values collected from the other receivers.  The broadcast will
be serialized in the same way as calling
{@link #sendOrderedBroadcast(Intent, String)}.

<p>Like {@link #sendBroadcast(Intent)}, this method is
asynchronous; it will return before
resultReceiver.onReceive() is called.  Note that the sticky data
stored is only the data you initially supply to the broadcast, not
the result of any changes made by the receivers.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@deprecated Sticky broadcasts should not be used.  They provide no security (anyone
can access them), no protection (anyone can modify them), and many other problems.
The recommended pattern is to use a non-sticky broadcast to report that <em>something</em>
has changed, with another mechanism for apps to retrieve the current value whenever
desired.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendBroadcast(Intent)
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see #sendStickyBroadcast(Intent)
@see android.content.BroadcastReceiver
@see #registerReceiver
@see android.app.Activity#RESULT_OK
"
      end

      operation 77030071 "removeStickyBroadcast"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>Remove the data previously sent with {@link #sendStickyBroadcast},
so that it is as if the sticky broadcast had never happened.

<p>You must hold the {@link android.Manifest.permission#BROADCAST_STICKY}
permission in order to use this API.  If you do not hold that
permission, {@link SecurityException} will be thrown.

@deprecated Sticky broadcasts should not be used.  They provide no security (anyone
can access them), no protection (anyone can modify them), and many other problems.
The recommended pattern is to use a non-sticky broadcast to report that <em>something</em>
has changed, with another mechanism for apps to retrieve the current value whenever
desired.

@param intent The Intent that was previously broadcast.

@see #sendStickyBroadcast
"
      end

      operation 77030199 "sendStickyBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>Version of {@link #sendStickyBroadcast(Intent)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

@deprecated Sticky broadcasts should not be used.  They provide no security (anyone
can access them), no protection (anyone can modify them), and many other problems.
The recommended pattern is to use a non-sticky broadcast to report that <em>something</em>
has changed, with another mechanism for apps to retrieve the current value whenever
desired.

@param intent The Intent to broadcast; all receivers matching this
Intent will receive the broadcast, and the Intent will be held to
be re-broadcast to future receivers.
@param user UserHandle to send the intent to.

@see #sendBroadcast(Intent)
"
      end

      operation 77030327 "sendStickyBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param inout name "options" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@hide
This is just here for sending CONNECTIVITY_ACTION.
"
      end

      operation 77030455 "sendStickyOrderedBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param inout name "resultReceiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 6926391 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Nullable ${t3} ${p3}, ${t4} ${p4}, @Nullable ${t5} ${p5}, @Nullable ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>Version of
{@link #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)}
that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@deprecated Sticky broadcasts should not be used.  They provide no security (anyone
can access them), no protection (anyone can modify them), and many other problems.
The recommended pattern is to use a non-sticky broadcast to report that <em>something</em>
has changed, with another mechanism for apps to retrieve the current value whenever
desired.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)
"
      end

      operation 77030583 "removeStickyBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>Version of {@link #removeStickyBroadcast(Intent)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

<p>You must hold the {@link android.Manifest.permission#BROADCAST_STICKY}
permission in order to use this API.  If you do not hold that
permission, {@link SecurityException} will be thrown.

@deprecated Sticky broadcasts should not be used.  They provide no security (anyone
can access them), no protection (anyone can modify them), and many other problems.
The recommended pattern is to use a non-sticky broadcast to report that <em>something</em>
has changed, with another mechanism for apps to retrieve the current value whenever
desired.

@param intent The Intent that was previously broadcast.
@param user UserHandle to remove the sticky broadcast from.

@see #sendStickyBroadcastAsUser
"
      end

      operation 77030711 "registerReceiver"
	abstract public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "filter" type class_ref 6926519 // IntentFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Register a BroadcastReceiver to be run in the main activity thread.  The
<var>receiver</var> will be called with any broadcast Intent that
matches <var>filter</var>, in the main application thread.

<p>The system may broadcast Intents that are \"sticky\" -- these stay
around after the broadcast as finished, to be sent to any later
registrations. If your IntentFilter matches one of these sticky
Intents, that Intent will be returned by this function
<strong>and</strong> sent to your <var>receiver</var> as if it had just
been broadcast.

<p>There may be multiple sticky Intents that match <var>filter</var>,
in which case each of these will be sent to <var>receiver</var>.  In
this case, only one of these can be returned directly by the function;
which of these that is returned is arbitrarily decided by the system.

<p>If you know the Intent your are registering for is sticky, you can
supply null for your <var>receiver</var>.  In this case, no receiver is
registered -- the function simply returns the sticky Intent that
matches <var>filter</var>.  In the case of multiple matches, the same
rules as described above apply.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

<p>As of {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}, receivers
registered with this method will correctly respect the
{@link Intent#setPackage(String)} specified for an Intent being broadcast.
Prior to that, it would be ignored and delivered to all matching registered
receivers.  Be careful if using this for security.</p>

<p class=\"note\">Note: this method <em>cannot be called from a
{@link BroadcastReceiver} component;</em> that is, from a BroadcastReceiver
that is declared in an application's manifest.  It is okay, however, to call
this method from another BroadcastReceiver that has itself been registered
at run time with {@link #registerReceiver}, since the lifetime of such a
registered BroadcastReceiver is tied to the object that registered it.</p>

@param receiver The BroadcastReceiver to handle the broadcast.
@param filter Selects the Intent broadcasts to be received.

@return The first sticky intent found that matches <var>filter</var>,
        or null if there are none.

@see #registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)
@see #sendBroadcast
@see #unregisterReceiver
"
      end

      operation 77030839 "registerReceiver"
	abstract public return_type class_ref 6925623 // Intent
	nparams 4
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "filter" type class_ref 6926519 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Register to receive intent broadcasts, to run in the context of
<var>scheduler</var>.  See
{@link #registerReceiver(BroadcastReceiver, IntentFilter)} for more
information.  This allows you to enforce permissions on who can
broadcast intents to your receiver, or have the receiver run in
a different thread than the main application thread.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

<p>As of {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}, receivers
registered with this method will correctly respect the
{@link Intent#setPackage(String)} specified for an Intent being broadcast.
Prior to that, it would be ignored and delivered to all matching registered
receivers.  Be careful if using this for security.</p>

@param receiver The BroadcastReceiver to handle the broadcast.
@param filter Selects the Intent broadcasts to be received.
@param broadcastPermission String naming a permissions that a
     broadcaster must hold in order to send an Intent to you.  If null,
     no permission is required.
@param scheduler Handler identifying the thread that will receive
     the Intent.  If null, the main thread of the process will be used.

@return The first sticky intent found that matches <var>filter</var>,
        or null if there are none.

@see #registerReceiver(BroadcastReceiver, IntentFilter)
@see #sendBroadcast
@see #unregisterReceiver
"
      end

      operation 77030967 "registerReceiverAsUser"
	abstract public return_type class_ref 6925623 // Intent
	nparams 5
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	  param inout name "user" type class_ref 6925751 // UserHandle
	  param inout name "filter" type class_ref 6926519 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Nullable ${t3} ${p3}, @Nullable ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "@hide
Same as {@link #registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)
but for a specific user.  This receiver will receiver broadcasts that
are sent to the requested user.  It
requires holding the {@link android.Manifest.permission#INTERACT_ACROSS_USERS_FULL}
permission.

@param receiver The BroadcastReceiver to handle the broadcast.
@param user UserHandle to send the intent to.
@param filter Selects the Intent broadcasts to be received.
@param broadcastPermission String naming a permissions that a
     broadcaster must hold in order to send an Intent to you.  If null,
     no permission is required.
@param scheduler Handler identifying the thread that will receive
     the Intent.  If null, the main thread of the process will be used.

@return The first sticky intent found that matches <var>filter</var>,
        or null if there are none.

@see #registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)
@see #sendBroadcast
@see #unregisterReceiver
"
      end

      operation 77031095 "unregisterReceiver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "receiver" type class_ref 6926263 // BroadcastReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregister a previously registered BroadcastReceiver.  <em>All</em>
filters that have been registered for this BroadcastReceiver will be
removed.

@param receiver The BroadcastReceiver to unregister.

@see #registerReceiver
"
      end

      operation 77031223 "startService"
	abstract public return_type class_ref 6926647 // ComponentName
	nparams 1
	  param inout name "service" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Request that a given application service be started.  The Intent
should contain either contain the complete class name of a specific service
implementation to start or a specific package name to target.  If the
Intent is less specified, it log a warning about this and which of the
multiple matching services it finds and uses will be undefined.  If this service
is not already running, it will be instantiated and started (creating a
process for it if needed); if it is running then it remains running.

<p>Every call to this method will result in a corresponding call to
the target service's {@link android.app.Service#onStartCommand} method,
with the <var>intent</var> given here.  This provides a convenient way
to submit jobs to a service without having to bind and call on to its
interface.

<p>Using startService() overrides the default service lifetime that is
managed by {@link #bindService}: it requires the service to remain
running until {@link #stopService} is called, regardless of whether
any clients are connected to it.  Note that calls to startService()
are not nesting: no matter how many times you call startService(),
a single call to {@link #stopService} will stop it.

<p>The system attempts to keep running services around as much as
possible.  The only time they should be stopped is if the current
foreground application is using so many resources that the service needs
to be killed.  If any errors happen in the service's process, it will
automatically be restarted.

<p>This function will throw {@link SecurityException} if you do not
have permission to start the given service.

<p class=\"note\"><strong>Note:</strong> Each call to startService()
results in significant work done by the system to manage service
lifecycle surrounding the processing of the intent, which can take
multiple milliseconds of CPU time. Due to this cost, startService()
should not be used for frequent intent delivery to a service, and only
for scheduling significant work. Use {@link #bindService bound services}
for high frequency calls.
</p>

@param service Identifies the service to be started.  The Intent must be either
     fully explicit (supplying a component name) or specify a specific package
     name it is targetted to.  Additional values
     may be included in the Intent extras to supply arguments along with
     this specific start call.

@return If the service is being started or is already running, the
{@link ComponentName} of the actual service that was started is
returned; else if the service does not exist null is returned.

@throws SecurityException &nbsp;

@see #stopService
@see #bindService
"
      end

      operation 77031351 "stopService"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request that a given application service be stopped.  If the service is
not running, nothing happens.  Otherwise it is stopped.  Note that calls
to startService() are not counted -- this stops the service no matter
how many times it was started.

<p>Note that if a stopped service still has {@link ServiceConnection}
objects bound to it with the {@link #BIND_AUTO_CREATE} set, it will
not be destroyed until all of these bindings are removed.  See
the {@link android.app.Service} documentation for more details on a
service's lifecycle.

<p>This function will throw {@link SecurityException} if you do not
have permission to stop the given service.

@param service Description of the service to be stopped.  The Intent must be either
     fully explicit (supplying a component name) or specify a specific package
     name it is targetted to.

@return If there is a service matching the given Intent that is already
running, then it is stopped and {@code true} is returned; else {@code false} is returned.

@throws SecurityException &nbsp;

@see #startService
"
      end

      operation 77031479 "startServiceAsUser"
	abstract public return_type class_ref 6926647 // ComponentName
	nparams 2
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide like {@link #startService(Intent)} but for a specific user.
"
      end

      operation 77031607 "stopServiceAsUser"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide like {@link #stopService(Intent)} but for a specific user.
"
      end

      operation 77031735 "bindService"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, @NonNull ${t1} ${p1}, @BindServiceFlags ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect to an application service, creating it if needed.  This defines
a dependency between your application and the service.  The given
<var>conn</var> will receive the service object when it is created and be
told if it dies and restarts.  The service will be considered required
by the system only for as long as the calling context exists.  For
example, if this Context is an Activity that is stopped, the service will
not be required to continue running until the Activity is resumed.

<p>This function will throw {@link SecurityException} if you do not
have permission to bind to the given service.

<p class=\"note\">Note: this method <em>can not be called from a
{@link BroadcastReceiver} component</em>.  A pattern you can use to
communicate from a BroadcastReceiver to a Service is to call
{@link #startService} with the arguments containing the command to be
sent, with the service calling its
{@link android.app.Service#stopSelf(int)} method when done executing
that command.  See the API demo App/Service/Service Start Arguments
Controller for an illustration of this.  It is okay, however, to use
this method from a BroadcastReceiver that has been registered with
{@link #registerReceiver}, since the lifetime of this BroadcastReceiver
is tied to another object (the one that registered it).</p>

@param service Identifies the service to connect to.  The Intent may
     specify either an explicit component name, or a logical
     description (action, category, etc) to match an
     {@link IntentFilter} published by a service.
@param conn Receives information as the service is started and stopped.
     This must be a valid ServiceConnection object; it must not be null.
@param flags Operation options for the binding.  May be 0,
         {@link #BIND_AUTO_CREATE}, {@link #BIND_DEBUG_UNBIND},
         {@link #BIND_NOT_FOREGROUND}, {@link #BIND_ABOVE_CLIENT},
         {@link #BIND_ALLOW_OOM_MANAGEMENT}, or
         {@link #BIND_WAIVE_PRIORITY}.
@return If you have successfully bound to the service, {@code true} is returned;
        {@code false} is returned if the connection is not made so you will not
        receive the service object.

@throws SecurityException &nbsp;

@see #unbindService
@see #startService
@see #BIND_AUTO_CREATE
@see #BIND_DEBUG_UNBIND
@see #BIND_NOT_FOREGROUND
"
      end

      operation 77031863 "bindServiceAsUser"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@RequiresPermission ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@SuppressWarnings(\"unused\")
"
	
	
	
	comment "Same as {@link #bindService(Intent, ServiceConnection, int)}, but with an explicit userHandle
argument for use by system server and other multi-user aware code.
@hide
"
      end

      operation 77031991 "bindServiceAsUser"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "service" type class_ref 6925623 // Intent
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	  param in name "flags" explicit_type "int"
	  param inout name "handler" type class_ref 6926391 // Handler
	  param inout name "user" type class_ref 6925751 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #bindService(Intent, ServiceConnection, int, UserHandle)}, but with an
explicit non-null Handler to run the ServiceConnection callbacks on.

@hide
"
      end

      operation 77032119 "unbindService"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "conn" type class_ref 6926775 // ServiceConnection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnect from an application service.  You will no longer receive
calls as the service is restarted, and the service is now allowed to
stop at any time.

@param conn The connection interface previously supplied to
            bindService().  This parameter must not be null.

@see #bindService
"
      end

      operation 77032247 "startInstrumentation"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "className" type class_ref 6926647 // ComponentName
	  param in name "profileFile" explicit_type "String"
	  param inout name "arguments" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start executing an {@link android.app.Instrumentation} class.  The given
Instrumentation component will be run by killing its target application
(if currently running), starting the target process, instantiating the
instrumentation component, and then letting it drive the application.

<p>This function is not synchronous -- it returns as soon as the
instrumentation has started and while it is running.

<p>Instrumentation is normally only allowed to run against a package
that is either unsigned or signed with a signature that the
the instrumentation package is also signed with (ensuring the target
trusts the instrumentation).

@param className Name of the Instrumentation component to be run.
@param profileFile Optional path to write profiling data as the
instrumentation runs, or null for no profiling.
@param arguments Additional optional arguments to pass to the
instrumentation, or null.

@return {@code true} if the instrumentation was successfully started,
else {@code false} if it could not be found.
"
      end

      class 6926903 "ServiceName"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@StringDef({
            POWER_SERVICE,
            WINDOW_SERVICE,
            LAYOUT_INFLATER_SERVICE,
            ACCOUNT_SERVICE,
            ACTIVITY_SERVICE,
            ALARM_SERVICE,
            NOTIFICATION_SERVICE,
            ACCESSIBILITY_SERVICE,
            CAPTIONING_SERVICE,
            KEYGUARD_SERVICE,
            LOCATION_SERVICE,
            //@hide: COUNTRY_DETECTOR,
            SEARCH_SERVICE,
            SENSOR_SERVICE,
            STORAGE_SERVICE,
            WALLPAPER_SERVICE,
            VIBRATOR_SERVICE,
            //@hide: STATUS_BAR_SERVICE,
            CONNECTIVITY_SERVICE,
            //@hide: UPDATE_LOCK_SERVICE,
            //@hide: NETWORKMANAGEMENT_SERVICE,
            NETWORK_STATS_SERVICE,
            //@hide: NETWORK_POLICY_SERVICE,
            WIFI_SERVICE,
            WIFI_NAN_SERVICE,
            WIFI_P2P_SERVICE,
            WIFI_SCANNING_SERVICE,
            //@hide: WIFI_RTT_SERVICE,
            //@hide: ETHERNET_SERVICE,
            WIFI_RTT_SERVICE,
            NSD_SERVICE,
            AUDIO_SERVICE,
            FINGERPRINT_SERVICE,
            MEDIA_ROUTER_SERVICE,
            TELEPHONY_SERVICE,
            TELEPHONY_SUBSCRIPTION_SERVICE,
            CARRIER_CONFIG_SERVICE,
            TELECOM_SERVICE,
            CLIPBOARD_SERVICE,
            INPUT_METHOD_SERVICE,
            TEXT_SERVICES_MANAGER_SERVICE,
            APPWIDGET_SERVICE,
            //@hide: VOICE_INTERACTION_MANAGER_SERVICE,
            //@hide: BACKUP_SERVICE,
            DROPBOX_SERVICE,
            //@hide: DEVICE_IDLE_CONTROLLER,
            DEVICE_POLICY_SERVICE,
            UI_MODE_SERVICE,
            DOWNLOAD_SERVICE,
            NFC_SERVICE,
            BLUETOOTH_SERVICE,
            //@hide: SIP_SERVICE,
            USB_SERVICE,
            LAUNCHER_APPS_SERVICE,
            //@hide: SERIAL_SERVICE,
            //@hide: HDMI_CONTROL_SERVICE,
            INPUT_SERVICE,
            DISPLAY_SERVICE,
            USER_SERVICE,
            RESTRICTIONS_SERVICE,
            APP_OPS_SERVICE,
            CAMERA_SERVICE,
            PRINT_SERVICE,
            CONSUMER_IR_SERVICE,
            //@hide: TRUST_SERVICE,
            TV_INPUT_SERVICE,
            //@hide: NETWORK_SCORE_SERVICE,
            USAGE_STATS_SERVICE,
            MEDIA_SESSION_SERVICE,
            BATTERY_SERVICE,
            JOB_SCHEDULER_SERVICE,
            //@hide: PERSISTENT_DATA_BLOCK_SERVICE,
            MEDIA_PROJECTION_SERVICE,
            MIDI_SERVICE,
            RADIO_SERVICE,
            HARDWARE_PROPERTIES_SERVICE,
            //@hide: SOUND_TRIGGER_SERVICE,
            SHORTCUT_SERVICE,
            //@hide: CONTEXTHUB_SERVICE,
    })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 77032375 "getSystemService"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the handle to a system-level service by name. The class of the
returned object varies by the requested name. Currently available names
are:

<dl>
 <dt> {@link #WINDOW_SERVICE} (\"window\")
 <dd> The top-level window manager in which you can place custom
 windows.  The returned object is a {@link android.view.WindowManager}.
 <dt> {@link #LAYOUT_INFLATER_SERVICE} (\"layout_inflater\")
 <dd> A {@link android.view.LayoutInflater} for inflating layout resources
 in this context.
 <dt> {@link #ACTIVITY_SERVICE} (\"activity\")
 <dd> A {@link android.app.ActivityManager} for interacting with the
 global activity state of the system.
 <dt> {@link #POWER_SERVICE} (\"power\")
 <dd> A {@link android.os.PowerManager} for controlling power
 management.
 <dt> {@link #ALARM_SERVICE} (\"alarm\")
 <dd> A {@link android.app.AlarmManager} for receiving intents at the
 time of your choosing.
 <dt> {@link #NOTIFICATION_SERVICE} (\"notification\")
 <dd> A {@link android.app.NotificationManager} for informing the user
  of background events.
 <dt> {@link #KEYGUARD_SERVICE} (\"keyguard\")
 <dd> A {@link android.app.KeyguardManager} for controlling keyguard.
 <dt> {@link #LOCATION_SERVICE} (\"location\")
 <dd> A {@link android.location.LocationManager} for controlling location
  (e.g., GPS) updates.
 <dt> {@link #SEARCH_SERVICE} (\"search\")
 <dd> A {@link android.app.SearchManager} for handling search.
 <dt> {@link #VIBRATOR_SERVICE} (\"vibrator\")
 <dd> A {@link android.os.Vibrator} for interacting with the vibrator
 hardware.
 <dt> {@link #CONNECTIVITY_SERVICE} (\"connection\")
 <dd> A {@link android.net.ConnectivityManager ConnectivityManager} for
 handling management of network connections.
 <dt> {@link #WIFI_SERVICE} (\"wifi\")
 <dd> A {@link android.net.wifi.WifiManager WifiManager} for management of
Wi-Fi connectivity.
 <dt> {@link #WIFI_P2P_SERVICE} (\"wifip2p\")
 <dd> A {@link android.net.wifi.p2p.WifiP2pManager WifiP2pManager} for management of
Wi-Fi Direct connectivity.
<dt> {@link #INPUT_METHOD_SERVICE} (\"input_method\")
<dd> An {@link android.view.inputmethod.InputMethodManager InputMethodManager}
for management of input methods.
<dt> {@link #UI_MODE_SERVICE} (\"uimode\")
<dd> An {@link android.app.UiModeManager} for controlling UI modes.
<dt> {@link #DOWNLOAD_SERVICE} (\"download\")
<dd> A {@link android.app.DownloadManager} for requesting HTTP downloads
<dt> {@link #BATTERY_SERVICE} (\"batterymanager\")
<dd> A {@link android.os.BatteryManager} for managing battery state
<dt> {@link #JOB_SCHEDULER_SERVICE} (\"taskmanager\")
<dd>  A {@link android.app.job.JobScheduler} for managing scheduled tasks
<dt> {@link #NETWORK_STATS_SERVICE} (\"netstats\")
<dd> A {@link android.app.usage.NetworkStatsManager NetworkStatsManager} for querying network
usage statistics.
<dt> {@link #HARDWARE_PROPERTIES_SERVICE} (\"hardware_properties\")
<dd> A {@link android.os.HardwarePropertiesManager} for accessing hardware properties.
</dl>

<p>Note:  System services obtained via this API may be closely associated with
the Context in which they are obtained from.  In general, do not share the
service objects between various different contexts (Activities, Applications,
Services, Providers, etc.)

@param name The name of the desired service.

@return The service or null if the name does not exist.

@see #WINDOW_SERVICE
@see android.view.WindowManager
@see #LAYOUT_INFLATER_SERVICE
@see android.view.LayoutInflater
@see #ACTIVITY_SERVICE
@see android.app.ActivityManager
@see #POWER_SERVICE
@see android.os.PowerManager
@see #ALARM_SERVICE
@see android.app.AlarmManager
@see #NOTIFICATION_SERVICE
@see android.app.NotificationManager
@see #KEYGUARD_SERVICE
@see android.app.KeyguardManager
@see #LOCATION_SERVICE
@see android.location.LocationManager
@see #SEARCH_SERVICE
@see android.app.SearchManager
@see #SENSOR_SERVICE
@see android.hardware.SensorManager
@see #STORAGE_SERVICE
@see android.os.storage.StorageManager
@see #VIBRATOR_SERVICE
@see android.os.Vibrator
@see #CONNECTIVITY_SERVICE
@see android.net.ConnectivityManager
@see #WIFI_SERVICE
@see android.net.wifi.WifiManager
@see #AUDIO_SERVICE
@see android.media.AudioManager
@see #MEDIA_ROUTER_SERVICE
@see android.media.MediaRouter
@see #TELEPHONY_SERVICE
@see android.telephony.TelephonyManager
@see #TELEPHONY_SUBSCRIPTION_SERVICE
@see android.telephony.SubscriptionManager
@see #CARRIER_CONFIG_SERVICE
@see android.telephony.CarrierConfigManager
@see #INPUT_METHOD_SERVICE
@see android.view.inputmethod.InputMethodManager
@see #UI_MODE_SERVICE
@see android.app.UiModeManager
@see #DOWNLOAD_SERVICE
@see android.app.DownloadManager
@see #BATTERY_SERVICE
@see android.os.BatteryManager
@see #JOB_SCHEDULER_SERVICE
@see android.app.job.JobScheduler
@see #NETWORK_STATS_SERVICE
@see android.app.usage.NetworkStatsManager
@see android.os.HardwarePropertiesManager
@see #HARDWARE_PROPERTIES_SERVICE
"
      end

      operation 77032503 "getSystemService"
	public explicit_return_type "T"
	nparams 1
	  param inout name "serviceClass" explicit_type "Class<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Return the handle to a system-level service by class.
<p>
Currently available classes are:
{@link android.view.WindowManager}, {@link android.view.LayoutInflater},
{@link android.app.ActivityManager}, {@link android.os.PowerManager},
{@link android.app.AlarmManager}, {@link android.app.NotificationManager},
{@link android.app.KeyguardManager}, {@link android.location.LocationManager},
{@link android.app.SearchManager}, {@link android.os.Vibrator},
{@link android.net.ConnectivityManager},
{@link android.net.wifi.WifiManager},
{@link android.media.AudioManager}, {@link android.media.MediaRouter},
{@link android.telephony.TelephonyManager}, {@link android.telephony.SubscriptionManager},
{@link android.view.inputmethod.InputMethodManager},
{@link android.app.UiModeManager}, {@link android.app.DownloadManager},
{@link android.os.BatteryManager}, {@link android.app.job.JobScheduler},
{@link android.app.usage.NetworkStatsManager}.
</p><p>
Note: System services obtained via this API may be closely associated with
the Context in which they are obtained from.  In general, do not share the
service objects between various different contexts (Activities, Applications,
Services, Providers, etc.)
</p>

@param serviceClass The class of the desired service.
@return The service or null if the class is not a supported system service.
"
      end

      operation 77032631 "getSystemServiceName"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "serviceClass" explicit_type "Class<?>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the system-level service that is represented by the specified class.

@param serviceClass The class of the desired service.
@return The service name or null if the class is not a supported system service.
"
      end

      attribute 23832503 "POWER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"power\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.PowerManager} for controlling power management,
including \"wake locks,\" which let you keep the device on while
you're running long tasks.

"
      end

      attribute 23832631 "RECOVERY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"recovery\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.RecoverySystem} for accessing the recovery system
service.

@see #getSystemService
@hide

"
      end

      attribute 23832759 "WINDOW_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"window\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.WindowManager} for accessing the system's window
manager.

@see #getSystemService
@see android.view.WindowManager

"
      end

      attribute 23832887 "LAYOUT_INFLATER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"layout_inflater\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.LayoutInflater} for inflating layout resources in this
context.

@see #getSystemService
@see android.view.LayoutInflater

"
      end

      attribute 23833015 "ACCOUNT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"account\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.accounts.AccountManager} for receiving intents at a
time of your choosing.

@see #getSystemService
@see android.accounts.AccountManager

"
      end

      attribute 23833143 "ACTIVITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"activity\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.ActivityManager} for interacting with the global
system state.

@see #getSystemService
@see android.app.ActivityManager

"
      end

      attribute 23833271 "ALARM_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"alarm\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.AlarmManager} for receiving intents at a
time of your choosing.

@see #getSystemService
@see android.app.AlarmManager

"
      end

      attribute 23833399 "NOTIFICATION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"notification\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.NotificationManager} for informing the user of
background events.

@see #getSystemService
@see android.app.NotificationManager

"
      end

      attribute 23833527 "ACCESSIBILITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"accessibility\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.accessibility.AccessibilityManager} for giving the user
feedback for UI events through the registered event listeners.

@see #getSystemService
@see android.view.accessibility.AccessibilityManager

"
      end

      attribute 23833655 "CAPTIONING_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"captioning\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.accessibility.CaptioningManager} for obtaining
captioning properties and listening for changes in captioning
preferences.

@see #getSystemService
@see android.view.accessibility.CaptioningManager

"
      end

      attribute 23833783 "KEYGUARD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"keyguard\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.NotificationManager} for controlling keyguard.

@see #getSystemService
@see android.app.KeyguardManager

"
      end

      attribute 23833911 "LOCATION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"location\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.location.LocationManager} for controlling location
updates.

@see #getSystemService
@see android.location.LocationManager

"
      end

      attribute 23834039 "COUNTRY_DETECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"country_detector\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.location.CountryDetector} for detecting the country that
the user is in.

@hide

"
      end

      attribute 23834167 "SEARCH_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"search\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.SearchManager} for handling searches.

@see #getSystemService
@see android.app.SearchManager

"
      end

      attribute 23834295 "SENSOR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sensor\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.SensorManager} for accessing sensors.

@see #getSystemService
@see android.hardware.SensorManager

"
      end

      attribute 23834423 "STORAGE_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"storage\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.os.storage.StorageManager} for accessing system storage
functions.

@see #getSystemService
@see android.os.storage.StorageManager

"
      end

      attribute 23834551 "WALLPAPER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wallpaper\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
com.android.server.WallpaperService for accessing wallpapers.

@see #getSystemService

"
      end

      attribute 23834679 "VIBRATOR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"vibrator\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.os.Vibrator} for interacting with the vibration hardware.

@see #getSystemService
@see android.os.Vibrator

"
      end

      attribute 23834807 "STATUS_BAR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"statusbar\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.StatusBarManager} for interacting with the status bar.

@see #getSystemService
@see android.app.StatusBarManager
@hide

"
      end

      attribute 23834935 "CONNECTIVITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"connectivity\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.ConnectivityManager} for handling management of
network connections.

@see #getSystemService
@see android.net.ConnectivityManager

"
      end

      attribute 23835063 "UPDATE_LOCK_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"updatelock\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.os.IUpdateLock} for managing runtime sequences that
must not be interrupted by headless OTA application or similar.

@hide
@see #getSystemService
@see android.os.UpdateLock

"
      end

      attribute 23835191 "NETWORKMANAGEMENT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"network_management\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant for the internal network management service, not really a Context service.
@hide

"
      end

      attribute 23835319 "NETWORK_STATS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"netstats\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.usage.NetworkStatsManager} for querying network usage stats.

@see #getSystemService
@see android.app.usage.NetworkStatsManager

"
      end

      attribute 23835447 "NETWORK_POLICY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"netpolicy\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " {@hide} 
"
      end

      attribute 23835575 "WIFI_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wifi\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.wifi.WifiManager} for handling management of
Wi-Fi access.

@see #getSystemService
@see android.net.wifi.WifiManager

"
      end

      attribute 23835703 "WIFI_P2P_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wifip2p\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.wifi.p2p.WifiP2pManager} for handling management of
Wi-Fi peer-to-peer connections.

@see #getSystemService
@see android.net.wifi.p2p.WifiP2pManager

"
      end

      attribute 23835831 "WIFI_NAN_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wifinan\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.net.wifi.nan.WifiNanManager} for handling management of
Wi-Fi NAN discovery and connections.

@see #getSystemService
@see android.net.wifi.nan.WifiNanManager
@hide PROPOSED_NAN_API

"
      end

      attribute 23835959 "WIFI_SCANNING_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wifiscanner\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.wifi.WifiScanner} for scanning the wifi universe

@see #getSystemService
@see android.net.wifi.WifiScanner
@hide

"
      end

      attribute 23836087 "WIFI_RTT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"rttmanager\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.wifi.RttManager} for ranging devices with wifi

@see #getSystemService
@see android.net.wifi.RttManager
@hide

"
      end

      attribute 23836215 "ETHERNET_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"ethernet\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.EthernetManager} for handling management of
Ethernet access.

@see #getSystemService
@see android.net.EthernetManager

@hide

"
      end

      attribute 23836343 "NSD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"servicediscovery\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.nsd.NsdManager} for handling management of network service
discovery

@see #getSystemService
@see android.net.nsd.NsdManager

"
      end

      attribute 23836471 "AUDIO_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.AudioManager} for handling management of volume,
ringer modes and audio routing.

@see #getSystemService
@see android.media.AudioManager

"
      end

      attribute 23836599 "FINGERPRINT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"fingerprint\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.fingerprint.FingerprintManager} for handling management
of fingerprints.

@see #getSystemService
@see android.hardware.fingerprint.FingerprintManager

"
      end

      attribute 23836727 "MEDIA_ROUTER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"media_router\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.MediaRouter} for controlling and managing
routing of media.

@see #getSystemService
@see android.media.MediaRouter

"
      end

      attribute 23836855 "MEDIA_SESSION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"media_session\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.session.MediaSessionManager} for managing media Sessions.

@see #getSystemService
@see android.media.session.MediaSessionManager

"
      end

      attribute 23836983 "TELEPHONY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"phone\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.telephony.TelephonyManager} for handling management the
telephony features of the device.

@see #getSystemService
@see android.telephony.TelephonyManager

"
      end

      attribute 23837111 "TELEPHONY_SUBSCRIPTION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"telephony_subscription_service\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.telephony.SubscriptionManager} for handling management the
telephony subscriptions of the device.

@see #getSystemService
@see android.telephony.SubscriptionManager

"
      end

      attribute 23837239 "TELECOM_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"telecom\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.telecom.TelecomManager} to manage telecom-related features
of the device.

@see #getSystemService
@see android.telecom.TelecomManager

"
      end

      attribute 23837367 "CARRIER_CONFIG_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"carrier_config\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.telephony.CarrierConfigManager} for reading carrier configuration values.

@see #getSystemService
@see android.telephony.CarrierConfigManager

"
      end

      attribute 23837495 "CLIPBOARD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"clipboard\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.text.ClipboardManager} for accessing and modifying
{@link android.content.ClipboardManager} for accessing and modifying
the contents of the global clipboard.

@see #getSystemService
@see android.content.ClipboardManager

"
      end

      attribute 23837623 "INPUT_METHOD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"input_method\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.inputmethod.InputMethodManager} for accessing input
methods.

@see #getSystemService

"
      end

      attribute 23837751 "TEXT_SERVICES_MANAGER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"textservices\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.textservice.TextServicesManager} for accessing
text services.

@see #getSystemService

"
      end

      attribute 23837879 "APPWIDGET_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"appwidget\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.appwidget.AppWidgetManager} for accessing AppWidgets.

@see #getSystemService

"
      end

      attribute 23838007 "VOICE_INTERACTION_MANAGER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"voiceinteraction\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Official published name of the (internal) voice interaction manager service.

@hide
@see #getSystemService

"
      end

      attribute 23838135 "SOUND_TRIGGER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"soundtrigger\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to access the
{@link com.android.server.voiceinteraction.SoundTriggerService}.

@hide
@see #getSystemService

"
      end

      attribute 23838263 "BACKUP_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"backup\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve an
{@link android.app.backup.IBackupManager IBackupManager} for communicating
with the backup mechanism.
@hide

@see #getSystemService

"
      end

      attribute 23838391 "DROPBOX_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"dropbox\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.DropBoxManager} instance for recording
diagnostic logs.
@see #getSystemService

"
      end

      attribute 23838519 "DEVICE_IDLE_CONTROLLER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"deviceidle\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "System service name for the DeviceIdleController.  There is no Java API for this.
@see #getSystemService
@hide

"
      end

      attribute 23838647 "DEVICE_POLICY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"device_policy\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.admin.DevicePolicyManager} for working with global
device policy management.

@see #getSystemService

"
      end

      attribute 23838775 "UI_MODE_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"uimode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.UiModeManager} for controlling UI modes.

@see #getSystemService

"
      end

      attribute 23838903 "DOWNLOAD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"download\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.DownloadManager} for requesting HTTP downloads.

@see #getSystemService

"
      end

      attribute 23839031 "BATTERY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"batterymanager\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.BatteryManager} for managing battery state.

@see #getSystemService

"
      end

      attribute 23839159 "NFC_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"nfc\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.nfc.NfcManager} for using NFC.

@see #getSystemService

"
      end

      attribute 23839287 "BLUETOOTH_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"bluetooth\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.bluetooth.BluetoothManager} for using Bluetooth.

@see #getSystemService

"
      end

      attribute 23839415 "SIP_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sip\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.net.sip.SipManager} for accessing the SIP related service.

@see #getSystemService

 @hide 
"
      end

      attribute 23839543 "USB_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"usb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.usb.UsbManager} for access to USB devices (as a USB host)
and for controlling this device's behavior as a USB device.

@see #getSystemService
@see android.hardware.usb.UsbManager

"
      end

      attribute 23839671 "SERIAL_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"serial\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.SerialManager} for access to serial ports.

@see #getSystemService
@see android.hardware.SerialManager

@hide

"
      end

      attribute 23839799 "HDMI_CONTROL_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"hdmi_control\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.hdmi.HdmiControlManager} for controlling and managing
HDMI-CEC protocol.

@see #getSystemService
@see android.hardware.hdmi.HdmiControlManager
@hide

"
      end

      attribute 23839927 "INPUT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"input\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.input.InputManager} for interacting with input devices.

@see #getSystemService
@see android.hardware.input.InputManager

"
      end

      attribute 23840055 "DISPLAY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"display\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.display.DisplayManager} for interacting with display devices.

@see #getSystemService
@see android.hardware.display.DisplayManager

"
      end

      attribute 23840183 "USER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"user\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.UserManager} for managing users on devices that support multiple users.

@see #getSystemService
@see android.os.UserManager

"
      end

      attribute 23840311 "LAUNCHER_APPS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"launcherapps\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.content.pm.LauncherApps} for querying and monitoring launchable apps across
profiles of a user.

@see #getSystemService
@see android.content.pm.LauncherApps

"
      end

      attribute 23840439 "RESTRICTIONS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"restrictions\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.content.RestrictionsManager} for retrieving application restrictions
and requesting permissions for restricted operations.
@see #getSystemService
@see android.content.RestrictionsManager

"
      end

      attribute 23840567 "APP_OPS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"appops\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.AppOpsManager} for tracking application operations
on the device.

@see #getSystemService
@see android.app.AppOpsManager

"
      end

      attribute 23840695 "CAMERA_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"camera\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.camera2.CameraManager} for interacting with
camera devices.

@see #getSystemService
@see android.hardware.camera2.CameraManager

"
      end

      attribute 23840823 "PRINT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"print\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "{@link android.print.PrintManager} for printing and managing
printers and print tasks.

@see #getSystemService
@see android.print.PrintManager

"
      end

      attribute 23840951 "CONSUMER_IR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"consumer_ir\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.ConsumerIrManager} for transmitting infrared
signals from the device.

@see #getSystemService
@see android.hardware.ConsumerIrManager

"
      end

      attribute 23841079 "TRUST_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"trust\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "{@link android.app.trust.TrustManager} for managing trust agents.
@see #getSystemService
@see android.app.trust.TrustManager
@hide

"
      end

      attribute 23841207 "TV_INPUT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"tv_input\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.tv.TvInputManager} for interacting with TV inputs
on the device.

@see #getSystemService
@see android.media.tv.TvInputManager

"
      end

      attribute 23841335 "NETWORK_SCORE_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"network_score\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "{@link android.net.NetworkScoreManager} for managing network scoring.
@see #getSystemService
@see android.net.NetworkScoreManager
@hide

"
      end

      attribute 23841463 "USAGE_STATS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"usagestats\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.usage.UsageStatsManager} for querying device usage stats.

@see #getSystemService
@see android.app.usage.UsageStatsManager

"
      end

      attribute 23841591 "JOB_SCHEDULER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"jobscheduler\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.job.JobScheduler} instance for managing occasional
background tasks.
@see #getSystemService
@see android.app.job.JobScheduler

"
      end

      attribute 23841719 "PERSISTENT_DATA_BLOCK_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"persistent_data_block\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.service.persistentdata.PersistentDataBlockManager} instance
for interacting with a storage device that lives across factory resets.

@see #getSystemService
@see android.service.persistentdata.PersistentDataBlockManager
@hide

"
      end

      attribute 23841847 "MEDIA_PROJECTION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"media_projection\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.media.projection.MediaProjectionManager} instance for managing
media projection sessions.
@see #getSystemService
@see android.media.projection.MediaProjectionManager

"
      end

      attribute 23841975 "MIDI_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"midi\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.midi.MidiManager} for accessing the MIDI service.

@see #getSystemService

"
      end

      attribute 23842103 "RADIO_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"radio\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.radio.RadioManager} for accessing the broadcast radio service.

@see #getSystemService
@hide

"
      end

      attribute 23842231 "HARDWARE_PROPERTIES_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"hardware_properties\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.HardwarePropertiesManager} for accessing the hardware properties service.

@see #getSystemService

"
      end

      attribute 23842359 "SHORTCUT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"shortcut\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "TODO Javadoc

@see #getSystemService
@see android.content.pm.ShortcutManager

@hide

"
      end

      attribute 23842487 "CONTEXTHUB_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"contexthub\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.location.ContextHubManager} for accessing context hubs.

@see #getSystemService
@see android.hardware.location.ContextHubManager

@hide

"
      end

      attribute 23842615 "SYSTEM_HEALTH_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"systemhealth\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.health.SystemHealthManager} for accessing system health (battery, power,
memory, etc) metrics.

@see #getSystemService

"
      end

      attribute 23842743 "GATEKEEPER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.service.gatekeeper.IGateKeeperService\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gatekeeper Service.
@hide

"
      end

      operation 77032759 "checkPermission"
	abstract public explicit_return_type "int"
	nparams 3
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforcePermission(String,int,int,String)\")
@PackageManager.PermissionResult
"
	
	
	
	comment "Determine whether the given permission is allowed for a particular
process and user ID running in the system.

@param permission The name of the permission being checked.
@param pid The process ID being checked against.  Must be > 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.

@return {@link PackageManager#PERMISSION_GRANTED} if the given
pid/uid is allowed that permission, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see PackageManager#checkPermission(String, String)
@see #checkCallingPermission
"
      end

      operation 77032887 "checkPermission"
	abstract public explicit_return_type "int"
	nparams 4
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@PackageManager.PermissionResult
"
	
	
	
	comment " @hide "
      end

      operation 77033015 "checkCallingPermission"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforceCallingPermission(String,String)\")
@PackageManager.PermissionResult
"
	
	
	
	comment "Determine whether the calling process of an IPC you are handling has been
granted a particular permission.  This is basically the same as calling
{@link #checkPermission(String, int, int)} with the pid and uid returned
by {@link android.os.Binder#getCallingPid} and
{@link android.os.Binder#getCallingUid}.  One important difference
is that if you are not currently processing an IPC, this function
will always fail.  This is done to protect against accidentally
leaking permissions; you can use {@link #checkCallingOrSelfPermission}
to avoid this protection.

@param permission The name of the permission being checked.

@return {@link PackageManager#PERMISSION_GRANTED} if the calling
pid/uid is allowed that permission, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see PackageManager#checkPermission(String, String)
@see #checkPermission
@see #checkCallingOrSelfPermission
"
      end

      operation 77033143 "checkCallingOrSelfPermission"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforceCallingOrSelfPermission(String,String)\")
@PackageManager.PermissionResult
"
	
	
	
	comment "Determine whether the calling process of an IPC <em>or you</em> have been
granted a particular permission.  This is the same as
{@link #checkCallingPermission}, except it grants your own permissions
if you are not currently processing an IPC.  Use with care!

@param permission The name of the permission being checked.

@return {@link PackageManager#PERMISSION_GRANTED} if the calling
pid/uid is allowed that permission, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see PackageManager#checkPermission(String, String)
@see #checkPermission
@see #checkCallingPermission
"
      end

      operation 77033271 "checkSelfPermission"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@PackageManager.PermissionResult
"
	
	
	
	comment "Determine whether <em>you</em> have been granted a particular permission.

@param permission The name of the permission being checked.

@return {@link PackageManager#PERMISSION_GRANTED} if you have the
permission, or {@link PackageManager#PERMISSION_DENIED} if not.

@see PackageManager#checkPermission(String, String)
@see #checkCallingPermission(String)
"
      end

      operation 77033399 "enforcePermission"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the given permission is not allowed for a particular process
and user ID running in the system, throw a {@link SecurityException}.

@param permission The name of the permission being checked.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param message A message to include in the exception if it is thrown.

@see #checkPermission(String, int, int)
"
      end

      operation 77033527 "enforceCallingPermission"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the calling process of an IPC you are handling has not been
granted a particular permission, throw a {@link
SecurityException}.  This is basically the same as calling
{@link #enforcePermission(String, int, int, String)} with the
pid and uid returned by {@link android.os.Binder#getCallingPid}
and {@link android.os.Binder#getCallingUid}.  One important
difference is that if you are not currently processing an IPC,
this function will always throw the SecurityException.  This is
done to protect against accidentally leaking permissions; you
can use {@link #enforceCallingOrSelfPermission} to avoid this
protection.

@param permission The name of the permission being checked.
@param message A message to include in the exception if it is thrown.

@see #checkCallingPermission(String)
"
      end

      operation 77033655 "enforceCallingOrSelfPermission"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If neither you nor the calling process of an IPC you are
handling has been granted a particular permission, throw a
{@link SecurityException}.  This is the same as {@link
#enforceCallingPermission}, except it grants your own
permissions if you are not currently processing an IPC.  Use
with care!

@param permission The name of the permission being checked.
@param message A message to include in the exception if it is thrown.

@see #checkCallingOrSelfPermission(String)
"
      end

      operation 77033783 "grantUriPermission"
	abstract public explicit_return_type "void"
	nparams 3
	  param in name "toPackage" explicit_type "String"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Intent.GrantUriMode ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Grant permission to access a specific Uri to another package, regardless
of whether that package has general permission to access the Uri's
content provider.  This can be used to grant specific, temporary
permissions, typically in response to user interaction (such as the
user opening an attachment that you would like someone else to
display).

<p>Normally you should use {@link Intent#FLAG_GRANT_READ_URI_PERMISSION
Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION
Intent.FLAG_GRANT_WRITE_URI_PERMISSION} with the Intent being used to
start an activity instead of this function directly.  If you use this
function directly, you should be sure to call
{@link #revokeUriPermission} when the target should no longer be allowed
to access it.

<p>To succeed, the content provider owning the Uri must have set the
{@link android.R.styleable#AndroidManifestProvider_grantUriPermissions
grantUriPermissions} attribute in its manifest or included the
{@link android.R.styleable#AndroidManifestGrantUriPermission
&lt;grant-uri-permissions&gt;} tag.

@param toPackage The package you would like to allow to access the Uri.
@param uri The Uri you would like to grant access to.
@param modeFlags The desired access modes.  Any combination of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION
Intent.FLAG_GRANT_READ_URI_PERMISSION},
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION
Intent.FLAG_GRANT_WRITE_URI_PERMISSION},
{@link Intent#FLAG_GRANT_PERSISTABLE_URI_PERMISSION
Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION}, or
{@link Intent#FLAG_GRANT_PREFIX_URI_PERMISSION
Intent.FLAG_GRANT_PREFIX_URI_PERMISSION}.

@see #revokeUriPermission
"
      end

      operation 77033911 "revokeUriPermission"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all permissions to access a particular content provider Uri
that were previously added with {@link #grantUriPermission}.  The given
Uri will match all previously granted Uris that are the same or a
sub-path of the given Uri.  That is, revoking \"content://foo/target\" will
revoke both \"content://foo/target\" and \"content://foo/target/sub\", but not
\"content://foo\".  It will not remove any prefix grants that exist at a
higher level.

<p>Prior to {@link android.os.Build.VERSION_CODES#LOLLIPOP}, if you did not have
regular permission access to a Uri, but had received access to it through
a specific Uri permission grant, you could not revoke that grant with this
function and a {@link SecurityException} would be thrown.  As of
{@link android.os.Build.VERSION_CODES#LOLLIPOP}, this function will not throw a security exception,
but will remove whatever permission grants to the Uri had been given to the app
(or none).</p>

@param uri The Uri you would like to revoke access to.
@param modeFlags The desired access modes.  Any combination of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION
Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION
Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@see #grantUriPermission
"
      end

      operation 77034039 "checkUriPermission"
	abstract public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Intent.AccessUriMode ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforceUriPermission(Uri,int,int,String)\")
"
	
	
	
	comment "Determine whether a particular process and user ID has been granted
permission to access a specific URI.  This only checks for permissions
that have been explicitly granted -- if the given process/uid has
more general access to the URI's content provider then this check will
always fail.

@param uri The uri that is being checked.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the given
pid/uid is allowed to access that uri, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see #checkCallingUriPermission
"
      end

      operation 77034167 "checkUriPermission"
	abstract public explicit_return_type "int"
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Intent.AccessUriMode ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77034295 "checkCallingUriPermission"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforceCallingUriPermission(Uri,int,String)\")
"
	
	
	
	comment "Determine whether the calling process and user ID has been
granted permission to access a specific URI.  This is basically
the same as calling {@link #checkUriPermission(Uri, int, int,
int)} with the pid and uid returned by {@link
android.os.Binder#getCallingPid} and {@link
android.os.Binder#getCallingUid}.  One important difference is
that if you are not currently processing an IPC, this function
will always fail.

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the caller
is allowed to access that uri, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see #checkUriPermission(Uri, int, int, int)
"
      end

      operation 77034423 "checkCallingOrSelfUriPermission"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforceCallingOrSelfUriPermission(Uri,int,String)\")
"
	
	
	
	comment "Determine whether the calling process of an IPC <em>or you</em> has been granted
permission to access a specific URI.  This is the same as
{@link #checkCallingUriPermission}, except it grants your own permissions
if you are not currently processing an IPC.  Use with care!

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the caller
is allowed to access that uri, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see #checkCallingUriPermission
"
      end

      operation 77034551 "checkUriPermission"
	abstract public explicit_return_type "int"
	nparams 6
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, @Intent.AccessUriMode ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CheckResult(suggest=\"#enforceUriPermission(Uri,String,String,int,int,int,String)\")
"
	
	
	
	comment "Check both a Uri and normal permission.  This allows you to perform
both {@link #checkPermission} and {@link #checkUriPermission} in one
call.

@param uri The Uri whose permission is to be checked, or null to not
do this check.
@param readPermission The permission that provides overall read access,
or null to not do this check.
@param writePermission The permission that provides overall write
access, or null to not do this check.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the caller
is allowed to access that uri or holds one of the given permissions, or
{@link PackageManager#PERMISSION_DENIED} if it is not.
"
      end

      operation 77034679 "enforceUriPermission"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Intent.AccessUriMode ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a particular process and user ID has not been granted
permission to access a specific URI, throw {@link
SecurityException}.  This only checks for permissions that have
been explicitly granted -- if the given process/uid has more
general access to the URI's content provider then this check
will always fail.

@param uri The uri that is being checked.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkUriPermission(Uri, int, int, int)
"
      end

      operation 77034807 "enforceCallingUriPermission"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the calling process and user ID has not been granted
permission to access a specific URI, throw {@link
SecurityException}.  This is basically the same as calling
{@link #enforceUriPermission(Uri, int, int, int, String)} with
the pid and uid returned by {@link
android.os.Binder#getCallingPid} and {@link
android.os.Binder#getCallingUid}.  One important difference is
that if you are not currently processing an IPC, this function
will always throw a SecurityException.

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkCallingUriPermission(Uri, int)
"
      end

      operation 77034935 "enforceCallingOrSelfUriPermission"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the calling process of an IPC <em>or you</em> has not been
granted permission to access a specific URI, throw {@link
SecurityException}.  This is the same as {@link
#enforceCallingUriPermission}, except it grants your own
permissions if you are not currently processing an IPC.  Use
with care!

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkCallingOrSelfUriPermission(Uri, int)
"
      end

      operation 77035063 "enforceUriPermission"
	abstract public explicit_return_type "void"
	nparams 7
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, @Intent.AccessUriMode ${t5} ${p5}, @Nullable ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforce both a Uri and normal permission.  This allows you to perform
both {@link #enforcePermission} and {@link #enforceUriPermission} in one
call.

@param uri The Uri whose permission is to be checked, or null to not
do this check.
@param readPermission The permission that provides overall read access,
or null to not do this check.
@param writePermission The permission that provides overall write
access, or null to not do this check.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkUriPermission(Uri, String, String, int, int, int)
"
      end

      class 6927287 "CreatePackageOptions"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true,
            value = {CONTEXT_INCLUDE_CODE, CONTEXT_IGNORE_SECURITY, CONTEXT_RESTRICTED})
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 23842871 "CONTEXT_INCLUDE_CODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #createPackageContext}: include the application
code with the context.  This means loading code into the caller's
process, so that {@link #getClassLoader()} can be used to instantiate
the application's classes.  Setting this flags imposes security
restrictions on what application context you can access; if the
requested application can not be safely loaded into your process,
java.lang.SecurityException will be thrown.  If this flag is not set,
there will be no restrictions on the packages that can be loaded,
but {@link #getClassLoader} will always return the default system
class loader.

"
      end

      attribute 23842999 "CONTEXT_IGNORE_SECURITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #createPackageContext}: ignore any security
restrictions on the Context being requested, allowing it to always
be loaded.  For use with {@link #CONTEXT_INCLUDE_CODE} to allow code
to be loaded into a process even when it isn't safe to do so.  Use
with extreme care!

"
      end

      attribute 23843127 "CONTEXT_RESTRICTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #createPackageContext}: a restricted context may
disable specific features. For instance, a View associated with a restricted
context would ignore particular XML attributes.

"
      end

      attribute 23843255 "CONTEXT_DEVICE_PROTECTED_STORAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #createPackageContext}: point all file APIs at
device-protected storage.

@hide

"
      end

      attribute 23843383 "CONTEXT_CREDENTIAL_PROTECTED_STORAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #createPackageContext}: point all file APIs at
credential-protected storage.

@hide

"
      end

      attribute 23843511 "CONTEXT_REGISTER_PACKAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide Used to indicate we should tell the activity manager about the process
loading this code.

"
      end

      operation 77035191 "createPackageContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6927415 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @CreatePackageOptions ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the given application name.  This
Context is the same as what the named application gets when it is
launched, containing the same resources and class loader.  Each call to
this method returns a new instance of a Context object; Context objects
are not shared, however they share common state (Resources, ClassLoader,
etc) so the Context instance itself is fairly lightweight.

<p>Throws {@link android.content.pm.PackageManager.NameNotFoundException} if there is no
application with the given package name.

<p>Throws {@link java.lang.SecurityException} if the Context requested
can not be loaded into the caller's process for security reasons (see
{@link #CONTEXT_INCLUDE_CODE} for more information}.

@param packageName Name of the application's package.
@param flags Option flags, one of {@link #CONTEXT_INCLUDE_CODE}
             or {@link #CONTEXT_IGNORE_SECURITY}.

@return A {@link Context} for the application.

@throws SecurityException &nbsp;
@throws PackageManager.NameNotFoundException if there is no application with
the given package name.
"
      end

      operation 77035319 "createPackageContextAsUser"
	abstract public return_type class_ref 6923703 // Context
	nparams 3
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 6925751 // UserHandle
	nexceptions 1
	  exception class_ref 6927415 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similar to {@link #createPackageContext(String, int)}, but with a
different {@link UserHandle}. For example, {@link #getContentResolver()}
will open any {@link Uri} as the given user.

@hide
"
      end

      operation 77035447 "createApplicationContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 2
	  param inout name "application" type class_ref 152503 // ApplicationInfo
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6927415 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a context given an {@link android.content.pm.ApplicationInfo}.

@hide
"
      end

      operation 77035575 "getUserId"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@TestApi
@UserIdInt
"
	
	
	
	comment "Get the userId associated with this context
@return user id

@hide
"
      end

      operation 77035703 "createConfigurationContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 1
	  param inout name "overrideConfiguration" type class_ref 6927543 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the current Context but whose resources
are adjusted to match the given Configuration.  Each call to this method
returns a new instance of a Context object; Context objects are not
shared, however common state (ClassLoader, other Resources for the
same configuration) may be so the Context itself can be fairly lightweight.

@param overrideConfiguration A {@link Configuration} specifying what
values to modify in the base Configuration of the original Context's
resources.  If the base configuration changes (such as due to an
orientation change), the resources of this context will also change except
for those that have been explicitly overridden with a value here.

@return A {@link Context} with the given configuration override.
"
      end

      operation 77035831 "createDisplayContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 1
	  param inout name "display" type class_ref 6927671 // Display
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the current Context but whose resources
are adjusted to match the metrics of the given Display.  Each call to this method
returns a new instance of a Context object; Context objects are not
shared, however common state (ClassLoader, other Resources for the
same configuration) may be so the Context itself can be fairly lightweight.

The returned display Context provides a {@link WindowManager}
(see {@link #getSystemService(String)}) that is configured to show windows
on the given display.  The WindowManager's {@link WindowManager#getDefaultDisplay}
method can be used to retrieve the Display from the returned Context.

@param display A {@link Display} object specifying the display
for whose metrics the Context's resources should be tailored and upon which
new windows should be shown.

@return A {@link Context} for the display.
"
      end

      operation 77035959 "createDeviceProtectedStorageContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the current Context but whose storage
APIs are backed by device-protected storage.
<p>
On devices with direct boot, data stored in this location is encrypted
with a key tied to the physical device, and it can be accessed
immediately after the device has booted successfully, both
<em>before and after</em> the user has authenticated with their
credentials (such as a lock pattern or PIN).
<p>
Because device-protected data is available without user authentication,
you should carefully limit the data you store using this Context. For
example, storing sensitive authentication tokens or passwords in the
device-protected area is strongly discouraged.
<p>
If the underlying device does not have the ability to store
device-protected and credential-protected data using different keys, then
both storage areas will become available at the same time. They remain as
two distinct storage locations on disk, and only the window of
availability changes.
<p>
Each call to this method returns a new instance of a Context object;
Context objects are not shared, however common state (ClassLoader, other
Resources for the same configuration) may be so the Context itself can be
fairly lightweight.

@see #isDeviceProtectedStorage()
"
      end

      operation 77036087 "createDeviceEncryptedStorageContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 77036215 "createCredentialProtectedStorageContext"
	abstract public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Return a new Context object for the current Context but whose storage
APIs are backed by credential-protected storage. This is the default
storage area for apps unless
{@link android.R.attr#defaultToDeviceProtectedStorage} was requested.
<p>
On devices with direct boot, data stored in this location is encrypted
with a key tied to user credentials, which can be accessed
<em>only after</em> the user has entered their credentials (such as a
lock pattern or PIN).
<p>
If the underlying device does not have the ability to store
device-protected and credential-protected data using different keys, then
both storage areas will become available at the same time. They remain as
two distinct storage locations on disk, and only the window of
availability changes.
<p>
Each call to this method returns a new instance of a Context object;
Context objects are not shared, however common state (ClassLoader, other
Resources for the same configuration) may be so the Context itself can be
fairly lightweight.

@see #isCredentialProtectedStorage()
@hide
"
      end

      operation 77036343 "createCredentialEncryptedStorageContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 77036471 "getDisplayAdjustments"
	abstract public return_type class_ref 6927799 // DisplayAdjustments
	nparams 1
	  param in name "displayId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the display adjustments holder for this context.  This information
is provided on a per-application or activity basis and is used to simulate lower density
display metrics for legacy applications and restricted screen sizes.

@param displayId The display id for which to get compatibility info.
@return The compatibility info holder, or null if not required by the application.
@hide
"
      end

      operation 77036599 "getDisplay"
	abstract public return_type class_ref 6927671 // Display
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 77036727 "isRestricted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this Context is restricted.

@return {@code true} if this Context is restricted, {@code false} otherwise.

@see #CONTEXT_RESTRICTED
"
      end

      operation 77036855 "isDeviceProtectedStorage"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if the storage APIs of this Context are backed by
device-protected storage.

@see #createDeviceProtectedStorageContext()
"
      end

      operation 77036983 "isDeviceEncryptedStorage"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 77037111 "isCredentialProtectedStorage"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Indicates if the storage APIs of this Context are backed by
credential-protected storage.

@see #createCredentialProtectedStorageContext()
@hide
"
      end

      operation 77037239 "isCredentialEncryptedStorage"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end
    end

    class 6924215 "ContentResolver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides applications access to the content model.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using a ContentResolver with content providers, read the
<a href=\"{@docRoot}guide/topics/providers/content-providers.html\">Content Providers</a>
developer guide.</p>
"
      classrelation 15147831 // ACTION_SYNC_CONN_STATUS_CHANGED (<unidirectional association>)
	relation 15147831 --->
	  a role_name "ACTION_SYNC_CONN_STATUS_CHANGED" init_value "
            new Intent(\"com.android.sync.SYNC_CONN_STATUS_CHANGED\")" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15147831 // ACTION_SYNC_CONN_STATUS_CHANGED (<unidirectional association>)
	  b parent class_ref 6925623 // Intent
      end

      attribute 24181943 "SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182071 "SYNC_ERROR_AUTHENTICATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182199 "SYNC_ERROR_IO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182327 "SYNC_ERROR_PARSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182455 "SYNC_ERROR_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182583 "SYNC_ERROR_TOO_MANY_DELETIONS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182711 "SYNC_ERROR_TOO_MANY_RETRIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24182839 "SYNC_ERROR_INTERNAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      operation 77868727 "syncErrorToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77868855 "syncErrorStringToInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "error" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      attribute 24182967 "SYNC_OBSERVER_TYPE_SETTINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24183095 "SYNC_OBSERVER_TYPE_PENDING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24183223 "SYNC_OBSERVER_TYPE_ACTIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24183351 "SYNC_OBSERVER_TYPE_STATUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24183479 "SYNC_OBSERVER_TYPE_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7fffffff"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      class 7016375 "NotifyFlags"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true,
            value = {
                NOTIFY_SYNC_TO_NETWORK,
                NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS
            })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 24183607 "NOTIFY_SYNC_TO_NETWORK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #notifyChange(Uri, ContentObserver, int)}: attempt to sync the change
to the network.

"
      end

      attribute 24183735 "NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for {@link #notifyChange(Uri, ContentObserver, int)}: if set, this notification
will be skipped if it is being delivered to the root URI of a ContentObserver that is
using \"notify for descendants.\"  The purpose of this is to allow the provide to send
a general notification of \"something under X\" changed that observers of that specific
URI can receive, while also sending a specific URI under X.  It would use this flag
when sending the former, so that observers of \"X and descendants\" only see the latter.

"
      end

      attribute 24183863 "ENABLE_CONTENT_SAMPLE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Always log queries which take 500ms+; shorter queries are
 sampled accordingly.
"
      end

      attribute 24183991 "SLOW_THRESHOLD_MILLIS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24184119 "mRandom"
	const_attribute private explicit_type "Random"
	init_value " new Random()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " guarded by itself"
      end

      operation 77868983 "ContentResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77869111 "acquireProvider"
	abstract protected return_type class_ref 6991671 // IContentProvider
	nparams 2
	  param inout name "c" type class_ref 6923703 // Context
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77869239 "acquireExistingProvider"
	protected return_type class_ref 6991671 // IContentProvider
	nparams 2
	  param inout name "c" type class_ref 6923703 // Context
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Providing a default implementation of this, to avoid having to change a
lot of other things, but implementations of ContentResolver should
implement it.

@hide
"
      end

      operation 77869367 "releaseProvider"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "icp" type class_ref 6991671 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77869495 "acquireUnstableProvider"
	abstract protected return_type class_ref 6991671 // IContentProvider
	nparams 2
	  param inout name "c" type class_ref 6923703 // Context
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77869623 "releaseUnstableProvider"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "icp" type class_ref 6991671 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77869751 "unstableProviderDied"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "icp" type class_ref 6991671 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77869879 "appNotRespondingViaProvider"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icp" type class_ref 6991671 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77870007 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the MIME type of the given content URL.

@param url A Uri identifying content (either a list or specific type),
using the content:// scheme.
@return A MIME type for the content, or null if the URL is invalid or the type is unknown
"
      end

      operation 77870135 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Query for the possible MIME types for the representations the given
content URL can be returned when opened as as stream with
{@link #openTypedAssetFileDescriptor}.  Note that the types here are
not necessarily a superset of the type returned by {@link #getType} --
many content providers cannot return a raw stream for the structured
data that they contain.

@param url A Uri identifying content (either a list or specific type),
using the content:// scheme.
@param mimeTypeFilter The desired MIME type.  This may be a pattern,
such as *&#47;*, to query for all available MIME types that match the
pattern.
@return Returns an array of MIME type strings for all available
data streams that match the given mimeTypeFilter.  If there are none,
null is returned.
"
      end

      operation 77870263 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}, @Nullable ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Query the given URI, returning a {@link Cursor} over the result set.
<p>
For best performance, the caller should follow these guidelines:
<ul>
<li>Provide an explicit projection, to prevent
reading data from storage that aren't going to be used.</li>
<li>Use question mark parameter markers such as 'phone=?' instead of
explicit values in the {@code selection} parameter, so that queries
that differ only by those values will be recognized as the same
for caching purposes.</li>
</ul>
</p>

@param uri The URI, using the content:// scheme, for the content to
        retrieve.
@param projection A list of which columns to return. Passing null will
        return all columns, which is inefficient.
@param selection A filter declaring which rows to return, formatted as an
        SQL WHERE clause (excluding the WHERE itself). Passing null will
        return all rows for the given URI.
@param selectionArgs You may include ?s in selection, which will be
        replaced by the values from selectionArgs, in the order that they
        appear in the selection. The values will be bound as Strings.
@param sortOrder How to order the rows, formatted as an SQL ORDER BY
        clause (excluding the ORDER BY itself). Passing null will use the
        default sort order, which may be unordered.
@return A Cursor object, which is positioned before the first entry, or null
@see Cursor
"
      end

      operation 77870391 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 6
	  param in name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7016503 // CancellationSignal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull final ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}, @Nullable ${t4} ${p4}, @Nullable ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Query the given URI, returning a {@link Cursor} over the result set
with optional support for cancellation.
<p>
For best performance, the caller should follow these guidelines:
<ul>
<li>Provide an explicit projection, to prevent
reading data from storage that aren't going to be used.</li>
<li>Use question mark parameter markers such as 'phone=?' instead of
explicit values in the {@code selection} parameter, so that queries
that differ only by those values will be recognized as the same
for caching purposes.</li>
</ul>
</p>

@param uri The URI, using the content:// scheme, for the content to
        retrieve.
@param projection A list of which columns to return. Passing null will
        return all columns, which is inefficient.
@param selection A filter declaring which rows to return, formatted as an
        SQL WHERE clause (excluding the WHERE itself). Passing null will
        return all rows for the given URI.
@param selectionArgs You may include ?s in selection, which will be
        replaced by the values from selectionArgs, in the order that they
        appear in the selection. The values will be bound as Strings.
@param sortOrder How to order the rows, formatted as an SQL ORDER BY
        clause (excluding the ORDER BY itself). Passing null will use the
        default sort order, which may be unordered.
@param cancellationSignal A signal to cancel the operation in progress, or null if none.
If the operation is canceled, then {@link OperationCanceledException} will be thrown
when the query is executed.
@return A Cursor object, which is positioned before the first entry, or null
@see Cursor
"
      end

      operation 77870519 "canonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Transform the given <var>url</var> to a canonical representation of
its referenced resource, which can be used across devices, persisted,
backed up and restored, etc.  The returned Uri is still a fully capable
Uri for use with its content provider, allowing you to do all of the
same content provider operations as with the original Uri --
{@link #query}, {@link #openInputStream(android.net.Uri)}, etc.  The
only difference in behavior between the original and new Uris is that
the content provider may need to do some additional work at each call
using it to resolve it to the correct resource, especially if the
canonical Uri has been moved to a different environment.

<p>If you are moving a canonical Uri between environments, you should
perform another call to {@link #canonicalize} with that original Uri to
re-canonicalize it for the current environment.  Alternatively, you may
want to use {@link #uncanonicalize} to transform it to a non-canonical
Uri that works only in the current environment but potentially more
efficiently than the canonical representation.</p>

@param url The {@link Uri} that is to be transformed to a canonical
representation.  Like all resolver calls, the input can be either
a non-canonical or canonical Uri.

@return Returns the official canonical representation of <var>url</var>,
or null if the content provider does not support a canonical representation
of the given Uri.  Many providers may not support canonicalization of some
or all of their Uris.

@see #uncanonicalize
"
      end

      operation 77870647 "uncanonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Given a canonical Uri previously generated by {@link #canonicalize}, convert
it to its local non-canonical form.  This can be useful in some cases where
you know that you will only be using the Uri in the current environment and
want to avoid any possible overhead when using it with the content
provider or want to verify that the referenced data exists at all in the
new environment.

@param url The canonical {@link Uri} that is to be convered back to its
non-canonical form.

@return Returns the non-canonical representation of <var>url</var>.  This will
return null if data identified by the canonical Uri can not be found in
the current environment; callers must always check for null and deal with
that by appropriately falling back to an alternative.

@see #canonicalize
"
      end

      operation 77870775 "openInputStream"
	public explicit_return_type "InputStream"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a stream on to the content associated with a content URI.  If there
is no data associated with the URI, FileNotFoundException is thrown.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>android.resource ({@link #SCHEME_ANDROID_RESOURCE})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.

@param uri The desired URI.
@return InputStream
@throws FileNotFoundException if the provided URI could not be opened.
@see #openAssetFileDescriptor(Uri, String)
"
      end

      operation 77870903 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Synonym for {@link #openOutputStream(Uri, String)
openOutputStream(uri, \"w\")}.
@throws FileNotFoundException if the provided URI could not be opened.
"
      end

      operation 77871031 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a stream on to the content associated with a content URI.  If there
is no data associated with the URI, FileNotFoundException is thrown.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.

@param uri The desired URI.
@param mode May be \"w\", \"wa\", \"rw\", or \"rwt\".
@return OutputStream
@throws FileNotFoundException if the provided URI could not be opened.
@see #openAssetFileDescriptor(Uri, String)
"
      end

      operation 77871159 "openFileDescriptor"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
is like {@link #openAssetFileDescriptor(Uri, String)}, but uses the
underlying {@link ContentProvider#openFile}
ContentProvider.openFile()} method, so will <em>not</em> work with
providers that return sub-sections of files.  If at all possible,
you should use {@link #openAssetFileDescriptor(Uri, String)}.  You
will receive a FileNotFoundException exception if the provider returns a
sub-section of a file.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.
<p>
If opening with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor could be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" mode implies a file on disk that supports
seeking. If possible, always use an exclusive mode to give the underlying
{@link ContentProvider} the most flexibility.
<p>
If you are writing a file, and need to communicate an error to the
provider, use {@link ParcelFileDescriptor#closeWithError(String)}.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openFile
ContentProvider.openFile}.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException if no
file exists under the URI or the mode is invalid.
@see #openAssetFileDescriptor(Uri, String)
"
      end

      operation 77871287 "openFileDescriptor"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
is like {@link #openAssetFileDescriptor(Uri, String)}, but uses the
underlying {@link ContentProvider#openFile}
ContentProvider.openFile()} method, so will <em>not</em> work with
providers that return sub-sections of files.  If at all possible,
you should use {@link #openAssetFileDescriptor(Uri, String)}.  You
will receive a FileNotFoundException exception if the provider returns a
sub-section of a file.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.
<p>
If opening with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor could be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" mode implies a file on disk that supports
seeking. If possible, always use an exclusive mode to give the underlying
{@link ContentProvider} the most flexibility.
<p>
If you are writing a file, and need to communicate an error to the
provider, use {@link ParcelFileDescriptor#closeWithError(String)}.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openFile
ContentProvider.openFile}.
@param cancellationSignal A signal to cancel the operation in progress,
        or null if none. If the operation is canceled, then
        {@link OperationCanceledException} will be thrown.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException if no
file exists under the URI or the mode is invalid.
@see #openAssetFileDescriptor(Uri, String)
"
      end

      operation 77871415 "openAssetFileDescriptor"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
interacts with the underlying {@link ContentProvider#openAssetFile}
method of the provider associated with the given URI, to retrieve any file stored there.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>android.resource ({@link #SCHEME_ANDROID_RESOURCE})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>
<h5>The android.resource ({@link #SCHEME_ANDROID_RESOURCE}) Scheme</h5>
<p>
A Uri object can be used to reference a resource in an APK file.  The
Uri should be one of the following formats:
<ul>
<li><code>android.resource://package_name/id_number</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>id_number</code> is the int form of the ID.<br/>
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/\" + R.raw.my_resource\");</pre>
</li>
<li><code>android.resource://package_name/type/name</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>type</code> is the string form of the resource type.  For example, <code>raw</code>
or <code>drawable</code>.
<code>name</code> is the string form of the resource name.  That is, whatever the file
name was in your res directory, without the type extension.
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/raw/my_resource\");</pre>
</li>
</ul>

<p>Note that if this function is called for read-only input (mode is \"r\")
on a content: URI, it will instead call {@link #openTypedAssetFileDescriptor}
for you with a MIME type of \"*&#47;*\".  This allows such callers to benefit
from any built-in data conversion that a provider implements.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openAssetFile
ContentProvider.openAssetFile}.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
file exists under the URI or the mode is invalid.
"
      end

      operation 77871543 "openAssetFileDescriptor"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
interacts with the underlying {@link ContentProvider#openAssetFile}
method of the provider associated with the given URI, to retrieve any file stored there.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>android.resource ({@link #SCHEME_ANDROID_RESOURCE})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>
<h5>The android.resource ({@link #SCHEME_ANDROID_RESOURCE}) Scheme</h5>
<p>
A Uri object can be used to reference a resource in an APK file.  The
Uri should be one of the following formats:
<ul>
<li><code>android.resource://package_name/id_number</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>id_number</code> is the int form of the ID.<br/>
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/\" + R.raw.my_resource\");</pre>
</li>
<li><code>android.resource://package_name/type/name</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>type</code> is the string form of the resource type.  For example, <code>raw</code>
or <code>drawable</code>.
<code>name</code> is the string form of the resource name.  That is, whatever the file
name was in your res directory, without the type extension.
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/raw/my_resource\");</pre>
</li>
</ul>

<p>Note that if this function is called for read-only input (mode is \"r\")
on a content: URI, it will instead call {@link #openTypedAssetFileDescriptor}
for you with a MIME type of \"*&#47;*\".  This allows such callers to benefit
from any built-in data conversion that a provider implements.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openAssetFile
ContentProvider.openAssetFile}.
@param cancellationSignal A signal to cancel the operation in progress, or null if
           none. If the operation is canceled, then
           {@link OperationCanceledException} will be thrown.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
file exists under the URI or the mode is invalid.
"
      end

      operation 77871671 "openTypedAssetFileDescriptor"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a raw file descriptor to access (potentially type transformed)
data from a \"content:\" URI.  This interacts with the underlying
{@link ContentProvider#openTypedAssetFile} method of the provider
associated with the given URI, to retrieve retrieve any appropriate
data stream for the data stored there.

<p>Unlike {@link #openAssetFileDescriptor}, this function only works
with \"content:\" URIs, because content providers are the only facility
with an associated MIME type to ensure that the returned data stream
is of the desired type.

<p>All text/* streams are encoded in UTF-8.

@param uri The desired URI to open.
@param mimeType The desired MIME type of the returned data.  This can
be a pattern such as *&#47;*, which will allow the content provider to
select a type, though there is no way for you to determine what type
it is returning.
@param opts Additional provider-dependent options.
@return Returns a new ParcelFileDescriptor from which you can read the
data stream from the provider.  Note that this may be a pipe, meaning
you can't seek in it.  The only seek you should do is if the
AssetFileDescriptor contains an offset, to move to that offset before
reading.  You own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
data of the desired type exists under the URI.
"
      end

      operation 77871799 "openTypedAssetFileDescriptor"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	  param inout name "cancellationSignal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Open a raw file descriptor to access (potentially type transformed)
data from a \"content:\" URI.  This interacts with the underlying
{@link ContentProvider#openTypedAssetFile} method of the provider
associated with the given URI, to retrieve retrieve any appropriate
data stream for the data stored there.

<p>Unlike {@link #openAssetFileDescriptor}, this function only works
with \"content:\" URIs, because content providers are the only facility
with an associated MIME type to ensure that the returned data stream
is of the desired type.

<p>All text/* streams are encoded in UTF-8.

@param uri The desired URI to open.
@param mimeType The desired MIME type of the returned data.  This can
be a pattern such as *&#47;*, which will allow the content provider to
select a type, though there is no way for you to determine what type
it is returning.
@param opts Additional provider-dependent options.
@param cancellationSignal A signal to cancel the operation in progress,
        or null if none. If the operation is canceled, then
        {@link OperationCanceledException} will be thrown.
@return Returns a new ParcelFileDescriptor from which you can read the
data stream from the provider.  Note that this may be a pipe, meaning
you can't seek in it.  The only seek you should do is if the
AssetFileDescriptor contains an offset, to move to that offset before
reading.  You own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
data of the desired type exists under the URI.
"
      end

      class 7016759 "OpenResourceIdResult"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15148983 // r (<unidirectional association>)
	  relation 15148983 --->
	    a role_name "r" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15148983 // r (<unidirectional association>)
	    b parent class_ref 6923959 // Resources
	end

	attribute 24184247 "id"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 77871927 "getResourceId"
	public return_type class_ref 7016759 // OpenResourceIdResult
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves an android.resource URI to a {@link Resources} and a resource id.

@hide
"
      end

      operation 77872055 "insert"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Inserts a row into a table at the given URL.

If the content provider supports transactions the insertion will be atomic.

@param url The URL of the table to insert into.
@param values The initial values for the newly inserted row. The key is the column name for
              the field. Passing an empty ContentValues will create an empty row.
@return the URL of the newly created row.
"
      end

      operation 77872183 "applyBatch"
	public return_type class_ref 7017015 // ContentProviderResult
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  exception class_ref 7017143 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Applies each of the {@link ContentProviderOperation} objects and returns an array
of their results. Passes through OperationApplicationException, which may be thrown
by the call to {@link ContentProviderOperation#apply}.
If all the applications succeed then a {@link ContentProviderResult} array with the
same number of elements as the operations will be returned. It is implementation-specific
how many, if any, operations will have been successfully applied if a call to
apply results in a {@link OperationApplicationException}.
@param authority the authority of the ContentProvider to which this batch should be applied
@param operations the operations to apply
@return the results of the applications
@throws OperationApplicationException thrown if an application fails.
See {@link ContentProviderOperation#apply} for more information.
@throws RemoteException thrown if a RemoteException is encountered while attempting
  to communicate with a remote provider.
"
      end

      operation 77872311 "bulkInsert"
	public explicit_return_type "int"
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts multiple rows into a table at the given URL.

This function make no guarantees about the atomicity of the insertions.

@param url The URL of the table to insert into.
@param values The initial values for the newly inserted rows. The key is the column name for
              the field. Passing null will create an empty row.
@return the number of newly created rows.
"
      end

      operation 77872439 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "where" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes row(s) specified by a content URI.

If the content provider supports transactions, the deletion will be atomic.

@param url The URL of the row to delete.
@param where A filter to apply to rows before deleting, formatted as an SQL WHERE clause
(excluding the WHERE itself).
@return The number of rows deleted.
"
      end

      operation 77872567 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "where" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update row(s) in a content URI.

If the content provider supports transactions the update will be atomic.

@param uri The URI to modify.
@param values The new field values. The key is the column name for the field.
A null value will remove an existing field value.
@param where A filter to apply to rows before updating, formatted as an SQL WHERE clause
(excluding the WHERE itself).
@return the number of rows updated.
@throws NullPointerException if uri or values are null
"
      end

      operation 77872695 "call"
	public return_type class_ref 6925879 // Bundle
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "method" explicit_type "String"
	  param inout name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Call a provider-defined method.  This can be used to implement
read or write interfaces which are cheaper than using a Cursor and/or
do not fit into the traditional table model.

@param method provider-defined method name to call.  Opaque to
  framework, but must be non-null.
@param arg provider-defined String argument.  May be null.
@param extras provider-defined Bundle argument.  May be null.
@return a result Bundle, possibly null.  Will be null if the ContentProvider
  does not implement call.
@throws NullPointerException if uri or method is null
@throws IllegalArgumentException if uri is not known
"
      end

      operation 77872823 "acquireProvider"
	public return_type class_ref 6991671 // IContentProvider
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content provider for the given content URI.

@param uri The URI to a content provider
@return The ContentProvider for the given URI, or null if no content provider is found.
@hide
"
      end

      operation 77872951 "acquireExistingProvider"
	public return_type class_ref 6991671 // IContentProvider
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content provider for the given content URI if the process
already has a reference on it.

@param uri The URI to a content provider
@return The ContentProvider for the given URI, or null if no content provider is found.
@hide
"
      end

      operation 77873079 "acquireProvider"
	public return_type class_ref 6991671 // IContentProvider
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 77873207 "acquireUnstableProvider"
	public return_type class_ref 6991671 // IContentProvider
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content provider for the given content URI.

@param uri The URI to a content provider
@return The ContentProvider for the given URI, or null if no content provider is found.
@hide
"
      end

      operation 77873335 "acquireUnstableProvider"
	public return_type class_ref 6991671 // IContentProvider
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 77873463 "acquireContentProviderClient"
	public return_type class_ref 7017271 // ContentProviderClient
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
that services the content at uri, starting the provider if necessary. Returns
null if there is no provider associated wih the uri. The caller must indicate that they are
done with the provider by calling {@link ContentProviderClient#release} which will allow
the system to release the provider it it determines that there is no other reason for
keeping it active.
@param uri specifies which provider should be acquired
@return a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
that services the content at uri or null if there isn't one.
"
      end

      operation 77873591 "acquireContentProviderClient"
	public return_type class_ref 7017271 // ContentProviderClient
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
with the authority of name, starting the provider if necessary. Returns
null if there is no provider associated wih the uri. The caller must indicate that they are
done with the provider by calling {@link ContentProviderClient#release} which will allow
the system to release the provider it it determines that there is no other reason for
keeping it active.
@param name specifies which provider should be acquired
@return a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
with the authority of name or null if there isn't one.
"
      end

      operation 77873719 "acquireUnstableContentProviderClient"
	public return_type class_ref 7017271 // ContentProviderClient
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Like {@link #acquireContentProviderClient(Uri)}, but for use when you do
not trust the stability of the target content provider.  This turns off
the mechanism in the platform clean up processes that are dependent on
a content provider if that content provider's process goes away.  Normally
you can safely assume that once you have acquired a provider, you can freely
use it as needed and it won't disappear, even if your process is in the
background.  If using this method, you need to take care to deal with any
failures when communicating with the provider, and be sure to close it
so that it can be re-opened later.  In particular, catching a
{@link android.os.DeadObjectException} from the calls there will let you
know that the content provider has gone away; at that point the current
ContentProviderClient object is invalid, and you should release it.  You
can acquire a new one if you would like to try to restart the provider
and perform new operations on it.
"
      end

      operation 77873847 "acquireUnstableContentProviderClient"
	public return_type class_ref 7017271 // ContentProviderClient
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Like {@link #acquireContentProviderClient(String)}, but for use when you do
not trust the stability of the target content provider.  This turns off
the mechanism in the platform clean up processes that are dependent on
a content provider if that content provider's process goes away.  Normally
you can safely assume that once you have acquired a provider, you can freely
use it as needed and it won't disappear, even if your process is in the
background.  If using this method, you need to take care to deal with any
failures when communicating with the provider, and be sure to close it
so that it can be re-opened later.  In particular, catching a
{@link android.os.DeadObjectException} from the calls there will let you
know that the content provider has gone away; at that point the current
ContentProviderClient object is invalid, and you should release it.  You
can acquire a new one if you would like to try to restart the provider
and perform new operations on it.
"
      end

      operation 77873975 "registerContentObserver"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "notifyForDescendants" explicit_type "boolean"
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register an observer class that gets callbacks when data identified by a
given content URI changes.

@param uri The URI to watch for changes. This can be a specific row URI, or a base URI
for a whole class of content.
@param notifyForDescendants When false, the observer will be notified whenever a
change occurs to the exact URI specified by <code>uri</code> or to one of the
URI's ancestors in the path hierarchy.  When true, the observer will also be notified
whenever a change occurs to the URI's descendants in the path hierarchy.
@param observer The object that receives callbacks when changes occur.
@see #unregisterContentObserver
"
      end

      operation 77874103 "registerContentObserver"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "notifyForDescendents" explicit_type "boolean"
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @UserIdInt ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - designated user version "
      end

      operation 77874231 "unregisterContentObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a change observer.

@param observer The previously registered observer that is no longer needed.
@see #registerContentObserver
"
      end

      operation 77874359 "notifyChange"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers that a row was updated and attempt to sync changes
to the network.
To register, call {@link #registerContentObserver(android.net.Uri , boolean, android.database.ContentObserver) registerContentObserver()}.
By default, CursorAdapter objects will get this notification.

@param uri The uri of the content that was changed.
@param observer The observer that originated the change, may be <code>null</null>.
The observer that originated the change will only receive the notification if it
has requested to receive self-change notifications by implementing
{@link ContentObserver#deliverSelfNotifications()} to return true.
"
      end

      operation 77874487 "notifyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	  param inout name "syncToNetwork" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers that a row was updated.
To register, call {@link #registerContentObserver(android.net.Uri , boolean, android.database.ContentObserver) registerContentObserver()}.
By default, CursorAdapter objects will get this notification.
If syncToNetwork is true, this will attempt to schedule a local sync using the sync
adapter that's registered for the authority of the provided uri. No account will be
passed to the sync adapter, so all matching accounts will be synchronized.

@param uri The uri of the content that was changed.
@param observer The observer that originated the change, may be <code>null</null>.
The observer that originated the change will only receive the notification if it
has requested to receive self-change notifications by implementing
{@link ContentObserver#deliverSelfNotifications()} to return true.
@param syncToNetwork If true, same as {@link #NOTIFY_SYNC_TO_NETWORK}.
@see #requestSync(android.accounts.Account, String, android.os.Bundle)
"
      end

      operation 77874615 "notifyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @NotifyFlags ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers that a row was updated.
To register, call {@link #registerContentObserver(android.net.Uri, boolean, android.database.ContentObserver) registerContentObserver()}.
By default, CursorAdapter objects will get this notification.
If syncToNetwork is true, this will attempt to schedule a local sync using the sync
adapter that's registered for the authority of the provided uri. No account will be
passed to the sync adapter, so all matching accounts will be synchronized.

@param uri The uri of the content that was changed.
@param observer The observer that originated the change, may be <code>null</null>.
The observer that originated the change will only receive the notification if it
has requested to receive self-change notifications by implementing
{@link ContentObserver#deliverSelfNotifications()} to return true.
@param flags Additional flags: {@link #NOTIFY_SYNC_TO_NETWORK}.
@see #requestSync(android.accounts.Account, String, android.os.Bundle)
"
      end

      operation 77874743 "notifyChange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	  param inout name "syncToNetwork" explicit_type "boolean"
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @UserIdInt ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers within the designated user(s) that a row was updated.

@hide
"
      end

      operation 77874871 "notifyChange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "observer" type class_ref 7017399 // ContentObserver
	  param in name "flags" explicit_type "int"
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, @NotifyFlags ${t2} ${p2}, @UserIdInt ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers within the designated user(s) that a row was updated.

@hide
"
      end

      operation 77874999 "takePersistableUriPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take a persistable URI permission grant that has been offered. Once
taken, the permission grant will be remembered across device reboots.
Only URI permissions granted with
{@link Intent#FLAG_GRANT_PERSISTABLE_URI_PERMISSION} can be persisted. If
the grant has already been persisted, taking it again will touch
{@link UriPermission#getPersistedTime()}.

@see #getPersistedUriPermissions()
"
      end

      operation 77875127 "releasePersistableUriPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Intent.AccessUriMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relinquish a persisted URI permission grant. The URI must have been
previously made persistent with
{@link #takePersistableUriPermission(Uri, int)}. Any non-persistent
grants to the calling package will remain intact.

@see #getPersistedUriPermissions()
"
      end

      operation 77875255 "getPersistedUriPermissions"
	public return_type class_ref 6986935 // UriPermission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return list of all URI permission grants that have been persisted by the
calling app. That is, the returned permissions have been granted
<em>to</em> the calling app. Only persistable grants taken with
{@link #takePersistableUriPermission(Uri, int)} are returned.
<p>Note: Some of the returned URIs may not be usable until after the user is unlocked.

@see #takePersistableUriPermission(Uri, int)
@see #releasePersistableUriPermission(Uri, int)
"
      end

      operation 77875383 "getOutgoingPersistedUriPermissions"
	public return_type class_ref 6986935 // UriPermission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return list of all persisted URI permission grants that are hosted by the
calling app. That is, the returned permissions have been granted
<em>from</em> the calling app. Only grants taken with
{@link #takePersistableUriPermission(Uri, int)} are returned.
<p>Note: Some of the returned URIs may not be usable until after the user is unlocked.
"
      end

      operation 77875511 "startSync"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Start an asynchronous sync operation. If you want to monitor the progress
of the sync you may register a SyncObserver. Only values of the following
types may be used in the extras bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>

@param uri the uri of the provider to sync or null to sync all providers.
@param extras any extras to pass to the SyncAdapter.
@deprecated instead use
{@link #requestSync(android.accounts.Account, String, android.os.Bundle)}
"
      end

      operation 77875639 "requestSync"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start an asynchronous sync operation. If you want to monitor the progress
of the sync you may register a SyncObserver. Only values of the following
types may be used in the extras bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>

@param account which account should be synced
@param authority which authority should be synced
@param extras any extras to pass to the SyncAdapter.
"
      end

      operation 77875767 "requestSyncAsUser"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #requestSync(Account, String, Bundle)
@hide
"
      end

      operation 77875895 "requestSync"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 7017527 // SyncRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a sync with the SyncManager. These requests are built using the
{@link SyncRequest.Builder}.
"
      end

      operation 77876023 "validateSyncExtrasBundle"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that only values of the following types are in the Bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>
@param extras the Bundle to check
"
      end

      operation 77876151 "cancelSync"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Cancel any active or pending syncs that match the Uri. If the uri is null then
all syncs will be canceled.

@param uri the uri of the provider to sync or null to sync all providers.
@deprecated instead use {@link #cancelSync(android.accounts.Account, String)}
"
      end

      operation 77876279 "cancelSync"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel any active or pending syncs that match account and authority. The account and
authority can each independently be set to null, which means that syncs with any account
or authority, respectively, will match.

@param account filters the syncs that match by this account
@param authority filters the syncs that match by this authority
"
      end

      operation 77876407 "cancelSyncAsUser"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #cancelSync(Account, String)
@hide
"
      end

      operation 77876535 "getSyncAdapterTypes"
	class_operation public return_type class_ref 7017655 // SyncAdapterType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get information about the SyncAdapters that are known to the system.
@return an array of SyncAdapters that have registered with the system
"
      end

      operation 77876663 "getSyncAdapterTypesAsUser"
	class_operation public return_type class_ref 7017655 // SyncAdapterType
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getSyncAdapterTypes()
@hide
"
      end

      operation 77876791 "getSyncAdapterPackagesForAuthorityAsUser"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, @UserIdInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@TestApi
"
	
	
	
	comment "@hide
Returns the package names of syncadapters that match a given user and authority.
"
      end

      operation 77876919 "getSyncAutomatically"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the provider should be synced when a network tickle is received
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.

@param account the account whose setting we are querying
@param authority the provider whose setting we are querying
@return true if the provider should be synced when a network tickle is received
"
      end

      operation 77877047 "getSyncAutomaticallyAsUser"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getSyncAutomatically(Account, String)
@hide
"
      end

      operation 77877175 "setSyncAutomatically"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "sync" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether or not the provider is synced when it receives a network tickle.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param account the account whose setting we are querying
@param authority the provider whose behavior is being controlled
@param sync true if the provider should be synced when tickles are received for it
"
      end

      operation 77877303 "setSyncAutomaticallyAsUser"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "sync" explicit_type "boolean"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @UserIdInt ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #setSyncAutomatically(Account, String, boolean)
@hide
"
      end

      operation 77877431 "addPeriodicSync"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param in name "pollFrequency" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that a sync should be requested with the specified the account, authority,
and extras at the given frequency. If there is already another periodic sync scheduled
with the account, authority and extras then a new periodic sync won't be added, instead
the frequency of the previous one will be updated.
<p>
These periodic syncs honor the \"syncAutomatically\" and \"masterSyncAutomatically\" settings.
Although these sync are scheduled at the specified frequency, it may take longer for it to
actually be started if other syncs are ahead of it in the sync operation queue. This means
that the actual start time may drift.
<p>
Periodic syncs are not allowed to have any of {@link #SYNC_EXTRAS_DO_NOT_RETRY},
{@link #SYNC_EXTRAS_IGNORE_BACKOFF}, {@link #SYNC_EXTRAS_IGNORE_SETTINGS},
{@link #SYNC_EXTRAS_INITIALIZE}, {@link #SYNC_EXTRAS_FORCE},
{@link #SYNC_EXTRAS_EXPEDITED}, {@link #SYNC_EXTRAS_MANUAL} set to true.
If any are supplied then an {@link IllegalArgumentException} will be thrown.

<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.
<p>The bundle for a periodic sync can be queried by applications with the correct
permissions using
{@link ContentResolver#getPeriodicSyncs(Account account, String provider)}, so no
sensitive data should be transferred here.

@param account the account to specify in the sync
@param authority the provider to specify in the sync request
@param extras extra parameters to go along with the sync request
@param pollFrequency how frequently the sync should be performed, in seconds. A minimum value
                     of 1 hour is enforced.
@throws IllegalArgumentException if an illegal extra was set or if any of the parameters
are null.
"
      end

      operation 77877559 "invalidPeriodicExtras"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Helper function to throw an <code>IllegalArgumentException</code> if any illegal
extras were set for a periodic sync.

@param extras bundle to validate.
"
      end

      operation 77877687 "removePeriodicSync"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a periodic sync. Has no affect if account, authority and extras don't match
an existing periodic sync.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param account the account of the periodic sync to remove
@param authority the provider of the periodic sync to remove
@param extras the extras of the periodic sync to remove
"
      end

      operation 77877815 "cancelSync"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 7017527 // SyncRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the specified sync. This will cancel any pending or active syncs. If the request is
for a periodic sync, this call will remove any future occurrences.
<p>
    If a periodic sync is specified, the caller must hold the permission
    {@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.
</p>
It is possible to cancel a sync using a SyncRequest object that is not the same object
with which you requested the sync. Do so by building a SyncRequest with the same
adapter, frequency, <b>and</b> extras bundle.

@param request SyncRequest object containing information about sync to cancel.
"
      end

      operation 77877943 "getPeriodicSyncs"
	class_operation public return_type class_ref 7017783 // PeriodicSync
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the list of information about the periodic syncs for the given account and authority.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.

@param account the account whose periodic syncs we are querying
@param authority the provider whose periodic syncs we are querying
@return a list of PeriodicSync objects. This list may be empty but will never be null.
"
      end

      operation 77878071 "getIsSyncable"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if this account/provider is syncable.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.
@return >0 if it is syncable, 0 if not, and <0 if the state isn't known yet.
"
      end

      operation 77878199 "getIsSyncableAsUser"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getIsSyncable(Account, String)
@hide
"
      end

      operation 77878327 "setIsSyncable"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "syncable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether this account/provider is syncable.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.
@param syncable >0 denotes syncable, 0 means not syncable, <0 means unknown
"
      end

      operation 77878455 "getMasterSyncAutomatically"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the master auto-sync setting that applies to all the providers and accounts.
If this is false then the per-provider auto-sync setting is ignored.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.

@return the master auto-sync setting that applies to all the providers and accounts
"
      end

      operation 77878583 "getMasterSyncAutomaticallyAsUser"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getMasterSyncAutomatically()
@hide
"
      end

      operation 77878711 "setMasterSyncAutomatically"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sync" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the master auto-sync setting that applies to all the providers and accounts.
If this is false then the per-provider auto-sync setting is ignored.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param sync the master auto-sync setting that applies to all the providers and accounts
"
      end

      operation 77878839 "setMasterSyncAutomaticallyAsUser"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sync" explicit_type "boolean"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @UserIdInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #setMasterSyncAutomatically(boolean)
@hide
"
      end

      operation 77878967 "isSyncActive"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is currently a sync operation for the given account or authority
actively being processed.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
@param account the account whose setting we are querying
@param authority the provider whose behavior is being queried
@return true if a sync is active for the given account or authority.
"
      end

      operation 77879095 "getCurrentSync"
	class_operation public return_type class_ref 7017911 // SyncInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "If a sync is active returns the information about it, otherwise returns null.
<p>
This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
<p>
@return the SyncInfo for the currently active sync or null if one is not active.
@deprecated
Since multiple concurrent syncs are now supported you should use
{@link #getCurrentSyncs()} to get the accurate list of current syncs.
This method returns the first item from the list of current syncs
or null if there are none.
"
      end

      operation 77879223 "getCurrentSyncs"
	class_operation public return_type class_ref 7017911 // SyncInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list with information about all the active syncs. This list will be empty
if there are no active syncs.
<p>
This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
<p>
@return a List of SyncInfo objects for the currently active syncs.
"
      end

      operation 77879351 "getCurrentSyncsAsUser"
	class_operation public return_type class_ref 7017911 // SyncInfo
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getCurrentSyncs()
@hide
"
      end

      operation 77879479 "getSyncStatus"
	class_operation public return_type class_ref 7018039 // SyncStatusInfo
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status that matches the authority.
@param account the account whose setting we are querying
@param authority the provider whose behavior is being queried
@return the SyncStatusInfo for the authority, or null if none exists
@hide
"
      end

      operation 77879607 "getSyncStatusAsUser"
	class_operation public return_type class_ref 7018039 // SyncStatusInfo
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getSyncStatus(Account, String)
@hide
"
      end

      operation 77879735 "isSyncPending"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the pending status is true of any matching authorities.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
@param account the account whose setting we are querying
@param authority the provider whose behavior is being queried
@return true if there is a pending sync with the matching account and authority
"
      end

      operation 77879863 "isSyncPendingAsUser"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #requestSync(Account, String, Bundle)
@hide
"
      end

      operation 77879991 "addStatusChangeListener"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param in name "mask" explicit_type "int"
	  param in name "callback" type class_ref 7018167 // SyncStatusObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request notifications when the different aspects of the SyncManager change. The
different items that can be requested are:
<ul>
<li> {@link #SYNC_OBSERVER_TYPE_PENDING}
<li> {@link #SYNC_OBSERVER_TYPE_ACTIVE}
<li> {@link #SYNC_OBSERVER_TYPE_SETTINGS}
</ul>
The caller can set one or more of the status types in the mask for any
given listener registration.
@param mask the status change types that will cause the callback to be invoked
@param callback observer to be invoked when the status changes
@return a handle that can be used to remove the listener at a later time
"
      end

      operation 77880119 "removeStatusChangeListener"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "handle" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a previously registered status change listener.
@param handle the handle that was returned by {@link #addStatusChangeListener}
"
      end

      operation 77880247 "putCache"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 6927159 // Uri
	  param inout name "value" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 77880375 "getCache"
	public return_type class_ref 6925879 // Bundle
	nparams 1
	  param inout name "key" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 77880503 "samplePercentForDuration"
	private explicit_return_type "int"
	nparams 1
	  param in name "durationMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns sampling percentage for a given duration.

Always returns at least 1%.
"
      end

      operation 77880631 "maybeLogQueryToEventLog"
	private explicit_return_type "void"
	nparams 5
	  param in name "durationMillis" explicit_type "long"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77880759 "maybeLogUpdateToEventLog"
	private explicit_return_type "void"
	nparams 4
	  param in name "durationMillis" explicit_type "long"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "operation" explicit_type "String"
	  param inout name "selection" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7018295 "CursorWrapperInner"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15149879 // <generalisation>
	  relation 15149879 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15149879 // <generalisation>
	    b parent class_ref 7018423 // CrossProcessCursorWrapper
	end

	classrelation 15150007 // mContentProvider (<unidirectional association>)
	  relation 15150007 --->
	    a role_name "mContentProvider" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15150007 // mContentProvider (<unidirectional association>)
	    b parent class_ref 6991671 // IContentProvider
	end

	attribute 24185015 "mProviderReleased"
	  const_attribute private explicit_type "AtomicBoolean"
	  init_value " new AtomicBoolean()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24185143 "mCloseGuard"
	  const_attribute private explicit_type "CloseGuard"
	  init_value " CloseGuard.get()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 77892535 "CursorWrapperInner"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "cursor" type class_ref 6954295 // Cursor
	    param inout name "contentProvider" type class_ref 6991671 // IContentProvider
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 77892663 "close"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 77892791 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7019191 "ParcelFileDescriptorInner"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15151671 // <generalisation>
	  relation 15151671 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15151671 // <generalisation>
	    b parent class_ref 6986295 // ParcelFileDescriptor
	end

	classrelation 15151799 // mContentProvider (<unidirectional association>)
	  relation 15151799 --->
	    a role_name "mContentProvider" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15151799 // mContentProvider (<unidirectional association>)
	    b parent class_ref 6991671 // IContentProvider
	end

	attribute 24188087 "mProviderReleased"
	  const_attribute private explicit_type "AtomicBoolean"
	  init_value " new AtomicBoolean()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 77899703 "ParcelFileDescriptorInner"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "pfd" type class_ref 6986295 // ParcelFileDescriptor
	    param inout name "icp" type class_ref 6991671 // IContentProvider
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 77899831 "releaseResources"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 77899959 "getContentService"
	class_operation public return_type class_ref 7020343 // IContentService
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77900087 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      classrelation 15152055 // sContentService (<unidirectional association>)
	relation 15152055 --->
	  a role_name "sContentService" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15152055 // sContentService (<unidirectional association>)
	  b parent class_ref 7020343 // IContentService
      end

      classrelation 15152183 // mContext (<unidirectional association>)
	relation 15152183 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15152183 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 77900215 "resolveUserId"
	public explicit_return_type "int"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 6924343 "ComponentCallbacks"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The set of callback APIs that are common to all application components
({@link android.app.Activity}, {@link android.app.Service},
{@link ContentProvider}, and {@link android.app.Application}).

<p class=\"note\"><strong>Note:</strong> You should also implement the {@link
ComponentCallbacks2} interface, which provides the {@link
ComponentCallbacks2#onTrimMemory} callback to help your app manage its memory usage more
effectively.</p>
"
      operation 77054519 "onConfigurationChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" type class_ref 6927543 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the system when the device configuration changes while your
component is running.  Note that, unlike activities, other components
are never restarted when a configuration changes: they must always deal
with the results of the change, such as by re-retrieving resources.

<p>At the time that this function has been called, your Resources
object will have been updated to return resource values matching the
new configuration.

<p>For more information, read <a href=\"{@docRoot}guide/topics/resources/runtime-changes.html\"
>Handling Runtime Changes</a>.

@param newConfig The new device configuration.
"
      end

      operation 77054647 "onLowMemory"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called when the overall system is running low on memory, and
actively running processes should trim their memory usage.  While
the exact point at which this will be called is not defined, generally
it will happen when all background process have been killed.
That is, before reaching the point of killing processes hosting
service and foreground UI that we would like to avoid killing.

<p>You should implement this method to release
any caches or other unnecessary resources you may be holding on to.
The system will perform a garbage collection for you after returning from this method.
<p>Preferably, you should implement {@link ComponentCallbacks2#onTrimMemory} from
{@link ComponentCallbacks2} to incrementally unload your resources based on various
levels of memory demands.  That API is available for API level 14 and higher, so you should
only use this {@link #onLowMemory} method as a fallback for older versions, which can be
treated the same as {@link ComponentCallbacks2#onTrimMemory} with the {@link
ComponentCallbacks2#TRIM_MEMORY_COMPLETE} level.</p>
"
      end
    end

    class 6925111 "SharedPreferences"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for accessing and modifying preference data returned by {@link
Context#getSharedPreferences}.  For any particular set of preferences,
there is a single instance of this class that all clients share.
Modifications to the preferences must go through an {@link Editor} object
to ensure the preference values remain in a consistent state and control
when they are committed to storage.  Objects that are returned from the
various <code>get</code> methods must be treated as immutable by the application.

<p><em>Note: This class does not support use across multiple processes.</em>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using SharedPreferences, read the
<a href=\"{@docRoot}guide/topics/data/data-storage.html#pref\">Data Storage</a>
developer guide.</p></div>

@see Context#getSharedPreferences
"
      class 7053367 "OnSharedPreferenceChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78214455 "onSharedPreferenceChanged"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "sharedPreferences" type class_ref 6925111 // SharedPreferences
	    param inout name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a shared preference is changed, added, or removed. This
may be called even if a preference is set to its existing value.

<p>This callback will be run on your main thread.

@param sharedPreferences The {@link SharedPreferences} that received
           the change.
@param key The key of the preference that was changed, added, or
           removed.
"
	end
      end

      class 7053495 "Editor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78214583 "putString"
	  public return_type class_ref 7053495 // Editor
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param inout name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a String value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78214711 "putStringSet"
	  public return_type class_ref 7053495 // Editor
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param inout name "values" explicit_type "Set<String>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a set of String values in the preferences editor, to be written
back once {@link #commit} or {@link #apply} is called.

@param key The name of the preference to modify.
@param values The set of new values for the preference.  Passing {@code null}
   for this argument is equivalent to calling {@link #remove(String)} with
   this key.
@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78214839 "putInt"
	  public return_type class_ref 7053495 // Editor
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set an int value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78214967 "putLong"
	  public return_type class_ref 7053495 // Editor
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param in name "value" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a long value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78215095 "putFloat"
	  public return_type class_ref 7053495 // Editor
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param in name "value" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a float value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78215223 "putBoolean"
	  public return_type class_ref 7053495 // Editor
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param inout name "value" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a boolean value in the preferences editor, to be written back
once {@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78215351 "remove"
	  public return_type class_ref 7053495 // Editor
	  nparams 1
	    param inout name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Mark in the editor that a preference value should be removed, which
will be done in the actual preferences once {@link #commit} is
called.

<p>Note that when committing back to the preferences, all removals
are done first, regardless of whether you called remove before
or after put methods on this editor.

@param key The name of the preference to remove.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78215479 "clear"
	  public return_type class_ref 7053495 // Editor
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Mark in the editor to remove <em>all</em> values from the
preferences.  Once commit is called, the only remaining preferences
will be any that you have defined in this editor.

<p>Note that when committing back to the preferences, the clear
is done first, regardless of whether you called clear before
or after put methods on this editor.

@return Returns a reference to the same Editor object, so you can
chain put calls together.
"
	end

	operation 78215607 "commit"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Commit your preferences changes back from this Editor to the
{@link SharedPreferences} object it is editing.  This atomically
performs the requested modifications, replacing whatever is currently
in the SharedPreferences.

<p>Note that when two editors are modifying preferences at the same
time, the last one to call commit wins.

<p>If you don't care about the return value and you're
using this from your application's main thread, consider
using {@link #apply} instead.

@return Returns true if the new values were successfully written
to persistent storage.
"
	end

	operation 78215735 "apply"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Commit your preferences changes back from this Editor to the
{@link SharedPreferences} object it is editing.  This atomically
performs the requested modifications, replacing whatever is currently
in the SharedPreferences.

<p>Note that when two editors are modifying preferences at the same
time, the last one to call apply wins.

<p>Unlike {@link #commit}, which writes its preferences out
to persistent storage synchronously, {@link #apply}
commits its changes to the in-memory
{@link SharedPreferences} immediately but starts an
asynchronous commit to disk and you won't be notified of
any failures.  If another editor on this
{@link SharedPreferences} does a regular {@link #commit}
while a {@link #apply} is still outstanding, the
{@link #commit} will block until all async commits are
completed as well as the commit itself.

<p>As {@link SharedPreferences} instances are singletons within
a process, it's safe to replace any instance of {@link #commit} with
{@link #apply} if you were already ignoring the return value.

<p>You don't need to worry about Android component
lifecycles and their interaction with <code>apply()</code>
writing to disk.  The framework makes sure in-flight disk
writes from <code>apply()</code> complete before switching
states.

<p class='note'>The SharedPreferences.Editor interface
isn't expected to be implemented directly.  However, if you
previously did implement it and are now getting errors
about missing <code>apply()</code>, you can simply call
{@link #commit} from <code>apply()</code>.
"
	end
      end

      operation 78215863 "getAll"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, ?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve all values from the preferences.

<p>Note that you <em>must not</em> modify the collection returned
by this method, or alter any of its contents.  The consistency of your
stored data is not guaranteed if you do.

@return Returns a map containing a list of pairs key/value representing
the preferences.

@throws NullPointerException
"
      end

      operation 78215991 "getString"
	public explicit_return_type "String"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "defValue" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Retrieve a String value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a String.

@throws ClassCastException
"
      end

      operation 78216119 "getStringSet"
	public explicit_return_type "String"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "defValues" explicit_type "Set<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Retrieve a set of String values from the preferences.

<p>Note that you <em>must not</em> modify the set instance returned
by this call.  The consistency of the stored data is not guaranteed
if you do, nor is your ability to modify the instance at all.

@param key The name of the preference to retrieve.
@param defValues Values to return if this preference does not exist.

@return Returns the preference values if they exist, or defValues.
Throws ClassCastException if there is a preference with this name
that is not a Set.

@throws ClassCastException
"
      end

      operation 78216247 "getInt"
	public explicit_return_type "int"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param in name "defValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an int value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
an int.

@throws ClassCastException
"
      end

      operation 78216375 "getLong"
	public explicit_return_type "long"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param in name "defValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a long value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a long.

@throws ClassCastException
"
      end

      operation 78216503 "getFloat"
	public explicit_return_type "float"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param in name "defValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a float value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a float.

@throws ClassCastException
"
      end

      operation 78216631 "getBoolean"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "defValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a boolean value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a boolean.

@throws ClassCastException
"
      end

      operation 78216759 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the preferences contains a preference.

@param key The name of the preference to check.
@return Returns true if the preference exists in the preferences,
        otherwise false.
"
      end

      operation 78216887 "edit"
	public return_type class_ref 7053495 // Editor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new Editor for these preferences, through which you can make
modifications to the data in the preferences and atomically commit those
changes back to the SharedPreferences object.

<p>Note that you <em>must</em> call {@link Editor#commit} to have any
changes you perform in the Editor actually show up in the
SharedPreferences.

@return Returns a new instance of the {@link Editor} interface, allowing
you to modify the values in this SharedPreferences object.
"
      end

      operation 78217015 "registerOnSharedPreferenceChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 7053367 // OnSharedPreferenceChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a callback to be invoked when a change happens to a preference.

<p class=\"caution\"><strong>Caution:</strong> The preference manager does
not currently store a strong reference to the listener. You must store a
strong reference to the listener, or it will be susceptible to garbage
collection. We recommend you keep a reference to the listener in the
instance data of an object that will exist as long as you need the
listener.</p>

@param listener The callback that will run.
@see #unregisterOnSharedPreferenceChangeListener
"
      end

      operation 78217143 "unregisterOnSharedPreferenceChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 7053367 // OnSharedPreferenceChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a previous callback.

@param listener The callback that should be unregistered.
@see #registerOnSharedPreferenceChangeListener
"
      end
    end

    class 6925623 "Intent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An intent is an abstract description of an operation to be performed.  It
can be used with {@link Context#startActivity(Intent) startActivity} to
launch an {@link android.app.Activity},
{@link android.content.Context#sendBroadcast(Intent) broadcastIntent} to
send it to any interested {@link BroadcastReceiver BroadcastReceiver} components,
and {@link android.content.Context#startService} or
{@link android.content.Context#bindService} to communicate with a
background {@link android.app.Service}.

<p>An Intent provides a facility for performing late runtime binding between the code in
different applications. Its most significant use is in the launching of activities, where it
can be thought of as the glue between activities. It is basically a passive data structure
holding an abstract description of an action to be performed.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about how to create and resolve intents, read the
<a href=\"{@docRoot}guide/topics/intents/intents-filters.html\">Intents and Intent Filters</a>
developer guide.</p>
</div>

<a name=\"IntentStructure\"></a>
<h3>Intent Structure</h3>
<p>The primary pieces of information in an intent are:</p>

<ul>
  <li> <p><b>action</b> -- The general action to be performed, such as
    {@link #ACTION_VIEW}, {@link #ACTION_EDIT}, {@link #ACTION_MAIN},
    etc.</p>
  </li>
  <li> <p><b>data</b> -- The data to operate on, such as a person record
    in the contacts database, expressed as a {@link android.net.Uri}.</p>
  </li>
</ul>


<p>Some examples of action/data pairs are:</p>

<ul>
  <li> <p><b>{@link #ACTION_VIEW} <i>content://contacts/people/1</i></b> -- Display
    information about the person whose identifier is \"1\".</p>
  </li>
  <li> <p><b>{@link #ACTION_DIAL} <i>content://contacts/people/1</i></b> -- Display
    the phone dialer with the person filled in.</p>
  </li>
  <li> <p><b>{@link #ACTION_VIEW} <i>tel:123</i></b> -- Display
    the phone dialer with the given number filled in.  Note how the
    VIEW action does what is considered the most reasonable thing for
    a particular URI.</p>
  </li>
  <li> <p><b>{@link #ACTION_DIAL} <i>tel:123</i></b> -- Display
    the phone dialer with the given number filled in.</p>
  </li>
  <li> <p><b>{@link #ACTION_EDIT} <i>content://contacts/people/1</i></b> -- Edit
    information about the person whose identifier is \"1\".</p>
  </li>
  <li> <p><b>{@link #ACTION_VIEW} <i>content://contacts/people/</i></b> -- Display
    a list of people, which the user can browse through.  This example is a
    typical top-level entry into the Contacts application, showing you the
    list of people. Selecting a particular person to view would result in a
    new intent { <b>{@link #ACTION_VIEW} <i>content://contacts/N</i></b> }
    being used to start an activity to display that person.</p>
  </li>
</ul>

<p>In addition to these primary attributes, there are a number of secondary
attributes that you can also include with an intent:</p>

<ul>
    <li> <p><b>category</b> -- Gives additional information about the action
        to execute.  For example, {@link #CATEGORY_LAUNCHER} means it should
        appear in the Launcher as a top-level application, while
        {@link #CATEGORY_ALTERNATIVE} means it should be included in a list
        of alternative actions the user can perform on a piece of data.</p>
    <li> <p><b>type</b> -- Specifies an explicit type (a MIME type) of the
        intent data.  Normally the type is inferred from the data itself.
        By setting this attribute, you disable that evaluation and force
        an explicit type.</p>
    <li> <p><b>component</b> -- Specifies an explicit name of a component
        class to use for the intent.  Normally this is determined by looking
        at the other information in the intent (the action, data/type, and
        categories) and matching that with a component that can handle it.
        If this attribute is set then none of the evaluation is performed,
        and this component is used exactly as is.  By specifying this attribute,
        all of the other Intent attributes become optional.</p>
    <li> <p><b>extras</b> -- This is a {@link Bundle} of any additional information.
        This can be used to provide extended information to the component.
        For example, if we have a action to send an e-mail message, we could
        also include extra pieces of data here to supply a subject, body,
        etc.</p>
</ul>

<p>Here are some examples of other operations you can specify as intents
using these additional parameters:</p>

<ul>
  <li> <p><b>{@link #ACTION_MAIN} with category {@link #CATEGORY_HOME}</b> --
    Launch the home screen.</p>
  </li>
  <li> <p><b>{@link #ACTION_GET_CONTENT} with MIME type
    <i>{@link android.provider.Contacts.Phones#CONTENT_URI
    vnd.android.cursor.item/phone}</i></b>
    -- Display the list of people's phone numbers, allowing the user to
    browse through them and pick one and return it to the parent activity.</p>
  </li>
  <li> <p><b>{@link #ACTION_GET_CONTENT} with MIME type
    <i>*{@literal /}*</i> and category {@link #CATEGORY_OPENABLE}</b>
    -- Display all pickers for data that can be opened with
    {@link ContentResolver#openInputStream(Uri) ContentResolver.openInputStream()},
    allowing the user to pick one of them and then some data inside of it
    and returning the resulting URI to the caller.  This can be used,
    for example, in an e-mail application to allow the user to pick some
    data to include as an attachment.</p>
  </li>
</ul>

<p>There are a variety of standard Intent action and category constants
defined in the Intent class, but applications can also define their own.
These strings use Java-style scoping, to ensure they are unique -- for
example, the standard {@link #ACTION_VIEW} is called
\"android.intent.action.VIEW\".</p>

<p>Put together, the set of actions, data types, categories, and extra data
defines a language for the system allowing for the expression of phrases
such as \"call john smith's cell\".  As applications are added to the system,
they can extend this language by adding new actions, types, and categories, or
they can modify the behavior of existing phrases by supplying their own
activities that handle them.</p>

<a name=\"IntentResolution\"></a>
<h3>Intent Resolution</h3>

<p>There are two primary forms of intents you will use.

<ul>
    <li> <p><b>Explicit Intents</b> have specified a component (via
    {@link #setComponent} or {@link #setClass}), which provides the exact
    class to be run.  Often these will not include any other information,
    simply being a way for an application to launch various internal
    activities it has as the user interacts with the application.

    <li> <p><b>Implicit Intents</b> have not specified a component;
    instead, they must include enough information for the system to
    determine which of the available components is best to run for that
    intent.
</ul>

<p>When using implicit intents, given such an arbitrary intent we need to
know what to do with it. This is handled by the process of <em>Intent
resolution</em>, which maps an Intent to an {@link android.app.Activity},
{@link BroadcastReceiver}, or {@link android.app.Service} (or sometimes two or
more activities/receivers) that can handle it.</p>

<p>The intent resolution mechanism basically revolves around matching an
Intent against all of the &lt;intent-filter&gt; descriptions in the
installed application packages.  (Plus, in the case of broadcasts, any {@link BroadcastReceiver}
objects explicitly registered with {@link Context#registerReceiver}.)  More
details on this can be found in the documentation on the {@link
IntentFilter} class.</p>

<p>There are three pieces of information in the Intent that are used for
resolution: the action, type, and category.  Using this information, a query
is done on the {@link PackageManager} for a component that can handle the
intent. The appropriate component is determined based on the intent
information supplied in the <code>AndroidManifest.xml</code> file as
follows:</p>

<ul>
    <li> <p>The <b>action</b>, if given, must be listed by the component as
        one it handles.</p>
    <li> <p>The <b>type</b> is retrieved from the Intent's data, if not
        already supplied in the Intent.  Like the action, if a type is
        included in the intent (either explicitly or implicitly in its
        data), then this must be listed by the component as one it handles.</p>
    <li> For data that is not a <code>content:</code> URI and where no explicit
        type is included in the Intent, instead the <b>scheme</b> of the
        intent data (such as <code>http:</code> or <code>mailto:</code>) is
        considered. Again like the action, if we are matching a scheme it
        must be listed by the component as one it can handle.
    <li> <p>The <b>categories</b>, if supplied, must <em>all</em> be listed
        by the activity as categories it handles.  That is, if you include
        the categories {@link #CATEGORY_LAUNCHER} and
        {@link #CATEGORY_ALTERNATIVE}, then you will only resolve to components
        with an intent that lists <em>both</em> of those categories.
        Activities will very often need to support the
        {@link #CATEGORY_DEFAULT} so that they can be found by
        {@link Context#startActivity Context.startActivity()}.</p>
</ul>

<p>For example, consider the Note Pad sample application that
allows user to browse through a list of notes data and view details about
individual items.  Text in italics indicate places were you would replace a
name with one specific to your own package.</p>

<pre> &lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"
      package=\"<i>com.android.notepad</i>\"&gt;
    &lt;application android:icon=\"@drawable/app_notes\"
            android:label=\"@string/app_name\"&gt;

        &lt;provider class=\".NotePadProvider\"
                android:authorities=\"<i>com.google.provider.NotePad</i>\" /&gt;

        &lt;activity class=\".NotesList\" android:label=\"@string/title_notes_list\"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.MAIN\" /&gt;
                &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;
            &lt;/intent-filter&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.VIEW\" /&gt;
                &lt;action android:name=\"android.intent.action.EDIT\" /&gt;
                &lt;action android:name=\"android.intent.action.PICK\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.GET_CONTENT\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;

        &lt;activity class=\".NoteEditor\" android:label=\"@string/title_note\"&gt;
            &lt;intent-filter android:label=\"@string/resolve_edit\"&gt;
                &lt;action android:name=\"android.intent.action.VIEW\" /&gt;
                &lt;action android:name=\"android.intent.action.EDIT\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;

            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.INSERT\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;

        &lt;/activity&gt;

        &lt;activity class=\".TitleEditor\" android:label=\"@string/title_edit_title\"
                android:theme=\"@android:style/Theme.Dialog\"&gt;
            &lt;intent-filter android:label=\"@string/resolve_title\"&gt;
                &lt;action android:name=\"<i>com.android.notepad.action.EDIT_TITLE</i>\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;category android:name=\"android.intent.category.ALTERNATIVE\" /&gt;
                &lt;category android:name=\"android.intent.category.SELECTED_ALTERNATIVE\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;

    &lt;/application&gt;
&lt;/manifest&gt;</pre>

<p>The first activity,
<code>com.android.notepad.NotesList</code>, serves as our main
entry into the app.  It can do three things as described by its three intent
templates:
<ol>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_MAIN android.intent.action.MAIN}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_LAUNCHER android.intent.category.LAUNCHER}\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>This provides a top-level entry into the NotePad application: the standard
MAIN action is a main entry point (not requiring any other information in
the Intent), and the LAUNCHER category says that this entry point should be
listed in the application launcher.</p>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_VIEW android.intent.action.VIEW}\" /&gt;
    &lt;action android:name=\"{@link #ACTION_EDIT android.intent.action.EDIT}\" /&gt;
    &lt;action android:name=\"{@link #ACTION_PICK android.intent.action.PICK}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>This declares the things that the activity can do on a directory of
notes.  The type being supported is given with the &lt;type&gt; tag, where
<code>vnd.android.cursor.dir/vnd.google.note</code> is a URI from which
a Cursor of zero or more items (<code>vnd.android.cursor.dir</code>) can
be retrieved which holds our note pad data (<code>vnd.google.note</code>).
The activity allows the user to view or edit the directory of data (via
the VIEW and EDIT actions), or to pick a particular note and return it
to the caller (via the PICK action).  Note also the DEFAULT category
supplied here: this is <em>required</em> for the
{@link Context#startActivity Context.startActivity} method to resolve your
activity when its component name is not explicitly specified.</p>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_GET_CONTENT android.intent.action.GET_CONTENT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>This filter describes the ability to return to the caller a note selected by
the user without needing to know where it came from.  The data type
<code>vnd.android.cursor.item/vnd.google.note</code> is a URI from which
a Cursor of exactly one (<code>vnd.android.cursor.item</code>) item can
be retrieved which contains our note pad data (<code>vnd.google.note</code>).
The GET_CONTENT action is similar to the PICK action, where the activity
will return to its caller a piece of data selected by the user.  Here,
however, the caller specifies the type of data they desire instead of
the type of data the user will be picking from.</p>
</ol>

<p>Given these capabilities, the following intents will resolve to the
NotesList activity:</p>

<ul>
    <li> <p><b>{ action=android.app.action.MAIN }</b> matches all of the
        activities that can be used as top-level entry points into an
        application.</p>
    <li> <p><b>{ action=android.app.action.MAIN,
        category=android.app.category.LAUNCHER }</b> is the actual intent
        used by the Launcher to populate its top-level list.</p>
    <li> <p><b>{ action=android.intent.action.VIEW
         data=content://com.google.provider.NotePad/notes }</b>
        displays a list of all the notes under
        \"content://com.google.provider.NotePad/notes\", which
        the user can browse through and see the details on.</p>
    <li> <p><b>{ action=android.app.action.PICK
         data=content://com.google.provider.NotePad/notes }</b>
        provides a list of the notes under
        \"content://com.google.provider.NotePad/notes\", from which
        the user can pick a note whose data URL is returned back to the caller.</p>
    <li> <p><b>{ action=android.app.action.GET_CONTENT
         type=vnd.android.cursor.item/vnd.google.note }</b>
        is similar to the pick action, but allows the caller to specify the
        kind of data they want back so that the system can find the appropriate
        activity to pick something of that data type.</p>
</ul>

<p>The second activity,
<code>com.android.notepad.NoteEditor</code>, shows the user a single
note entry and allows them to edit it.  It can do two things as described
by its two intent templates:
<ol>
<li><pre>
&lt;intent-filter android:label=\"@string/resolve_edit\"&gt;
    &lt;action android:name=\"{@link #ACTION_VIEW android.intent.action.VIEW}\" /&gt;
    &lt;action android:name=\"{@link #ACTION_EDIT android.intent.action.EDIT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>The first, primary, purpose of this activity is to let the user interact
with a single note, as decribed by the MIME type
<code>vnd.android.cursor.item/vnd.google.note</code>.  The activity can
either VIEW a note or allow the user to EDIT it.  Again we support the
DEFAULT category to allow the activity to be launched without explicitly
specifying its component.</p>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_INSERT android.intent.action.INSERT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>The secondary use of this activity is to insert a new note entry into
an existing directory of notes.  This is used when the user creates a new
note: the INSERT action is executed on the directory of notes, causing
this activity to run and have the user create the new note data which
it then adds to the content provider.</p>
</ol>

<p>Given these capabilities, the following intents will resolve to the
NoteEditor activity:</p>

<ul>
    <li> <p><b>{ action=android.intent.action.VIEW
         data=content://com.google.provider.NotePad/notes/<var>{ID}</var> }</b>
        shows the user the content of note <var>{ID}</var>.</p>
    <li> <p><b>{ action=android.app.action.EDIT
         data=content://com.google.provider.NotePad/notes/<var>{ID}</var> }</b>
        allows the user to edit the content of note <var>{ID}</var>.</p>
    <li> <p><b>{ action=android.app.action.INSERT
         data=content://com.google.provider.NotePad/notes }</b>
        creates a new, empty note in the notes list at
        \"content://com.google.provider.NotePad/notes\"
        and allows the user to edit it.  If they keep their changes, the URI
        of the newly created note is returned to the caller.</p>
</ul>

<p>The last activity,
<code>com.android.notepad.TitleEditor</code>, allows the user to
edit the title of a note.  This could be implemented as a class that the
application directly invokes (by explicitly setting its component in
the Intent), but here we show a way you can publish alternative
operations on existing data:</p>

<pre>
&lt;intent-filter android:label=\"@string/resolve_title\"&gt;
    &lt;action android:name=\"<i>com.android.notepad.action.EDIT_TITLE</i>\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_ALTERNATIVE android.intent.category.ALTERNATIVE}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_SELECTED_ALTERNATIVE android.intent.category.SELECTED_ALTERNATIVE}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>

<p>In the single intent template here, we
have created our own private action called
<code>com.android.notepad.action.EDIT_TITLE</code> which means to
edit the title of a note.  It must be invoked on a specific note
(data type <code>vnd.android.cursor.item/vnd.google.note</code>) like the previous
view and edit actions, but here displays and edits the title contained
in the note data.

<p>In addition to supporting the default category as usual, our title editor
also supports two other standard categories: ALTERNATIVE and
SELECTED_ALTERNATIVE.  Implementing
these categories allows others to find the special action it provides
without directly knowing about it, through the
{@link android.content.pm.PackageManager#queryIntentActivityOptions} method, or
more often to build dynamic menu items with
{@link android.view.Menu#addIntentOptions}.  Note that in the intent
template here was also supply an explicit name for the template
(via <code>android:label=\"@string/resolve_title\"</code>) to better control
what the user sees when presented with this activity as an alternative
action to the data they are viewing.

<p>Given these capabilities, the following intent will resolve to the
TitleEditor activity:</p>

<ul>
    <li> <p><b>{ action=com.android.notepad.action.EDIT_TITLE
         data=content://com.google.provider.NotePad/notes/<var>{ID}</var> }</b>
        displays and allows the user to edit the title associated
        with note <var>{ID}</var>.</p>
</ul>

<h3>Standard Activity Actions</h3>

<p>These are the current standard actions that Intent defines for launching
activities (usually through {@link Context#startActivity}.  The most
important, and by far most frequently used, are {@link #ACTION_MAIN} and
{@link #ACTION_EDIT}.

<ul>
    <li> {@link #ACTION_MAIN}
    <li> {@link #ACTION_VIEW}
    <li> {@link #ACTION_ATTACH_DATA}
    <li> {@link #ACTION_EDIT}
    <li> {@link #ACTION_PICK}
    <li> {@link #ACTION_CHOOSER}
    <li> {@link #ACTION_GET_CONTENT}
    <li> {@link #ACTION_DIAL}
    <li> {@link #ACTION_CALL}
    <li> {@link #ACTION_SEND}
    <li> {@link #ACTION_SENDTO}
    <li> {@link #ACTION_ANSWER}
    <li> {@link #ACTION_INSERT}
    <li> {@link #ACTION_DELETE}
    <li> {@link #ACTION_RUN}
    <li> {@link #ACTION_SYNC}
    <li> {@link #ACTION_PICK_ACTIVITY}
    <li> {@link #ACTION_SEARCH}
    <li> {@link #ACTION_WEB_SEARCH}
    <li> {@link #ACTION_FACTORY_TEST}
</ul>

<h3>Standard Broadcast Actions</h3>

<p>These are the current standard actions that Intent defines for receiving
broadcasts (usually through {@link Context#registerReceiver} or a
&lt;receiver&gt; tag in a manifest).

<ul>
    <li> {@link #ACTION_TIME_TICK}
    <li> {@link #ACTION_TIME_CHANGED}
    <li> {@link #ACTION_TIMEZONE_CHANGED}
    <li> {@link #ACTION_BOOT_COMPLETED}
    <li> {@link #ACTION_PACKAGE_ADDED}
    <li> {@link #ACTION_PACKAGE_CHANGED}
    <li> {@link #ACTION_PACKAGE_REMOVED}
    <li> {@link #ACTION_PACKAGE_RESTARTED}
    <li> {@link #ACTION_PACKAGE_DATA_CLEARED}
    <li> {@link #ACTION_PACKAGES_SUSPENDED}
    <li> {@link #ACTION_PACKAGES_UNSUSPENDED}
    <li> {@link #ACTION_UID_REMOVED}
    <li> {@link #ACTION_BATTERY_CHANGED}
    <li> {@link #ACTION_POWER_CONNECTED}
    <li> {@link #ACTION_POWER_DISCONNECTED}
    <li> {@link #ACTION_SHUTDOWN}
</ul>

<h3>Standard Categories</h3>

<p>These are the current standard categories that can be used to further
clarify an Intent via {@link #addCategory}.

<ul>
    <li> {@link #CATEGORY_DEFAULT}
    <li> {@link #CATEGORY_BROWSABLE}
    <li> {@link #CATEGORY_TAB}
    <li> {@link #CATEGORY_ALTERNATIVE}
    <li> {@link #CATEGORY_SELECTED_ALTERNATIVE}
    <li> {@link #CATEGORY_LAUNCHER}
    <li> {@link #CATEGORY_INFO}
    <li> {@link #CATEGORY_HOME}
    <li> {@link #CATEGORY_PREFERENCE}
    <li> {@link #CATEGORY_TEST}
    <li> {@link #CATEGORY_CAR_DOCK}
    <li> {@link #CATEGORY_DESK_DOCK}
    <li> {@link #CATEGORY_LE_DESK_DOCK}
    <li> {@link #CATEGORY_HE_DESK_DOCK}
    <li> {@link #CATEGORY_CAR_MODE}
    <li> {@link #CATEGORY_APP_MARKET}
</ul>

<h3>Standard Extra Data</h3>

<p>These are the current standard fields that can be used as extra data via
{@link #putExtra}.

<ul>
    <li> {@link #EXTRA_ALARM_COUNT}
    <li> {@link #EXTRA_BCC}
    <li> {@link #EXTRA_CC}
    <li> {@link #EXTRA_CHANGED_COMPONENT_NAME}
    <li> {@link #EXTRA_DATA_REMOVED}
    <li> {@link #EXTRA_DOCK_STATE}
    <li> {@link #EXTRA_DOCK_STATE_HE_DESK}
    <li> {@link #EXTRA_DOCK_STATE_LE_DESK}
    <li> {@link #EXTRA_DOCK_STATE_CAR}
    <li> {@link #EXTRA_DOCK_STATE_DESK}
    <li> {@link #EXTRA_DOCK_STATE_UNDOCKED}
    <li> {@link #EXTRA_DONT_KILL_APP}
    <li> {@link #EXTRA_EMAIL}
    <li> {@link #EXTRA_INITIAL_INTENTS}
    <li> {@link #EXTRA_INTENT}
    <li> {@link #EXTRA_KEY_EVENT}
    <li> {@link #EXTRA_ORIGINATING_URI}
    <li> {@link #EXTRA_PHONE_NUMBER}
    <li> {@link #EXTRA_REFERRER}
    <li> {@link #EXTRA_REMOTE_INTENT_TOKEN}
    <li> {@link #EXTRA_REPLACING}
    <li> {@link #EXTRA_SHORTCUT_ICON}
    <li> {@link #EXTRA_SHORTCUT_ICON_RESOURCE}
    <li> {@link #EXTRA_SHORTCUT_INTENT}
    <li> {@link #EXTRA_STREAM}
    <li> {@link #EXTRA_SHORTCUT_NAME}
    <li> {@link #EXTRA_SUBJECT}
    <li> {@link #EXTRA_TEMPLATE}
    <li> {@link #EXTRA_TEXT}
    <li> {@link #EXTRA_TITLE}
    <li> {@link #EXTRA_UID}
</ul>

<h3>Flags</h3>

<p>These are the possible flags that can be used in the Intent via
{@link #setFlags} and {@link #addFlags}.  See {@link #setFlags} for a list
of all possible flags.
"
      classrelation 15442231 // <realization>
	relation 15442231 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15442231 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      class 7104311 "ShortcutIconResource"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15445431 // <realization>
	  relation 15445431 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15445431 // <realization>
	    b parent class_ref 6932663 // Parcelable
	end

	operation 78789303 "fromContext"
	  class_operation public return_type class_ref 7104311 // ShortcutIconResource
	  nparams 2
	    param inout name "context" type class_ref 6923703 // Context
	    param in name "resourceId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @AnyRes ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new ShortcutIconResource for the specified context and resource
identifier.

@param context The context of the application.
@param resourceId The resource identifier for the icon.
@return A new ShortcutIconResource with the specified's context package name
        and icon resource identifier.``
"
	end

	classrelation 15445815 // CREATOR (<unidirectional association>)
	  relation 15445815 --->
	    a role_name "CREATOR" init_value "
            new Parcelable.Creator<ShortcutIconResource>() {

                public ShortcutIconResource createFromParcel(Parcel source) {
                    ShortcutIconResource icon = new ShortcutIconResource();
                    icon.packageName = source.readString();
                    icon.resourceName = source.readString();
                    return icon;
                }

                public ShortcutIconResource[] newArray(int size) {
                    return new ShortcutIconResource[size];
                }
            }" class_relation const_relation public
	      comment "
Used to read a ShortcutIconResource from a Parcel.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ShortcutIconResource> ${name}${value};
"
	      classrelation_ref 15445815 // CREATOR (<unidirectional association>)
	    b parent class_ref 6932791 // Creator
	end

	operation 78789431 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "No special parcel contents.
"
	end

	operation 78789559 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78789687 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 78789815 "createChooser"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "target" type class_ref 6925623 // Intent
	  param inout name "title" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for creating a {@link #ACTION_CHOOSER} Intent.

<p>Builds a new {@link #ACTION_CHOOSER} Intent that wraps the given
target intent, also optionally supplying a title.  If the target
intent has specified {@link #FLAG_GRANT_READ_URI_PERMISSION} or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, then these flags will also be
set in the returned chooser intent, with its ClipData set appropriately:
either a direct reflection of {@link #getClipData()} if that is non-null,
or a new ClipData built from {@link #getData()}.

@param target The Intent that the user will be selecting an activity
to perform.
@param title Optional title that will be displayed in the chooser.
@return Return a new Intent object that you can hand to
{@link Context#startActivity(Intent) Context.startActivity()} and
related methods.
"
      end

      operation 78789943 "createChooser"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 3
	  param inout name "target" type class_ref 6925623 // Intent
	  param inout name "title" explicit_type "CharSequence"
	  param inout name "sender" type class_ref 6926007 // IntentSender
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for creating a {@link #ACTION_CHOOSER} Intent.

<p>Builds a new {@link #ACTION_CHOOSER} Intent that wraps the given
target intent, also optionally supplying a title.  If the target
intent has specified {@link #FLAG_GRANT_READ_URI_PERMISSION} or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, then these flags will also be
set in the returned chooser intent, with its ClipData set appropriately:
either a direct reflection of {@link #getClipData()} if that is non-null,
or a new ClipData built from {@link #getData()}.</p>

<p>The caller may optionally supply an {@link IntentSender} to receive a callback
when the user makes a choice. This can be useful if the calling application wants
to remember the last chosen target and surface it as a more prominent or one-touch
affordance elsewhere in the UI for next time.</p>

@param target The Intent that the user will be selecting an activity
to perform.
@param title Optional title that will be displayed in the chooser.
@param sender Optional IntentSender to be called when a choice is made.
@return Return a new Intent object that you can hand to
{@link Context#startActivity(Intent) Context.startActivity()} and
related methods.
"
      end

      attribute 24558263 "EXTRA_THERMAL_STATE_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Thermal state when the device is normal. This state is sent in the
{@link #ACTION_THERMAL_EVENT} broadcast as {@link #EXTRA_THERMAL_STATE}.
{@hide}

"
      end

      attribute 24558391 "EXTRA_THERMAL_STATE_WARNING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Thermal state where the device is approaching its maximum threshold. This state is sent in
the {@link #ACTION_THERMAL_EVENT} broadcast as {@link #EXTRA_THERMAL_STATE}.
{@hide}

"
      end

      attribute 24558519 "EXTRA_THERMAL_STATE_EXCEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Thermal state where the device has reached its maximum threshold. This state is sent in the
{@link #ACTION_THERMAL_EVENT} broadcast as {@link #EXTRA_THERMAL_STATE}.
{@hide}

"
      end

      attribute 24558647 "EXTRA_DOCK_STATE_UNDOCKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is not in any dock.

"
      end

      attribute 24558775 "EXTRA_DOCK_STATE_DESK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a desk dock.

"
      end

      attribute 24558903 "EXTRA_DOCK_STATE_CAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a car dock.

"
      end

      attribute 24559031 "EXTRA_DOCK_STATE_LE_DESK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a analog (low end) dock.

"
      end

      attribute 24559159 "EXTRA_DOCK_STATE_HE_DESK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a digital (high end) dock.

"
      end

      attribute 24559287 "EXTRA_MEDIA_RESOURCE_TYPE_VIDEO_CODEC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link #EXTRA_MEDIA_RESOURCE_TYPE}
to represent that a video codec is allowed to use.

@hide

"
      end

      attribute 24559415 "EXTRA_MEDIA_RESOURCE_TYPE_AUDIO_CODEC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used as an int value for {@link #EXTRA_MEDIA_RESOURCE_TYPE}
to represent that a audio codec is allowed to use.

@hide

"
      end

      class 7104439 "GrantUriMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true, value = {
            FLAG_GRANT_READ_URI_PERMISSION, FLAG_GRANT_WRITE_URI_PERMISSION,
            FLAG_GRANT_PERSISTABLE_URI_PERMISSION, FLAG_GRANT_PREFIX_URI_PERMISSION })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 7104567 "AccessUriMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true, value = {
            FLAG_GRANT_READ_URI_PERMISSION, FLAG_GRANT_WRITE_URI_PERMISSION })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 78790071 "isAccessUriMode"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if given mode flags specify an access mode, which must be at least
read and/or write.

@hide
"
      end

      attribute 24559543 "FLAG_GRANT_READ_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the recipient of this Intent will be granted permission to
perform read operations on the URI in the Intent's data and any URIs
specified in its ClipData.  When applying to an Intent's ClipData,
all URIs as well as recursive traversals through data or other ClipData
in Intent items will be granted; only the grant flags of the top-level
Intent are used.

"
      end

      attribute 24559671 "FLAG_GRANT_WRITE_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the recipient of this Intent will be granted permission to
perform write operations on the URI in the Intent's data and any URIs
specified in its ClipData.  When applying to an Intent's ClipData,
all URIs as well as recursive traversals through data or other ClipData
in Intent items will be granted; only the grant flags of the top-level
Intent are used.

"
      end

      attribute 24559799 "FLAG_FROM_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Can be set by the caller to indicate that this Intent is coming from
a background operation, not from direct user interaction.

"
      end

      attribute 24559927 "FLAG_DEBUG_LOG_RESOLUTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag you can enable for debugging: when set, log messages will be
printed during the resolution of this intent to show you what has
been found to create the final resolved list.

"
      end

      attribute 24560055 "FLAG_EXCLUDE_STOPPED_PACKAGES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, this intent will not match any components in packages that
are currently stopped.  If this is not set, then the default behavior
is to include such applications in the result.

"
      end

      attribute 24560183 "FLAG_INCLUDE_STOPPED_PACKAGES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, this intent will always match any components in packages that
are currently stopped.  This is the default behavior when
{@link #FLAG_EXCLUDE_STOPPED_PACKAGES} is not set.  If both of these
flags are set, this one wins (it allows overriding of exclude for
places where the framework may automatically set the exclude flag).

"
      end

      attribute 24560311 "FLAG_GRANT_PERSISTABLE_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When combined with {@link #FLAG_GRANT_READ_URI_PERMISSION} and/or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, the URI permission grant can be
persisted across device reboots until explicitly revoked with
{@link Context#revokeUriPermission(Uri, int)}. This flag only offers the
grant for possible persisting; the receiving application must call
{@link ContentResolver#takePersistableUriPermission(Uri, int)} to
actually persist.

@see ContentResolver#takePersistableUriPermission(Uri, int)
@see ContentResolver#releasePersistableUriPermission(Uri, int)
@see ContentResolver#getPersistedUriPermissions()
@see ContentResolver#getOutgoingPersistedUriPermissions()

"
      end

      attribute 24560439 "FLAG_GRANT_PREFIX_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When combined with {@link #FLAG_GRANT_READ_URI_PERMISSION} and/or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, the URI permission grant
applies to any URI that is a prefix match against the original granted
URI. (Without this flag, the URI must match exactly for access to be
granted.) Another URI is considered a prefix match only when scheme,
authority, and all path segments defined by the prefix are an exact
match.

"
      end

      attribute 24560567 "FLAG_DEBUG_TRIAGED_MISSING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Internal flag used to indicate that a system component has done their
homework and verified that they correctly handle packages and components
that come and go over time. In particular:
<ul>
<li>Apps installed on external storage, which will appear to be
uninstalled while the the device is ejected.
<li>Apps with encryption unaware components, which will appear to not
exist while the device is locked.
</ul>

@hide

"
      end

      attribute 24560695 "FLAG_ACTIVITY_NO_HISTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the new activity is not kept in the history stack.  As soon as
the user navigates away from it, the activity is finished.  This may also
be set with the {@link android.R.styleable#AndroidManifestActivity_noHistory
noHistory} attribute.

<p>If set, {@link android.app.Activity#onActivityResult onActivityResult()}
is never invoked when the current activity starts a new activity which
sets a result and finishes.

"
      end

      attribute 24560823 "FLAG_ACTIVITY_SINGLE_TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the activity will not be launched if it is already running
at the top of the history stack.

"
      end

      attribute 24560951 "FLAG_ACTIVITY_NEW_TASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, this activity will become the start of a new task on this
history stack.  A task (from the activity that started it to the
next task activity) defines an atomic group of activities that the
user can move to.  Tasks can be moved to the foreground and background;
all of the activities inside of a particular task always remain in
the same order.  See
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> for more information about tasks.

<p>This flag is generally used by activities that want
to present a \"launcher\" style behavior: they give the user a list of
separate things that can be done, which otherwise run completely
independently of the activity launching them.

<p>When using this flag, if a task is already running for the activity
you are now starting, then a new activity will not be started; instead,
the current task will simply be brought to the front of the screen with
the state it was last in.  See {@link #FLAG_ACTIVITY_MULTIPLE_TASK} for a flag
to disable this behavior.

<p>This flag can not be used when the caller is requesting a result from
the activity being launched.

"
      end

      attribute 24561079 "FLAG_ACTIVITY_MULTIPLE_TASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag is used to create a new task and launch an activity into it.
This flag is always paired with either {@link #FLAG_ACTIVITY_NEW_DOCUMENT}
or {@link #FLAG_ACTIVITY_NEW_TASK}. In both cases these flags alone would
search through existing tasks for ones matching this Intent. Only if no such
task is found would a new task be created. When paired with
FLAG_ACTIVITY_MULTIPLE_TASK both of these behaviors are modified to skip
the search for a matching task and unconditionally start a new task.

<strong>When used with {@link #FLAG_ACTIVITY_NEW_TASK} do not use this
flag unless you are implementing your own
top-level application launcher.</strong>  Used in conjunction with
{@link #FLAG_ACTIVITY_NEW_TASK} to disable the
behavior of bringing an existing task to the foreground.  When set,
a new task is <em>always</em> started to host the Activity for the
Intent, regardless of whether there is already an existing task running
the same thing.

<p><strong>Because the default system does not include graphical task management,
you should not use this flag unless you provide some way for a user to
return back to the tasks you have launched.</strong>

See {@link #FLAG_ACTIVITY_NEW_DOCUMENT} for details of this flag's use for
creating new document tasks.

<p>This flag is ignored if one of {@link #FLAG_ACTIVITY_NEW_TASK} or
{@link #FLAG_ACTIVITY_NEW_DOCUMENT} is not also set.

<p>See
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> for more information about tasks.

@see #FLAG_ACTIVITY_NEW_DOCUMENT
@see #FLAG_ACTIVITY_NEW_TASK

"
      end

      attribute 24561207 "FLAG_ACTIVITY_CLEAR_TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, and the activity being launched is already running in the
current task, then instead of launching a new instance of that activity,
all of the other activities on top of it will be closed and this Intent
will be delivered to the (now on top) old activity as a new Intent.

<p>For example, consider a task consisting of the activities: A, B, C, D.
If D calls startActivity() with an Intent that resolves to the component
of activity B, then C and D will be finished and B receive the given
Intent, resulting in the stack now being: A, B.

<p>The currently running instance of activity B in the above example will
either receive the new intent you are starting here in its
onNewIntent() method, or be itself finished and restarted with the
new intent.  If it has declared its launch mode to be \"multiple\" (the
default) and you have not set {@link #FLAG_ACTIVITY_SINGLE_TOP} in
the same intent, then it will be finished and re-created; for all other
launch modes or if {@link #FLAG_ACTIVITY_SINGLE_TOP} is set then this
Intent will be delivered to the current instance's onNewIntent().

<p>This launch mode can also be used to good effect in conjunction with
{@link #FLAG_ACTIVITY_NEW_TASK}: if used to start the root activity
of a task, it will bring any currently running instance of that task
to the foreground, and then clear it to its root state.  This is
especially useful, for example, when launching an activity from the
notification manager.

<p>See
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> for more information about tasks.

"
      end

      attribute 24561335 "FLAG_ACTIVITY_FORWARD_RESULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set and this intent is being used to launch a new activity from an
existing one, then the reply target of the existing activity will be
transfered to the new activity.  This way the new activity can call
{@link android.app.Activity#setResult} and have that result sent back to
the reply target of the original activity.

"
      end

      attribute 24561463 "FLAG_ACTIVITY_PREVIOUS_IS_TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set and this intent is being used to launch a new activity from an
existing one, the current activity will not be counted as the top
activity for deciding whether the new intent should be delivered to
the top instead of starting a new one.  The previous activity will
be used as the top, with the assumption being that the current activity
will finish itself immediately.

"
      end

      attribute 24561591 "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00800000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the new activity is not kept in the list of recently launched
activities.

"
      end

      attribute 24561719 "FLAG_ACTIVITY_BROUGHT_TO_FRONT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00400000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag is not normally set by application code, but set for you by
the system as described in the
{@link android.R.styleable#AndroidManifestActivity_launchMode
launchMode} documentation for the singleTask mode.

"
      end

      attribute 24561847 "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00200000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, and this activity is either being started in a new task or
bringing to the top an existing task, then it will be launched as
the front door of the task.  This will result in the application of
any affinities needed to have that task in the proper state (either
moving activities to or from it), or simply resetting that task to
its initial state if needed.

"
      end

      attribute 24561975 "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00100000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag is not normally set by application code, but set for you by
the system if this activity is being launched from history
(longpress home key).

"
      end

      attribute 24562103 "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated As of API 21 this performs identically to
{@link #FLAG_ACTIVITY_NEW_DOCUMENT} which should be used instead of this.

"
      end

      attribute 24562231 "FLAG_ACTIVITY_NEW_DOCUMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag is used to open a document into a new task rooted at the activity launched
by this Intent. Through the use of this flag, or its equivalent attribute,
{@link android.R.attr#documentLaunchMode} multiple instances of the same activity
containing different documents will appear in the recent tasks list.

<p>The use of the activity attribute form of this,
{@link android.R.attr#documentLaunchMode}, is
preferred over the Intent flag described here. The attribute form allows the
Activity to specify multiple document behavior for all launchers of the Activity
whereas using this flag requires each Intent that launches the Activity to specify it.

<p>Note that the default semantics of this flag w.r.t. whether the recents entry for
it is kept after the activity is finished is different than the use of
{@link #FLAG_ACTIVITY_NEW_TASK} and {@link android.R.attr#documentLaunchMode} -- if
this flag is being used to create a new recents entry, then by default that entry
will be removed once the activity is finished.  You can modify this behavior with
{@link #FLAG_ACTIVITY_RETAIN_IN_RECENTS}.

<p>FLAG_ACTIVITY_NEW_DOCUMENT may be used in conjunction with {@link
#FLAG_ACTIVITY_MULTIPLE_TASK}. When used alone it is the
equivalent of the Activity manifest specifying {@link
android.R.attr#documentLaunchMode}=\"intoExisting\". When used with
FLAG_ACTIVITY_MULTIPLE_TASK it is the equivalent of the Activity manifest specifying
{@link android.R.attr#documentLaunchMode}=\"always\".

Refer to {@link android.R.attr#documentLaunchMode} for more information.

@see android.R.attr#documentLaunchMode
@see #FLAG_ACTIVITY_MULTIPLE_TASK

"
      end

      attribute 24562359 "FLAG_ACTIVITY_NO_USER_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, this flag will prevent the normal {@link android.app.Activity#onUserLeaveHint}
callback from occurring on the current frontmost activity before it is
paused as the newly-started activity is brought to the front.

<p>Typically, an activity can rely on that callback to indicate that an
explicit user action has caused their activity to be moved out of the
foreground. The callback marks an appropriate point in the activity's
lifecycle for it to dismiss any notifications that it intends to display
\"until the user has seen them,\" such as a blinking LED.

<p>If an activity is ever started via any non-user-driven events such as
phone-call receipt or an alarm handler, this flag should be passed to {@link
Context#startActivity Context.startActivity}, ensuring that the pausing
activity does not think the user has acknowledged its notification.

"
      end

      attribute 24562487 "FLAG_ACTIVITY_REORDER_TO_FRONT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00020000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will cause the launched activity to be brought to the front of its
task's history stack if it is already running.

<p>For example, consider a task consisting of four activities: A, B, C, D.
If D calls startActivity() with an Intent that resolves to the component
of activity B, then B will be brought to the front of the history stack,
with this resulting order:  A, C, D, B.

This flag will be ignored if {@link #FLAG_ACTIVITY_CLEAR_TOP} is also
specified.

"
      end

      attribute 24562615 "FLAG_ACTIVITY_NO_ANIMATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00010000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will prevent the system from applying an activity transition
animation to go to the next activity state.  This doesn't mean an
animation will never run -- if another activity change happens that doesn't
specify this flag before the activity started here is displayed, then
that transition will be used.  This flag can be put to good use
when you are going to do a series of activity operations but the
animation seen by the user shouldn't be driven by the first activity
change but rather a later one.

"
      end

      attribute 24562743 "FLAG_ACTIVITY_CLEAR_TASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00008000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will cause any existing task that would be associated with the
activity to be cleared before the activity is started.  That is, the activity
becomes the new root of an otherwise empty task, and any old activities
are finished.  This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}.

"
      end

      attribute 24562871 "FLAG_ACTIVITY_TASK_ON_HOME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00004000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will cause a newly launching task to be placed on top of the current
home activity task (if there is one).  That is, pressing back from the task
will always return the user to home even if that was not the last activity they
saw.   This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}.

"
      end

      attribute 24562999 "FLAG_ACTIVITY_RETAIN_IN_RECENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00002000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "By default a document created by {@link #FLAG_ACTIVITY_NEW_DOCUMENT} will
have its entry in recent tasks removed when the user closes it (with back
or however else it may finish()). If you would like to instead allow the
document to be kept in recents so that it can be re-launched, you can use
this flag. When set and the task's activity is finished, the recents
entry will remain in the interface for the user to re-launch it, like a
recents entry for a top-level application.
<p>
The receiving activity can override this request with
{@link android.R.attr#autoRemoveFromRecents} or by explcitly calling
{@link android.app.Activity#finishAndRemoveTask()
Activity.finishAndRemoveTask()}.

"
      end

      attribute 24563127 "FLAG_ACTIVITY_LAUNCH_ADJACENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag is only used in split-screen multi-window mode. The new activity will be displayed
adjacent to the one launching it. This can only be used in conjunction with
{@link #FLAG_ACTIVITY_NEW_TASK}. Also, setting {@link #FLAG_ACTIVITY_MULTIPLE_TASK} is
required if you want a new instance of an existing activity to be created.

"
      end

      attribute 24563255 "FLAG_RECEIVER_REGISTERED_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, when sending a broadcast only registered receivers will be
called -- no BroadcastReceiver components will be launched.

"
      end

      attribute 24563383 "FLAG_RECEIVER_REPLACE_PENDING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, when sending a broadcast the new broadcast will replace
any existing pending broadcast that matches it.  Matching is defined
by {@link Intent#filterEquals(Intent) Intent.filterEquals} returning
true for the intents of the two broadcasts.  When a match is found,
the new broadcast (and receivers associated with it) will replace the
existing one in the pending broadcast list, remaining at the same
position in the list.

<p>This flag is most typically used with sticky broadcasts, which
only care about delivering the most recent values of the broadcast
to their receivers.

"
      end

      attribute 24563511 "FLAG_RECEIVER_FOREGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, when sending a broadcast the recipient is allowed to run at
foreground priority, with a shorter timeout interval.  During normal
broadcasts the receivers are not automatically hoisted out of the
background priority class.

"
      end

      attribute 24563639 "FLAG_RECEIVER_NO_ABORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If this is an ordered broadcast, don't allow receivers to abort the broadcast.
They can still propagate results through to later receivers, but they can not prevent
later receivers from seeing the broadcast.

"
      end

      attribute 24563767 "FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, when sending a broadcast <i>before boot has completed</i> only
registered receivers will be called -- no BroadcastReceiver components
will be launched.  Sticky intent state will be recorded properly even
if no receivers wind up being called.  If {@link #FLAG_RECEIVER_REGISTERED_ONLY}
is specified in the broadcast intent, this flag is unnecessary.

<p>This flag is only for use by system sevices as a convenience to
avoid having to implement a more complex mechanism around detection
of boot completion.

@hide

"
      end

      attribute 24563895 "FLAG_RECEIVER_BOOT_UPGRADE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set when this broadcast is for a boot upgrade, a special mode that
allows the broadcast to be sent before the system is ready and launches
the app process with no providers running in it.
@hide

"
      end

      attribute 24564023 "FLAG_RECEIVER_INCLUDE_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the broadcast will always go to manifest receivers in background (cached
or not running) apps, regardless of whether that would be done by default.  By
default they will only receive broadcasts if the broadcast has specified an
explicit component or package name.
@hide

"
      end

      attribute 24564151 "FLAG_RECEIVER_EXCLUDE_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00800000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set, the broadcast will never go to manifest receivers in background (cached
or not running) apps, regardless of whether that would be done by default.  By
default they will receive broadcasts if the broadcast has specified an
explicit component or package name.
@hide

"
      end

      attribute 24564279 "IMMUTABLE_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " FLAG_GRANT_READ_URI_PERMISSION
            | FLAG_GRANT_WRITE_URI_PERMISSION | FLAG_GRANT_PERSISTABLE_URI_PERMISSION
            | FLAG_GRANT_PREFIX_URI_PERMISSION"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@hide Flags that can't be changed with PendingIntent.

"
      end

      attribute 24564407 "URI_INTENT_SCHEME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 toUri() and parseUri() options.

Flag for use with {@link #toUri} and {@link #parseUri}: the URI string
always has the \"intent:\" scheme.  This syntax can be used when you want
to later disambiguate between URIs that are intended to describe an
Intent vs. all others that should be treated as raw URIs.  When used
with {@link #parseUri}, any other scheme will result in a generic
VIEW action for that raw URI.

"
      end

      attribute 24564535 "URI_ANDROID_APP_SCHEME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #toUri} and {@link #parseUri}: the URI string
always has the \"android-app:\" scheme.  This is a variation of
{@link #URI_INTENT_SCHEME} whose format is simpler for the case of an
http/https URI being delivered to a specific package name.  The format
is:

<pre class=\"prettyprint\">
android-app://{package_id}[/{scheme}[/{host}[/{path}]]][#Intent;{...}]</pre>

<p>In this scheme, only the <code>package_id</code> is required.  If you include a host,
you must also include a scheme; including a path also requires both a host and a scheme.
The final #Intent; fragment can be used without a scheme, host, or path.
Note that this can not be
used with intents that have a {@link #setSelector}, since the base intent
will always have an explicit package name.</p>

<p>Some examples of how this scheme maps to Intent objects:</p>
<table border=\"2\" width=\"85%\" align=\"center\" frame=\"hsides\" rules=\"rows\">
    <colgroup align=\"left\" />
    <colgroup align=\"left\" />
    <thead>
    <tr><th>URI</th> <th>Intent</th></tr>
    </thead>

    <tbody>
    <tr><td><code>android-app://com.example.app</code></td>
        <td><table style=\"margin:0;border:0;cellpadding:0;cellspacing:0\">
            <tr><td>Action: </td><td>{@link #ACTION_MAIN}</td></tr>
            <tr><td>Package: </td><td><code>com.example.app</code></td></tr>
        </table></td>
    </tr>
    <tr><td><code>android-app://com.example.app/http/example.com</code></td>
        <td><table style=\"margin:0;border:0;cellpadding:0;cellspacing:0\">
            <tr><td>Action: </td><td>{@link #ACTION_VIEW}</td></tr>
            <tr><td>Data: </td><td><code>http://example.com/</code></td></tr>
            <tr><td>Package: </td><td><code>com.example.app</code></td></tr>
        </table></td>
    </tr>
    <tr><td><code>android-app://com.example.app/http/example.com/foo?1234</code></td>
        <td><table style=\"margin:0;border:0;cellpadding:0;cellspacing:0\">
            <tr><td>Action: </td><td>{@link #ACTION_VIEW}</td></tr>
            <tr><td>Data: </td><td><code>http://example.com/foo?1234</code></td></tr>
            <tr><td>Package: </td><td><code>com.example.app</code></td></tr>
        </table></td>
    </tr>
    <tr><td><code>android-app://com.example.app/<br />#Intent;action=com.example.MY_ACTION;end</code></td>
        <td><table style=\"margin:0;border:0;cellpadding:0;cellspacing:0\">
            <tr><td>Action: </td><td><code>com.example.MY_ACTION</code></td></tr>
            <tr><td>Package: </td><td><code>com.example.app</code></td></tr>
        </table></td>
    </tr>
    <tr><td><code>android-app://com.example.app/http/example.com/foo?1234<br />#Intent;action=com.example.MY_ACTION;end</code></td>
        <td><table style=\"margin:0;border:0;cellpadding:0;cellspacing:0\">
            <tr><td>Action: </td><td><code>com.example.MY_ACTION</code></td></tr>
            <tr><td>Data: </td><td><code>http://example.com/foo?1234</code></td></tr>
            <tr><td>Package: </td><td><code>com.example.app</code></td></tr>
        </table></td>
    </tr>
    <tr><td><code>android-app://com.example.app/<br />#Intent;action=com.example.MY_ACTION;<br />i.some_int=100;S.some_str=hello;end</code></td>
        <td><table border=\"\" style=\"margin:0\" >
            <tr><td>Action: </td><td><code>com.example.MY_ACTION</code></td></tr>
            <tr><td>Package: </td><td><code>com.example.app</code></td></tr>
            <tr><td>Extras: </td><td><code>some_int=(int)100<br />some_str=(String)hello</code></td></tr>
        </table></td>
    </tr>
    </tbody>
</table>

"
      end

      attribute 24564663 "URI_ALLOW_UNSAFE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag for use with {@link #toUri} and {@link #parseUri}: allow parsing
of unsafe information.  In particular, the flags {@link #FLAG_GRANT_READ_URI_PERMISSION},
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, {@link #FLAG_GRANT_PERSISTABLE_URI_PERMISSION},
and {@link #FLAG_GRANT_PREFIX_URI_PERMISSION} flags can not be set, so that the
generated Intent can not cause unexpected data access to happen.

<p>If you do not trust the source of the URI being parsed, you should still do further
processing to protect yourself from it.  In particular, when using it to start an
activity you should usually add in {@link #CATEGORY_BROWSABLE} to limit the activities
that can handle it.</p>

"
      end

      classrelation 15481399 // mData (<unidirectional association>)
	relation 15481399 --->
	  a role_name "mData" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15481399 // mData (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      classrelation 15481783 // mComponent (<unidirectional association>)
	relation 15481783 --->
	  a role_name "mComponent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15481783 // mComponent (<unidirectional association>)
	  b parent class_ref 6926647 // ComponentName
      end

      attribute 24564791 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15481911 // mCategories (<unidirectional association>)
	relation 15481911 --->
	  a role_name "mCategories" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 15481911 // mCategories (<unidirectional association>)
	  b parent class_ref 7041591 // ArraySet
      end

      classrelation 15482039 // mExtras (<unidirectional association>)
	relation 15482039 --->
	  a role_name "mExtras" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15482039 // mExtras (<unidirectional association>)
	  b parent class_ref 6925879 // Bundle
      end

      classrelation 15482167 // mSourceBounds (<unidirectional association>)
	relation 15482167 --->
	  a role_name "mSourceBounds" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15482167 // mSourceBounds (<unidirectional association>)
	  b parent class_ref 5772599 // Rect
      end

      classrelation 15482295 // mSelector (<unidirectional association>)
	relation 15482295 --->
	  a role_name "mSelector" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15482295 // mSelector (<unidirectional association>)
	  b parent class_ref 6925623 // Intent
      end

      classrelation 15482423 // mClipData (<unidirectional association>)
	relation 15482423 --->
	  a role_name "mClipData" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15482423 // mClipData (<unidirectional association>)
	  b parent class_ref 6950199 // ClipData
      end

      attribute 24564919 "mContentUserHint"
	private explicit_type "int"
	init_value " UserHandle.USER_CURRENT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78790199 "Intent"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------

Create an empty intent.
"
      end

      operation 78790327 "Intent"
	public explicit_return_type ""
	nparams 1
	  param inout name "o" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor.
"
      end

      operation 78790455 "clone"
	public explicit_return_type "Object"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78790583 "Intent"
	private explicit_return_type ""
	nparams 2
	  param inout name "o" type class_ref 6925623 // Intent
	  param inout name "all" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78790711 "cloneFilter"
	public return_type class_ref 6925623 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a clone of only the parts of the Intent that are relevant for
filter matching: the action, data, type, component, and categories.
"
      end

      operation 78790839 "Intent"
	public explicit_return_type ""
	nparams 1
	  param inout name "action" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent with a given action.  All other fields (data, type,
class) are null.  Note that the action <em>must</em> be in a
namespace because Intents are used globally in the system -- for
example the system VIEW action is android.intent.action.VIEW; an
application's custom action would be something like
com.google.app.myapp.CUSTOM_ACTION.

@param action The Intent action, such as ACTION_VIEW.
"
      end

      operation 78790967 "Intent"
	public explicit_return_type ""
	nparams 2
	  param inout name "action" explicit_type "String"
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent with a given action and for a given data url.  Note
that the action <em>must</em> be in a namespace because Intents are
used globally in the system -- for example the system VIEW action is
android.intent.action.VIEW; an application's custom action would be
something like com.google.app.myapp.CUSTOM_ACTION.

<p><em>Note: scheme and host name matching in the Android framework is
case-sensitive, unlike the formal RFC.  As a result,
you should always ensure that you write your Uri with these elements
using lower case letters, and normalize any Uris you receive from
outside of Android to ensure the scheme and host is lower case.</em></p>

@param action The Intent action, such as ACTION_VIEW.
@param uri The Intent data URI.
"
      end

      operation 78791095 "Intent"
	public explicit_return_type ""
	nparams 2
	  param inout name "packageContext" type class_ref 6923703 // Context
	  param inout name "cls" explicit_type "Class"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent for a specific component.  All other fields (action, data,
type, class) are null, though they can be modified later with explicit
calls.  This provides a convenient way to create an intent that is
intended to execute a hard-coded class name, rather than relying on the
system to find an appropriate class for you; see {@link #setComponent}
for more information on the repercussions of this.

@param packageContext A Context of the application package implementing
this class.
@param cls The component class that is to be used for the intent.

@see #setClass
@see #setComponent
@see #Intent(String, android.net.Uri , Context, Class)
"
      end

      operation 78791223 "Intent"
	public explicit_return_type ""
	nparams 4
	  param inout name "action" explicit_type "String"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "packageContext" type class_ref 6923703 // Context
	  param inout name "cls" explicit_type "Class"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<?> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent for a specific component with a specified action and data.
This is equivalent to using {@link #Intent(String, android.net.Uri)} to
construct the Intent and then calling {@link #setClass} to set its
class.

<p><em>Note: scheme and host name matching in the Android framework is
case-sensitive, unlike the formal RFC.  As a result,
you should always ensure that you write your Uri with these elements
using lower case letters, and normalize any Uris you receive from
outside of Android to ensure the scheme and host is lower case.</em></p>

@param action The Intent action, such as ACTION_VIEW.
@param uri The Intent data URI.
@param packageContext A Context of the application package implementing
this class.
@param cls The component class that is to be used for the intent.

@see #Intent(String, android.net.Uri)
@see #Intent(Context, Class)
@see #setClass
@see #setComponent
"
      end

      operation 78791351 "makeMainActivity"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "mainActivity" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent to launch the main (root) activity of a task.  This
is the Intent that is started when the application's is launched from
Home.  For anything else that wants to launch an application in the
same way, it is important that they use an Intent structured the same
way, and can use this function to ensure this is the case.

<p>The returned Intent has the given Activity component as its explicit
component, {@link #ACTION_MAIN} as its action, and includes the
category {@link #CATEGORY_LAUNCHER}.  This does <em>not</em> have
{@link #FLAG_ACTIVITY_NEW_TASK} set, though typically you will want
to do that through {@link #addFlags(int)} on the returned Intent.

@param mainActivity The main activity component that this Intent will
launch.
@return Returns a newly created Intent that can be used to launch the
activity as a main application entry.

@see #setClass
@see #setComponent
"
      end

      operation 78791479 "makeMainSelectorActivity"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "selectorAction" explicit_type "String"
	  param inout name "selectorCategory" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make an Intent for the main activity of an application, without
specifying a specific activity to run but giving a selector to find
the activity.  This results in a final Intent that is structured
the same as when the application is launched from
Home.  For anything else that wants to launch an application in the
same way, it is important that they use an Intent structured the same
way, and can use this function to ensure this is the case.

<p>The returned Intent has {@link #ACTION_MAIN} as its action, and includes the
category {@link #CATEGORY_LAUNCHER}.  This does <em>not</em> have
{@link #FLAG_ACTIVITY_NEW_TASK} set, though typically you will want
to do that through {@link #addFlags(int)} on the returned Intent.

@param selectorAction The action name of the Intent's selector.
@param selectorCategory The name of a category to add to the Intent's
selector.
@return Returns a newly created Intent that can be used to launch the
activity as a main application entry.

@see #setSelector(Intent)
"
      end

      operation 78791607 "makeRestartActivityTask"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "mainActivity" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make an Intent that can be used to re-launch an application's task
in its base state.  This is like {@link #makeMainActivity(ComponentName)},
but also sets the flags {@link #FLAG_ACTIVITY_NEW_TASK} and
{@link #FLAG_ACTIVITY_CLEAR_TASK}.

@param mainActivity The activity component that is the root of the
task; this is the activity that has been published in the application's
manifest as the main launcher icon.

@return Returns a newly created Intent that can be used to relaunch the
activity's task in its root state.
"
      end

      operation 78791735 "getIntent"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "uri" explicit_type "String"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call {@link #parseUri} with 0 flags.
@deprecated Use {@link #parseUri} instead.
"
      end

      operation 78791863 "parseUri"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "uri" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent from a URI.  This URI may encode the action,
category, and other intent fields, if it was returned by
{@link #toUri}.  If the Intent was not generate by toUri(), its data
will be the entire URI and its action will be ACTION_VIEW.

<p>The URI given here must not be relative -- that is, it must include
the scheme and full path.

@param uri The URI to turn into an Intent.
@param flags Additional processing flags.  Either 0,
{@link #URI_INTENT_SCHEME}, or {@link #URI_ANDROID_APP_SCHEME}.

@return Intent The newly created Intent object.

@throws URISyntaxException Throws URISyntaxError if the basic URI syntax
it bad (as parsed by the Uri class) or the Intent data within the
URI is invalid.

@see #toUri
"
      end

      operation 78791991 "getIntentOld"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "uri" explicit_type "String"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78792119 "getIntentOld"
	class_operation private return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "uri" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7104695 "CommandOptionHandler"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78792247 "handleOption"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "opt" explicit_type "String"
	    param inout name "cmd" type class_ref 7104823 // ShellCommand
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 78792375 "parseCommandArgs"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "cmd" type class_ref 7104823 // ShellCommand
	  param inout name "optionHandler" type class_ref 7104695 // CommandOptionHandler
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78792503 "printIntentArgsHelp"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "prefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78792631 "getAction"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the general action to be performed, such as
{@link #ACTION_VIEW}.  The action describes the general way the rest of
the information in the intent should be interpreted -- most importantly,
what to do with the data returned by {@link #getData}.

@return The action of this intent or null if none is specified.

@see #setAction
"
      end

      operation 78792759 "getData"
	public return_type class_ref 6927159 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve data this intent is operating on.  This URI specifies the name
of the data; often it uses the content: scheme, specifying data in a
content provider.  Other schemes may be handled by specific activities,
such as http: by the web browser.

@return The URI of the data this intent is targeting or null.

@see #getScheme
@see #setData
"
      end

      operation 78792887 "getDataString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The same as {@link #getData()}, but returns the URI as an encoded
String.
"
      end

      operation 78793015 "getScheme"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the scheme portion of the intent's data.  If the data is null or
does not include a scheme, null is returned.  Otherwise, the scheme
prefix without the final ':' is returned, i.e. \"http\".

<p>This is the same as calling getData().getScheme() (and checking for
null data).

@return The scheme of this intent.

@see #getData
"
      end

      operation 78793143 "getType"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve any explicit MIME type included in the intent.  This is usually
null, as the type is determined by the intent data.

@return If a type was manually set, it is returned; else null is
        returned.

@see #resolveType(ContentResolver)
@see #setType
"
      end

      operation 78793271 "resolveType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME data type of this intent.  If the type field is
explicitly set, that is simply returned.  Otherwise, if the data is set,
the type of that data is returned.  If neither fields are set, a null is
returned.

@return The MIME type of this intent.

@see #getType
@see #resolveType(ContentResolver)
"
      end

      operation 78793399 "resolveType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "resolver" type class_ref 6924215 // ContentResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME data type of this intent.  If the type field is
explicitly set, that is simply returned.  Otherwise, if the data is set,
the type of that data is returned.  If neither fields are set, a null is
returned.

@param resolver A ContentResolver that can be used to determine the MIME
                type of the intent's data.

@return The MIME type of this intent.

@see #getType
@see #resolveType(Context)
"
      end

      operation 78793527 "resolveTypeIfNeeded"
	public explicit_return_type "String"
	nparams 1
	  param inout name "resolver" type class_ref 6924215 // ContentResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME data type of this intent, only if it will be needed for
intent resolution.  This is not generally useful for application code;
it is used by the frameworks for communicating with back-end system
services.

@param resolver A ContentResolver that can be used to determine the MIME
                type of the intent's data.

@return The MIME type of this intent, or null if it is unknown or not
        needed.
"
      end

      operation 78793655 "hasCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if a category exists in the intent.

@param category The category to check.

@return boolean True if the intent contains the category, else false.

@see #getCategories
@see #addCategory
"
      end

      operation 78793783 "getCategories"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the set of all categories in the intent.  If there are no categories,
returns NULL.

@return The set of categories you can examine.  Do not modify!

@see #hasCategory
@see #addCategory
"
      end

      operation 78793911 "getSelector"
	public return_type class_ref 6925623 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the specific selector associated with this Intent.  If there is
none, returns null.  See {@link #setSelector} for more information.

@see #setSelector
"
      end

      operation 78794039 "getClipData"
	public return_type class_ref 6950199 // ClipData
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link ClipData} associated with this Intent.  If there is
none, returns null.  See {@link #setClipData} for more information.

@see #setClipData
"
      end

      operation 78794167 "getContentUserHint"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78794295 "setExtrasClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ClassLoader that will be used when unmarshalling
any Parcelable values from the extras of this Intent.

@param loader a ClassLoader, or null to use the default loader
at the time of unmarshalling.
"
      end

      operation 78794423 "hasExtra"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if an extra value is associated with the given name.
@param name the extra's name
@return true if the given extra is present.
"
      end

      operation 78794551 "hasFileDescriptors"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the Intent's extras contain a parcelled file descriptor.
@return true if the Intent contains a parcelled file descriptor.
"
      end

      operation 78794679 "setAllowFds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowFds" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78794807 "setDefusable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defusable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78794935 "getExtra"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if none was found.

@deprecated
@hide
"
      end

      operation 78795063 "getBooleanExtra"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "defaultValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, boolean)
"
      end

      operation 78795191 "getByteExtra"
	public explicit_return_type "byte"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, byte)
"
      end

      operation 78795319 "getShortExtra"
	public explicit_return_type "short"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, short)
"
      end

      operation 78795447 "getCharExtra"
	public explicit_return_type "char"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, char)
"
      end

      operation 78795575 "getIntExtra"
	public explicit_return_type "int"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, int)
"
      end

      operation 78795703 "getLongExtra"
	public explicit_return_type "long"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, long)
"
      end

      operation 78795831 "getFloatExtra"
	public explicit_return_type "float"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra(),
or the default value if no such item is present

@see #putExtra(String, float)
"
      end

      operation 78795959 "getDoubleExtra"
	public explicit_return_type "double"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, double)
"
      end

      operation 78796087 "getStringExtra"
	public explicit_return_type "String"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no String value was found.

@see #putExtra(String, String)
"
      end

      operation 78796215 "getCharSequenceExtra"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no CharSequence value was found.

@see #putExtra(String, CharSequence)
"
      end

      operation 78796343 "getParcelableExtra"
	public explicit_return_type "T"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Parcelable value was found.

@see #putExtra(String, Parcelable)
"
      end

      operation 78796471 "getParcelableArrayExtra"
	public return_type class_ref 6932663 // Parcelable
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Parcelable[] value was found.

@see #putExtra(String, Parcelable[])
"
      end

      operation 78796599 "getParcelableArrayListExtra"
	public explicit_return_type "ArrayList<T>"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<Parcelable> value was found.

@see #putParcelableArrayListExtra(String, ArrayList)
"
      end

      operation 78796727 "getSerializableExtra"
	public explicit_return_type "Serializable"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Serializable value was found.

@see #putExtra(String, Serializable)
"
      end

      operation 78796855 "getIntegerArrayListExtra"
	public explicit_return_type "ArrayList<Integer>"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<Integer> value was found.

@see #putIntegerArrayListExtra(String, ArrayList)
"
      end

      operation 78796983 "getStringArrayListExtra"
	public explicit_return_type "String"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<String> value was found.

@see #putStringArrayListExtra(String, ArrayList)
"
      end

      operation 78797111 "getCharSequenceArrayListExtra"
	public explicit_return_type "ArrayList<CharSequence>"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<CharSequence> value was found.

@see #putCharSequenceArrayListExtra(String, ArrayList)
"
      end

      operation 78797239 "getBooleanArrayExtra"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no boolean array value was found.

@see #putExtra(String, boolean[])
"
      end

      operation 78797367 "getByteArrayExtra"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no byte array value was found.

@see #putExtra(String, byte[])
"
      end

      operation 78797495 "getShortArrayExtra"
	public explicit_return_type "short"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no short array value was found.

@see #putExtra(String, short[])
"
      end

      operation 78797623 "getCharArrayExtra"
	public explicit_return_type "char"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no char array value was found.

@see #putExtra(String, char[])
"
      end

      operation 78797751 "getIntArrayExtra"
	public explicit_return_type "int"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no int array value was found.

@see #putExtra(String, int[])
"
      end

      operation 78797879 "getLongArrayExtra"
	public explicit_return_type "long"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no long array value was found.

@see #putExtra(String, long[])
"
      end

      operation 78798007 "getFloatArrayExtra"
	public explicit_return_type "float"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no float array value was found.

@see #putExtra(String, float[])
"
      end

      operation 78798135 "getDoubleArrayExtra"
	public explicit_return_type "double"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no double array value was found.

@see #putExtra(String, double[])
"
      end

      operation 78798263 "getStringArrayExtra"
	public explicit_return_type "String"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no String array value was found.

@see #putExtra(String, String[])
"
      end

      operation 78798391 "getCharSequenceArrayExtra"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no CharSequence array value was found.

@see #putExtra(String, CharSequence[])
"
      end

      operation 78798519 "getBundleExtra"
	public return_type class_ref 6925879 // Bundle
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Bundle value was found.

@see #putExtra(String, Bundle)
"
      end

      operation 78798647 "getIBinderExtra"
	public return_type class_ref 6927031 // IBinder
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no IBinder value was found.

@see #putExtra(String, IBinder)

@deprecated
@hide
"
      end

      operation 78798775 "getExtra"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "defaultValue" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue The default value to return in case no item is
associated with the key 'name'

@return the value of an item that previously added with putExtra()
or defaultValue if none was found.

@see #putExtra

@deprecated
@hide
"
      end

      operation 78798903 "getExtras"
	public return_type class_ref 6925879 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a map of extended data from the intent.

@return the map of all extras previously added with putExtra(),
or null if none have been added.
"
      end

      operation 78799031 "removeUnsafeExtras"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter extras to only basic types.
@hide
"
      end

      operation 78799159 "getFlags"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve any special flags associated with this intent.  You will
normally just set them with {@link #setFlags} and let the system
take the appropriate action with them.

@return int The currently set flags.

@see #setFlags
"
      end

      operation 78799287 "isExcludingStopped"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78799415 "getPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the application package name this Intent is limited to.  When
resolving an Intent, if non-null this limits the resolution to only
components in the given application package.

@return The name of the application package for the Intent.

@see #resolveActivity
@see #setPackage
"
      end

      operation 78799543 "getComponent"
	public return_type class_ref 6926647 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the concrete component associated with the intent.  When receiving
an intent, this is the component that was found to best handle it (that is,
yourself) and will always be non-null; in all other cases it will be
null unless explicitly set.

@return The name of the application component to handle the intent.

@see #resolveActivity
@see #setComponent
"
      end

      operation 78799671 "getSourceBounds"
	public return_type class_ref 5772599 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the bounds of the sender of this intent, in screen coordinates.  This can be
used as a hint to the receiver for animations and the like.  Null means that there
is no source bounds.
"
      end

      operation 78799799 "resolveActivity"
	public return_type class_ref 6926647 // ComponentName
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Activity component that should be used to handle this intent.
The appropriate component is determined based on the information in the
intent, evaluated as follows:

<p>If {@link #getComponent} returns an explicit class, that is returned
without any further consideration.

<p>The activity must handle the {@link Intent#CATEGORY_DEFAULT} Intent
category to be considered.

<p>If {@link #getAction} is non-NULL, the activity must handle this
action.

<p>If {@link #resolveType} returns non-NULL, the activity must handle
this type.

<p>If {@link #addCategory} has added any categories, the activity must
handle ALL of the categories specified.

<p>If {@link #getPackage} is non-NULL, only activity components in
that application package will be considered.

<p>If there are no activities that satisfy all of these conditions, a
null string is returned.

<p>If multiple activities are found to satisfy the intent, the one with
the highest priority will be used.  If there are multiple activities
with the same priority, the system will either pick the best activity
based on user preference, or resolve to a system class that will allow
the user to pick an activity and forward from there.

<p>This method is implemented simply by calling
{@link PackageManager#resolveActivity} with the \"defaultOnly\" parameter
true.</p>
<p> This API is called for you as part of starting an activity from an
intent.  You do not normally need to call it yourself.</p>

@param pm The package manager with which to resolve the Intent.

@return Name of the component implementing an activity that can
        display the intent.

@see #setComponent
@see #getComponent
@see #resolveActivityInfo
"
      end

      operation 78799927 "resolveActivityInfo"
	public return_type class_ref 6953143 // ActivityInfo
	nparams 2
	  param inout name "pm" type class_ref 6924087 // PackageManager
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolve the Intent into an {@link ActivityInfo}
describing the activity that should execute the intent.  Resolution
follows the same rules as described for {@link #resolveActivity}, but
you get back the completely information about the resolved activity
instead of just its class name.

@param pm The package manager with which to resolve the Intent.
@param flags Addition information to retrieve as per
{@link PackageManager#getActivityInfo(ComponentName, int)
PackageManager.getActivityInfo()}.

@return PackageManager.ActivityInfo

@see #resolveActivity
"
      end

      operation 78800055 "resolveSystemService"
	public return_type class_ref 6926647 // ComponentName
	nparams 2
	  param inout name "pm" type class_ref 6924087 // PackageManager
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special function for use by the system to resolve service
intents to system apps.  Throws an exception if there are
multiple potential matches to the Intent.  Returns null if
there are no matches.
@hide
"
      end

      operation 78800183 "setAction"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the general action to be performed.

@param action An action name, such as ACTION_VIEW.  Application-specific
              actions should be prefixed with the vendor's package name.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getAction
"
      end

      operation 78800311 "setData"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "data" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the data this intent is operating on.  This method automatically
clears any type that was previously set by {@link #setType} or
{@link #setTypeAndNormalize}.

<p><em>Note: scheme matching in the Android framework is
case-sensitive, unlike the formal RFC. As a result,
you should always write your Uri with a lower case scheme,
or use {@link Uri#normalizeScheme} or
{@link #setDataAndNormalize}
to ensure that the scheme is converted to lower case.</em>

@param data The Uri of the data this intent is now targeting.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getData
@see #setDataAndNormalize
@see android.net.Uri#normalizeScheme()
"
      end

      operation 78800439 "setDataAndNormalize"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "data" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize and set the data this intent is operating on.

<p>This method automatically clears any type that was
previously set (for example, by {@link #setType}).

<p>The data Uri is normalized using
{@link android.net.Uri#normalizeScheme} before it is set,
so really this is just a convenience method for
<pre>
setData(data.normalize())
</pre>

@param data The Uri of the data this intent is now targeting.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getData
@see #setType
@see android.net.Uri#normalizeScheme
"
      end

      operation 78800567 "setType"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an explicit MIME data type.

<p>This is used to create intents that only specify a type and not data,
for example to indicate the type of data to return.

<p>This method automatically clears any data that was
previously set (for example by {@link #setData}).

<p><em>Note: MIME type matching in the Android framework is
case-sensitive, unlike formal RFC MIME types.  As a result,
you should always write your MIME types with lower case letters,
or use {@link #normalizeMimeType} or {@link #setTypeAndNormalize}
to ensure that it is converted to lower case.</em>

@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getType
@see #setTypeAndNormalize
@see #setDataAndType
@see #normalizeMimeType
"
      end

      operation 78800695 "setTypeAndNormalize"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize and set an explicit MIME data type.

<p>This is used to create intents that only specify a type and not data,
for example to indicate the type of data to return.

<p>This method automatically clears any data that was
previously set (for example by {@link #setData}).

<p>The MIME type is normalized using
{@link #normalizeMimeType} before it is set,
so really this is just a convenience method for
<pre>
setType(Intent.normalizeMimeType(type))
</pre>

@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getType
@see #setData
@see #normalizeMimeType
"
      end

      operation 78800823 "setDataAndType"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "data" type class_ref 6927159 // Uri
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Set the data for the intent along with an explicit
MIME data type.  This method should very rarely be used -- it allows you
to override the MIME type that would ordinarily be inferred from the
data with your own type given here.

<p><em>Note: MIME type and Uri scheme matching in the
Android framework is case-sensitive, unlike the formal RFC definitions.
As a result, you should always write these elements with lower case letters,
or use {@link #normalizeMimeType} or {@link android.net.Uri#normalizeScheme} or
{@link #setDataAndTypeAndNormalize}
to ensure that they are converted to lower case.</em>

@param data The Uri of the data this intent is now targeting.
@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setType
@see #setData
@see #normalizeMimeType
@see android.net.Uri#normalizeScheme
@see #setDataAndTypeAndNormalize
"
      end

      operation 78800951 "setDataAndTypeAndNormalize"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "data" type class_ref 6927159 // Uri
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Normalize and set both the data Uri and an explicit
MIME data type.  This method should very rarely be used -- it allows you
to override the MIME type that would ordinarily be inferred from the
data with your own type given here.

<p>The data Uri and the MIME type are normalize using
{@link android.net.Uri#normalizeScheme} and {@link #normalizeMimeType}
before they are set, so really this is just a convenience method for
<pre>
setDataAndType(data.normalize(), Intent.normalizeMimeType(type))
</pre>

@param data The Uri of the data this intent is now targeting.
@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setType
@see #setData
@see #setDataAndType
@see #normalizeMimeType
@see android.net.Uri#normalizeScheme
"
      end

      operation 78801079 "addCategory"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new category to the intent.  Categories provide additional detail
about the action the intent performs.  When resolving an intent, only
activities that provide <em>all</em> of the requested categories will be
used.

@param category The desired category.  This can be either one of the
              predefined Intent categories, or a custom category in your own
              namespace.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #hasCategory
@see #removeCategory
"
      end

      operation 78801207 "removeCategory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a category from an intent.

@param category The category to remove.

@see #addCategory
"
      end

      operation 78801335 "setSelector"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selector" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a selector for this Intent.  This is a modification to the kinds of
things the Intent will match.  If the selector is set, it will be used
when trying to find entities that can handle the Intent, instead of the
main contents of the Intent.  This allows you build an Intent containing
a generic protocol while targeting it more specifically.

<p>An example of where this may be used is with things like
{@link #CATEGORY_APP_BROWSER}.  This category allows you to build an
Intent that will launch the Browser application.  However, the correct
main entry point of an application is actually {@link #ACTION_MAIN}
{@link #CATEGORY_LAUNCHER} with {@link #setComponent(ComponentName)}
used to specify the actual Activity to launch.  If you launch the browser
with something different, undesired behavior may happen if the user has
previously or later launches it the normal way, since they do not match.
Instead, you can build an Intent with the MAIN action (but no ComponentName
yet specified) and set a selector with {@link #ACTION_MAIN} and
{@link #CATEGORY_APP_BROWSER} to point it specifically to the browser activity.

<p>Setting a selector does not impact the behavior of
{@link #filterEquals(Intent)} and {@link #filterHashCode()}.  This is part of the
desired behavior of a selector -- it does not impact the base meaning
of the Intent, just what kinds of things will be matched against it
when determining who can handle it.</p>

<p>You can not use both a selector and {@link #setPackage(String)} on
the same base Intent.</p>

@param selector The desired selector Intent; set to null to not use
a special selector.
"
      end

      operation 78801463 "setClipData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clip" type class_ref 6950199 // ClipData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a {@link ClipData} associated with this Intent.  This replaces any
previously set ClipData.

<p>The ClipData in an intent is not used for Intent matching or other
such operations.  Semantically it is like extras, used to transmit
additional data with the Intent.  The main feature of using this over
the extras for data is that {@link #FLAG_GRANT_READ_URI_PERMISSION}
and {@link #FLAG_GRANT_WRITE_URI_PERMISSION} will operate on any URI
items included in the clip data.  This is useful, in particular, if
you want to transmit an Intent containing multiple <code>content:</code>
URIs for which the recipient may not have global permission to access the
content provider.

<p>If the ClipData contains items that are themselves Intents, any
grant flags in those Intents will be ignored.  Only the top-level flags
of the main Intent are respected, and will be applied to all Uri or
Intent items in the clip (or sub-items of the clip).

<p>The MIME type, label, and icon in the ClipData object are not
directly used by Intent.  Applications should generally rely on the
MIME type of the Intent itself, not what it may find in the ClipData.
A common practice is to construct a ClipData for use with an Intent
with a MIME type of \"*&#47;*\".

@param clip The new clip to set.  May be null to clear the current clip.
"
      end

      operation 78801591 "prepareToLeaveUser"
	public explicit_return_type "void"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is NOT a secure mechanism to identify the user who sent the intent.
When the intent is sent to a different user, it is used to fix uris by adding the userId
who sent the intent.
@hide
"
      end

      operation 78801719 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The boolean data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getBooleanExtra(String, boolean)
"
      end

      operation 78801847 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The byte data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getByteExtra(String, byte)
"
      end

      operation 78801975 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The char data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharExtra(String, char)
"
      end

      operation 78802103 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The short data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getShortExtra(String, short)
"
      end

      operation 78802231 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The integer data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIntExtra(String, int)
"
      end

      operation 78802359 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The long data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getLongExtra(String, long)
"
      end

      operation 78802487 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The float data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getFloatExtra(String, float)
"
      end

      operation 78802615 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The double data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getDoubleExtra(String, double)
"
      end

      operation 78802743 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The String data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getStringExtra(String)
"
      end

      operation 78802871 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The CharSequence data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharSequenceExtra(String)
"
      end

      operation 78802999 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 6932663 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Parcelable data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getParcelableExtra(String)
"
      end

      operation 78803127 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 6932663 // Parcelable
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Parcelable[] data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getParcelableArrayExtra(String)
"
      end

      operation 78803255 "putParcelableArrayListExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<? extends Parcelable>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<Parcelable> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getParcelableArrayListExtra(String)
"
      end

      operation 78803383 "putIntegerArrayListExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<Integer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<Integer> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIntegerArrayListExtra(String)
"
      end

      operation 78803511 "putStringArrayListExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<String> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getStringArrayListExtra(String)
"
      end

      operation 78803639 "putCharSequenceArrayListExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<CharSequence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<CharSequence> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharSequenceArrayListExtra(String)
"
      end

      operation 78803767 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "Serializable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Serializable data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getSerializableExtra(String)
"
      end

      operation 78803895 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The boolean array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getBooleanArrayExtra(String)
"
      end

      operation 78804023 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The byte array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getByteArrayExtra(String)
"
      end

      operation 78804151 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "short"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The short array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getShortArrayExtra(String)
"
      end

      operation 78804279 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The char array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharArrayExtra(String)
"
      end

      operation 78804407 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The int array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIntArrayExtra(String)
"
      end

      operation 78804535 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The byte array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getLongArrayExtra(String)
"
      end

      operation 78804663 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The float array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getFloatArrayExtra(String)
"
      end

      operation 78804791 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The double array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getDoubleArrayExtra(String)
"
      end

      operation 78804919 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The String array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getStringArrayExtra(String)
"
      end

      operation 78805047 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "CharSequence"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The CharSequence array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharSequenceArrayExtra(String)
"
      end

      operation 78805175 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Bundle data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getBundleExtra(String)
"
      end

      operation 78805303 "putExtra"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The IBinder data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIBinderExtra(String)

@deprecated
@hide
"
      end

      operation 78805431 "putExtras"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "src" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy all extras in 'src' in to this intent.

@param src Contains the extras to copy.

@see #putExtra
"
      end

      operation 78805559 "putExtras"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a set of extended data to the intent.  The keys must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param extras The Bundle of extras to add to this intent.

@see #putExtra
@see #removeExtra
"
      end

      operation 78805687 "replaceExtras"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "src" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completely replace the extras in the Intent with the extras in the
given Intent.

@param src The exact extras contained in this Intent are copied
into the target intent, replacing any that were previously there.
"
      end

      operation 78805815 "replaceExtras"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completely replace the extras in the Intent with the given Bundle of
extras.

@param extras The new set of extras in the Intent, or null to erase
all extras.
"
      end

      operation 78805943 "removeExtra"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove extended data from the intent.

@see #putExtra
"
      end

      operation 78806071 "setFlags"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set special flags controlling how this intent is handled.  Most values
here depend on the type of component being executed by the Intent,
specifically the FLAG_ACTIVITY_* flags are all for use with
{@link Context#startActivity Context.startActivity()} and the
FLAG_RECEIVER_* flags are all for use with
{@link Context#sendBroadcast(Intent) Context.sendBroadcast()}.

<p>See the
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> documentation for important information on how some of these options impact
the behavior of your application.

@param flags The desired flags.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getFlags
@see #addFlags

@see #FLAG_GRANT_READ_URI_PERMISSION
@see #FLAG_GRANT_WRITE_URI_PERMISSION
@see #FLAG_GRANT_PERSISTABLE_URI_PERMISSION
@see #FLAG_GRANT_PREFIX_URI_PERMISSION
@see #FLAG_DEBUG_LOG_RESOLUTION
@see #FLAG_FROM_BACKGROUND
@see #FLAG_ACTIVITY_BROUGHT_TO_FRONT
@see #FLAG_ACTIVITY_CLEAR_TASK
@see #FLAG_ACTIVITY_CLEAR_TOP
@see #FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET
@see #FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS
@see #FLAG_ACTIVITY_FORWARD_RESULT
@see #FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY
@see #FLAG_ACTIVITY_MULTIPLE_TASK
@see #FLAG_ACTIVITY_NEW_DOCUMENT
@see #FLAG_ACTIVITY_NEW_TASK
@see #FLAG_ACTIVITY_NO_ANIMATION
@see #FLAG_ACTIVITY_NO_HISTORY
@see #FLAG_ACTIVITY_NO_USER_ACTION
@see #FLAG_ACTIVITY_PREVIOUS_IS_TOP
@see #FLAG_ACTIVITY_RESET_TASK_IF_NEEDED
@see #FLAG_ACTIVITY_REORDER_TO_FRONT
@see #FLAG_ACTIVITY_SINGLE_TOP
@see #FLAG_ACTIVITY_TASK_ON_HOME
@see #FLAG_RECEIVER_REGISTERED_ONLY
"
      end

      operation 78806199 "addFlags"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add additional flags to the intent (or with existing flags
value).

@param flags The new flags to set.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setFlags
"
      end

      operation 78806327 "setPackage"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Set an explicit application package name that limits
the components this Intent will resolve to.  If left to the default
value of null, all components in all applications will considered.
If non-null, the Intent can only match the components in the given
application package.

@param packageName The name of the application package to handle the
intent, or null to allow any application package.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getPackage
@see #resolveActivity
"
      end

      operation 78806455 "setComponent"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "component" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Explicitly set the component to handle the intent.
If left with the default value of null, the system will determine the
appropriate class to use based on the other fields (action, data,
type, categories) in the Intent.  If this class is defined, the
specified class will always be used regardless of the other fields.  You
should only set this value when you know you absolutely want a specific
class to be used; otherwise it is better to let the system find the
appropriate class so that you will respect the installed applications
and user preferences.

@param component The name of the application component to handle the
intent, or null to let the system find one for you.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setClass
@see #setClassName(Context, String)
@see #setClassName(String, String)
@see #getComponent
@see #resolveActivity
"
      end

      operation 78806583 "setClassName"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "packageContext" type class_ref 6923703 // Context
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for calling {@link #setComponent} with an
explicit class name.

@param packageContext A Context of the application package implementing
this class.
@param className The name of a class inside of the application package
that will be used as the component for this Intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setComponent
@see #setClass
"
      end

      operation 78806711 "setClassName"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for calling {@link #setComponent} with an
explicit application package name and class name.

@param packageName The name of the package implementing the desired
component.
@param className The name of a class inside of the application package
that will be used as the component for this Intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setComponent
@see #setClass
"
      end

      operation 78806839 "setClass"
	public return_type class_ref 6925623 // Intent
	nparams 2
	  param inout name "packageContext" type class_ref 6923703 // Context
	  param inout name "cls" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for calling {@link #setComponent(ComponentName)} with the
name returned by a {@link Class} object.

@param packageContext A Context of the application package implementing
this class.
@param cls The class name to set, equivalent to
           <code>setClassName(context, cls.getName())</code>.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setComponent
"
      end

      operation 78806967 "setSourceBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 5772599 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the bounds of the sender of this intent, in screen coordinates.  This can be
used as a hint to the receiver for animations and the like.  Null means that there
is no source bounds.
"
      end

      class 7104951 "FillInFlags"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true,
            value = {
                    FILL_IN_ACTION,
                    FILL_IN_DATA,
                    FILL_IN_CATEGORIES,
                    FILL_IN_COMPONENT,
                    FILL_IN_PACKAGE,
                    FILL_IN_SOURCE_BOUNDS,
                    FILL_IN_SELECTOR,
                    FILL_IN_CLIP_DATA
            })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 24565047 "FILL_IN_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current action value to be
overwritten, even if it is already set.

"
      end

      attribute 24565175 "FILL_IN_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current data or type value
overwritten, even if it is already set.

"
      end

      attribute 24565303 "FILL_IN_CATEGORIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current categories to be
overwritten, even if they are already set.

"
      end

      attribute 24565431 "FILL_IN_COMPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current component value to be
overwritten, even if it is already set.

"
      end

      attribute 24565559 "FILL_IN_PACKAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current package value to be
overwritten, even if it is already set.

"
      end

      attribute 24565687 "FILL_IN_SOURCE_BOUNDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current bounds rectangle to be
overwritten, even if it is already set.

"
      end

      attribute 24565815 "FILL_IN_SELECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current selector to be
overwritten, even if it is already set.

"
      end

      attribute 24565943 "FILL_IN_CLIP_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use with {@link #fillIn} to allow the current ClipData to be
overwritten, even if it is already set.

"
      end

      operation 78807095 "fillIn"
	public explicit_return_type "int"
	nparams 2
	  param inout name "other" type class_ref 6925623 // Intent
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @FillInFlags ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FillInFlags
"
	
	
	
	comment "Copy the contents of <var>other</var> in to this object, but only
where fields are not defined by this object.  For purposes of a field
being defined, the following pieces of data in the Intent are
considered to be separate fields:

<ul>
<li> action, as set by {@link #setAction}.
<li> data Uri and MIME type, as set by {@link #setData(Uri)},
{@link #setType(String)}, or {@link #setDataAndType(Uri, String)}.
<li> categories, as set by {@link #addCategory}.
<li> package, as set by {@link #setPackage}.
<li> component, as set by {@link #setComponent(ComponentName)} or
related methods.
<li> source bounds, as set by {@link #setSourceBounds}.
<li> selector, as set by {@link #setSelector(Intent)}.
<li> clip data, as set by {@link #setClipData(ClipData)}.
<li> each top-level name in the associated extras.
</ul>

<p>In addition, you can use the {@link #FILL_IN_ACTION},
{@link #FILL_IN_DATA}, {@link #FILL_IN_CATEGORIES}, {@link #FILL_IN_PACKAGE},
{@link #FILL_IN_COMPONENT}, {@link #FILL_IN_SOURCE_BOUNDS},
{@link #FILL_IN_SELECTOR}, and {@link #FILL_IN_CLIP_DATA} to override
the restriction where the corresponding field will not be replaced if
it is already set.

<p>Note: The component field will only be copied if {@link #FILL_IN_COMPONENT}
is explicitly specified.  The selector will only be copied if
{@link #FILL_IN_SELECTOR} is explicitly specified.

<p>For example, consider Intent A with {data=\"foo\", categories=\"bar\"}
and Intent B with {action=\"gotit\", data-type=\"some/thing\",
categories=\"one\",\"two\"}.

<p>Calling A.fillIn(B, Intent.FILL_IN_DATA) will result in A now
containing: {action=\"gotit\", data-type=\"some/thing\",
categories=\"bar\"}.

@param other Another Intent whose values are to be used to fill in
the current one.
@param flags Options to control which fields can be filled in.

@return Returns a bit mask of {@link #FILL_IN_ACTION},
{@link #FILL_IN_DATA}, {@link #FILL_IN_CATEGORIES}, {@link #FILL_IN_PACKAGE},
{@link #FILL_IN_COMPONENT}, {@link #FILL_IN_SOURCE_BOUNDS},
{@link #FILL_IN_SELECTOR} and {@link #FILL_IN_CLIP_DATA indicating which fields were
changed.
"
      end

      class 7105079 "FilterComparison"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15482551 // mIntent (<unidirectional association>)
	  relation 15482551 --->
	    a role_name "mIntent" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15482551 // mIntent (<unidirectional association>)
	    b parent class_ref 6925623 // Intent
	end

	attribute 24566071 "mHashCode"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78807223 "FilterComparison"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "intent" type class_ref 6925623 // Intent
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78807351 "getIntent"
	  public return_type class_ref 6925623 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the Intent that this FilterComparison represents.
@return Returns the Intent held by the FilterComparison.  Do
not modify!
"
	end

	operation 78807479 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78807607 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 78807735 "filterEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if two intents are the same for the purposes of intent
resolution (filtering). That is, if their action, data, type,
class, and categories are the same.  This does <em>not</em> compare
any extra data included in the intents.

@param other The other Intent to compare against.

@return Returns true if action, data, type, class, and categories
        are the same.
"
      end

      operation 78807863 "filterHashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate hash code that matches semantics of filterEquals().

@return Returns the hash value of the action, data, type, class, and
        categories.

@see #filterEquals
"
      end

      operation 78807991 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78808119 "toInsecureString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78808247 "toInsecureStringWithClip"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78808375 "toShortString"
	public explicit_return_type "String"
	nparams 4
	  param inout name "secure" explicit_type "boolean"
	  param inout name "comp" explicit_type "boolean"
	  param inout name "extras" explicit_type "boolean"
	  param inout name "clip" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78808503 "toShortString"
	public explicit_return_type "void"
	nparams 5
	  param inout name "b" explicit_type "StringBuilder"
	  param inout name "secure" explicit_type "boolean"
	  param inout name "comp" explicit_type "boolean"
	  param inout name "extras" explicit_type "boolean"
	  param inout name "clip" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78808631 "toURI"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call {@link #toUri} with 0 flags.
@deprecated Use {@link #toUri} instead.
"
      end

      operation 78808759 "toUri"
	public explicit_return_type "String"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert this Intent into a String holding a URI representation of it.
The returned URI string has been properly URI encoded, so it can be
used with {@link Uri#parse Uri.parse(String)}.  The URI contains the
Intent's data as the base URI, with an additional fragment describing
the action, categories, type, flags, package, component, and extras.

<p>You can convert the returned string back to an Intent with
{@link #getIntent}.

@param flags Additional operating flags.  Either 0,
{@link #URI_INTENT_SCHEME}, or {@link #URI_ANDROID_APP_SCHEME}.

@return Returns a URI encoding URI string describing the entire contents
of the Intent.
"
      end

      operation 78808887 "toUriFragment"
	private explicit_return_type "void"
	nparams 5
	  param inout name "uri" explicit_type "StringBuilder"
	  param inout name "scheme" explicit_type "String"
	  param inout name "defAction" explicit_type "String"
	  param inout name "defPackage" explicit_type "String"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78809015 "toUriInner"
	private explicit_return_type "void"
	nparams 5
	  param inout name "uri" explicit_type "StringBuilder"
	  param inout name "scheme" explicit_type "String"
	  param inout name "defAction" explicit_type "String"
	  param inout name "defPackage" explicit_type "String"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78809143 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78809271 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15482679 // CREATOR (<unidirectional association>)
	relation 15482679 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<Intent>() {
        public Intent createFromParcel(Parcel in) {
            return new Intent(in);
        }
        public Intent[] newArray(int size) {
            return new Intent[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Intent> ${name}${value};
"
	    classrelation_ref 15482679 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78809399 "Intent"
	protected explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78809527 "readFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78809655 "parseIntent"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 3
	  param inout name "resources" type class_ref 6923959 // Resources
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the \"intent\" element (and its children) from XML and instantiates
an Intent object.  The given XML parser should be located at the tag
where parsing should start (often named \"intent\"), from which the
basic action, data, type, and package and class name will be
retrieved.  The function will then parse in to any child elements,
looking for <category android:name=\"xxx\"> tags to add categories and
<extra android:name=\"xxx\" android:value=\"yyy\"> to attach extra data
to the intent.

@param resources The Resources to use when inflating resources.
@param parser The XML parser pointing at an \"intent\" tag.
@param attrs The AttributeSet interface for retrieving extended
attribute data at the current <var>parser</var> location.
@return An Intent object matching the XML data.
@throws XmlPullParserException If there was an XML parsing error.
@throws IOException If there was an I/O error.
"
      end

      operation 78809783 "saveToXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78809911 "restoreFromXml"
	class_operation public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "in" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "XmlPullParserException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78810039 "normalizeMimeType"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize a MIME data type.

<p>A normalized MIME type has white-space trimmed,
content-type parameters removed, and is lower-case.
This aligns the type with Android best practices for
intent filtering.

<p>For example, \"text/plain; charset=utf-8\" becomes \"text/plain\".
\"text/x-vCard\" becomes \"text/x-vcard\".

<p>All MIME types received from outside Android (such as user input,
or external sources like Bluetooth, NFC, or the Internet) should
be normalized before they are used to create an Intent.

@param type MIME data type to normalize
@return normalized MIME data type, or null if the input was null
@see #setType
@see #setTypeAndNormalize
"
      end

      operation 78810167 "prepareToLeaveProcess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare this {@link Intent} to leave an app process.

@hide
"
      end

      operation 78810295 "prepareToLeaveProcess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "leavingPackage" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare this {@link Intent} to leave an app process.

@hide
"
      end

      operation 78810423 "prepareToEnterProcess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 78810551 "fixUris"
	public explicit_return_type "void"
	nparams 1
	  param in name "contentUserHint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 78810679 "migrateExtraStreamToClipData"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Migrate any {@link #EXTRA_STREAM} in {@link #ACTION_SEND} and
{@link #ACTION_SEND_MULTIPLE} to {@link ClipData}. Also inspects nested
intents in {@link #ACTION_CHOOSER}.

@return Whether any contents were migrated.
@hide
"
      end

      operation 78810807 "makeClipItem"
	class_operation private return_type class_ref 7100343 // Item
	nparams 4
	  param inout name "streams" explicit_type "ArrayList<Uri>"
	  param inout name "texts" explicit_type "ArrayList<CharSequence>"
	  param inout name "htmlTexts" explicit_type "ArrayList<String>"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78810935 "isDocument"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 6926007 "IntentSender"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A description of an Intent and target action to perform with it.
The returned object can be
handed to other applications so that they can perform the action you
described on your behalf at a later time.

<p>By giving a IntentSender to another application,
you are granting it the right to perform the operation you have specified
as if the other application was yourself (with the same permissions and
identity).  As such, you should be careful about how you build the IntentSender:
often, for example, the base Intent you supply will have the component
name explicitly set to one of your own components, to ensure it is ultimately
sent there and nowhere else.

<p>A IntentSender itself is simply a reference to a token maintained by
the system describing the original data used to retrieve it.  This means
that, even if its owning application's process is killed, the
IntentSender itself will remain usable from other processes that
have been given it.  If the creating application later re-retrieves the
same kind of IntentSender (same operation, same Intent action, data,
categories, and components, and same flags), it will receive a IntentSender
representing the same token if that is still valid.

<p>Instances of this class can not be made directly, but rather must be
created from an existing {@link android.app.PendingIntent} with
{@link android.app.PendingIntent#getIntentSender() PendingIntent.getIntentSender()}.
"
      class 6926135 "SendIntentException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15486647 // <generalisation>
	  relation 15486647 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15486647 // <generalisation>
	    b parent class_ref 7007287 // AndroidException
	end

	operation 78821943 "SendIntentException"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78822071 "SendIntentException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "name" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78822199 "SendIntentException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "cause" explicit_type "Exception"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15486391 // <realization>
	relation 15486391 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15486391 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15486519 // mTarget (<unidirectional association>)
	relation 15486519 --->
	  a role_name "mTarget" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15486519 // mTarget (<unidirectional association>)
	  b parent class_ref 6988215 // IIntentSender
      end

      class 7105591 "OnFinished"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78822327 "onSendFinished"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "IntentSender" type class_ref 6926007 // IntentSender
	    param inout name "intent" type class_ref 6925623 // Intent
	    param in name "resultCode" explicit_type "int"
	    param inout name "resultData" explicit_type "String"
	    param inout name "resultExtras" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a send operation as completed.

@param IntentSender The IntentSender this operation was sent through.
@param intent The original Intent that was sent.
@param resultCode The final result code determined by the send.
@param resultData The final data collected by a broadcast.
@param resultExtras The final extras collected by a broadcast.
"
	end
      end

      class 7105719 "FinishedDispatcher"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15486775 // <generalisation>
	  relation 15486775 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15486775 // <generalisation>
	    b parent class_ref 7036727 // Stub
	end

	classrelation 15487031 // mIntentSender (<unidirectional association>)
	  relation 15487031 --->
	    a role_name "mIntentSender" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15487031 // mIntentSender (<unidirectional association>)
	    b parent class_ref 6926007 // IntentSender
	end

	classrelation 15487159 // mWho (<unidirectional association>)
	  relation 15487159 --->
	    a role_name "mWho" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15487159 // mWho (<unidirectional association>)
	    b parent class_ref 7105591 // OnFinished
	end

	classrelation 15487287 // mHandler (<unidirectional association>)
	  relation 15487287 --->
	    a role_name "mHandler" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15487287 // mHandler (<unidirectional association>)
	    b parent class_ref 6926391 // Handler
	end

	classrelation 15487415 // mIntent (<unidirectional association>)
	  relation 15487415 --->
	    a role_name "mIntent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15487415 // mIntent (<unidirectional association>)
	    b parent class_ref 6925623 // Intent
	end

	attribute 24569399 "mResultCode"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15487671 // mResultExtras (<unidirectional association>)
	  relation 15487671 --->
	    a role_name "mResultExtras" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15487671 // mResultExtras (<unidirectional association>)
	    b parent class_ref 6925879 // Bundle
	end

	operation 78822455 "FinishedDispatcher"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "pi" type class_ref 6926007 // IntentSender
	    param inout name "who" type class_ref 7105591 // OnFinished
	    param inout name "handler" type class_ref 6926391 // Handler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78822583 "performReceive"
	  public explicit_return_type "void"
	  nparams 7
	    param inout name "intent" type class_ref 6925623 // Intent
	    param in name "resultCode" explicit_type "int"
	    param inout name "data" explicit_type "String"
	    param inout name "extras" type class_ref 6925879 // Bundle
	    param inout name "serialized" explicit_type "boolean"
	    param inout name "sticky" explicit_type "boolean"
	    param in name "sendingUser" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78822711 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 78822839 "sendIntent"
	public explicit_return_type "void"
	nparams 5
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "code" explicit_type "int"
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "onFinished" type class_ref 7105591 // OnFinished
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 1
	  exception class_ref 6926135 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform the operation associated with this IntentSender, allowing the
caller to specify information about the Intent to use and be notified
when the send has completed.

@param context The Context of the caller.  This may be null if
<var>intent</var> is also null.
@param code Result code to supply back to the IntentSender's target.
@param intent Additional Intent data.  See {@link Intent#fillIn
Intent.fillIn()} for information on how this is applied to the
original Intent.  Use null to not modify the original Intent.
@param onFinished The object to call back on when the send has
completed, or null for no callback.
@param handler Handler identifying the thread on which the callback
should happen.  If null, the callback will happen from the thread
pool of the process.


@throws SendIntentException Throws CanceledIntentException if the IntentSender
is no longer allowing more intents to be sent through it.
"
      end

      operation 78822967 "sendIntent"
	public explicit_return_type "void"
	nparams 6
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "code" explicit_type "int"
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "onFinished" type class_ref 7105591 // OnFinished
	  param inout name "handler" type class_ref 6926391 // Handler
	  param inout name "requiredPermission" explicit_type "String"
	nexceptions 1
	  exception class_ref 6926135 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform the operation associated with this IntentSender, allowing the
caller to specify information about the Intent to use and be notified
when the send has completed.

@param context The Context of the caller.  This may be null if
<var>intent</var> is also null.
@param code Result code to supply back to the IntentSender's target.
@param intent Additional Intent data.  See {@link Intent#fillIn
Intent.fillIn()} for information on how this is applied to the
original Intent.  Use null to not modify the original Intent.
@param onFinished The object to call back on when the send has
completed, or null for no callback.
@param handler Handler identifying the thread on which the callback
should happen.  If null, the callback will happen from the thread
pool of the process.
@param requiredPermission Name of permission that a recipient of the PendingIntent
is required to hold.  This is only valid for broadcast intents, and
corresponds to the permission argument in
{@link Context#sendBroadcast(Intent, String) Context.sendOrderedBroadcast(Intent, String)}.
If null, no permission is required.


@throws SendIntentException Throws CanceledIntentException if the IntentSender
is no longer allowing more intents to be sent through it.
"
      end

      operation 78823095 "getTargetPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Renamed to {@link #getCreatorPackage()}.
"
      end

      operation 78823223 "getCreatorPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the package name of the application that created this
IntentSender, that is the identity under which you will actually be
sending the Intent.  The returned string is supplied by the system, so
that an application can not spoof its package.

@return The package name of the PendingIntent, or null if there is
none associated with it.
"
      end

      operation 78823351 "getCreatorUid"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the uid of the application that created this
PendingIntent, that is the identity under which you will actually be
sending the Intent.  The returned integer is supplied by the system, so
that an application can not spoof its uid.

@return The uid of the PendingIntent, or -1 if there is
none associated with it.
"
      end

      operation 78823479 "getCreatorUserHandle"
	public return_type class_ref 6925751 // UserHandle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user handle of the application that created this
PendingIntent, that is the user under which you will actually be
sending the Intent.  The returned UserHandle is supplied by the system, so
that an application can not spoof its user.  See
{@link android.os.Process#myUserHandle() Process.myUserHandle()} for
more explanation of user handles.

@return The user handle of the PendingIntent, or null if there is
none associated with it.
"
      end

      operation 78823607 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "otherObj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Comparison operator on two IntentSender objects, such that true
is returned then they both represent the same operation from the
same package.
"
      end

      operation 78823735 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78823863 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78823991 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78824119 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15487799 // CREATOR (<unidirectional association>)
	relation 15487799 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<IntentSender>() {
        public IntentSender createFromParcel(Parcel in) {
            IBinder target = in.readStrongBinder();
            return target != null ? new IntentSender(target) : null;
        }

        public IntentSender[] newArray(int size) {
            return new IntentSender[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IntentSender> ${name}${value};
"
	    classrelation_ref 15487799 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78824247 "writeIntentSenderOrNullToParcel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sender" type class_ref 6926007 // IntentSender
	  param inout name "out" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for writing either a IntentSender or null pointer to
a Parcel.  You must use this with {@link #readIntentSenderOrNullFromParcel}
for later reading it.

@param sender The IntentSender to write, or null.
@param out Where to write the IntentSender.
"
      end

      operation 78824375 "readIntentSenderOrNullFromParcel"
	class_operation public return_type class_ref 6926007 // IntentSender
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for reading either a Messenger or null pointer from
a Parcel.  You must have previously written the Messenger with
{@link #writeIntentSenderOrNullToParcel}.

@param in The Parcel containing the written Messenger.

@return Returns the Messenger read from the Parcel, or null if null had
been written.
"
      end

      operation 78824503 "getTarget"
	public return_type class_ref 6988215 // IIntentSender
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78824631 "IntentSender"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 6988215 // IIntentSender
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78824759 "IntentSender"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 6926263 "BroadcastReceiver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class for code that will receive intents sent by sendBroadcast().

<p>If you don't need to send broadcasts across applications, consider using
this class with {@link android.support.v4.content.LocalBroadcastManager} instead
of the more general facilities described below.  This will give you a much
more efficient implementation (no cross-process communication needed) and allow
you to avoid thinking about any security issues related to other applications
being able to receive or send your broadcasts.

<p>You can either dynamically register an instance of this class with
{@link Context#registerReceiver Context.registerReceiver()}
or statically publish an implementation through the
{@link android.R.styleable#AndroidManifestReceiver &lt;receiver&gt;}
tag in your <code>AndroidManifest.xml</code>.

<p><em><strong>Note:</strong></em>
&nbsp;&nbsp;&nbsp;If registering a receiver in your
{@link android.app.Activity#onResume() Activity.onResume()}
implementation, you should unregister it in 
{@link android.app.Activity#onPause() Activity.onPause()}.
(You won't receive intents when paused, 
and this will cut down on unnecessary system overhead). Do not unregister in 
{@link android.app.Activity#onSaveInstanceState(android.os.Bundle) Activity.onSaveInstanceState()},
because this won't be called if the user moves back in the history
stack.

<p>There are two major classes of broadcasts that can be received:</p>
<ul>
<li> <b>Normal broadcasts</b> (sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}) are completely asynchronous.  All receivers of the
broadcast are run in an undefined order, often at the same time.  This is
more efficient, but means that receivers cannot use the result or abort
APIs included here.
<li> <b>Ordered broadcasts</b> (sent with {@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}) are delivered to one receiver at a time.
As each receiver executes in turn, it can propagate a result to the next
receiver, or it can completely abort the broadcast so that it won't be passed
to other receivers.  The order receivers run in can be controlled with the
{@link android.R.styleable#AndroidManifestIntentFilter_priority
android:priority} attribute of the matching intent-filter; receivers with
the same priority will be run in an arbitrary order.
</ul>

<p>Even in the case of normal broadcasts, the system may in some
situations revert to delivering the broadcast one receiver at a time.  In
particular, for receivers that may require the creation of a process, only
one will be run at a time to avoid overloading the system with new processes.
In this situation, however, the non-ordered semantics hold: these receivers still
cannot return results or abort their broadcast.</p>

<p>Note that, although the Intent class is used for sending and receiving
these broadcasts, the Intent broadcast mechanism here is completely separate
from Intents that are used to start Activities with
{@link Context#startActivity Context.startActivity()}.
There is no way for a BroadcastReceiver
to see or capture Intents used with startActivity(); likewise, when
you broadcast an Intent, you will never find or start an Activity.
These two operations are semantically very different: starting an
Activity with an Intent is a foreground operation that modifies what the
user is currently interacting with; broadcasting an Intent is a background
operation that the user is not normally aware of.

<p>The BroadcastReceiver class (when launched as a component through
a manifest's {@link android.R.styleable#AndroidManifestReceiver &lt;receiver&gt;}
tag) is an important part of an
<a href=\"{@docRoot}guide/topics/fundamentals.html#lcycles\">application's overall lifecycle</a>.</p>

<p>Topics covered here:
<ol>
<li><a href=\"#Security\">Security</a>
<li><a href=\"#ReceiverLifecycle\">Receiver Lifecycle</a>
<li><a href=\"#ProcessLifecycle\">Process Lifecycle</a>
</ol>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about how to use this class to receive and resolve intents, read the
<a href=\"{@docRoot}guide/topics/intents/intents-filters.html\">Intents and Intent Filters</a>
developer guide.</p>
</div>

<a name=\"Security\"></a>
<h3>Security</h3>

<p>Receivers used with the {@link Context} APIs are by their nature a
cross-application facility, so you must consider how other applications
may be able to abuse your use of them.  Some things to consider are:

<ul>
<li><p>The Intent namespace is global.  Make sure that Intent action names and
other strings are written in a namespace you own, or else you may inadvertently
conflict with other applications.
<li><p>When you use {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)},
<em>any</em> application may send broadcasts to that registered receiver.  You can
control who can send broadcasts to it through permissions described below.
<li><p>When you publish a receiver in your application's manifest and specify
intent-filters for it, any other application can send broadcasts to it regardless
of the filters you specify.  To prevent others from sending to it, make it
unavailable to them with <code>android:exported=\"false\"</code>.
<li><p>When you use {@link Context#sendBroadcast(Intent)} or related methods,
normally any other application can receive these broadcasts.  You can control who
can receive such broadcasts through permissions described below.  Alternatively,
starting with {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}, you
can also safely restrict the broadcast to a single application with
{@link Intent#setPackage(String) Intent.setPackage}
</ul>

<p>None of these issues exist when using
{@link android.support.v4.content.LocalBroadcastManager}, since intents
broadcast it never go outside of the current process.

<p>Access permissions can be enforced by either the sender or receiver
of a broadcast.

<p>To enforce a permission when sending, you supply a non-null
<var>permission</var> argument to
{@link Context#sendBroadcast(Intent, String)} or
{@link Context#sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler, int, String, Bundle)}.
Only receivers who have been granted this permission
(by requesting it with the
{@link android.R.styleable#AndroidManifestUsesPermission &lt;uses-permission&gt;}
tag in their <code>AndroidManifest.xml</code>) will be able to receive
the broadcast.

<p>To enforce a permission when receiving, you supply a non-null
<var>permission</var> when registering your receiver -- either when calling
{@link Context#registerReceiver(BroadcastReceiver, IntentFilter, String, android.os.Handler)}
or in the static
{@link android.R.styleable#AndroidManifestReceiver &lt;receiver&gt;}
tag in your <code>AndroidManifest.xml</code>.  Only broadcasters who have
been granted this permission (by requesting it with the
{@link android.R.styleable#AndroidManifestUsesPermission &lt;uses-permission&gt;}
tag in their <code>AndroidManifest.xml</code>) will be able to send an
Intent to the receiver.

<p>See the <a href=\"{@docRoot}guide/topics/security/security.html\">Security and Permissions</a>
document for more information on permissions and security in general.

<a name=\"ReceiverLifecycle\"></a>
<h3>Receiver Lifecycle</h3>

<p>A BroadcastReceiver object is only valid for the duration of the call
to {@link #onReceive}.  Once your code returns from this function,
the system considers the object to be finished and no longer active.

<p>This has important repercussions to what you can do in an
{@link #onReceive} implementation: anything that requires asynchronous
operation is not available, because you will need to return from the
function to handle the asynchronous operation, but at that point the
BroadcastReceiver is no longer active and thus the system is free to kill
its process before the asynchronous operation completes.

<p>In particular, you may <i>not</i> show a dialog or bind to a service from
within a BroadcastReceiver.  For the former, you should instead use the
{@link android.app.NotificationManager} API.  For the latter, you can
use {@link android.content.Context#startService Context.startService()} to
send a command to the service.

<a name=\"ProcessLifecycle\"></a>
<h3>Process Lifecycle</h3>

<p>A process that is currently executing a BroadcastReceiver (that is,
currently running the code in its {@link #onReceive} method) is
considered to be a foreground process and will be kept running by the
system except under cases of extreme memory pressure.

<p>Once you return from onReceive(), the BroadcastReceiver is no longer
active, and its hosting process is only as important as any other application
components that are running in it.  This is especially important because if
that process was only hosting the BroadcastReceiver (a common case for
applications that the user has never or not recently interacted with), then
upon returning from onReceive() the system will consider its process
to be empty and aggressively kill it so that resources are available for other
more important processes.

<p>This means that for longer-running operations you will often use
a {@link android.app.Service} in conjunction with a BroadcastReceiver to keep
the containing process active for the entire time of your operation.
"
      class 6995127 "PendingResult"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24102199 "TYPE_COMPONENT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " @hide 
"
	end

	attribute 24102327 "TYPE_REGISTERED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " @hide 
"
	end

	attribute 24102455 "TYPE_UNREGISTERED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " @hide 
"
	end

	attribute 24102583 "mType"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24102711 "mOrderedHint"
	  const_attribute package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24102839 "mInitialStickyHint"
	  const_attribute package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15072055 // mToken (<unidirectional association>)
	  relation 15072055 --->
	    a role_name "mToken" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15072055 // mToken (<unidirectional association>)
	    b parent class_ref 6927031 // IBinder
	end

	attribute 24102967 "mSendingUser"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24103095 "mFlags"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24103223 "mResultCode"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15072311 // mResultExtras (<unidirectional association>)
	  relation 15072311 --->
	    a role_name "mResultExtras" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15072311 // mResultExtras (<unidirectional association>)
	    b parent class_ref 6925879 // Bundle
	end

	attribute 24103351 "mAbortBroadcast"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24103479 "mFinished"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 77622711 "PendingResult"
	  public explicit_return_type ""
	  nparams 9
	    param in name "resultCode" explicit_type "int"
	    param inout name "resultData" explicit_type "String"
	    param inout name "resultExtras" type class_ref 6925879 // Bundle
	    param in name "type" explicit_type "int"
	    param inout name "ordered" explicit_type "boolean"
	    param inout name "sticky" explicit_type "boolean"
	    param inout name "token" type class_ref 6927031 // IBinder
	    param in name "userId" explicit_type "int"
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 77622839 "setResultCode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "code" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResultCode(int)
BroadcastReceiver.setResultCode(int)} for
asynchronous broadcast handling.
"
	end

	operation 77622967 "getResultCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getResultCode()
BroadcastReceiver.getResultCode()} for
asynchronous broadcast handling.
"
	end

	operation 77623095 "setResultData"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "data" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResultData(String)
BroadcastReceiver.setResultData(String)} for
asynchronous broadcast handling.
"
	end

	operation 77623223 "getResultData"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getResultData()
BroadcastReceiver.getResultData()} for
asynchronous broadcast handling.
"
	end

	operation 77623351 "setResultExtras"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "extras" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResultExtras(Bundle)
BroadcastReceiver.setResultExtras(Bundle)} for
asynchronous broadcast handling.
"
	end

	operation 77623479 "getResultExtras"
	  public return_type class_ref 6925879 // Bundle
	  nparams 1
	    param inout name "makeMap" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getResultExtras(boolean)
BroadcastReceiver.getResultExtras(boolean)} for
asynchronous broadcast handling.
"
	end

	operation 77623607 "setResult"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "String"
	    param inout name "extras" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResult(int, String, Bundle)
BroadcastReceiver.setResult(int, String, Bundle)} for
asynchronous broadcast handling.
"
	end

	operation 77623735 "getAbortBroadcast"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getAbortBroadcast()
BroadcastReceiver.getAbortBroadcast()} for
asynchronous broadcast handling.
"
	end

	operation 77623863 "abortBroadcast"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#abortBroadcast()
BroadcastReceiver.abortBroadcast()} for
asynchronous broadcast handling.
"
	end

	operation 77623991 "clearAbortBroadcast"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#clearAbortBroadcast()
BroadcastReceiver.clearAbortBroadcast()} for
asynchronous broadcast handling.
"
	end

	operation 77624119 "finish"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Finish the broadcast.  The current result will be sent and the
next broadcast will proceed.
"
	end

	operation 77624247 "setExtrasClassLoader"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "cl" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 77624375 "sendFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "am" type class_ref 6928823 // IActivityManager
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 77624503 "getSendingUserId"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 77624631 "checkSynchronousHint"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15071927 // mPendingResult (<unidirectional association>)
	relation 15071927 --->
	  a role_name "mPendingResult" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15071927 // mPendingResult (<unidirectional association>)
	  b parent class_ref 6995127 // PendingResult
      end

      attribute 24102071 "mDebugUnregister"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 77624759 "BroadcastReceiver"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77624887 "onReceive"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when the BroadcastReceiver is receiving an Intent
broadcast.  During this time you can use the other methods on
BroadcastReceiver to view/modify the current result values.  This method
is always called within the main thread of its process, unless you
explicitly asked for it to be scheduled on a different thread using
{@link android.content.Context#registerReceiver(BroadcastReceiver,
IntentFilter, String, android.os.Handler)}. When it runs on the main
thread you should
never perform long-running operations in it (there is a timeout of
10 seconds that the system allows before considering the receiver to
be blocked and a candidate to be killed). You cannot launch a popup dialog
in your implementation of onReceive().

<p><b>If this BroadcastReceiver was launched through a &lt;receiver&gt; tag,
then the object is no longer alive after returning from this
function.</b>  This means you should not perform any operations that
return a result to you asynchronously -- in particular, for interacting
with services, you should use
{@link Context#startService(Intent)} instead of
{@link Context#bindService(Intent, ServiceConnection, int)}.  If you wish
to interact with a service that is already running, you can use
{@link #peekService}.

<p>The Intent filters used in {@link android.content.Context#registerReceiver}
and in application manifests are <em>not</em> guaranteed to be exclusive. They
are hints to the operating system about how to find suitable recipients. It is
possible for senders to force delivery to specific recipients, bypassing filter
resolution.  For this reason, {@link #onReceive(Context, Intent) onReceive()}
implementations should respond only to known actions, ignoring any unexpected
Intents that they may receive.

@param context The Context in which the receiver is running.
@param intent The Intent being received.
"
      end

      operation 77625015 "goAsync"
	public return_type class_ref 6995127 // PendingResult
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This can be called by an application in {@link #onReceive} to allow
it to keep the broadcast active after returning from that function.
This does <em>not</em> change the expectation of being relatively
responsive to the broadcast (finishing it within 10s), but does allow
the implementation to move work related to it over to another thread
to avoid glitching the main UI thread due to disk IO.

@return Returns a {@link PendingResult} representing the result of
the active broadcast.  The BroadcastRecord itself is no longer active;
all data and other interaction must go through {@link PendingResult}
APIs.  The {@link PendingResult#finish PendingResult.finish()} method
must be called once processing of the broadcast is done.
"
      end

      operation 77625143 "peekService"
	public return_type class_ref 6927031 // IBinder
	nparams 2
	  param inout name "myContext" type class_ref 6923703 // Context
	  param inout name "service" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide a binder to an already-running service.  This method is synchronous
and will not start the target service if it is not present, so it is safe
to call from {@link #onReceive}.

@param myContext The Context that had been passed to {@link #onReceive(Context, Intent)}
@param service The Intent indicating the service you wish to use.  See {@link
Context#startService(Intent)} for more information.
"
      end

      operation 77625271 "setResultCode"
	public explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the current result code of this broadcast; only works with
broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  Often uses the
Activity {@link android.app.Activity#RESULT_CANCELED} and
{@link android.app.Activity#RESULT_OK} constants, though the
actual meaning of this value is ultimately up to the broadcaster.

<p class=\"note\">This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</p>

@param code The new result code.

@see #setResult(int, String, Bundle)
"
      end

      operation 77625399 "getResultCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current result code, as set by the previous receiver.

@return int The current result code.
"
      end

      operation 77625527 "setResultData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the current result data of this broadcast; only works with
broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  This is an arbitrary
string whose interpretation is up to the broadcaster.

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>

@param data The new result data; may be null.

@see #setResult(int, String, Bundle)
"
      end

      operation 77625655 "getResultData"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current result data, as set by the previous receiver.
Often this is null.

@return String The current result data; may be null.
"
      end

      operation 77625783 "setResultExtras"
	public explicit_return_type "void"
	nparams 1
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the current result extras of this broadcast; only works with
broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  This is a Bundle
holding arbitrary data, whose interpretation is up to the
broadcaster.  Can be set to null.  Calling this method completely
replaces the current map (if any).

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>

@param extras The new extra data map; may be null.

@see #setResult(int, String, Bundle)
"
      end

      operation 77625911 "getResultExtras"
	public return_type class_ref 6925879 // Bundle
	nparams 1
	  param inout name "makeMap" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current result extra data, as set by the previous receiver.
Any changes you make to the returned Map will be propagated to the next
receiver.

@param makeMap If true then a new empty Map will be made for you if the
               current Map is null; if false you should be prepared to
               receive a null Map.

@return Map The current extras map.
"
      end

      operation 77626039 "setResult"
	public explicit_return_type "void"
	nparams 3
	  param in name "code" explicit_type "int"
	  param inout name "data" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change all of the result data returned from this broadcasts; only works
with broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  All current result data is replaced
by the value given to this method.

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>

@param code The new result code.  Often uses the
Activity {@link android.app.Activity#RESULT_CANCELED} and
{@link android.app.Activity#RESULT_OK} constants, though the
actual meaning of this value is ultimately up to the broadcaster.
@param data The new result data.  This is an arbitrary
string whose interpretation is up to the broadcaster; may be null.
@param extras The new extra data map.  This is a Bundle
holding arbitrary data, whose interpretation is up to the
broadcaster.  Can be set to null.  This completely
replaces the current map (if any).
"
      end

      operation 77626167 "getAbortBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flag indicating whether or not this receiver should
abort the current broadcast.

@return True if the broadcast should be aborted.
"
      end

      operation 77626295 "abortBroadcast"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating that this receiver should abort the
current broadcast; only works with broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  This will prevent
any other broadcast receivers from receiving the broadcast. It will still
call {@link #onReceive} of the BroadcastReceiver that the caller of 
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast} passed in.

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>
"
      end

      operation 77626423 "clearAbortBroadcast"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the flag indicating that this receiver should abort the current
broadcast.
"
      end

      operation 77626551 "isOrderedBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the receiver is currently processing an ordered
broadcast.
"
      end

      operation 77626679 "isInitialStickyBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the receiver is currently processing the initial
value of a sticky broadcast -- that is, the value that was last
broadcast and is currently held in the sticky cache, so this is
not directly the result of a broadcast right now.
"
      end

      operation 77626807 "setOrderedHint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isOrdered" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use, sets the hint about whether this BroadcastReceiver is
running in ordered mode.
"
      end

      operation 77626935 "setPendingResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 6995127 // PendingResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use to set the result data that is active. @hide
"
      end

      operation 77627063 "getPendingResult"
	public return_type class_ref 6995127 // PendingResult
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use to set the result data that is active. @hide
"
      end

      operation 77627191 "getSendingUserId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77627319 "setDebugUnregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "debug" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control inclusion of debugging help for mismatched
calls to {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver()}.
If called with true, before given to registerReceiver(), then the
callstack of the following {@link Context#unregisterReceiver(BroadcastReceiver)
Context.unregisterReceiver()} call is retained, to be printed if a later
incorrect unregister call is made.  Note that doing this requires retaining
information about the BroadcastReceiver for the lifetime of the app,
resulting in a leak -- this should only be used for debugging.
"
      end

      operation 77627447 "getDebugUnregister"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the last value given to {@link #setDebugUnregister}.
"
      end

      operation 77627575 "checkSynchronousHint"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6926519 "IntentFilter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Structured description of Intent values to be matched.  An IntentFilter can
match against actions, categories, and data (either via its type, scheme,
and/or path) in an Intent.  It also includes a \"priority\" value which is
used to order multiple matching filters.

<p>IntentFilter objects are often created in XML as part of a package's
{@link android.R.styleable#AndroidManifest AndroidManifest.xml} file,
using {@link android.R.styleable#AndroidManifestIntentFilter intent-filter}
tags.

<p>There are three Intent characteristics you can filter on: the
<em>action</em>, <em>data</em>, and <em>categories</em>.  For each of these
characteristics you can provide
multiple possible matching values (via {@link #addAction},
{@link #addDataType}, {@link #addDataScheme}, {@link #addDataSchemeSpecificPart},
{@link #addDataAuthority}, {@link #addDataPath}, and {@link #addCategory}, respectively).
For actions, the field
will not be tested if no values have been given (treating it as a wildcard);
if no data characteristics are specified, however, then the filter will
only match intents that contain no data.

<p>The data characteristic is
itself divided into three attributes: type, scheme, authority, and path.
Any that are
specified must match the contents of the Intent.  If you specify a scheme
but no type, only Intent that does not have a type (such as mailto:) will
match; a content: URI will never match because they always have a MIME type
that is supplied by their content provider.  Specifying a type with no scheme
has somewhat special meaning: it will match either an Intent with no URI
field, or an Intent with a content: or file: URI.  If you specify neither,
then only an Intent with no data or type will match.  To specify an authority,
you must also specify one or more schemes that it is associated with.
To specify a path, you also must specify both one or more authorities and
one or more schemes it is associated with.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about how to create and resolve intents, read the
<a href=\"{@docRoot}guide/topics/intents/intents-filters.html\">Intents and Intent Filters</a>
developer guide.</p>
</div>

<h3>Filter Rules</h3>
<p>A match is based on the following rules.  Note that
for an IntentFilter to match an Intent, three conditions must hold:
the <strong>action</strong> and <strong>category</strong> must match, and
the data (both the <strong>data type</strong> and
<strong>data scheme+authority+path</strong> if specified) must match
(see {@link #match(ContentResolver, Intent, boolean, String)} for more details
on how the data fields match).

<p><strong>Action</strong> matches if any of the given values match the
Intent action; if the filter specifies no actions, then it will only match
Intents that do not contain an action.

<p><strong>Data Type</strong> matches if any of the given values match the
Intent type.  The Intent
type is determined by calling {@link Intent#resolveType}.  A wildcard can be
used for the MIME sub-type, in both the Intent and IntentFilter, so that the
type \"audio/*\" will match \"audio/mpeg\", \"audio/aiff\", \"audio/*\", etc.
<em>Note that MIME type matching here is <b>case sensitive</b>, unlike
formal RFC MIME types!</em>  You should thus always use lower case letters
for your MIME types.

<p><strong>Data Scheme</strong> matches if any of the given values match the
Intent data's scheme.
The Intent scheme is determined by calling {@link Intent#getData}
and {@link android.net.Uri#getScheme} on that URI.
<em>Note that scheme matching here is <b>case sensitive</b>, unlike
formal RFC schemes!</em>  You should thus always use lower case letters
for your schemes.

<p><strong>Data Scheme Specific Part</strong> matches if any of the given values match
the Intent's data scheme specific part <em>and</em> one of the data schemes in the filter
has matched the Intent, <em>or</em> no scheme specific parts were supplied in the filter.
The Intent scheme specific part is determined by calling
{@link Intent#getData} and {@link android.net.Uri#getSchemeSpecificPart} on that URI.
<em>Note that scheme specific part matching is <b>case sensitive</b>.</em>

<p><strong>Data Authority</strong> matches if any of the given values match
the Intent's data authority <em>and</em> one of the data schemes in the filter
has matched the Intent, <em>or</em> no authories were supplied in the filter.
The Intent authority is determined by calling
{@link Intent#getData} and {@link android.net.Uri#getAuthority} on that URI.
<em>Note that authority matching here is <b>case sensitive</b>, unlike
formal RFC host names!</em>  You should thus always use lower case letters
for your authority.

<p><strong>Data Path</strong> matches if any of the given values match the
Intent's data path <em>and</em> both a scheme and authority in the filter
has matched against the Intent, <em>or</em> no paths were supplied in the
filter.  The Intent authority is determined by calling
{@link Intent#getData} and {@link android.net.Uri#getPath} on that URI.

<p><strong>Categories</strong> match if <em>all</em> of the categories in
the Intent match categories given in the filter.  Extra categories in the
filter that are not in the Intent will not cause the match to fail.  Note
that unlike the action, an IntentFilter with no categories
will only match an Intent that does not have any categories.
"
      classrelation 15482807 // <realization>
	relation 15482807 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15482807 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24566199 "SYSTEM_HIGH_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter {@link #setPriority} value at which system high-priority
receivers are placed; that is, receivers that should execute before
application code. Applications should never use filters with this or
higher priorities.

@see #setPriority

"
      end

      attribute 24566327 "SYSTEM_LOW_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter {@link #setPriority} value at which system low-priority
receivers are placed; that is, receivers that should execute after
application code. Applications should never use filters with this or
lower priorities.

@see #setPriority

"
      end

      attribute 24566455 "MATCH_CATEGORY_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xfff0000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of a match constant that describes the category of match
that occurred.  May be either {@link #MATCH_CATEGORY_EMPTY},
{@link #MATCH_CATEGORY_SCHEME}, {@link #MATCH_CATEGORY_SCHEME_SPECIFIC_PART},
{@link #MATCH_CATEGORY_HOST}, {@link #MATCH_CATEGORY_PORT},
{@link #MATCH_CATEGORY_PATH}, or {@link #MATCH_CATEGORY_TYPE}.  Higher
values indicate a better match.

"
      end

      attribute 24566583 "MATCH_ADJUSTMENT_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x000ffff"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of a match constant that applies a quality adjustment to the
basic category of match.  The value {@link #MATCH_ADJUSTMENT_NORMAL}
is no adjustment; higher numbers than that improve the quality, while
lower numbers reduce it.

"
      end

      attribute 24566711 "MATCH_ADJUSTMENT_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Quality adjustment applied to the category of match that signifies
the default, base value; higher numbers improve the quality while
lower numbers reduce it.

"
      end

      attribute 24566839 "MATCH_CATEGORY_EMPTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0100000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent that had no data specified.

"
      end

      attribute 24566967 "MATCH_CATEGORY_SCHEME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0200000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent with the same data URI scheme.

"
      end

      attribute 24567095 "MATCH_CATEGORY_HOST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0300000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent with the same data URI scheme and
authority host.

"
      end

      attribute 24567223 "MATCH_CATEGORY_PORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0400000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent with the same data URI scheme and
authority host and port.

"
      end

      attribute 24567351 "MATCH_CATEGORY_PATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0500000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent with the same data URI scheme,
authority, and path.

"
      end

      attribute 24567479 "MATCH_CATEGORY_SCHEME_SPECIFIC_PART"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0580000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent with the same data URI scheme and
scheme specific part.

"
      end

      attribute 24567607 "MATCH_CATEGORY_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0600000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter matched an intent with the same data MIME type.

"
      end

      attribute 24567735 "NO_MATCH_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter didn't match due to different MIME types.

"
      end

      attribute 24567863 "NO_MATCH_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter didn't match due to different data URIs.

"
      end

      attribute 24567991 "NO_MATCH_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter didn't match due to different actions.

"
      end

      attribute 24568119 "NO_MATCH_CATEGORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The filter didn't match because it required one or more categories
that were not in the Intent.

"
      end

      attribute 24568247 "mPriority"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15485367 // mDataSchemeSpecificParts (<unidirectional association>)
	relation 15485367 --->
	  stereotype "ArrayList"
	  a role_name "mDataSchemeSpecificParts" init_value " null" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15485367 // mDataSchemeSpecificParts (<unidirectional association>)
	  b parent class_ref 7105207 // PatternMatcher
      end

      class 7105335 "AuthorityEntry"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24569143 "mWild"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24569271 "mPort"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78815671 "AuthorityEntry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "host" explicit_type "String"
	    param inout name "port" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78815799 "AuthorityEntry"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "src" type class_ref 6931895 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78815927 "writeToParcel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "dest" type class_ref 6931895 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78816055 "getHost"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78816183 "getPort"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78816311 "match"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "other" type class_ref 7105335 // AuthorityEntry
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 78816439 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78816567 "match"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "data" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determine whether this AuthorityEntry matches the given data Uri.
<em>Note that this comparison is case-sensitive, unlike formal
RFC host names.  You thus should always normalize to lower-case.</em>

@param data The Uri to match.
@return Returns either {@link IntentFilter#NO_MATCH_DATA},
{@link IntentFilter#MATCH_CATEGORY_PORT}, or
{@link IntentFilter#MATCH_CATEGORY_HOST}.
"
	end
      end

      classrelation 15485495 // mDataAuthorities (<unidirectional association>)
	relation 15485495 --->
	  stereotype "ArrayList"
	  a role_name "mDataAuthorities" init_value " null" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15485495 // mDataAuthorities (<unidirectional association>)
	  b parent class_ref 7105335 // AuthorityEntry
      end

      classrelation 15485623 // mDataPaths (<unidirectional association>)
	relation 15485623 --->
	  stereotype "ArrayList"
	  a role_name "mDataPaths" init_value " null" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15485623 // mDataPaths (<unidirectional association>)
	  b parent class_ref 7105207 // PatternMatcher
      end

      attribute 24568375 "mHasPartialTypes"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24568503 "STATE_VERIFY_AUTO"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24568631 "STATE_NEED_VERIFY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24568759 "STATE_NEED_VERIFY_CHECKED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24568887 "STATE_VERIFIED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24569015 "mVerifyState"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78811063 "findStringInSet"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "set" explicit_type "String"
	multiplicity "[]"
	  param inout name "string" explicit_type "String"
	  param inout name "lengths" explicit_type "int"
	multiplicity "[]"
	  param in name "lenPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These functions are the start of more optimized code for managing
 the string sets...  not yet implemented."
      end

      operation 78811191 "addStringToSet"
	class_operation private explicit_return_type "String"
	nparams 4
	  param inout name "set" explicit_type "String"
	multiplicity "[]"
	  param inout name "string" explicit_type "String"
	  param inout name "lengths" explicit_type "int"
	multiplicity "[]"
	  param in name "lenPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78811319 "removeStringFromSet"
	class_operation private explicit_return_type "String"
	nparams 4
	  param inout name "set" explicit_type "String"
	multiplicity "[]"
	  param inout name "string" explicit_type "String"
	  param inout name "lengths" explicit_type "int"
	multiplicity "[]"
	  param in name "lenPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7105463 "MalformedMimeTypeException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15485879 // <generalisation>
	  relation 15485879 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15485879 // <generalisation>
	    b parent class_ref 7007287 // AndroidException
	end

	operation 78811447 "MalformedMimeTypeException"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78811575 "MalformedMimeTypeException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "name" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 78811703 "create"
	class_operation public return_type class_ref 6926519 // IntentFilter
	nparams 2
	  param inout name "action" explicit_type "String"
	  param inout name "dataType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new IntentFilter instance with a specified action and MIME
type, where you know the MIME type is correctly formatted.  This catches
the {@link MalformedMimeTypeException} exception that the constructor
can call and turns it into a runtime exception.

@param action The action to match, i.e. Intent.ACTION_VIEW.
@param dataType The type to match, i.e. \"vnd.android.cursor.dir/person\".

@return A new IntentFilter for the given action and type.

@see #IntentFilter(String, String)
"
      end

      operation 78811831 "IntentFilter"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New empty IntentFilter.
"
      end

      operation 78811959 "IntentFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "action" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New IntentFilter that matches a single action with no data.  If
no data characteristics are subsequently specified, then the
filter will only match intents that contain no data.

@param action The action to match, i.e. Intent.ACTION_MAIN.
"
      end

      operation 78812087 "IntentFilter"
	public explicit_return_type ""
	nparams 2
	  param inout name "action" explicit_type "String"
	  param inout name "dataType" explicit_type "String"
	nexceptions 1
	  exception class_ref 7105463 // MalformedMimeTypeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New IntentFilter that matches a single action and data type.

<p><em>Note: MIME type matching in the Android framework is
case-sensitive, unlike formal RFC MIME types.  As a result,
you should always write your MIME types with lower case letters,
and any MIME types you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

<p>Throws {@link MalformedMimeTypeException} if the given MIME type is
not syntactically correct.

@param action The action to match, i.e. Intent.ACTION_VIEW.
@param dataType The type to match, i.e. \"vnd.android.cursor.dir/person\".

"
      end

      operation 78812215 "IntentFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "o" type class_ref 6926519 // IntentFilter
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New IntentFilter containing a copy of an existing filter.

@param o The original filter to copy.
"
      end

      operation 78812343 "setPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "priority" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Modify priority of this filter.  This only affects receiver filters.
The priority of activity filters are set in XML and cannot be changed
programatically. The default priority is 0. Positive values will be
before the default, lower values will be after it. Applications should
use a value that is larger than {@link #SYSTEM_LOW_PRIORITY} and
smaller than {@link #SYSTEM_HIGH_PRIORITY} .

@param priority The new priority value.

@see #getPriority
@see #SYSTEM_LOW_PRIORITY
@see #SYSTEM_HIGH_PRIORITY
"
      end

      operation 78812471 "getPriority"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the priority of this filter.

@return The priority of the filter.

@see #setPriority
"
      end

      operation 78812599 "setAutoVerify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "autoVerify" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether this filter will needs to be automatically verified against its data URIs or not.
The default is false.

The verification would need to happen only and only if the Intent action is
{@link android.content.Intent#ACTION_VIEW} and the Intent category is
{@link android.content.Intent#CATEGORY_BROWSABLE} and the Intent data scheme
is \"http\" or \"https\".

True means that the filter will need to use its data URIs to be verified.

@param autoVerify The new autoVerify value.

@see #getAutoVerify()
@see #addAction(String)
@see #getAction(int)
@see #addCategory(String)
@see #getCategory(int)
@see #addDataScheme(String)
@see #getDataScheme(int)

@hide
"
      end

      operation 78812727 "getAutoVerify"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return if this filter will needs to be automatically verified again its data URIs or not.

@return True if the filter will needs to be automatically verified. False otherwise.

@see #setAutoVerify(boolean)

@hide
"
      end

      operation 78812855 "handleAllWebDataURI"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return if this filter handle all HTTP or HTTPS data URI or not.  This is the
core check for whether a given activity qualifies as a \"browser\".

@return True if the filter handle all HTTP or HTTPS data URI. False otherwise.

This will check if:

- either the Intent category is {@link android.content.Intent#CATEGORY_APP_BROWSER}
- either the Intent action is {@link android.content.Intent#ACTION_VIEW} and
the Intent category is {@link android.content.Intent#CATEGORY_BROWSABLE} and the Intent
data scheme is \"http\" or \"https\" and that there is no specific host defined.

@hide
"
      end

      operation 78812983 "handlesWebUris"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "onlyWebSchemes" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return if this filter handles HTTP or HTTPS data URIs.

@return True if the filter handles ACTION_VIEW/CATEGORY_BROWSABLE,
has at least one HTTP or HTTPS data URI pattern defined, and optionally
does not define any non-http/https data URI patterns.

This will check if if the Intent action is {@link android.content.Intent#ACTION_VIEW} and
the Intent category is {@link android.content.Intent#CATEGORY_BROWSABLE} and the Intent
data scheme is \"http\" or \"https\".

@param onlyWebSchemes When true, requires that the intent filter declare
    that it handles *only* http: or https: schemes.  This is a requirement for
    the intent filter's domain linkage being verifiable.
@hide
"
      end

      operation 78813111 "needsVerification"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return if this filter needs to be automatically verified again its data URIs or not.

@return True if the filter needs to be automatically verified. False otherwise.

This will check if if the Intent action is {@link android.content.Intent#ACTION_VIEW} and
the Intent category is {@link android.content.Intent#CATEGORY_BROWSABLE} and the Intent
data scheme is \"http\" or \"https\".

@see #setAutoVerify(boolean)

@hide
"
      end

      operation 78813239 "isVerified"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return if this filter has been verified

@return true if the filter has been verified or if autoVerify is false.

@hide
"
      end

      operation 78813367 "setVerified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "verified" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set if this filter has been verified

@param verified true if this filter has been verified. False otherwise.

@hide
"
      end

      operation 78813495 "addAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent action to match against.  If any actions are included
in the filter, then an Intent's action must be one of those values for
it to match.  If no actions are included, the Intent action is ignored.

@param action Name of the action to match, i.e. Intent.ACTION_VIEW.
"
      end

      operation 78813623 "countActions"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of actions in the filter.
"
      end

      operation 78813751 "getAction"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an action in the filter.
"
      end

      operation 78813879 "hasAction"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given action included in the filter?  Note that if the filter
does not include any actions, false will <em>always</em> be returned.

@param action The action to look for.

@return True if the action is explicitly mentioned in the filter.
"
      end

      operation 78814007 "matchAction"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this filter against an Intent's action.  If the filter does not
specify any actions, the match will always fail.

@param action The desired action to look for.

@return True if the action is listed in the filter.
"
      end

      operation 78814135 "actionsIterator"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's actions.  If there are no actions,
returns null.
"
      end

      operation 78814263 "addDataType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" explicit_type "String"
	nexceptions 1
	  exception class_ref 7105463 // MalformedMimeTypeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data type to match against.  If any types are
included in the filter, then an Intent's data must be <em>either</em>
one of these types <em>or</em> a matching scheme.  If no data types
are included, then an Intent will only match if it specifies no data.

<p><em>Note: MIME type matching in the Android framework is
case-sensitive, unlike formal RFC MIME types.  As a result,
you should always write your MIME types with lower case letters,
and any MIME types you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

<p>Throws {@link MalformedMimeTypeException} if the given MIME type is
not syntactically correct.

@param type Name of the data type to match, i.e. \"vnd.android.cursor.dir/person\".

@see #matchData
"
      end

      operation 78814391 "hasDataType"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data type included in the filter?  Note that if the filter
does not include any type, false will <em>always</em> be returned.

@param type The data type to look for.

@return True if the type is explicitly mentioned in the filter.
"
      end

      operation 78814519 "hasExactDataType"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78814647 "countDataTypes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data types in the filter.
"
      end

      operation 78814775 "getDataType"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data type in the filter.
"
      end

      operation 78814903 "typesIterator"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data types.
"
      end

      operation 78815031 "addDataScheme"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scheme" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data scheme to match against.  If any schemes are
included in the filter, then an Intent's data must be <em>either</em>
one of these schemes <em>or</em> a matching data type.  If no schemes
are included, then an Intent will match only if it includes no data.

<p><em>Note: scheme matching in the Android framework is
case-sensitive, unlike formal RFC schemes.  As a result,
you should always write your schemes with lower case letters,
and any schemes you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

@param scheme Name of the scheme to match, i.e. \"http\".

@see #matchData
"
      end

      operation 78815159 "countDataSchemes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data schemes in the filter.
"
      end

      operation 78815287 "getDataScheme"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data scheme in the filter.
"
      end

      operation 78815415 "hasDataScheme"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "scheme" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data scheme included in the filter?  Note that if the
filter does not include any scheme, false will <em>always</em> be
returned.

@param scheme The data scheme to look for.

@return True if the scheme is explicitly mentioned in the filter.
"
      end

      operation 78815543 "schemesIterator"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data schemes.
"
      end

      operation 78816695 "addDataSchemeSpecificPart"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ssp" explicit_type "String"
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data \"scheme specific part\" to match against.  The filter must
include one or more schemes (via {@link #addDataScheme}) for the
scheme specific part to be considered.  If any scheme specific parts are
included in the filter, then an Intent's data must match one of
them.  If no scheme specific parts are included, then only the scheme must match.

<p>The \"scheme specific part\" that this matches against is the string returned
by {@link android.net.Uri#getSchemeSpecificPart() Uri.getSchemeSpecificPart}.
For Uris that contain a path, this kind of matching is not generally of interest,
since {@link #addDataAuthority(String, String)} and
{@link #addDataPath(String, int)} can provide a better mechanism for matching
them.  However, for Uris that do not contain a path, the authority and path
are empty, so this is the only way to match against the non-scheme part.</p>

@param ssp Either a raw string that must exactly match the scheme specific part
path, or a simple pattern, depending on <var>type</var>.
@param type Determines how <var>ssp</var> will be compared to
determine a match: either {@link PatternMatcher#PATTERN_LITERAL},
{@link PatternMatcher#PATTERN_PREFIX}, or
{@link PatternMatcher#PATTERN_SIMPLE_GLOB}.

@see #matchData
@see #addDataScheme
"
      end

      operation 78816823 "addDataSchemeSpecificPart"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ssp" type class_ref 7105207 // PatternMatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78816951 "countDataSchemeSpecificParts"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data scheme specific parts in the filter.
"
      end

      operation 78817079 "getDataSchemeSpecificPart"
	public return_type class_ref 7105207 // PatternMatcher
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data scheme specific part in the filter.
"
      end

      operation 78817207 "hasDataSchemeSpecificPart"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data scheme specific part included in the filter?  Note that if the
filter does not include any scheme specific parts, false will <em>always</em> be
returned.

@param data The scheme specific part that is being looked for.

@return Returns true if the data string matches a scheme specific part listed in the
        filter.
"
      end

      operation 78817335 "hasDataSchemeSpecificPart"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ssp" type class_ref 7105207 // PatternMatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78817463 "schemeSpecificPartsIterator"
	public return_type class_ref 7105207 // PatternMatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data scheme specific parts.
"
      end

      operation 78817591 "addDataAuthority"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" explicit_type "String"
	  param inout name "port" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data authority to match against.  The filter must
include one or more schemes (via {@link #addDataScheme}) for the
authority to be considered.  If any authorities are
included in the filter, then an Intent's data must match one of
them.  If no authorities are included, then only the scheme must match.

<p><em>Note: host name in the Android framework is
case-sensitive, unlike formal RFC host names.  As a result,
you should always write your host names with lower case letters,
and any host names you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

@param host The host part of the authority to match.  May start with a
            single '*' to wildcard the front of the host name.
@param port Optional port part of the authority to match.  If null, any
            port is allowed.

@see #matchData
@see #addDataScheme
"
      end

      operation 78817719 "addDataAuthority"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ent" type class_ref 7105335 // AuthorityEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78817847 "countDataAuthorities"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data authorities in the filter.
"
      end

      operation 78817975 "getDataAuthority"
	public return_type class_ref 7105335 // AuthorityEntry
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data authority in the filter.
"
      end

      operation 78818103 "hasDataAuthority"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "data" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data authority included in the filter?  Note that if the
filter does not include any authorities, false will <em>always</em> be
returned.

@param data The data whose authority is being looked for.

@return Returns true if the data string matches an authority listed in the
        filter.
"
      end

      operation 78818231 "hasDataAuthority"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "auth" type class_ref 7105335 // AuthorityEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78818359 "authoritiesIterator"
	public return_type class_ref 7105335 // AuthorityEntry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data authorities.
"
      end

      operation 78818487 "addDataPath"
	public explicit_return_type "void"
	nparams 2
	  param inout name "path" explicit_type "String"
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data path to match against.  The filter must
include one or more schemes (via {@link #addDataScheme}) <em>and</em>
one or more authorities (via {@link #addDataAuthority}) for the
path to be considered.  If any paths are
included in the filter, then an Intent's data must match one of
them.  If no paths are included, then only the scheme/authority must
match.

<p>The path given here can either be a literal that must directly
match or match against a prefix, or it can be a simple globbing pattern.
If the latter, you can use '*' anywhere in the pattern to match zero
or more instances of the previous character, '.' as a wildcard to match
any character, and '\\' to escape the next character.

@param path Either a raw string that must exactly match the file
path, or a simple pattern, depending on <var>type</var>.
@param type Determines how <var>path</var> will be compared to
determine a match: either {@link PatternMatcher#PATTERN_LITERAL},
{@link PatternMatcher#PATTERN_PREFIX}, or
{@link PatternMatcher#PATTERN_SIMPLE_GLOB}.

@see #matchData
@see #addDataScheme
@see #addDataAuthority
"
      end

      operation 78818615 "addDataPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 7105207 // PatternMatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78818743 "countDataPaths"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data paths in the filter.
"
      end

      operation 78818871 "getDataPath"
	public return_type class_ref 7105207 // PatternMatcher
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data path in the filter.
"
      end

      operation 78818999 "hasDataPath"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data path included in the filter?  Note that if the
filter does not include any paths, false will <em>always</em> be
returned.

@param data The data path to look for.  This is without the scheme
            prefix.

@return True if the data string matches a path listed in the
        filter.
"
      end

      operation 78819127 "hasDataPath"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "path" type class_ref 7105207 // PatternMatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78819255 "pathsIterator"
	public return_type class_ref 7105207 // PatternMatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data paths.
"
      end

      operation 78819383 "matchDataAuthority"
	public explicit_return_type "int"
	nparams 1
	  param inout name "data" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this intent filter against the given Intent data.  This ignores
the data scheme -- unlike {@link #matchData}, the authority will match
regardless of whether there is a matching scheme.

@param data The data whose authority is being looked for.

@return Returns either {@link #MATCH_CATEGORY_HOST},
{@link #MATCH_CATEGORY_PORT}, {@link #NO_MATCH_DATA}.
"
      end

      operation 78819511 "matchData"
	public explicit_return_type "int"
	nparams 3
	  param inout name "type" explicit_type "String"
	  param inout name "scheme" explicit_type "String"
	  param inout name "data" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this filter against an Intent's data (type, scheme and path). If
the filter does not specify any types and does not specify any
schemes/paths, the match will only succeed if the intent does not
also specify a type or data.  If the filter does not specify any schemes,
it will implicitly match intents with no scheme, or the schemes \"content:\"
or \"file:\" (basically performing a MIME-type only match).  If the filter
does not specify any MIME types, the Intent also must not specify a MIME
type.

<p>Be aware that to match against an authority, you must also specify a base
scheme the authority is in.  To match against a data path, both a scheme
and authority must be specified.  If the filter does not specify any
types or schemes that it matches against, it is considered to be empty
(any authority or data path given is ignored, as if it were empty as
well).

<p><em>Note: MIME type, Uri scheme, and host name matching in the
Android framework is case-sensitive, unlike the formal RFC definitions.
As a result, you should always write these elements with lower case letters,
and normalize any MIME types or Uris you receive from
outside of Android to ensure these elements are lower case before
supplying them here.</em></p>

@param type The desired data type to look for, as returned by
            Intent.resolveType().
@param scheme The desired data scheme to look for, as returned by
              Intent.getScheme().
@param data The full data string to match against, as supplied in
            Intent.data.

@return Returns either a valid match constant (a combination of
{@link #MATCH_CATEGORY_MASK} and {@link #MATCH_ADJUSTMENT_MASK}),
or one of the error codes {@link #NO_MATCH_TYPE} if the type didn't match
or {@link #NO_MATCH_DATA} if the scheme/path didn't match.

@see #match
"
      end

      operation 78819639 "addCategory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent category to match against.  The semantics of
categories is the opposite of actions -- an Intent includes the
categories that it requires, all of which must be included in the
filter in order to match.  In other words, adding a category to the
filter has no impact on matching unless that category is specified in
the intent.

@param category Name of category to match, i.e. Intent.CATEGORY_EMBED.
"
      end

      operation 78819767 "countCategories"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of categories in the filter.
"
      end

      operation 78819895 "getCategory"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a category in the filter.
"
      end

      operation 78820023 "hasCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given category included in the filter?

@param category The category that the filter supports.

@return True if the category is explicitly mentioned in the filter.
"
      end

      operation 78820151 "categoriesIterator"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's categories.

@return Iterator if this filter has categories or {@code null} if none.
"
      end

      operation 78820279 "matchCategories"
	public explicit_return_type "String"
	nparams 1
	  param inout name "categories" explicit_type "Set<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this filter against an Intent's categories.  Each category in
the Intent must be specified by the filter; if any are not in the
filter, the match fails.

@param categories The categories included in the intent, as returned by
                  Intent.getCategories().

@return If all categories match (success), null; else the name of the
        first category that didn't match.
"
      end

      operation 78820407 "match"
	public explicit_return_type "int"
	nparams 4
	  param inout name "resolver" type class_ref 6924215 // ContentResolver
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "resolve" explicit_type "boolean"
	  param inout name "logTag" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this filter matches the given <var>intent</var>.

@param intent The Intent to compare against.
@param resolve If true, the intent's type will be resolved by calling
               Intent.resolveType(); otherwise a simple match against
               Intent.type will be performed.
@param logTag Tag to use in debugging messages.

@return Returns either a valid match constant (a combination of
{@link #MATCH_CATEGORY_MASK} and {@link #MATCH_ADJUSTMENT_MASK}),
or one of the error codes {@link #NO_MATCH_TYPE} if the type didn't match,
{@link #NO_MATCH_DATA} if the scheme/path didn't match,
{@link #NO_MATCH_ACTION} if the action didn't match, or
{@link #NO_MATCH_CATEGORY} if one or more categories didn't match.

@see #match(String, String, String, android.net.Uri , Set, String)
"
      end

      operation 78820535 "match"
	public explicit_return_type "int"
	nparams 6
	  param inout name "action" explicit_type "String"
	  param inout name "type" explicit_type "String"
	  param inout name "scheme" explicit_type "String"
	  param inout name "data" type class_ref 6927159 // Uri
	  param inout name "categories" explicit_type "Set<String>"
	  param inout name "logTag" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this filter matches the given intent data.  A match is
only successful if the actions and categories in the Intent match
against the filter, as described in {@link IntentFilter}; in that case,
the match result returned will be as per {@link #matchData}.

@param action The intent action to match against (Intent.getAction).
@param type The intent type to match against (Intent.resolveType()).
@param scheme The data scheme to match against (Intent.getScheme()).
@param data The data URI to match against (Intent.getData()).
@param categories The categories to match against
                  (Intent.getCategories()).
@param logTag Tag to use in debugging messages.

@return Returns either a valid match constant (a combination of
{@link #MATCH_CATEGORY_MASK} and {@link #MATCH_ADJUSTMENT_MASK}),
or one of the error codes {@link #NO_MATCH_TYPE} if the type didn't match,
{@link #NO_MATCH_DATA} if the scheme/path didn't match,
{@link #NO_MATCH_ACTION} if the action didn't match, or
{@link #NO_MATCH_CATEGORY} if one or more categories didn't match.

@see #matchData
@see Intent#getAction
@see Intent#resolveType
@see Intent#getScheme
@see Intent#getData
@see Intent#getCategories
"
      end

      operation 78820663 "writeToXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "serializer" explicit_type "XmlSerializer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write the contents of the IntentFilter as an XML stream.
"
      end

      operation 78820791 "readFromXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parser" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78820919 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "du" type class_ref 6962999 // Printer
	  param inout name "prefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15486263 // CREATOR (<unidirectional association>)
	relation 15486263 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<IntentFilter>() {
        public IntentFilter createFromParcel(Parcel source) {
            return new IntentFilter(source);
        }

        public IntentFilter[] newArray(int size) {
            return new IntentFilter[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IntentFilter> ${name}${value};
"
	    classrelation_ref 15486263 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78821047 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78821175 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78821303 "debugCheck"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For debugging -- perform a check on the filter, return true if it passed
or false if it failed.

{@hide}
"
      end

      operation 78821431 "IntentFilter"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78821559 "findMimeType"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78821687 "getHostsList"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 78821815 "getHosts"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end
    end

    class 6926647 "ComponentName"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Identifier for a specific application component
({@link android.app.Activity}, {@link android.app.Service},
{@link android.content.BroadcastReceiver}, or
{@link android.content.ContentProvider}) that is available.  Two
pieces of information, encapsulated here, are required to identify
a component: the package (a String) it exists in, and the class (a String)
name inside of that package.

"
      classrelation 15428791 // <realization>
	relation 15428791 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15428791 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      operation 78733495 "createRelative"
	class_operation public return_type class_ref 6926647 // ComponentName
	nparams 2
	  param inout name "pkg" explicit_type "String"
	  param inout name "cls" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier where the class name may be specified
as either absolute or relative to the containing package.

<p>Relative package names begin with a <code>'.'</code> character. For a package
<code>\"com.example\"</code> and class name <code>\".app.MyActivity\"</code> this method
will return a ComponentName with the package <code>\"com.example\"</code>and class name
<code>\"com.example.app.MyActivity\"</code>. Fully qualified class names are also
permitted.</p>

@param pkg the name of the package the component exists in
@param cls the name of the class inside of <var>pkg</var> that implements
           the component
@return the new ComponentName
"
      end

      operation 78733623 "createRelative"
	class_operation public return_type class_ref 6926647 // ComponentName
	nparams 2
	  param inout name "pkg" type class_ref 6923703 // Context
	  param inout name "cls" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier where the class name may be specified
as either absolute or relative to the containing package.

<p>Relative package names begin with a <code>'.'</code> character. For a package
<code>\"com.example\"</code> and class name <code>\".app.MyActivity\"</code> this method
will return a ComponentName with the package <code>\"com.example\"</code>and class name
<code>\"com.example.app.MyActivity\"</code>. Fully qualified class names are also
permitted.</p>

@param pkg a Context for the package implementing the component
@param cls the name of the class inside of <var>pkg</var> that implements
           the component
@return the new ComponentName
"
      end

      operation 78733751 "ComponentName"
	public explicit_return_type ""
	nparams 2
	  param inout name "pkg" explicit_type "String"
	  param inout name "cls" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier.

@param pkg The name of the package that the component exists in.  Can
not be null.
@param cls The name of the class inside of <var>pkg</var> that
implements the component.  Can not be null.
"
      end

      operation 78733879 "ComponentName"
	public explicit_return_type ""
	nparams 2
	  param inout name "pkg" type class_ref 6923703 // Context
	  param inout name "cls" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier from a Context and class name.

@param pkg A Context for the package implementing the component,
from which the actual package name will be retrieved.
@param cls The name of the class inside of <var>pkg</var> that
implements the component.
"
      end

      operation 78734007 "ComponentName"
	public explicit_return_type ""
	nparams 2
	  param inout name "pkg" type class_ref 6923703 // Context
	  param inout name "cls" explicit_type "Class"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier from a Context and Class object.

@param pkg A Context for the package implementing the component, from
which the actual package name will be retrieved.
@param cls The Class object of the desired component, from which the
actual class name will be retrieved.
"
      end

      operation 78734135 "clone"
	public return_type class_ref 6926647 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78734263 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the package name of this component.
"
      end

      operation 78734391 "getClassName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class name of this component.
"
      end

      operation 78734519 "getShortClassName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class name, either fully qualified or in a shortened form
(with a leading '.') if it is a suffix of the package.
"
      end

      operation 78734647 "appendShortClassName"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "packageName" explicit_type "String"
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78734775 "printShortClassName"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "packageName" explicit_type "String"
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78734903 "flattenToString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a String that unambiguously describes both the package and
class names contained in the ComponentName.  You can later recover
the ComponentName from this string through
{@link #unflattenFromString(String)}.

@return Returns a new String holding the package and class names.  This
is represented as the package name, concatenated with a '/' and then the
class name.

@see #unflattenFromString(String)
"
      end

      operation 78735031 "flattenToShortString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The same as {@link #flattenToString()}, but abbreviates the class
name if it is a suffix of the package.  The result can still be used
with {@link #unflattenFromString(String)}.

@return Returns a new String holding the package and class names.  This
is represented as the package name, concatenated with a '/' and then the
class name.

@see #unflattenFromString(String)
"
      end

      operation 78735159 "appendShortString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sb" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78735287 "appendShortString"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "packageName" explicit_type "String"
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78735415 "printShortString"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "packageName" explicit_type "String"
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78735543 "unflattenFromString"
	class_operation public return_type class_ref 6926647 // ComponentName
	nparams 1
	  param inout name "str" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recover a ComponentName from a String that was previously created with
{@link #flattenToString()}.  It splits the string at the first '/',
taking the part before as the package name and the part after as the
class name.  As a special convenience (to use, for example, when
parsing component names on the command line), if the '/' is immediately
followed by a '.' then the final class name will be the concatenation
of the package name with the string following the '/'.  Thus
\"com.foo/.Blah\" becomes package=\"com.foo\" class=\"com.foo.Blah\".

@param str The String that was returned by flattenToString().
@return Returns a new ComponentName containing the package and class
names that were encoded in <var>str</var>

@see #flattenToString()
"
      end

      operation 78735671 "toShortString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return string representation of this class without the class's name
as a prefix.
"
      end

      operation 78735799 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78735927 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78736055 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78736183 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78736311 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78736439 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78736567 "writeToParcel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 6926647 // ComponentName
	  param inout name "out" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a ComponentName to a Parcel, handling null pointers.  Must be
read with {@link #readFromParcel(Parcel)}.

@param c The ComponentName to be written.
@param out The Parcel in which the ComponentName will be placed.

@see #readFromParcel(Parcel)
"
      end

      operation 78736695 "readFromParcel"
	class_operation public return_type class_ref 6926647 // ComponentName
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a ComponentName from a Parcel that was previously written
with {@link #writeToParcel(ComponentName, Parcel)}, returning either
a null or new object as appropriate.

@param in The Parcel from which to read the ComponentName
@return Returns a new ComponentName matching the previously written
object, or null if a null had been written.

@see #writeToParcel(ComponentName, Parcel)
"
      end

      classrelation 15429431 // CREATOR (<unidirectional association>)
	relation 15429431 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<ComponentName>() {
        public ComponentName createFromParcel(Parcel in) {
            return new ComponentName(in);
        }

        public ComponentName[] newArray(int size) {
            return new ComponentName[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ComponentName> ${name}${value};
"
	    classrelation_ref 15429431 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78736823 "ComponentName"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new ComponentName from the data in a Parcel that was
previously written with {@link #writeToParcel(Parcel, int)}.  Note that you
must not use this with data written by
{@link #writeToParcel(ComponentName, Parcel)} since it is not possible
to handle a null ComponentObject here.

@param in The Parcel containing the previously written ComponentName,
positioned at the location in the buffer where it was written.
"
      end

      operation 78736951 "ComponentName"
	private explicit_return_type ""
	nparams 2
	  param inout name "pkg" explicit_type "String"
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6926775 "ServiceConnection"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for monitoring the state of an application service.  See
{@link android.app.Service} and
{@link Context#bindService Context.bindService()} for more information.
<p>Like many callbacks from the system, the methods on this class are called
from the main thread of your process.
"
      operation 78843831 "onServiceConnected"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 6926647 // ComponentName
	  param inout name "service" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a connection to the Service has been established, with
the {@link android.os.IBinder} of the communication channel to the
Service.

@param name The concrete component name of the service that has
been connected.

@param service The IBinder of the Service's communication channel,
which you can now make calls on.
"
      end

      operation 78843959 "onServiceDisconnected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a connection to the Service has been lost.  This typically
happens when the process hosting the service has crashed or been killed.
This does <em>not</em> remove the ServiceConnection itself -- this
binding to the service will remain active, and you will receive a call
to {@link #onServiceConnected} when the Service is next running.

@param name The concrete component name of the service whose
connection has been lost.
"
      end
    end

    class 6927927 "ComponentCallbacks2"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Extended {@link ComponentCallbacks} interface with a new callback for
finer-grained memory management. This interface is available in all application components
({@link android.app.Activity}, {@link android.app.Service},
{@link ContentProvider}, and {@link android.app.Application}).

<p>You should implement {@link #onTrimMemory} to incrementally release memory based on current
system constraints. Using this callback to release your resources helps provide a more
responsive system overall, but also directly benefits the user experience for
your app by allowing the system to keep your process alive longer. That is,
if you <em>don't</em> trim your resources based on memory levels defined by this callback,
the system is more likely to kill your process while it is cached in the least-recently used
(LRU) list, thus requiring your app to restart and restore all state when the user returns to it.

<p>The values provided by {@link #onTrimMemory} do not represent a single linear progression of
memory limits, but provide you different types of clues about memory availability:</p>
<ul>
<li>When your app is running:
 <ol>
 <li>{@link #TRIM_MEMORY_RUNNING_MODERATE} <br>The device is beginning to run low on memory.
Your app is running and not killable.
 <li>{@link #TRIM_MEMORY_RUNNING_LOW} <br>The device is running much lower on memory.
Your app is running and not killable, but please release unused resources to improve system
performance (which directly impacts your app's performance).
 <li>{@link #TRIM_MEMORY_RUNNING_CRITICAL} <br>The device is running extremely low on memory.
Your app is not yet considered a killable process, but the system will begin killing
background processes if apps do not release resources, so you should release non-critical
resources now to prevent performance degradation.
 </ol>
</li>
<li>When your app's visibility changes:
 <ol>
 <li>{@link #TRIM_MEMORY_UI_HIDDEN} <br>Your app's UI is no longer visible, so this is a good
time to release large resources that are used only by your UI.
 </ol>
</li>
<li>When your app's process resides in the background LRU list:
 <ol>
 <li>{@link #TRIM_MEMORY_BACKGROUND} <br>The system is running low on memory and your process is
near the beginning of the LRU list. Although your app process is not at a high risk of being
killed, the system may already be killing processes in the LRU list, so you should release
resources that are easy to recover so your process will remain in the list and resume
quickly when the user returns to your app.
 <li>{@link #TRIM_MEMORY_MODERATE} <br>The system is running low on memory and your process is
near the middle of the LRU list. If the system becomes further constrained for memory, there's a
chance your process will be killed.
 <li>{@link #TRIM_MEMORY_COMPLETE} <br>The system is running low on memory and your process is
one of the first to be killed if the system does not recover memory now. You should release
absolutely everything that's not critical to resuming your app state.
  <p>To support API levels lower than 14, you can use the {@link #onLowMemory} method as a
fallback that's roughly equivalent to the {@link ComponentCallbacks2#TRIM_MEMORY_COMPLETE} level.
 </li>
 </ol>
<p class=\"note\"><strong>Note:</strong> When the system begins
killing processes in the LRU list, although it primarily works bottom-up, it does give some
consideration to which processes are consuming more memory and will thus provide more gains in
memory if killed. So the less memory you consume while in the LRU list overall, the better
your chances are to remain in the list and be able to quickly resume.</p>
</li>
</ul>
<p>More information about the different stages of a process lifecycle (such as what it means
to be placed in the background LRU list) is provided in the <a
href=\"{@docRoot}guide/components/processes-and-threads.html#Lifecycle\">Processes and Threads</a>
document.
"
      classrelation 14947255 // <generalisation>
	relation 14947255 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 14947255 // <generalisation>
	  b parent class_ref 6924343 // ComponentCallbacks
      end

      attribute 23843639 "TRIM_MEMORY_COMPLETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 80"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process is nearing the end
of the background LRU list, and if more memory isn't found soon it will
be killed.

"
      end

      attribute 23843767 "TRIM_MEMORY_MODERATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 60"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process is around the middle
of the background LRU list; freeing memory can help the system keep
other processes running later in the list for better overall performance.

"
      end

      attribute 23843895 "TRIM_MEMORY_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process has gone on to the
LRU list.  This is a good opportunity to clean up resources that can
efficiently and quickly be re-built if the user returns to the app.

"
      end

      attribute 23844023 "TRIM_MEMORY_UI_HIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process had been showing
a user interface, and is no longer doing so.  Large allocations with
the UI should be released at this point to allow memory to be better
managed.

"
      end

      attribute 23844151 "TRIM_MEMORY_RUNNING_CRITICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process is not an expendable
background process, but the device is running extremely low on memory
and is about to not be able to keep any background processes running.
Your running process should free up as many non-critical resources as it
can to allow that memory to be used elsewhere.  The next thing that
will happen after this is {@link #onLowMemory()} called to report that
nothing at all can be kept in the background, a situation that can start
to notably impact the user.

"
      end

      attribute 23844279 "TRIM_MEMORY_RUNNING_LOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process is not an expendable
background process, but the device is running low on memory.
Your running process should free up unneeded resources to allow that
memory to be used elsewhere.

"
      end

      attribute 23844407 "TRIM_MEMORY_RUNNING_MODERATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Level for {@link #onTrimMemory(int)}: the process is not an expendable
background process, but the device is running moderately low on memory.
Your running process may want to release some unneeded resources for
use elsewhere.

"
      end

      operation 77054775 "onTrimMemory"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the operating system has determined that it is a good
time for a process to trim unneeded memory from its process.  This will
happen for example when it goes in the background and there is not enough
memory to keep as many background processes running as desired.  You
should never compare to exact values of the level, since new intermediate
values may be added -- you will typically want to compare if the value
is greater or equal to a level you are interested in.

<p>To retrieve the processes current trim level at any point, you can
use {@link android.app.ActivityManager#getMyMemoryState
ActivityManager.getMyMemoryState(RunningAppProcessInfo)}.

@param level The context of the trim, giving a hint of the amount of
trimming the application may like to perform.  May be
{@link #TRIM_MEMORY_COMPLETE}, {@link #TRIM_MEMORY_MODERATE},
{@link #TRIM_MEMORY_BACKGROUND}, {@link #TRIM_MEMORY_UI_HIDDEN},
{@link #TRIM_MEMORY_RUNNING_CRITICAL}, {@link #TRIM_MEMORY_RUNNING_LOW},
or {@link #TRIM_MEMORY_RUNNING_MODERATE}.
"
      end
    end

    class 6950199 "ClipData"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Representation of a clipped data on the clipboard.

<p>ClipData is a complex type containing one or more Item instances,
each of which can hold one or more representations of an item of data.
For display to the user, it also has a label.</p>

<p>A ClipData contains a {@link ClipDescription}, which describes
important meta-data about the clip.  In particular, its
{@link ClipDescription#getMimeType(int) getDescription().getMimeType(int)}
must return correct MIME type(s) describing the data in the clip.  For help
in correctly constructing a clip with the correct MIME type, use
{@link #newPlainText(CharSequence, CharSequence)},
{@link #newUri(ContentResolver, CharSequence, Uri)}, and
{@link #newIntent(CharSequence, Intent)}.

<p>Each Item instance can be one of three main classes of data: a simple
CharSequence of text, a single Intent object, or a Uri.  See {@link Item}
for more details.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using the clipboard framework, read the
<a href=\"{@docRoot}guide/topics/clipboard/copy-paste.html\">Copy and Paste</a>
developer guide.</p>
</div>

<a name=\"ImplementingPaste\"></a>
<h3>Implementing Paste or Drop</h3>

<p>To implement a paste or drop of a ClipData object into an application,
the application must correctly interpret the data for its use.  If the {@link Item}
it contains is simple text or an Intent, there is little to be done: text
can only be interpreted as text, and an Intent will typically be used for
creating shortcuts (such as placing icons on the home screen) or other
actions.

<p>If all you want is the textual representation of the clipped data, you
can use the convenience method {@link Item#coerceToText Item.coerceToText}.
In this case there is generally no need to worry about the MIME types
reported by {@link ClipDescription#getMimeType(int) getDescription().getMimeType(int)},
since any clip item can always be converted to a string.

<p>More complicated exchanges will be done through URIs, in particular
\"content:\" URIs.  A content URI allows the recipient of a ClipData item
to interact closely with the ContentProvider holding the data in order to
negotiate the transfer of that data.  The clip must also be filled in with
the available MIME types; {@link #newUri(ContentResolver, CharSequence, Uri)}
will take care of correctly doing this.

<p>For example, here is the paste function of a simple NotePad application.
When retrieving the data from the clipboard, it can do either two things:
if the clipboard contains a URI reference to an existing note, it copies
the entire structure of the note into a new note; otherwise, it simply
coerces the clip into text and uses that as the new note's contents.

{@sample development/samples/NotePad/src/com/example/android/notepad/NoteEditor.java
     paste}

<p>In many cases an application can paste various types of streams of data.  For
example, an e-mail application may want to allow the user to paste an image
or other binary data as an attachment.  This is accomplished through the
ContentResolver {@link ContentResolver#getStreamTypes(Uri, String)} and
{@link ContentResolver#openTypedAssetFileDescriptor(Uri, String, android.os.Bundle)}
methods.  These allow a client to discover the type(s) of data that a particular
content URI can make available as a stream and retrieve the stream of data.

<p>For example, the implementation of {@link Item#coerceToText Item.coerceToText}
itself uses this to try to retrieve a URI clip as a stream of text:

{@sample frameworks/base/core/java/android/content/ClipData.java coerceToText}

<a name=\"ImplementingCopy\"></a>
<h3>Implementing Copy or Drag</h3>

<p>To be the source of a clip, the application must construct a ClipData
object that any recipient can interpret best for their context.  If the clip
is to contain a simple text, Intent, or URI, this is easy: an {@link Item}
containing the appropriate data type can be constructed and used.

<p>More complicated data types require the implementation of support in
a ContentProvider for describing and generating the data for the recipient.
A common scenario is one where an application places on the clipboard the
content: URI of an object that the user has copied, with the data at that
URI consisting of a complicated structure that only other applications with
direct knowledge of the structure can use.

<p>For applications that do not have intrinsic knowledge of the data structure,
the content provider holding it can make the data available as an arbitrary
number of types of data streams.  This is done by implementing the
ContentProvider {@link ContentProvider#getStreamTypes(Uri, String)} and
{@link ContentProvider#openTypedAssetFile(Uri, String, android.os.Bundle)}
methods.

<p>Going back to our simple NotePad application, this is the implementation
it may have to convert a single note URI (consisting of a title and the note
text) into a stream of plain text data.

{@sample development/samples/NotePad/src/com/example/android/notepad/NotePadProvider.java
     stream}

<p>The copy operation in our NotePad application is now just a simple matter
of making a clip containing the URI of the note being copied:

{@sample development/samples/NotePad/src/com/example/android/notepad/NotesList.java
     copy}

<p>Note if a paste operation needs this clip as text (for example to paste
into an editor), then {@link Item#coerceToText(Context)} will ask the content
provider for the clip URI as text and successfully paste the entire note.
"
      classrelation 15425975 // <realization>
	relation 15425975 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15425975 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15426615 // mClipDescription (<unidirectional association>)
	relation 15426615 --->
	  a role_name "mClipDescription" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15426615 // mClipDescription (<unidirectional association>)
	  b parent class_ref 7100215 // ClipDescription
      end

      classrelation 15426743 // mIcon (<unidirectional association>)
	relation 15426743 --->
	  a role_name "mIcon" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15426743 // mIcon (<unidirectional association>)
	  b parent class_ref 5824951 // Bitmap
      end

      class 7100343 "Item"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24546359 "mText"
	  const_attribute package explicit_type "CharSequence"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15427127 // mIntent (<unidirectional association>)
	  relation 15427127 --->
	    a role_name "mIntent" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15427127 // mIntent (<unidirectional association>)
	    b parent class_ref 6925623 // Intent
	end

	classrelation 15427255 // mUri (<unidirectional association>)
	  relation 15427255 --->
	    a role_name "mUri" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15427255 // mUri (<unidirectional association>)
	    b parent class_ref 6927159 // Uri
	end

	operation 78725815 "Item"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "text" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of a single block of (possibly styled) text.
"
	end

	operation 78725943 "Item"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "text" explicit_type "CharSequence"
	    param inout name "htmlText" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of a single block of (possibly styled) text,
with an alternative HTML formatted representation.  You <em>must</em>
supply a plain text representation in addition to HTML text; coercion
will not be done from HTML formated text into plain text.
"
	end

	operation 78726071 "Item"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "intent" type class_ref 6925623 // Intent
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of an arbitrary Intent.
"
	end

	operation 78726199 "Item"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of an arbitrary URI.
"
	end

	operation 78726327 "Item"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "text" explicit_type "CharSequence"
	    param inout name "intent" type class_ref 6925623 // Intent
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a complex Item, containing multiple representations of
text, Intent, and/or URI.
"
	end

	operation 78726455 "Item"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "text" explicit_type "CharSequence"
	    param inout name "htmlText" explicit_type "String"
	    param inout name "intent" type class_ref 6925623 // Intent
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a complex Item, containing multiple representations of
text, HTML text, Intent, and/or URI.  If providing HTML text, you
<em>must</em> supply a plain text representation as well; coercion
will not be done from HTML formated text into plain text.
"
	end

	operation 78726583 "getText"
	  public explicit_return_type "CharSequence"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw text contained in this Item.
"
	end

	operation 78726711 "getHtmlText"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw HTML text contained in this Item.
"
	end

	operation 78726839 "getIntent"
	  public return_type class_ref 6925623 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw Intent contained in this Item.
"
	end

	operation 78726967 "getUri"
	  public return_type class_ref 6927159 // Uri
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw URI contained in this Item.
"
	end

	operation 78727095 "coerceToText"
	  public explicit_return_type "CharSequence"
	  nparams 1
	    param inout name "context" type class_ref 6923703 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Turn this item into text, regardless of the type of data it
actually contains.

<p>The algorithm for deciding what text to return is:
<ul>
<li> If {@link #getText} is non-null, return that.
<li> If {@link #getUri} is non-null, try to retrieve its data
as a text stream from its content provider.  If this succeeds, copy
the text into a String and return it.  If it is not a content: URI or
the content provider does not supply a text representation, return
the raw URI as a string.
<li> If {@link #getIntent} is non-null, convert that to an intent:
URI and return it.
<li> Otherwise, return an empty string.
</ul>

@param context The caller's Context, from which its ContentResolver
and other things can be retrieved.
@return Returns the item's textual representation.

BEGIN_INCLUDE(coerceToText)"
	end

	operation 78727223 "coerceToStyledText"
	  public explicit_return_type "CharSequence"
	  nparams 1
	    param inout name "context" type class_ref 6923703 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "END_INCLUDE(coerceToText)

Like {@link #coerceToHtmlText(Context)}, but any text that would
be returned as HTML formatting will be returned as text with
style spans.
@param context The caller's Context, from which its ContentResolver
and other things can be retrieved.
@return Returns the item's textual representation.
"
	end

	operation 78727351 "coerceToHtmlText"
	  public explicit_return_type "String"
	  nparams 1
	    param inout name "context" type class_ref 6923703 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Turn this item into HTML text, regardless of the type of data it
actually contains.

<p>The algorithm for deciding what text to return is:
<ul>
<li> If {@link #getHtmlText} is non-null, return that.
<li> If {@link #getText} is non-null, return that, converting to
valid HTML text.  If this text contains style spans,
{@link Html#toHtml(Spanned) Html.toHtml(Spanned)} is used to
convert them to HTML formatting.
<li> If {@link #getUri} is non-null, try to retrieve its data
as a text stream from its content provider.  If the provider can
supply text/html data, that will be preferred and returned as-is.
Otherwise, any text/* data will be returned and escaped to HTML.
If it is not a content: URI or the content provider does not supply
a text representation, HTML text containing a link to the URI
will be returned.
<li> If {@link #getIntent} is non-null, convert that to an intent:
URI and return as an HTML link.
<li> Otherwise, return an empty string.
</ul>

@param context The caller's Context, from which its ContentResolver
and other things can be retrieved.
@return Returns the item's representation as HTML text.
"
	end

	operation 78727479 "coerceToHtmlOrStyledText"
	  private explicit_return_type "CharSequence"
	  nparams 2
	    param inout name "context" type class_ref 6923703 // Context
	    param inout name "styled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78727607 "uriToHtml"
	  private explicit_return_type "String"
	  nparams 1
	    param inout name "uri" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78727735 "uriToStyledText"
	  private explicit_return_type "CharSequence"
	  nparams 1
	    param inout name "uri" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78727863 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78727991 "toShortString"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "StringBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 78728119 "toShortSummaryString"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "StringBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end
      end

      classrelation 15426871 // mItems (<unidirectional association>)
	relation 15426871 --->
	  stereotype "ArrayList"
	  a role_name "mItems" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15426871 // mItems (<unidirectional association>)
	  b parent class_ref 7100343 // Item
      end

      operation 78728247 "ClipData"
	public explicit_return_type ""
	nparams 3
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "mimeTypes" explicit_type "String"
	multiplicity "[]"
	  param inout name "item" type class_ref 7100343 // Item
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip.

@param label Label to show to the user describing this clip.
@param mimeTypes An array of MIME types this data is available as.
@param item The contents of the first item in the clip.
"
      end

      operation 78728375 "ClipData"
	public explicit_return_type ""
	nparams 2
	  param inout name "description" type class_ref 7100215 // ClipDescription
	  param inout name "item" type class_ref 7100343 // Item
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip.

@param description The ClipDescription describing the clip contents.
@param item The contents of the first item in the clip.
"
      end

      operation 78728503 "ClipData"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 6950199 // ClipData
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip that is a copy of another clip.  This does a deep-copy
of all items in the clip.

@param other The existing ClipData that is to be copied.
"
      end

      operation 78728631 "newPlainText"
	class_operation public return_type class_ref 6950199 // ClipData
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding data of the type
{@link ClipDescription#MIMETYPE_TEXT_PLAIN}.

@param label User-visible label for the clip data.
@param text The actual text in the clip.
@return Returns a new ClipData containing the specified data.
"
      end

      operation 78728759 "newHtmlText"
	class_operation public return_type class_ref 6950199 // ClipData
	nparams 3
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "text" explicit_type "CharSequence"
	  param inout name "htmlText" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding data of the type
{@link ClipDescription#MIMETYPE_TEXT_HTML}.

@param label User-visible label for the clip data.
@param text The text of clip as plain text, for receivers that don't
handle HTML.  This is required.
@param htmlText The actual HTML text in the clip.
@return Returns a new ClipData containing the specified data.
"
      end

      operation 78728887 "newIntent"
	class_operation public return_type class_ref 6950199 // ClipData
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding an Intent with MIME type
{@link ClipDescription#MIMETYPE_TEXT_INTENT}.

@param label User-visible label for the clip data.
@param intent The actual Intent in the clip.
@return Returns a new ClipData containing the specified data.
"
      end

      operation 78729015 "newUri"
	class_operation public return_type class_ref 6950199 // ClipData
	nparams 3
	  param inout name "resolver" type class_ref 6924215 // ContentResolver
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding a URI.  If the URI is a content: URI,
this will query the content provider for the MIME type of its data and
use that as the MIME type.  Otherwise, it will use the MIME type
{@link ClipDescription#MIMETYPE_TEXT_URILIST}.

@param resolver ContentResolver used to get information about the URI.
@param label User-visible label for the clip data.
@param uri The URI in the clip.
@return Returns a new ClipData containing the specified data.
"
      end

      operation 78729143 "newRawUri"
	class_operation public return_type class_ref 6950199 // ClipData
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding an URI with MIME type
{@link ClipDescription#MIMETYPE_TEXT_URILIST}.
Unlike {@link #newUri(ContentResolver, CharSequence, Uri)}, nothing
is inferred about the URI -- if it is a content: URI holding a bitmap,
the reported type will still be uri-list.  Use this with care!

@param label User-visible label for the clip data.
@param uri The URI in the clip.
@return Returns a new ClipData containing the specified data.
"
      end

      operation 78729271 "getDescription"
	public return_type class_ref 7100215 // ClipDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link ClipDescription} associated with this data, describing
what it contains.
"
      end

      operation 78729399 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 7100343 // Item
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Item to the overall ClipData container.
<p> This method will <em>not</em> update the list of available MIME types in the
{@link ClipDescription}. It should be used only when adding items which do not add new
MIME types to this clip. If this is not the case, {@link #ClipData(CharSequence, String[],
Item)} should be used with a complete list of MIME types.
@param item Item to be added.
"
      end

      operation 78729527 "getIcon"
	public return_type class_ref 5824951 // Bitmap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78729655 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of items in the clip data.
"
      end

      operation 78729783 "getItemAt"
	public return_type class_ref 7100343 // Item
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a single item inside of the clip data.  The index can range
from 0 to {@link #getItemCount()}-1.
"
      end

      operation 78729911 "prepareToLeaveProcess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "leavingPackage" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare this {@link ClipData} to leave an app process.

@hide
"
      end

      operation 78730039 "prepareToEnterProcess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78730167 "fixUris"
	public explicit_return_type "void"
	nparams 1
	  param in name "contentUserHint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78730295 "fixUrisLight"
	public explicit_return_type "void"
	nparams 1
	  param in name "contentUserHint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only fixing the data field of the intents
@hide
"
      end

      operation 78730423 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78730551 "toShortString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78730679 "toShortStringShortItems"
	public explicit_return_type "void"
	nparams 2
	  param inout name "b" explicit_type "StringBuilder"
	  param inout name "first" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78730807 "collectUris"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "List<Uri>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78730935 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78731063 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78731191 "ClipData"
	package explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15427383 // CREATOR (<unidirectional association>)
	relation 15427383 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<ClipData>() {

            public ClipData createFromParcel(Parcel source) {
                return new ClipData(source);
            }

            public ClipData[] newArray(int size) {
                return new ClipData[size];
            }
        }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClipData> ${name}${value};
"
	    classrelation_ref 15427383 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 6986935 "UriPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Description of a single Uri permission grant. This grants may have been
created via {@link Intent#FLAG_GRANT_READ_URI_PERMISSION}, etc when sending
an {@link Intent}, or explicitly through
{@link Context#grantUriPermission(String, android.net.Uri, int)}.

@see ContentResolver#getPersistedUriPermissions()
"
      classrelation 15511223 // <realization>
	relation 15511223 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15511223 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15511351 // mUri (<unidirectional association>)
	relation 15511351 --->
	  a role_name "mUri" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15511351 // mUri (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      attribute 24592567 "mModeFlags"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24592695 "mPersistedTime"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24592823 "INVALID_TIME"
	class_attribute const_attribute public explicit_type "long"
	init_value " Long.MIN_VALUE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value returned when a permission has not been persisted.

"
      end

      operation 78883127 "UriPermission"
	public explicit_return_type ""
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "persistedTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78883255 "UriPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78883383 "getUri"
	public return_type class_ref 6927159 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Uri this permission pertains to.
"
      end

      operation 78883511 "isReadPermission"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this permission offers read access.
"
      end

      operation 78883639 "isWritePermission"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this permission offers write access.
"
      end

      operation 78883767 "getPersistedTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the time when this permission was first persisted, in milliseconds
since January 1, 1970 00:00:00.0 UTC. Returns {@link #INVALID_TIME} if
not persisted.

@see ContentResolver#takePersistableUriPermission(Uri, int)
@see System#currentTimeMillis()
"
      end

      operation 78883895 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78884023 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78884151 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15511479 // CREATOR (<unidirectional association>)
	relation 15511479 --->
	  a role_name "CREATOR" init_value " new Creator<UriPermission>() {
        @Override
        public UriPermission createFromParcel(Parcel source) {
            return new UriPermission(source);
        }

        @Override
        public UriPermission[] newArray(int size) {
            return new UriPermission[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UriPermission> ${name}${value};
"
	    classrelation_ref 15511479 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 6988215 "IIntentSender"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " @hide "
      classrelation 15441463 // <generalisation>
	relation 15441463 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15441463 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7104055 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15441591 // <generalisation>
	  relation 15441591 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15441591 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15441719 // <realization>
	  relation 15441719 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15441719 // <realization>
	    b parent class_ref 6988215 // IIntentSender
	end

	operation 78788151 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78788279 "asInterface"
	  class_operation public return_type class_ref 6988215 // IIntentSender
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.IIntentSender interface,
generating a proxy if needed.
"
	end

	operation 78788407 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78788535 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7104183 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15441975 // <realization>
	    relation 15441975 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15441975 // <realization>
	      b parent class_ref 6988215 // IIntentSender
	  end

	  classrelation 15442103 // mRemote (<unidirectional association>)
	    relation 15442103 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15442103 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78788663 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78788791 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78788919 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78789047 "send"
	    public explicit_return_type "void"
	    nparams 6
	      param in name "code" explicit_type "int"
	      param inout name "intent" type class_ref 6925623 // Intent
	      param inout name "resolvedType" explicit_type "String"
	      param inout name "finishedReceiver" type class_ref 6988855 // IIntentReceiver
	      param inout name "requiredPermission" explicit_type "String"
	      param inout name "options" type class_ref 6925879 // Bundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24558135 "TRANSACTION_send"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78789175 "send"
	public explicit_return_type "void"
	nparams 6
	  param in name "code" explicit_type "int"
	  param inout name "intent" type class_ref 6925623 // Intent
	  param inout name "resolvedType" explicit_type "String"
	  param inout name "finishedReceiver" type class_ref 6988855 // IIntentReceiver
	  param inout name "requiredPermission" explicit_type "String"
	  param inout name "options" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6988855 "IIntentReceiver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "System private API for dispatching intent broadcasts.  This is given to the
activity manager as part of registering for an intent broadcasts, and is
called when it receives intents.

{@hide}
"
      class 7036727 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15200695 // <generalisation>
	  relation 15200695 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15200695 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15200823 // <realization>
	  relation 15200823 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15200823 // <realization>
	    b parent class_ref 6988855 // IIntentReceiver
	end

	operation 78054199 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78054327 "asInterface"
	  class_operation public return_type class_ref 6988855 // IIntentReceiver
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.IIntentReceiver interface,
generating a proxy if needed.
"
	end

	operation 78054455 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78054583 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7036855 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15201079 // <realization>
	    relation 15201079 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15201079 // <realization>
	      b parent class_ref 6988855 // IIntentReceiver
	  end

	  classrelation 15201207 // mRemote (<unidirectional association>)
	    relation 15201207 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15201207 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78054711 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78054839 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78054967 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78055095 "performReceive"
	    public explicit_return_type "void"
	    nparams 7
	      param inout name "intent" type class_ref 6925623 // Intent
	      param in name "resultCode" explicit_type "int"
	      param inout name "data" explicit_type "String"
	      param inout name "extras" type class_ref 6925879 // Bundle
	      param inout name "ordered" explicit_type "boolean"
	      param inout name "sticky" explicit_type "boolean"
	      param in name "sendingUser" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24229943 "TRANSACTION_performReceive"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 15200567 // <generalisation>
	relation 15200567 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15200567 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      operation 78055223 "performReceive"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "resultCode" explicit_type "int"
	  param inout name "data" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param inout name "ordered" explicit_type "boolean"
	  param inout name "sticky" explicit_type "boolean"
	  param in name "sendingUser" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6991671 "IContentProvider"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The ipc interface to talk to a content provider.
@hide
"
      classrelation 15431095 // <generalisation>
	relation 15431095 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15431095 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      operation 78737719 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 7
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7049271 // ICancellationSignal
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78737847 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78737975 "insert"
	public return_type class_ref 6927159 // Uri
	nparams 3
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "initialValues" type class_ref 7016887 // ContentValues
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738103 "bulkInsert"
	public explicit_return_type "int"
	nparams 3
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "initialValues" type class_ref 7016887 // ContentValues
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738231 "delete"
	public explicit_return_type "int"
	nparams 4
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738359 "update"
	public explicit_return_type "int"
	nparams 5
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738487 "openFile"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 5
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7049271 // ICancellationSignal
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738615 "openAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 4
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7049271 // ICancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738743 "applyBatch"
	public return_type class_ref 7017015 // ContentProviderResult
	nparams 2
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  exception class_ref 7017143 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738871 "call"
	public return_type class_ref 6925879 // Bundle
	nparams 4
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "method" explicit_type "String"
	  param inout name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78738999 "createCancellationSignal"
	public return_type class_ref 7049271 // ICancellationSignal
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78739127 "canonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "uri" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78739255 "uncanonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "uri" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78739383 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Data interchange."
      end

      operation 78739511 "openTypedAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 5
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	  param inout name "signal" type class_ref 7049271 // ICancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 24547127 "QUERY_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24547255 "GET_TYPE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24547383 "INSERT_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24547511 "DELETE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24547639 "UPDATE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 9"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24547767 "BULK_INSERT_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 12"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24547895 "OPEN_FILE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 13"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548023 "OPEN_ASSET_FILE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 14"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548151 "APPLY_BATCH_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 19"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548279 "CALL_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548407 "GET_STREAM_TYPES_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 21"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548535 "OPEN_TYPED_ASSET_FILE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 22"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548663 "CREATE_CANCELATION_SIGNAL_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 23"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548791 "CANONICALIZE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 24"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24548919 "UNCANONICALIZE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 25"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 6994743 "ContentProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Content providers are one of the primary building blocks of Android applications, providing
content to applications. They encapsulate data and provide it to applications through the single
{@link ContentResolver} interface. A content provider is only required if you need to share
data between multiple applications. For example, the contacts data is used by multiple
applications and must be stored in a content provider. If you don't need to share data amongst
multiple applications you can use a database directly via
{@link android.database.sqlite.SQLiteDatabase}.

<p>When a request is made via
a {@link ContentResolver} the system inspects the authority of the given URI and passes the
request to the content provider registered with the authority. The content provider can interpret
the rest of the URI however it wants. The {@link UriMatcher} class is helpful for parsing
URIs.</p>

<p>The primary methods that need to be implemented are:
<ul>
  <li>{@link #onCreate} which is called to initialize the provider</li>
  <li>{@link #query} which returns data to the caller</li>
  <li>{@link #insert} which inserts new data into the content provider</li>
  <li>{@link #update} which updates existing data in the content provider</li>
  <li>{@link #delete} which deletes data from the content provider</li>
  <li>{@link #getType} which returns the MIME type of data in the content provider</li>
</ul></p>

<p class=\"caution\">Data access methods (such as {@link #insert} and
{@link #update}) may be called from many threads at once, and must be thread-safe.
Other methods (such as {@link #onCreate}) are only called from the application
main thread, and must avoid performing lengthy operations.  See the method
descriptions for their expected thread behavior.</p>

<p>Requests to {@link ContentResolver} are automatically forwarded to the appropriate
ContentProvider instance, so subclasses don't have to worry about the details of
cross-process calls.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using content providers, read the
<a href=\"{@docRoot}guide/topics/providers/content-providers.html\">Content Providers</a>
developer guide.</p>
"
      classrelation 15429687 // <realization>
	relation 15429687 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15429687 // <realization>
	  b parent class_ref 6927927 // ComponentCallbacks2
      end

      classrelation 15429943 // mContext (<unidirectional association>)
	relation 15429943 --->
	  a role_name "mContext" init_value " null" private
	    comment "
Note: if you add methods to ContentProvider, you must add similar methods to
      MockContentProvider.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15429943 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 24546615 "mMyUid"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15430583 // mPathPermissions (<unidirectional association>)
	relation 15430583 --->
	  a role_name "mPathPermissions" multiplicity "[]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 15430583 // mPathPermissions (<unidirectional association>)
	  b parent class_ref 7100727 // PathPermission
      end

      attribute 24546743 "mExported"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24546871 "mNoPerms"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24546999 "mSingleUser"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7100855 "Transport"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15431735 // <generalisation>
	  relation 15431735 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15431735 // <generalisation>
	    b parent class_ref 7100983 // ContentProviderNative
	end

	classrelation 15431863 // mAppOpsManager (<unidirectional association>)
	  relation 15431863 --->
	    a role_name "mAppOpsManager" init_value " null" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15431863 // mAppOpsManager (<unidirectional association>)
	    b parent class_ref 7013431 // AppOpsManager
	end

	attribute 24549047 "mReadOp"
	  package explicit_type "int"
	  init_value " AppOpsManager.OP_NONE"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24549175 "mWriteOp"
	  package explicit_type "int"
	  init_value " AppOpsManager.OP_NONE"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78742455 "getContentProvider"
	  package return_type class_ref 6994743 // ContentProvider
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78742583 "getProviderName"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78742711 "query"
	  public return_type class_ref 6954295 // Cursor
	  nparams 7
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "projection" explicit_type "String"
	  multiplicity "[]"
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	    param inout name "sortOrder" explicit_type "String"
	    param inout name "cancellationSignal" type class_ref 7049271 // ICancellationSignal
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78742839 "getType"
	  public explicit_return_type "String"
	  nparams 1
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78742967 "insert"
	  public return_type class_ref 6927159 // Uri
	  nparams 3
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "initialValues" type class_ref 7016887 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743095 "bulkInsert"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "initialValues" type class_ref 7016887 // ContentValues
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743223 "applyBatch"
	  public return_type class_ref 7017015 // ContentProviderResult
	  nparams 2
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	  nexceptions 1
	    exception class_ref 7017143 // OperationApplicationException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743351 "delete"
	  public explicit_return_type "int"
	  nparams 4
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743479 "update"
	  public explicit_return_type "int"
	  nparams 5
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "values" type class_ref 7016887 // ContentValues
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743607 "openFile"
	  public return_type class_ref 6986295 // ParcelFileDescriptor
	  nparams 5
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "mode" explicit_type "String"
	    param inout name "cancellationSignal" type class_ref 7049271 // ICancellationSignal
	    param inout name "callerToken" type class_ref 6927031 // IBinder
	  nexceptions 1
	    explicit_exception "FileNotFoundException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743735 "openAssetFile"
	  public return_type class_ref 7016631 // AssetFileDescriptor
	  nparams 4
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "mode" explicit_type "String"
	    param inout name "cancellationSignal" type class_ref 7049271 // ICancellationSignal
	  nexceptions 1
	    explicit_exception "FileNotFoundException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743863 "call"
	  public return_type class_ref 6925879 // Bundle
	  nparams 4
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "method" explicit_type "String"
	    param inout name "arg" explicit_type "String"
	    param inout name "extras" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78743991 "getStreamTypes"
	  public explicit_return_type "String"
	  nparams 2
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "mimeTypeFilter" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78744119 "openTypedAssetFile"
	  public return_type class_ref 7016631 // AssetFileDescriptor
	  nparams 5
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "mimeType" explicit_type "String"
	    param inout name "opts" type class_ref 6925879 // Bundle
	    param inout name "cancellationSignal" type class_ref 7049271 // ICancellationSignal
	  nexceptions 1
	    explicit_exception "FileNotFoundException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78744247 "createCancellationSignal"
	  public return_type class_ref 7049271 // ICancellationSignal
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78744375 "canonicalize"
	  public return_type class_ref 6927159 // Uri
	  nparams 2
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78744503 "uncanonicalize"
	  public return_type class_ref 6927159 // Uri
	  nparams 2
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78744631 "enforceFilePermission"
	  private explicit_return_type "void"
	  nparams 4
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "mode" explicit_type "String"
	    param inout name "callerToken" type class_ref 6927031 // IBinder
	  nexceptions 2
	    explicit_exception "FileNotFoundException"
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78744759 "enforceReadPermission"
	  private explicit_return_type "int"
	  nparams 3
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "callerToken" type class_ref 6927031 // IBinder
	  nexceptions 1
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78744887 "enforceWritePermission"
	  private explicit_return_type "int"
	  nparams 3
	    param inout name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "callerToken" type class_ref 6927031 // IBinder
	  nexceptions 1
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15430839 // mTransport (<unidirectional association>)
	relation 15430839 --->
	  a role_name "mTransport" init_value " new Transport()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15430839 // mTransport (<unidirectional association>)
	  b parent class_ref 7100855 // Transport
      end

      operation 78737335 "ContentProvider"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a ContentProvider instance.  Content providers must be
<a href=\"{@docRoot}guide/topics/manifest/provider-element.html\">declared
in the manifest</a>, accessed with {@link ContentResolver}, and created
automatically by the system, so applications usually do not create
ContentProvider instances directly.

<p>At construction time, the object is uninitialized, and most fields and
methods are unavailable.  Subclasses should initialize themselves in
{@link #onCreate}, not the constructor.

<p>Content providers are created on the application main thread at
application launch time.  The constructor must not perform lengthy
operations, or application startup will be delayed.
"
      end

      operation 78737463 "ContentProvider"
	public explicit_return_type ""
	nparams 4
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "readPermission" explicit_type "String"
	  param inout name "writePermission" explicit_type "String"
	  param inout name "pathPermissions" type class_ref 7100727 // PathPermission
	multiplicity "[]"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor just for mocking.

@param context A Context object which should be some mock instance (like the
instance of {@link android.test.mock.MockContext}).
@param readPermission The read permision you want this instance should have in the
test, which is available via {@link #getReadPermission()}.
@param writePermission The write permission you want this instance should have
in the test, which is available via {@link #getWritePermission()}.
@param pathPermissions The PathPermissions you want this instance should have
in the test, which is available via {@link #getPathPermissions()}.
@hide
"
      end

      operation 78737591 "coerceToLocalContentProvider"
	class_operation public return_type class_ref 6994743 // ContentProvider
	nparams 1
	  param inout name "abstractInterface" type class_ref 6991671 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an IContentProvider, try to coerce it back to the real
ContentProvider object if it is running in the local process.  This can
be used if you know you are running in the same process as a provider,
and want to get direct access to its implementation details.  Most
clients should not nor have a reason to use it.

@param abstractInterface The ContentProvider interface that is to be
             coerced.
@return If the IContentProvider is non-{@code null} and local, returns its actual
ContentProvider instance.  Otherwise returns {@code null}.
@hide
"
      end

      operation 78745015 "checkUser"
	package explicit_return_type "boolean"
	nparams 3
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78745143 "checkPermissionAndAppOp"
	private explicit_return_type "int"
	nparams 3
	  param inout name "permission" explicit_type "String"
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify that calling app holds both the given permission and any app-op
associated with that permission.
"
      end

      operation 78745271 "enforceReadPermissionInner"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	nexceptions 1
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78745399 "enforceWritePermissionInner"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "callerToken" type class_ref 6927031 // IBinder
	nexceptions 1
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78745527 "getContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Retrieves the Context this provider is running in.  Only available once
{@link #onCreate} has been called -- this will return {@code null} in the
constructor.
"
      end

      operation 78745655 "setCallingPackage"
	private explicit_return_type "String"
	nparams 1
	  param inout name "callingPackage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the calling package, returning the current value (or {@code null})
which can be used later to restore the previous state.
"
      end

      operation 78745783 "getCallingPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the package name of the caller that initiated the request being
processed on the current thread. The returned package will have been
verified to belong to the calling UID. Returns {@code null} if not
currently processing a request.
<p>
This will always return {@code null} when processing
{@link #getType(Uri)} or {@link #getStreamTypes(Uri, String)} requests.

@see Binder#getCallingUid()
@see Context#grantUriPermission(String, Uri, int)
@throws SecurityException if the calling package doesn't belong to the
            calling UID.
"
      end

      operation 78745911 "setAuthorities"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "authorities" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the authorities of the ContentProvider.
This is normally set for you from its manifest information when the provider is first
created.
@hide
@param authorities the semi-colon separated authorities of the ContentProvider.
"
      end

      operation 78746039 "matchesOurAuthorities"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78746167 "setReadPermission"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the permission required to read data from the content
provider.  This is normally set for you from its manifest information
when the provider is first created.

@param permission Name of the permission required for read-only access.
"
      end

      operation 78746295 "getReadPermission"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the name of the permission required for read-only access to
this content provider.  This method can be called from multiple
threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
"
      end

      operation 78746423 "setWritePermission"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the permission required to read and write data in the content
provider.  This is normally set for you from its manifest information
when the provider is first created.

@param permission Name of the permission required for read/write access.
"
      end

      operation 78746551 "getWritePermission"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the name of the permission required for read/write access to
this content provider.  This method can be called from multiple
threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
"
      end

      operation 78746679 "setPathPermissions"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "permissions" type class_ref 7100727 // PathPermission
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the path-based permission required to read and/or write data in
the content provider.  This is normally set for you from its manifest
information when the provider is first created.

@param permissions Array of path permission descriptions.
"
      end

      operation 78746807 "getPathPermissions"
	public return_type class_ref 7100727 // PathPermission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the path-based permissions required for read and/or write access to
this content provider.  This method can be called from multiple
threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
"
      end

      operation 78746935 "setAppOps"
	public explicit_return_type "void"
	nparams 2
	  param in name "readOp" explicit_type "int"
	  param in name "writeOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78747063 "getAppOpsManager"
	public return_type class_ref 7013431 // AppOpsManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78747191 "onCreate"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to initialize your content provider on startup.
This method is called for all registered content providers on the
application main thread at application launch time.  It must not perform
lengthy operations, or application startup will be delayed.

<p>You should defer nontrivial initialization (such as opening,
upgrading, and scanning databases) until the content provider is used
(via {@link #query}, {@link #insert}, etc).  Deferred initialization
keeps application startup fast, avoids unnecessary work if the provider
turns out not to be needed, and stops database errors (such as a full
disk) from halting application launch.

<p>If you use SQLite, {@link android.database.sqlite.SQLiteOpenHelper}
is a helpful utility class that makes it easy to manage databases,
and will automatically defer opening until first use.  If you do use
SQLiteOpenHelper, make sure to avoid calling
{@link android.database.sqlite.SQLiteOpenHelper#getReadableDatabase} or
{@link android.database.sqlite.SQLiteOpenHelper#getWritableDatabase}
from this method.  (Instead, override
{@link android.database.sqlite.SQLiteOpenHelper#onOpen} to initialize the
database when it is first opened.)

@return true if the provider was successfully loaded, false otherwise
"
      end

      operation 78747319 "onConfigurationChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" type class_ref 6927543 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
This method is always called on the application main thread, and must
not perform lengthy operations.

<p>The default content provider implementation does nothing.
Override this method to take appropriate action.
(Content providers do not usually care about things like screen
orientation, but may want to know about locale changes.)
"
      end

      operation 78747447 "onLowMemory"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
This method is always called on the application main thread, and must
not perform lengthy operations.

<p>The default content provider implementation does nothing.
Subclasses may override this method to take appropriate action.
"
      end

      operation 78747575 "onTrimMemory"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78747703 "query"
	abstract public return_type class_ref 6954295 // Cursor
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}, @Nullable ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Implement this to handle query requests from clients.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
<p>
Example client call:<p>
<pre>// Request a specific record.
Cursor managedCursor = managedQuery(
ContentUris.withAppendedId(Contacts.People.CONTENT_URI, 2),
projection,    // Which columns to return.
null,          // WHERE clause.
null,          // WHERE clause value substitution
People.NAME + \" ASC\");   // Sort order.</pre>
Example implementation:<p>
<pre>// SQLiteQueryBuilder is a helper class that creates the
// proper SQL syntax for us.
SQLiteQueryBuilder qBuilder = new SQLiteQueryBuilder();

// Set the table we're querying.
qBuilder.setTables(DATABASE_TABLE_NAME);

// If the query ends in a specific record number, we're
// being asked for a specific record, so set the
// WHERE clause in our query.
if((URI_MATCHER.match(uri)) == SPECIFIC_MESSAGE){
qBuilder.appendWhere(\"_id=\" + uri.getPathLeafId());
}

// Make the query.
Cursor c = qBuilder.query(mDb,
projection,
selection,
selectionArgs,
groupBy,
having,
sortOrder);
c.setNotificationUri(getContext().getContentResolver(), uri);
return c;</pre>

@param uri The URI to query. This will be the full URI sent by the client;
     if the client is requesting a specific record, the URI will end in a record number
     that the implementation should parse and add to a WHERE or HAVING clause, specifying
     that _id value.
@param projection The list of columns to put into the cursor. If
     {@code null} all columns are included.
@param selection A selection criteria to apply when filtering rows.
     If {@code null} then all rows are included.
@param selectionArgs You may include ?s in selection, which will be replaced by
     the values from selectionArgs, in order that they appear in the selection.
     The values will be bound as Strings.
@param sortOrder How the rows in the cursor should be sorted.
     If {@code null} then the provider is free to define the sort order.
@return a Cursor or {@code null}.
"
      end

      operation 78747831 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 6
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7016503 // CancellationSignal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}, @Nullable ${t4} ${p4}, @Nullable ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Implement this to handle query requests from clients with support for cancellation.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
<p>
Example client call:<p>
<pre>// Request a specific record.
Cursor managedCursor = managedQuery(
ContentUris.withAppendedId(Contacts.People.CONTENT_URI, 2),
projection,    // Which columns to return.
null,          // WHERE clause.
null,          // WHERE clause value substitution
People.NAME + \" ASC\");   // Sort order.</pre>
Example implementation:<p>
<pre>// SQLiteQueryBuilder is a helper class that creates the
// proper SQL syntax for us.
SQLiteQueryBuilder qBuilder = new SQLiteQueryBuilder();

// Set the table we're querying.
qBuilder.setTables(DATABASE_TABLE_NAME);

// If the query ends in a specific record number, we're
// being asked for a specific record, so set the
// WHERE clause in our query.
if((URI_MATCHER.match(uri)) == SPECIFIC_MESSAGE){
qBuilder.appendWhere(\"_id=\" + uri.getPathLeafId());
}

// Make the query.
Cursor c = qBuilder.query(mDb,
projection,
selection,
selectionArgs,
groupBy,
having,
sortOrder);
c.setNotificationUri(getContext().getContentResolver(), uri);
return c;</pre>
<p>
If you implement this method then you must also implement the version of
{@link #query(Uri, String[], String, String[], String)} that does not take a cancellation
signal to ensure correct operation on older versions of the Android Framework in
which the cancellation signal overload was not available.

@param uri The URI to query. This will be the full URI sent by the client;
     if the client is requesting a specific record, the URI will end in a record number
     that the implementation should parse and add to a WHERE or HAVING clause, specifying
     that _id value.
@param projection The list of columns to put into the cursor. If
     {@code null} all columns are included.
@param selection A selection criteria to apply when filtering rows.
     If {@code null} then all rows are included.
@param selectionArgs You may include ?s in selection, which will be replaced by
     the values from selectionArgs, in order that they appear in the selection.
     The values will be bound as Strings.
@param sortOrder How the rows in the cursor should be sorted.
     If {@code null} then the provider is free to define the sort order.
@param cancellationSignal A signal to cancel the operation in progress, or {@code null} if none.
If the operation is canceled, then {@link OperationCanceledException} will be thrown
when the query is executed.
@return a Cursor or {@code null}.
"
      end

      operation 78747959 "getType"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Implement this to handle requests for the MIME type of the data at the
given URI.  The returned MIME type should start with
<code>vnd.android.cursor.item</code> for a single record,
or <code>vnd.android.cursor.dir/</code> for multiple items.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>Note that there are no permissions needed for an application to
access this information; if your content provider requires read and/or
write permissions, or is not exported, all applications can still call
this method regardless of their access permissions.  This allows them
to retrieve the MIME type for a URI when dispatching intents.

@param uri the URI to query.
@return a MIME type string, or {@code null} if there is no type.
"
      end

      operation 78748087 "canonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Implement this to support canonicalization of URIs that refer to your
content provider.  A canonical URI is one that can be transported across
devices, backup/restore, and other contexts, and still be able to refer
to the same data item.  Typically this is implemented by adding query
params to the URI allowing the content provider to verify that an incoming
canonical URI references the same data as it was originally intended for and,
if it doesn't, to find that data (if it exists) in the current environment.

<p>For example, if the content provider holds people and a normal URI in it
is created with a row index into that people database, the cananical representation
may have an additional query param at the end which specifies the name of the
person it is intended for.  Later calls into the provider with that URI will look
up the row of that URI's base index and, if it doesn't match or its entry's
name doesn't match the name in the query param, perform a query on its database
to find the correct row to operate on.</p>

<p>If you implement support for canonical URIs, <b>all</b> incoming calls with
URIs (including this one) must perform this verification and recovery of any
canonical URIs they receive.  In addition, you must also implement
{@link #uncanonicalize} to strip the canonicalization of any of these URIs.</p>

<p>The default implementation of this method returns null, indicating that
canonical URIs are not supported.</p>

@param url The Uri to canonicalize.

@return Return the canonical representation of <var>url</var>, or null if
canonicalization of that Uri is not supported.
"
      end

      operation 78748215 "uncanonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Remove canonicalization from canonical URIs previously returned by
{@link #canonicalize}.  For example, if your implementation is to add
a query param to canonicalize a URI, this method can simply trip any
query params on the URI.  The default implementation always returns the
same <var>url</var> that was passed in.

@param url The Uri to remove any canonicalization from.

@return Return the non-canonical representation of <var>url</var>, return
the <var>url</var> as-is if there is nothing to do, or return null if
the data identified by the canonical representation can not be found in
the current environment.
"
      end

      operation 78748343 "rejectInsert"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Implementation when a caller has performed an insert on the content
provider, but that call has been rejected for the operation given
to {@link #setAppOps(int, int)}.  The default implementation simply
returns a dummy URI that is the base URI with a 0 path element
appended.
"
      end

      operation 78748471 "insert"
	abstract public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Implement this to handle requests to insert a new row.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after inserting.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
@param uri The content:// URI of the insertion request. This must not be {@code null}.
@param values A set of column_name/value pairs to add to the database.
    This must not be {@code null}.
@return The URI for the newly inserted item.
"
      end

      operation 78748599 "bulkInsert"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override this to handle requests to insert a set of new rows, or the
default implementation will iterate over the values and call
{@link #insert} on each of them.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after inserting.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

@param uri The content:// URI of the insertion request.
@param values An array of sets of column_name/value pairs to add to the database.
   This must not be {@code null}.
@return The number of values that were inserted.
"
      end

      operation 78748727 "delete"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle requests to delete one or more rows.
The implementation should apply the selection clause when performing
deletion, allowing the operation to affect multiple rows in a directory.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after deleting.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>The implementation is responsible for parsing out a row ID at the end
of the URI, if a specific row is being deleted. That is, the client would
pass in <code>content://contacts/people/22</code> and the implementation is
responsible for parsing the record number (22) when creating a SQL statement.

@param uri The full URI to query, including a row ID (if a specific record is requested).
@param selection An optional restriction to apply to rows when deleting.
@return The number of rows affected.
@throws SQLException
"
      end

      operation 78748855 "update"
	abstract public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle requests to update one or more rows.
The implementation should update all rows matching the selection
to set the columns according to the provided values map.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after updating.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

@param uri The URI to query. This can potentially have a record ID if this
is an update request for a specific record.
@param values A set of column_name/value pairs to update in the database.
    This must not be {@code null}.
@param selection An optional filter to match rows to update.
@return the number of rows affected.
"
      end

      operation 78748983 "openFile"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Override this to handle requests to open a file blob.
The default implementation always throws {@link FileNotFoundException}.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>This method returns a ParcelFileDescriptor, which is returned directly
to the caller.  This way large data (such as images and documents) can be
returned without copying the content.

<p>The returned ParcelFileDescriptor is owned by the caller, so it is
their responsibility to close it when done.  That is, the implementation
of this method should create a new ParcelFileDescriptor for each call.
<p>
If opened with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor can be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" or \"rwt\" modes implies a file on disk that
supports seeking.
<p>
If you need to detect when the returned ParcelFileDescriptor has been
closed, or if the remote process has crashed or encountered some other
error, you can use {@link ParcelFileDescriptor#open(File, int,
android.os.Handler, android.os.ParcelFileDescriptor.OnCloseListener)},
{@link ParcelFileDescriptor#createReliablePipe()}, or
{@link ParcelFileDescriptor#createReliableSocketPair()}.

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file.  May be \"r\" for read-only access,
\"rw\" for read and write access, or \"rwt\" for read and write access
that truncates any existing file.

@return Returns a new ParcelFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openAssetFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)
@see ParcelFileDescriptor#parseMode(String)
"
      end

      operation 78749111 "openFile"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Override this to handle requests to open a file blob.
The default implementation always throws {@link FileNotFoundException}.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>This method returns a ParcelFileDescriptor, which is returned directly
to the caller.  This way large data (such as images and documents) can be
returned without copying the content.

<p>The returned ParcelFileDescriptor is owned by the caller, so it is
their responsibility to close it when done.  That is, the implementation
of this method should create a new ParcelFileDescriptor for each call.
<p>
If opened with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor can be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" or \"rwt\" modes implies a file on disk that
supports seeking.
<p>
If you need to detect when the returned ParcelFileDescriptor has been
closed, or if the remote process has crashed or encountered some other
error, you can use {@link ParcelFileDescriptor#open(File, int,
android.os.Handler, android.os.ParcelFileDescriptor.OnCloseListener)},
{@link ParcelFileDescriptor#createReliablePipe()}, or
{@link ParcelFileDescriptor#createReliableSocketPair()}.

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file. May be \"r\" for read-only access,
           \"w\" for write-only access, \"rw\" for read and write access, or
           \"rwt\" for read and write access that truncates any existing
           file.
@param signal A signal to cancel the operation in progress, or
           {@code null} if none. For example, if you are downloading a
           file from the network to service a \"rw\" mode request, you
           should periodically call
           {@link CancellationSignal#throwIfCanceled()} to check whether
           the client has canceled the request and abort the download.

@return Returns a new ParcelFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openAssetFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)
@see ParcelFileDescriptor#parseMode(String)
"
      end

      operation 78749239 "openAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "This is like {@link #openFile}, but can be implemented by providers
that need to be able to return sub-sections of files, often assets
inside of their .apk.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>If you implement this, your clients must be able to deal with such
file slices, either directly with
{@link ContentResolver#openAssetFileDescriptor}, or by using the higher-level
{@link ContentResolver#openInputStream ContentResolver.openInputStream}
or {@link ContentResolver#openOutputStream ContentResolver.openOutputStream}
methods.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">If you are implementing this to return a full file, you
should create the AssetFileDescriptor with
{@link AssetFileDescriptor#UNKNOWN_LENGTH} to be compatible with
applications that cannot handle sub-sections of files.</p>

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file.  May be \"r\" for read-only access,
\"w\" for write-only access (erasing whatever data is currently in
the file), \"wa\" for write-only access to append to any existing data,
\"rw\" for read and write access on any existing data, and \"rwt\" for read
and write access that truncates any existing file.

@return Returns a new AssetFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)
"
      end

      operation 78749367 "openAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "This is like {@link #openFile}, but can be implemented by providers
that need to be able to return sub-sections of files, often assets
inside of their .apk.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>If you implement this, your clients must be able to deal with such
file slices, either directly with
{@link ContentResolver#openAssetFileDescriptor}, or by using the higher-level
{@link ContentResolver#openInputStream ContentResolver.openInputStream}
or {@link ContentResolver#openOutputStream ContentResolver.openOutputStream}
methods.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">If you are implementing this to return a full file, you
should create the AssetFileDescriptor with
{@link AssetFileDescriptor#UNKNOWN_LENGTH} to be compatible with
applications that cannot handle sub-sections of files.</p>

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file.  May be \"r\" for read-only access,
\"w\" for write-only access (erasing whatever data is currently in
the file), \"wa\" for write-only access to append to any existing data,
\"rw\" for read and write access on any existing data, and \"rwt\" for read
and write access that truncates any existing file.
@param signal A signal to cancel the operation in progress, or
           {@code null} if none. For example, if you are downloading a
           file from the network to service a \"rw\" mode request, you
           should periodically call
           {@link CancellationSignal#throwIfCanceled()} to check whether
           the client has canceled the request and abort the download.

@return Returns a new AssetFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)
"
      end

      operation 78749495 "openFileHelper"
	protected return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Convenience for subclasses that wish to implement {@link #openFile}
by looking up a column named \"_data\" at the given URI.

@param uri The URI to be opened.
@param mode The file mode.  May be \"r\" for read-only access,
\"w\" for write-only access (erasing whatever data is currently in
the file), \"wa\" for write-only access to append to any existing data,
\"rw\" for read and write access on any existing data, and \"rwt\" for read
and write access that truncates any existing file.

@return Returns a new ParcelFileDescriptor that can be used by the
client to access the file.
"
      end

      operation 78749623 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Called by a client to determine the types of data streams that this
content provider supports for the given URI.  The default implementation
returns {@code null}, meaning no types.  If your content provider stores data
of a particular type, return that MIME type if it matches the given
mimeTypeFilter.  If it can perform type conversions, return an array
of all supported MIME types that match mimeTypeFilter.

@param uri The data in the content provider being queried.
@param mimeTypeFilter The type of data the client desires.  May be
a pattern, such as *&#47;* to retrieve all possible data types.
@return Returns {@code null} if there are no possible data streams for the
given mimeTypeFilter.  Otherwise returns an array of all available
concrete MIME types.

@see #getType(Uri)
@see #openTypedAssetFile(Uri, String, Bundle)
@see ClipDescription#compareMimeTypes(String, String)
"
      end

      operation 78749751 "openTypedAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Called by a client to open a read-only stream containing data of a
particular MIME type.  This is like {@link #openAssetFile(Uri, String)},
except the file can only be read-only and the content provider may
perform data conversions to generate data of the desired type.

<p>The default implementation compares the given mimeType against the
result of {@link #getType(Uri)} and, if they match, simply calls
{@link #openAssetFile(Uri, String)}.

<p>See {@link ClipData} for examples of the use and implementation
of this method.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The data in the content provider being queried.
@param mimeTypeFilter The type of data the client desires.  May be
a pattern, such as *&#47;*, if the caller does not have specific type
requirements; in this case the content provider will pick its best
type matching the pattern.
@param opts Additional options from the client.  The definitions of
these are specific to the content provider being called.

@return Returns a new AssetFileDescriptor from which the client can
read data of the desired type.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the data.
@throws IllegalArgumentException Throws IllegalArgumentException if the
content provider does not support the requested MIME type.

@see #getStreamTypes(Uri, String)
@see #openAssetFile(Uri, String)
@see ClipDescription#compareMimeTypes(String, String)
"
      end

      operation 78749879 "openTypedAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	  param inout name "signal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Called by a client to open a read-only stream containing data of a
particular MIME type.  This is like {@link #openAssetFile(Uri, String)},
except the file can only be read-only and the content provider may
perform data conversions to generate data of the desired type.

<p>The default implementation compares the given mimeType against the
result of {@link #getType(Uri)} and, if they match, simply calls
{@link #openAssetFile(Uri, String)}.

<p>See {@link ClipData} for examples of the use and implementation
of this method.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The data in the content provider being queried.
@param mimeTypeFilter The type of data the client desires.  May be
a pattern, such as *&#47;*, if the caller does not have specific type
requirements; in this case the content provider will pick its best
type matching the pattern.
@param opts Additional options from the client.  The definitions of
these are specific to the content provider being called.
@param signal A signal to cancel the operation in progress, or
           {@code null} if none. For example, if you are downloading a
           file from the network to service a \"rw\" mode request, you
           should periodically call
           {@link CancellationSignal#throwIfCanceled()} to check whether
           the client has canceled the request and abort the download.

@return Returns a new AssetFileDescriptor from which the client can
read data of the desired type.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the data.
@throws IllegalArgumentException Throws IllegalArgumentException if the
content provider does not support the requested MIME type.

@see #getStreamTypes(Uri, String)
@see #openAssetFile(Uri, String)
@see ClipDescription#compareMimeTypes(String, String)
"
      end

      class 7101239 "PipeDataWriter"
	visibility public stereotype "interface"
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78750007 "writeDataToPipe"
	  cpp_inline public explicit_return_type "void"
	  nparams 5
	    param inout name "output" type class_ref 6986295 // ParcelFileDescriptor
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "mimeType" explicit_type "String"
	    param inout name "opts" type class_ref 6925879 // Bundle
	    param inout name "args" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}, @Nullable ${t3} ${p3}, @Nullable ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called from a background thread to stream data out to a pipe.
Note that the pipe is blocking, so this thread can block on
writes for an arbitrary amount of time if the client is slow
at reading.

@param output The pipe where data should be written.  This will be
closed for you upon returning from this function.
@param uri The URI whose data is to be written.
@param mimeType The desired type of data to be written.
@param opts Options supplied by caller.
@param args Your own custom arguments.
"
	end
      end

      operation 78750135 "openPipeHelper"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 5
	  param in name "uri" type class_ref 6927159 // Uri
	  param in name "mimeType" explicit_type "String"
	  param in name "opts" type class_ref 6925879 // Bundle
	  param in name "args" explicit_type "T"
	  param in name "func" type class_ref 7101239 // PipeDataWriter
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@NonNull final ${t0} ${p0}, @NonNull final ${t1} ${p1}, @Nullable final ${t2} ${p2}, @Nullable final ${t3} ${p3}, @NonNull final ${t4}<T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "A helper function for implementing {@link #openTypedAssetFile}, for
creating a data pipe and background thread allowing you to stream
generated data back to the client.  This function returns a new
ParcelFileDescriptor that should be returned to the caller (the caller
is responsible for closing it).

@param uri The URI whose data is to be written.
@param mimeType The desired type of data to be written.
@param opts Options supplied by caller.
@param args Your own custom arguments.
@param func Interface implementing the function that will actually
stream the data.
@return Returns a new ParcelFileDescriptor holding the read side of
the pipe.  This should be returned to the caller for reading; the caller
is responsible for closing it when done.
"
      end

      operation 78750263 "isTemporary"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this instance is a temporary content provider.
@return true if this instance is a temporary content provider
"
      end

      operation 78750391 "getIContentProvider"
	public return_type class_ref 6991671 // IContentProvider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Binder object for this provider.

@return the Binder object for this provider
@hide
"
      end

      operation 78750519 "attachInfoForTesting"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "info" type class_ref 6991543 // ProviderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #attachInfo(Context, android.content.pm.ProviderInfo)}, but for use
when directly instantiating the provider for testing.
@hide
"
      end

      operation 78750647 "attachInfo"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "info" type class_ref 6991543 // ProviderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After being instantiated, this is called to tell the content provider
about itself.

@param context The context this provider is running in
@param info Registered information about this content provider
"
      end

      operation 78750775 "attachInfo"
	private explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "info" type class_ref 6991543 // ProviderInfo
	  param inout name "testing" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78750903 "applyBatch"
	public return_type class_ref 7017015 // ContentProviderResult
	nparams 1
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 1
	  exception class_ref 7017143 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Override this to handle requests to perform a batch of operations, or the
default implementation will iterate over the operations and call
{@link ContentProviderOperation#apply} on each of them.
If all calls to {@link ContentProviderOperation#apply} succeed
then a {@link ContentProviderResult} array with as many
elements as there were operations will be returned.  If any of the calls
fail, it is up to the implementation how many of the others take effect.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

@param operations the operations to apply
@return the results of the applications
@throws OperationApplicationException thrown if any operation fails.
@see ContentProviderOperation#apply
"
      end

      operation 78751031 "call"
	public return_type class_ref 6925879 // Bundle
	nparams 3
	  param inout name "method" explicit_type "String"
	  param inout name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Call a provider-defined method.  This can be used to implement
interfaces that are cheaper and/or unnatural for a table-like
model.

<p class=\"note\"><strong>WARNING:</strong> The framework does no permission checking
on this entry into the content provider besides the basic ability for the application
to get access to the provider at all.  For example, it has no idea whether the call
being executed may read or write data in the provider, so can't enforce those
individual permissions.  Any implementation of this method <strong>must</strong>
do its own permission checks on incoming calls to make sure they are allowed.</p>

@param method method name to call.  Opaque to framework, but should not be {@code null}.
@param arg provider-defined String argument.  May be {@code null}.
@param extras provider-defined Bundle argument.  May be {@code null}.
@return provider-defined return value.  May be {@code null}, which is also
  the default for providers which don't implement any call methods.
"
      end

      operation 78751159 "shutdown"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to shut down the ContentProvider instance. You can then
invoke this method in unit tests.

<p>
Android normally handles ContentProvider startup and shutdown
automatically. You do not need to start up or shut down a
ContentProvider. When you invoke a test method on a ContentProvider,
however, a ContentProvider instance is started and keeps running after
the test finishes, even if a succeeding test instantiates another
ContentProvider. A conflict develops because the two instances are
usually running against the same underlying data source (for example, an
sqlite database).
</p>
<p>
Implementing shutDown() avoids this conflict by providing a way to
terminate the ContentProvider. This method can also prevent memory leaks
from multiple instantiations of the ContentProvider, and it can ensure
unit test isolation by allowing you to completely clean up the test
fixture before moving on to the next test.
</p>
"
      end

      operation 78751287 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the Provider's state into the given stream.  This gets invoked if
you run \"adb shell dumpsys activity provider &lt;provider_component_name&gt;\".

@param fd The raw file descriptor that the dump is being sent to.
@param writer The PrintWriter to which you should dump your state.  This will be
closed for you after you return.
@param args additional arguments to the dump request.
"
      end

      operation 78751415 "validateIncomingUri"
	private explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	nexceptions 1
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78751543 "getUserIdFromAuthority"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "auth" explicit_type "String"
	  param in name "defaultUserId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78751671 "getUserIdFromAuthority"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "auth" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78751799 "getUserIdFromUri"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "defaultUserId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78751927 "getUserIdFromUri"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78752055 "getAuthorityWithoutUserId"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "auth" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes userId part from authority string. Expects format:
userId@some.authority
If there is no userId in the authority, it symply returns the argument
@hide
"
      end

      operation 78752183 "getUriWithoutUserId"
	class_operation public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78752311 "uriHasUserId"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78752439 "maybeAddUserId"
	class_operation public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 7004471 "DialogInterface"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 24135735 "BUTTON_POSITIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the positive button.

"
      end

      attribute 24135863 "BUTTON_NEGATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the negative button. 

"
      end

      attribute 24135991 "BUTTON_NEUTRAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the neutral button. 

"
      end

      attribute 24136119 "BUTTON1"
	class_attribute const_attribute public explicit_type "int"
	init_value " BUTTON_POSITIVE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated Use {@link #BUTTON_POSITIVE}

"
      end

      attribute 24136247 "BUTTON2"
	class_attribute const_attribute public explicit_type "int"
	init_value " BUTTON_NEGATIVE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated Use {@link #BUTTON_NEGATIVE}

"
      end

      attribute 24136375 "BUTTON3"
	class_attribute const_attribute public explicit_type "int"
	init_value " BUTTON_NEUTRAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated Use {@link #BUTTON_NEUTRAL}

"
      end

      operation 77719863 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77719991 "dismiss"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7004599 "OnCancelListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77720119 "onCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dialog" type class_ref 7004471 // DialogInterface
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the dialog is canceled.

@param dialog The dialog that was canceled will be passed into the
           method.
"
	end
      end

      class 7004727 "OnDismissListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77720247 "onDismiss"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dialog" type class_ref 7004471 // DialogInterface
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the dialog is dismissed.

@param dialog The dialog that was dismissed will be passed into the
           method.
"
	end
      end

      class 7004855 "OnShowListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77720375 "onShow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dialog" type class_ref 7004471 // DialogInterface
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the dialog is shown.

@param dialog The dialog that was shown will be passed into the
           method.
"
	end
      end

      class 7004983 "OnClickListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77720503 "onClick"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dialog" type class_ref 7004471 // DialogInterface
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when a button in the dialog is clicked.

@param dialog The dialog that received the click.
@param which The button that was clicked (e.g.
           {@link DialogInterface#BUTTON1}) or the position
           of the item clicked.

 TODO: Change to use BUTTON_POSITIVE after API council "
	end
      end

      class 7005111 "OnMultiChoiceClickListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77720631 "onClick"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "dialog" type class_ref 7004471 // DialogInterface
	    param in name "which" explicit_type "int"
	    param inout name "isChecked" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when an item in the dialog is clicked.

@param dialog The dialog where the selection was made.
@param which The position of the item in the list that was clicked.
@param isChecked True if the click checked the item, else false.
"
	end
      end

      class 7005239 "OnKeyListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77720759 "onKey"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "dialog" type class_ref 7004471 // DialogInterface
	    param in name "keyCode" explicit_type "int"
	    param inout name "event" type class_ref 136631 // KeyEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a key is dispatched to a dialog. This allows listeners to
get a chance to respond before the dialog.

@param dialog The dialog the key has been dispatched to.
@param keyCode The code for the physical key that was pressed
@param event The KeyEvent object containing full information about
           the event.
@return True if the listener has consumed the event, false otherwise.
"
	end
      end
    end

    class 7016887 "ContentValues"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to store a set of values that the {@link ContentResolver}
can process.
"
      classrelation 15435959 // <realization>
	relation 15435959 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15435959 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      operation 78763319 "ContentValues"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty set of values using the default initial size
"
      end

      operation 78763447 "ContentValues"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty set of values using the given initial size

@param size the initial size of the set of values
"
      end

      operation 78763575 "ContentValues"
	public explicit_return_type ""
	nparams 1
	  param inout name "from" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of values copied from the given set

@param from the values to copy
"
      end

      operation 78763703 "ContentValues"
	private explicit_return_type ""
	nparams 1
	  param inout name "values" explicit_type "HashMap<String, Object>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of values copied from the given HashMap. This is used
by the Parcel unmarshalling code.

@param values the values to start with
{@hide}
"
      end

      operation 78763831 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78763959 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78764087 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78764215 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all values from the passed in ContentValues.

@param other the ContentValues from which to copy
"
      end

      operation 78764343 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78764471 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78764599 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Integer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78764727 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78764855 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78764983 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78765111 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78765239 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put
"
      end

      operation 78765367 "putNull"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a null value to the set.

@param key the name of the value to make null
"
      end

      operation 78765495 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of values.

@return the number of values
"
      end

      operation 78765623 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a single value.

@param key the name of the value to remove
"
      end

      operation 78765751 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all values.
"
      end

      operation 78765879 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this object has the named value.

@param key the value to check for
@return {@code true} if the value is present, {@code false} otherwise
"
      end

      operation 78766007 "get"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value. Valid value types are {@link String}, {@link Boolean},
{@link Number}, and {@code byte[]} implementations.

@param key the value to get
@return the data for the value, or {@code null} if the value is missing or if {@code null}
        was previously added with the given {@code key}
"
      end

      operation 78766135 "getAsString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a String.

@param key the value to get
@return the String for the value
"
      end

      operation 78766263 "getAsLong"
	public explicit_return_type "Long"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Long.

@param key the value to get
@return the Long value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78766391 "getAsInteger"
	public explicit_return_type "Integer"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to an Integer.

@param key the value to get
@return the Integer value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78766519 "getAsShort"
	public explicit_return_type "Short"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Short.

@param key the value to get
@return the Short value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78766647 "getAsByte"
	public explicit_return_type "Byte"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Byte.

@param key the value to get
@return the Byte value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78766775 "getAsDouble"
	public explicit_return_type "Double"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Double.

@param key the value to get
@return the Double value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78766903 "getAsFloat"
	public explicit_return_type "Float"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Float.

@param key the value to get
@return the Float value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78767031 "getAsBoolean"
	public explicit_return_type "Boolean"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Boolean.

@param key the value to get
@return the Boolean value, or {@code null} if the value is missing or cannot be converted
"
      end

      operation 78767159 "getAsByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value that is a byte array. Note that this method will not convert
any other types to byte arrays.

@param key the value to get
@return the {@code byte[]} value, or {@code null} is the value is missing or not a
        {@code byte[]}
"
      end

      operation 78767287 "valueSet"
	public explicit_return_type "Set<Map.Entry<String, Object>>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of all of the keys and values

@return a set of all of the keys and values
"
      end

      operation 78767415 "keySet"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of all of the keys

@return a set of all of the keys
"
      end

      classrelation 15436343 // CREATOR (<unidirectional association>)
	relation 15436343 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<ContentValues>() {
        @SuppressWarnings({\"deprecation\", \"unchecked\"})
        public ContentValues createFromParcel(Parcel in) {
            // TODO - what ClassLoader should be passed to readHashMap?
            HashMap<String, Object> values = in.readHashMap(null);
            return new ContentValues(values);
        }

        public ContentValues[] newArray(int size) {
            return new ContentValues[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ContentValues> ${name}${value};
"
	    classrelation_ref 15436343 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78767543 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78767671 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
      end

      operation 78767799 "putStringArrayList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Unsupported, here until we get proper bulk insert APIs.
{@hide}
"
      end

      operation 78767927 "getStringArrayList"
	public explicit_return_type "String"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Deprecated
"
	
	
	
	comment "Unsupported, here until we get proper bulk insert APIs.
{@hide}
"
      end

      operation 78768055 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this object.
@return a printable representation of this object.
"
      end
    end

    class 7017015 "ContentProviderResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Contains the result of the application of a {@link ContentProviderOperation}. It is guaranteed
to have exactly one of {@link #uri} or {@link #count} set.
"
      classrelation 15434807 // <realization>
	relation 15434807 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15434807 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15434935 // uri (<unidirectional association>)
	relation 15434935 --->
	  a role_name "uri" const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15434935 // uri (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      attribute 24551479 "count"
	const_attribute public explicit_type "Integer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78761015 "ContentProviderResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78761143 "ContentProviderResult"
	public explicit_return_type ""
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78761271 "ContentProviderResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78761399 "ContentProviderResult"
	public explicit_return_type ""
	nparams 2
	  param inout name "cpr" type class_ref 7017015 // ContentProviderResult
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78761527 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78761655 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15435063 // CREATOR (<unidirectional association>)
	relation 15435063 --->
	  a role_name "CREATOR" init_value "
            new Creator<ContentProviderResult>() {
        public ContentProviderResult createFromParcel(Parcel source) {
            return new ContentProviderResult(source);
        }

        public ContentProviderResult[] newArray(int size) {
            return new ContentProviderResult[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ContentProviderResult> ${name}${value};
"
	    classrelation_ref 15435063 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78761783 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7017143 "OperationApplicationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application of a {@link ContentProviderOperation} fails due the specified
constraints.
"
      attribute 24570935 "mNumSuccessfulYieldPoints"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78832439 "OperationApplicationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78832567 "OperationApplicationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78832695 "OperationApplicationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78832823 "OperationApplicationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78832951 "OperationApplicationException"
	public explicit_return_type ""
	nparams 1
	  param in name "numSuccessfulYieldPoints" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78833079 "OperationApplicationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" explicit_type "String"
	  param in name "numSuccessfulYieldPoints" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78833207 "getNumSuccessfulYieldPoints"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7017271 "ContentProviderClient"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The public interface object used to interact with a specific
{@link ContentProvider}.
<p>
Instances can be obtained by calling
{@link ContentResolver#acquireContentProviderClient} or
{@link ContentResolver#acquireUnstableContentProviderClient}. Instances must
be released using {@link #close()} in order to indicate to the system that
the underlying {@link ContentProvider} is no longer needed and can be killed
to free up resources.
<p>
Note that you should generally create a new ContentProviderClient instance
for each thread that will be performing operations. Unlike
{@link ContentResolver}, the methods here such as {@link #query} and
{@link #openFile} are not thread safe -- you must not call {@link #close()}
on the ContentProviderClient those calls are made from until you are finished
with the data they have returned.
"
      classrelation 15432247 // sAnrHandler (<unidirectional association>)
	relation 15432247 --->
	  a role_name "sAnrHandler" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"ContentProviderClient.class\")
"
	    classrelation_ref 15432247 // sAnrHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      classrelation 15432375 // mContentResolver (<unidirectional association>)
	relation 15432375 --->
	  a role_name "mContentResolver" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15432375 // mContentResolver (<unidirectional association>)
	  b parent class_ref 6924215 // ContentResolver
      end

      classrelation 15432503 // mContentProvider (<unidirectional association>)
	relation 15432503 --->
	  a role_name "mContentProvider" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15432503 // mContentProvider (<unidirectional association>)
	  b parent class_ref 6991671 // IContentProvider
      end

      attribute 24549303 "mStable"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24549431 "mClosed"
	const_attribute private explicit_type "AtomicBoolean"
	init_value " new AtomicBoolean()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24549559 "mCloseGuard"
	const_attribute private explicit_type "CloseGuard"
	init_value " CloseGuard.get()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24549687 "mAnrTimeout"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7101367 "NotRespondingRunnable"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78756151 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 15432759 // mAnrRunnable (<unidirectional association>)
	relation 15432759 --->
	  a role_name "mAnrRunnable" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15432759 // mAnrRunnable (<unidirectional association>)
	  b parent class_ref 7101367 // NotRespondingRunnable
      end

      operation 78752567 "ContentProviderClient"
	public explicit_return_type ""
	nparams 3
	  param inout name "contentResolver" type class_ref 6924215 // ContentResolver
	  param inout name "contentProvider" type class_ref 6991671 // IContentProvider
	  param inout name "stable" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@VisibleForTesting
"
	
	
	
	comment " {@hide} "
      end

      operation 78752695 "setDetectNotResponding"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeoutMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78752823 "beforeRemote"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78752951 "afterRemote"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78753079 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 5
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}, @Nullable ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#query ContentProvider.query} "
      end

      operation 78753207 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 6
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7016503 // CancellationSignal
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}, @Nullable ${t4} ${p4}, @Nullable ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#query ContentProvider.query} "
      end

      operation 78753335 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#getType ContentProvider.getType} "
      end

      operation 78753463 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#getStreamTypes ContentProvider.getStreamTypes} "
      end

      operation 78753591 "canonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#canonicalize} "
      end

      operation 78753719 "uncanonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#uncanonicalize} "
      end

      operation 78753847 "insert"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "initialValues" type class_ref 7016887 // ContentValues
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#insert ContentProvider.insert} "
      end

      operation 78753975 "bulkInsert"
	public explicit_return_type "int"
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "initialValues" type class_ref 7016887 // ContentValues
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#bulkInsert ContentProvider.bulkInsert} "
      end

      operation 78754103 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#delete ContentProvider.delete} "
      end

      operation 78754231 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#update ContentProvider.update} "
      end

      operation 78754359 "openFile"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "See {@link ContentProvider#openFile ContentProvider.openFile}.  Note that
this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openFileDescriptor
ContentResolver.openFileDescriptor} API instead.
"
      end

      operation 78754487 "openFile"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 3
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7016503 // CancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "See {@link ContentProvider#openFile ContentProvider.openFile}.  Note that
this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openFileDescriptor
ContentResolver.openFileDescriptor} API instead.
"
      end

      operation 78754615 "openAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "See {@link ContentProvider#openAssetFile ContentProvider.openAssetFile}.
Note that this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openAssetFileDescriptor
ContentResolver.openAssetFileDescriptor} API instead.
"
      end

      operation 78754743 "openAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 3
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7016503 // CancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "See {@link ContentProvider#openAssetFile ContentProvider.openAssetFile}.
Note that this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openAssetFileDescriptor
ContentResolver.openAssetFileDescriptor} API instead.
"
      end

      operation 78754871 "openTypedAssetFileDescriptor"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#openTypedAssetFile ContentProvider.openTypedAssetFile} "
      end

      operation 78754999 "openTypedAssetFileDescriptor"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	  param inout name "signal" type class_ref 7016503 // CancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#openTypedAssetFile ContentProvider.openTypedAssetFile} "
      end

      operation 78755127 "applyBatch"
	public return_type class_ref 7017015 // ContentProviderResult
	nparams 1
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  exception class_ref 7017143 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment " See {@link ContentProvider#applyBatch ContentProvider.applyBatch} "
      end

      operation 78755255 "call"
	public return_type class_ref 6925879 // Bundle
	nparams 3
	  param inout name "method" explicit_type "String"
	  param inout name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment " See {@link ContentProvider#call(String, String, Bundle)} "
      end

      operation 78755383 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Closes this client connection, indicating to the system that the
underlying {@link ContentProvider} is no longer needed.
"
      end

      operation 78755511 "release"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated replaced by {@link #close()}.
"
      end

      operation 78755639 "closeInternal"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78755767 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78755895 "getLocalContentProvider"
	public return_type class_ref 6994743 // ContentProvider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Get a reference to the {@link ContentProvider} that is associated with this
client. If the {@link ContentProvider} is running in a different process then
null will be returned. This can be used if you know you are running in the same
process as a provider, and want to get direct access to its implementation details.

@return If the associated {@link ContentProvider} is local, returns it.
Otherwise returns null.
"
      end

      operation 78756023 "releaseQuietly"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 7017271 // ContentProviderClient
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      class 7101495 "CursorWrapperInner"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15433015 // <generalisation>
	  relation 15433015 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15433015 // <generalisation>
	    b parent class_ref 7018423 // CrossProcessCursorWrapper
	end

	attribute 24549815 "mCloseGuard"
	  const_attribute private explicit_type "CloseGuard"
	  init_value " CloseGuard.get()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78756279 "CursorWrapperInner"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "cursor" type class_ref 6954295 // Cursor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78756407 "close"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78756535 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7017527 "SyncRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Convenience class to construct sync requests. See {@link android.content.SyncRequest.Builder}
for an explanation of the various functions. The resulting object is passed through to the
framework via {@link android.content.ContentResolver#requestSync(SyncRequest)}.
"
      classrelation 15506743 // <realization>
	relation 15506743 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15506743 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15506999 // mAccountToSync (<unidirectional association>)
	relation 15506999 --->
	  a role_name "mAccountToSync" const_relation private
	    comment " Account to pass to the sync adapter. Can be null. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15506999 // mAccountToSync (<unidirectional association>)
	  b parent class_ref 6935607 // Account
      end

      classrelation 15507255 // mExtras (<unidirectional association>)
	relation 15507255 --->
	  a role_name "mExtras" const_relation private
	    comment " Bundle containing user info as well as sync settings. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15507255 // mExtras (<unidirectional association>)
	  b parent class_ref 6925879 // Bundle
      end

      attribute 24582455 "mDisallowMetered"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Don't allow this sync request on metered networks. 
"
      end

      attribute 24582583 "mSyncFlexTimeSecs"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Amount of time before {@link #mSyncRunTimeSecs} from which the sync may optionally be
started.

"
      end

      attribute 24582711 "mSyncRunTimeSecs"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies a point in the future at which the sync must have been scheduled to run.

"
      end

      attribute 24582839 "mIsPeriodic"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Periodic versus one-off. 
"
      end

      attribute 24582967 "mIsAuthority"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Service versus provider. 
"
      end

      attribute 24583095 "mIsExpedited"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Sync should be run in lieu of other syncs. 
"
      end

      operation 78866359 "isPeriodic"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return whether this sync is periodic or one-time. A Sync Request must be
        either one of these or an InvalidStateException will be thrown in
        Builder.build().
"
      end

      operation 78866487 "isExpedited"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return whether this sync is expedited.
"
      end

      operation 78866615 "getAccount"
	public return_type class_ref 6935607 // Account
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}

@return account object for this sync.
@throws IllegalArgumentException if this function is called for a request that targets a
sync service.
"
      end

      operation 78866743 "getProvider"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}

@return provider for this sync.
@throws IllegalArgumentException if this function is called for a request that targets a
sync service.
"
      end

      operation 78866871 "getBundle"
	public return_type class_ref 6925879 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Retrieve bundle for this SyncRequest. Will not be null.
"
      end

      operation 78866999 "getSyncFlexTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return the earliest point in time that this sync can be scheduled.
"
      end

      operation 78867127 "getSyncRunTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return the last point in time at which this sync must scheduled.
"
      end

      classrelation 15507383 // CREATOR (<unidirectional association>)
	relation 15507383 --->
	  a role_name "CREATOR" init_value " new Creator<SyncRequest>() {

        @Override
        public SyncRequest createFromParcel(Parcel in) {
            return new SyncRequest(in);
        }

        @Override
        public SyncRequest[] newArray(int size) {
            return new SyncRequest[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncRequest> ${name}${value};
"
	    classrelation_ref 15507383 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78867255 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78867383 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78867511 "SyncRequest"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78867639 "SyncRequest"
	protected explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 7109943 // Builder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} Protected ctor to instantiate anonymous SyncRequest. "
      end

      class 7109943 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24583223 "SYNC_TYPE_UNKNOWN"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Unknown sync type. 
"
	end

	attribute 24583351 "SYNC_TYPE_PERIODIC"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Specify that this is a periodic sync. 
"
	end

	attribute 24583479 "SYNC_TYPE_ONCE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Specify that this is a one-time sync. 
"
	end

	attribute 24583607 "SYNC_TARGET_UNKNOWN"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Unknown sync target. 
"
	end

	attribute 24583735 "SYNC_TARGET_ADAPTER"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Specify that this is a sync with a provider. 
"
	end

	attribute 24583863 "mSyncFlexTimeSecs"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Earliest point of displacement into the future at which this sync can
occur.

"
	end

	attribute 24583991 "mSyncRunTimeSecs"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Displacement into the future at which this sync must occur. 
"
	end

	classrelation 15507511 // mCustomExtras (<unidirectional association>)
	  relation 15507511 --->
	    a role_name "mCustomExtras" private
	      comment "
Sync configuration information - custom user data explicitly provided by the developer.
This data is handed over to the sync operation.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15507511 // mCustomExtras (<unidirectional association>)
	    b parent class_ref 6925879 // Bundle
	end

	classrelation 15507639 // mSyncConfigExtras (<unidirectional association>)
	  relation 15507639 --->
	    a role_name "mSyncConfigExtras" private
	      comment "
Sync system configuration -  used to store system sync configuration. Corresponds to
ContentResolver.SYNC_EXTRAS_* flags.
TODO: Use this instead of dumping into one bundle. Need to decide if these flags should
discriminate between equivalent syncs.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15507639 // mSyncConfigExtras (<unidirectional association>)
	    b parent class_ref 6925879 // Bundle
	end

	attribute 24584119 "mDisallowMetered"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether or not this sync can occur on metered networks. Default false. 
"
	end

	attribute 24584247 "mSyncType"
	  private explicit_type "int"
	  init_value " SYNC_TYPE_UNKNOWN"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Whether this builder is building a periodic sync, or a one-time sync.

"
	end

	attribute 24584375 "mSyncTarget"
	  private explicit_type "int"
	  init_value " SYNC_TARGET_UNKNOWN"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether this will go to a sync adapter. 
"
	end

	attribute 24584503 "mIsManual"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether this is a user-activated sync. 
"
	end

	attribute 24584631 "mNoRetry"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Whether to retry this one-time sync if the sync fails. Not valid for
periodic syncs. See {@link ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY}.

"
	end

	attribute 24584759 "mIgnoreBackoff"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Whether to respect back-off for this one-time sync. Not valid for
periodic syncs. See
{@link ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF};

"
	end

	attribute 24584887 "mIgnoreSettings"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Ignore sync system settings and perform sync anyway. 
"
	end

	attribute 24585015 "mExpedited"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " This sync will run in preference to other non-expedited syncs. 
"
	end

	classrelation 15507767 // mAccount (<unidirectional association>)
	  relation 15507767 --->
	    a role_name "mAccount" private
	      comment "
The Account object that together with an Authority name define the SyncAdapter (if
this sync is bound to a provider), otherwise null.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15507767 // mAccount (<unidirectional association>)
	    b parent class_ref 6935607 // Account
	end

	attribute 24585143 "mRequiresCharging"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Whether the sync requires the phone to be plugged in.

"
	end

	operation 78867767 "Builder"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78867895 "syncOnce"
	  public return_type class_ref 7109943 // Builder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Request that a sync occur immediately.

Example
<pre>
    SyncRequest.Builder builder = (new SyncRequest.Builder()).syncOnce();
</pre>
"
	end

	operation 78868023 "syncPeriodic"
	  public return_type class_ref 7109943 // Builder
	  nparams 2
	    param in name "pollFrequency" explicit_type "long"
	    param in name "beforeSeconds" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build a periodic sync. Either this or syncOnce() <b>must</b> be called for this builder.
Syncs are identified by target {@link android.provider} and by the
contents of the extras bundle.
You cannot reuse the same builder for one-time syncs after having specified a periodic
sync (by calling this function). If you do, an <code>IllegalArgumentException</code>
will be thrown.
<p>The bundle for a periodic sync can be queried by applications with the correct
permissions using
{@link ContentResolver#getPeriodicSyncs(Account account, String provider)}, so no
sensitive data should be transferred here.

Example usage.

<pre>
    Request a periodic sync every 5 hours with 20 minutes of flex.
    SyncRequest.Builder builder =
        (new SyncRequest.Builder()).syncPeriodic(5 * HOUR_IN_SECS, 20 * MIN_IN_SECS);

    Schedule a periodic sync every hour at any point in time during that hour.
    SyncRequest.Builder builder =
        (new SyncRequest.Builder()).syncPeriodic(1 * HOUR_IN_SECS, 1 * HOUR_IN_SECS);
</pre>

N.B.: Periodic syncs are not allowed to have any of
{@link ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY},
{@link ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF},
{@link ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS},
{@link ContentResolver#SYNC_EXTRAS_INITIALIZE},
{@link ContentResolver#SYNC_EXTRAS_FORCE},
{@link ContentResolver#SYNC_EXTRAS_EXPEDITED},
{@link ContentResolver#SYNC_EXTRAS_MANUAL}
set to true. If any are supplied then an <code>IllegalArgumentException</code> will
be thrown.

@param pollFrequency the amount of time in seconds that you wish
           to elapse between periodic syncs. A minimum period of 1 hour is enforced.
@param beforeSeconds the amount of flex time in seconds before
           {@code pollFrequency} that you permit for the sync to take
           place. Must be less than {@code pollFrequency} and greater than
           MAX(5% of {@code pollFrequency}, 5 minutes)
"
	end

	operation 78868151 "setupInterval"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "at" explicit_type "long"
	    param in name "before" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78868279 "setDisallowMetered"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "disallow" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Will throw an <code>IllegalArgumentException</code> if called and
{@link #setIgnoreSettings(boolean ignoreSettings)} has already been called.
@param disallow true to allow this transfer on metered networks. Default false.

"
	end

	operation 78868407 "setRequiresCharging"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "requiresCharging" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify whether the sync requires the phone to be plugged in.
@param requiresCharging true if sync requires the phone to be plugged in. Default false.
"
	end

	operation 78868535 "setSyncAdapter"
	  public return_type class_ref 7109943 // Builder
	  nparams 2
	    param inout name "account" type class_ref 6935607 // Account
	    param inout name "authority" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify an authority and account for this transfer.

@param authority A String identifying the content provider to be synced.
@param account Account to sync. Can be null unless this is a periodic
           sync, for which verification by the ContentResolver will
           fail. If a sync is performed without an account, the
"
	end

	operation 78868663 "setExtras"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "bundle" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Developer-provided extras handed back when sync actually occurs. This bundle is copied
into the SyncRequest returned by {@link #build()}.

Example:
<pre>
  String[] syncItems = {\"dog\", \"cat\", \"frog\", \"child\"};
  SyncRequest.Builder builder =
    new SyncRequest.Builder()
      .setSyncAdapter(dummyAccount, dummyProvider)
      .syncOnce();

  for (String syncData : syncItems) {
    Bundle extras = new Bundle();
    extras.setString(\"data\", syncData);
    builder.setExtras(extras);
    ContentResolver.sync(builder.build()); // Each sync() request creates a unique sync.
  }
</pre>
Only values of the following types may be used in the extras bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>
If any data is present in the bundle not of this type, build() will
throw a runtime exception.

@param bundle extras bundle to set.
"
	end

	operation 78868791 "setNoRetry"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "noRetry" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY}.

A one-off sync operation that fails will be retried with exponential back-off unless
this is set to false. Not valid for periodic sync and will throw an
<code>IllegalArgumentException</code> in build().

@param noRetry true to not retry a failed sync. Default false.
"
	end

	operation 78868919 "setIgnoreSettings"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "ignoreSettings" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS}.

Not valid for periodic sync and will throw an <code>IllegalArgumentException</code> in
{@link #build()}.
<p>Throws <code>IllegalArgumentException</code> if called and
{@link #setDisallowMetered(boolean)} has been set.


@param ignoreSettings true to ignore the sync automatically settings. Default false.
"
	end

	operation 78869047 "setIgnoreBackoff"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "ignoreBackoff" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF}.

Ignoring back-off will force the sync scheduling process to ignore any back-off that was
the result of a failed sync, as well as to invalidate any {@link SyncResult#delayUntil}
value that may have been set by the adapter. Successive failures will not honor this
flag. Not valid for periodic sync and will throw an <code>IllegalArgumentException</code>
in {@link #build()}.

@param ignoreBackoff ignore back off settings. Default false.
"
	end

	operation 78869175 "setManual"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "isManual" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_MANUAL}.

Not valid for periodic sync and will throw an <code>IllegalArgumentException</code> in
{@link #build()}.

@param isManual User-initiated sync or not. Default false.
"
	end

	operation 78869303 "setExpedited"
	  public return_type class_ref 7109943 // Builder
	  nparams 1
	    param inout name "expedited" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "An expedited sync runs immediately and can preempt other non-expedited running syncs.

Not valid for periodic sync and will throw an <code>IllegalArgumentException</code> in
{@link #build()}.

@param expedited whether to run expedited. Default false.
"
	end

	operation 78869431 "build"
	  public return_type class_ref 7017527 // SyncRequest
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs validation over the request and throws the runtime exception
<code>IllegalArgumentException</code> if this validation fails.

@return a SyncRequest with the information contained within this
        builder.
"
	end
      end
    end

    class 7017655 "SyncAdapterType"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Value type that represents a SyncAdapterType. This object overrides {@link #equals} and
{@link #hashCode}, making it suitable for use as the key of a {@link java.util.Map}
"
      classrelation 15505335 // <realization>
	relation 15505335 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15505335 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24581303 "isKey"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24581431 "userVisible"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24581559 "supportsUploading"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24581687 "isAlwaysSyncable"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24581815 "allowParallelSyncs"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78863031 "SyncAdapterType"
	public explicit_return_type ""
	nparams 4
	  param inout name "authority" explicit_type "String"
	  param inout name "accountType" explicit_type "String"
	  param inout name "userVisible" explicit_type "boolean"
	  param inout name "supportsUploading" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78863159 "SyncAdapterType"
	public explicit_return_type ""
	nparams 7
	  param inout name "authority" explicit_type "String"
	  param inout name "accountType" explicit_type "String"
	  param inout name "userVisible" explicit_type "boolean"
	  param inout name "supportsUploading" explicit_type "boolean"
	  param inout name "isAlwaysSyncable" explicit_type "boolean"
	  param inout name "allowParallelSyncs" explicit_type "boolean"
	  param inout name "settingsActivity" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78863287 "SyncAdapterType"
	private explicit_return_type ""
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param inout name "accountType" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78863415 "supportsUploading"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78863543 "isUserVisible"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78863671 "allowParallelSyncs"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if this SyncAdapter supports syncing multiple accounts simultaneously.
If false then the SyncManager will take care to only start one sync at a time
using this SyncAdapter.
"
      end

      operation 78863799 "isAlwaysSyncable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If true then the SyncManager will never issue an initialization sync to the SyncAdapter
and will instead automatically call
{@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with a
value of 1 for each account and provider that this sync adapter supports.
@return true if the SyncAdapter does not require initialization and if it is ok for the
SyncAdapter to treat it as syncable automatically.
"
      end

      operation 78863927 "getSettingsActivity"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The activity to use to invoke this SyncAdapter's settings activity.
May be null.
"
      end

      operation 78864055 "newKey"
	class_operation public return_type class_ref 7017655 // SyncAdapterType
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param inout name "accountType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78864183 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78864311 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78864439 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78864567 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78864695 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78864823 "SyncAdapterType"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15505847 // CREATOR (<unidirectional association>)
	relation 15505847 --->
	  a role_name "CREATOR" init_value " new Creator<SyncAdapterType>() {
        public SyncAdapterType createFromParcel(Parcel source) {
            return new SyncAdapterType(source);
        }

        public SyncAdapterType[] newArray(int size) {
            return new SyncAdapterType[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncAdapterType> ${name}${value};
"
	    classrelation_ref 15505847 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 7017783 "PeriodicSync"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Value type that contains information about a periodic sync.
"
      classrelation 15492023 // <realization>
	relation 15492023 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15492023 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15492151 // account (<unidirectional association>)
	relation 15492151 --->
	  a role_name "account" const_relation public
	    comment " The account to be synced. Can be null. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15492151 // account (<unidirectional association>)
	  b parent class_ref 6935607 // Account
      end

      classrelation 15492407 // extras (<unidirectional association>)
	relation 15492407 --->
	  a role_name "extras" const_relation public
	    comment " Any extras that parameters that are to be passed to the sync adapter. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15492407 // extras (<unidirectional association>)
	  b parent class_ref 6925879 // Bundle
      end

      attribute 24571063 "period"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " How frequently the sync should be scheduled, in seconds. Kept around for API purposes. 
"
      end

      attribute 24571191 "flexTime"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How much flexibility can be taken in scheduling the sync, in seconds.
{@hide}

"
      end

      operation 78833335 "PeriodicSync"
	public explicit_return_type ""
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param in name "periodInSeconds" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new PeriodicSync, copying the Bundle. This constructor is no longer used.
"
      end

      operation 78833463 "PeriodicSync"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 7017783 // PeriodicSync
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a copy of a periodic sync.
{@hide}
"
      end

      operation 78833591 "PeriodicSync"
	public explicit_return_type ""
	nparams 5
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param in name "period" explicit_type "long"
	  param in name "flexTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A PeriodicSync for a sync with a specified provider.
{@hide}
"
      end

      operation 78833719 "PeriodicSync"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78833847 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78833975 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15492535 // CREATOR (<unidirectional association>)
	relation 15492535 --->
	  a role_name "CREATOR" init_value " new Creator<PeriodicSync>() {
        @Override
        public PeriodicSync createFromParcel(Parcel source) {
            return new PeriodicSync(source);
        }

        @Override
        public PeriodicSync[] newArray(int size) {
            return new PeriodicSync[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PeriodicSync> ${name}${value};
"
	    classrelation_ref 15492535 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78834103 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78834231 "syncExtrasEquals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "b1" type class_ref 6925879 // Bundle
	  param inout name "b2" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Periodic sync extra comparison function.
{@hide}
"
      end

      operation 78834359 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7017911 "SyncInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Information about the sync operation that is currently underway.
"
      classrelation 15506103 // <realization>
	relation 15506103 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15506103 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15506231 // REDACTED_ACCOUNT (<unidirectional association>)
	relation 15506231 --->
	  a role_name "REDACTED_ACCOUNT" init_value " new Account(\"*****\", \"*****\")" class_relation const_relation private
	    comment "
Used when the caller receiving this object doesn't have permission to access the accounts
on device.
@See Manifest.permission.GET_ACCOUNTS

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15506231 // REDACTED_ACCOUNT (<unidirectional association>)
	  b parent class_ref 6935607 // Account
      end

      attribute 24582199 "authorityId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      classrelation 15506359 // account (<unidirectional association>)
	relation 15506359 --->
	  a role_name "account" const_relation public
	    comment "
The {@link Account} that is currently being synced.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15506359 // account (<unidirectional association>)
	  b parent class_ref 6935607 // Account
      end

      attribute 24582327 "startTime"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The start time of the current sync operation in milliseconds since boot.
This is represented in elapsed real time.
See {@link android.os.SystemClock#elapsedRealtime()}.

"
      end

      operation 78865591 "createAccountRedacted"
	class_operation public return_type class_ref 7017911 // SyncInfo
	nparams 3
	  param in name "authorityId" explicit_type "int"
	  param inout name "authority" explicit_type "String"
	  param in name "startTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a SyncInfo object with an unusable Account. Used when the caller receiving this
object doesn't have access to the accounts on the device.
@See Manifest.permission.GET_ACCOUNTS
@hide
"
      end

      operation 78865719 "SyncInfo"
	public explicit_return_type ""
	nparams 4
	  param in name "authorityId" explicit_type "int"
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param in name "startTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78865847 "SyncInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 7017911 // SyncInfo
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78865975 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78866103 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78866231 "SyncInfo"
	package explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      classrelation 15506615 // CREATOR (<unidirectional association>)
	relation 15506615 --->
	  a role_name "CREATOR" init_value " new Creator<SyncInfo>() {
        public SyncInfo createFromParcel(Parcel in) {
            return new SyncInfo(in);
        }

        public SyncInfo[] newArray(int size) {
            return new SyncInfo[size];
        }
    }" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncInfo> ${name}${value};
"
	    classrelation_ref 15506615 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 7018039 "SyncStatusInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " @hide "
      classrelation 15508791 // <realization>
	relation 15508791 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15508791 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24587447 "VERSION"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24587575 "authorityId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24587703 "totalElapsedTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24587831 "numSyncs"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24587959 "numSourcePoll"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588087 "numSourceServer"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588215 "numSourceLocal"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588343 "numSourceUser"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588471 "numSourcePeriodic"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588599 "lastSuccessTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588727 "lastSuccessSource"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588855 "lastFailureTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24588983 "lastFailureSource"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24589111 "initialFailureTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24589239 "pending"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24589367 "initialize"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24589495 "periodicSyncTimes"
	private explicit_type "Long"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Warning: It is up to the external caller to ensure there are
 no race conditions when accessing this list
"
      end

      operation 78871863 "SyncStatusInfo"
	public explicit_return_type ""
	nparams 1
	  param in name "authorityId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78871991 "getLastFailureMesgAsInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872119 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872247 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872375 "SyncStatusInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872503 "SyncStatusInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 7018039 // SyncStatusInfo
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872631 "setPeriodicSyncTime"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "when" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872759 "getPeriodicSyncTime"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78872887 "removePeriodicSyncTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15509175 // CREATOR (<unidirectional association>)
	relation 15509175 --->
	  a role_name "CREATOR" init_value " new Creator<SyncStatusInfo>() {
        public SyncStatusInfo createFromParcel(Parcel in) {
            return new SyncStatusInfo(in);
        }

        public SyncStatusInfo[] newArray(int size) {
            return new SyncStatusInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncStatusInfo> ${name}${value};
"
	    classrelation_ref 15509175 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78873015 "ensurePeriodicSyncTimeSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7018167 "SyncStatusObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 78873143 "onStatusChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7020343 "IContentService"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      classrelation 15440695 // <generalisation>
	relation 15440695 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15440695 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7103671 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15440823 // <generalisation>
	  relation 15440823 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15440823 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15440951 // <realization>
	  relation 15440951 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15440951 // <realization>
	    b parent class_ref 7020343 // IContentService
	end

	operation 78777783 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78777911 "asInterface"
	  class_operation public return_type class_ref 7020343 // IContentService
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.IContentService interface,
generating a proxy if needed.
"
	end

	operation 78778039 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78778167 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7103799 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15441207 // <realization>
	    relation 15441207 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15441207 // <realization>
	      b parent class_ref 7020343 // IContentService
	  end

	  classrelation 15441335 // mRemote (<unidirectional association>)
	    relation 15441335 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15441335 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78778295 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78778423 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78778551 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78778679 "unregisterContentObserver"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "observer" type class_ref 7038647 // IContentObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78778807 "registerContentObserver"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "uri" type class_ref 6927159 // Uri
	      param inout name "notifyForDescendants" explicit_type "boolean"
	      param inout name "observer" type class_ref 7038647 // IContentObserver
	      param in name "userHandle" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Register a content observer tied to a specific user's view of the provider.
@param userHandle the user whose view of the provider is to be observed.  May be
    the calling user without requiring any permission, otherwise the caller needs to
    hold the INTERACT_ACROSS_USERS_FULL permission.  Pseudousers USER_ALL and
    USER_CURRENT are properly handled.
"
	  end

	  operation 78778935 "notifyChange"
	    public explicit_return_type "void"
	    nparams 5
	      param inout name "uri" type class_ref 6927159 // Uri
	      param inout name "observer" type class_ref 7038647 // IContentObserver
	      param inout name "observerWantsSelfNotifications" explicit_type "boolean"
	      param in name "flags" explicit_type "int"
	      param in name "userHandle" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify observers of a particular user's view of the provider.
@param userHandle the user whose view of the provider is to be notified.  May be
    the calling user without requiring any permission, otherwise the caller needs to
    hold the INTERACT_ACROSS_USERS_FULL permission.  Pseudousers USER_ALL
    USER_CURRENT are properly interpreted.
"
	  end

	  operation 78779063 "requestSync"
	    public explicit_return_type "void"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "extras" type class_ref 6925879 // Bundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78779191 "sync"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "request" type class_ref 7017527 // SyncRequest
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Start a sync given a request.
"
	  end

	  operation 78779319 "syncAsUser"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "request" type class_ref 7017527 // SyncRequest
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78779447 "cancelSync"
	    public explicit_return_type "void"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78779575 "cancelSyncAsUser"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78779703 "cancelRequest"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "request" type class_ref 7017527 // SyncRequest
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment " Cancel a sync, providing information about the sync to be cancelled. "
	  end

	  operation 78779831 "getSyncAutomatically"
	    public explicit_return_type "boolean"
	    nparams 2
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Check if the provider should be synced when a network tickle is received
@param providerName the provider whose setting we are querying
@return true if the provider should be synced when a network tickle is received
"
	  end

	  operation 78779959 "getSyncAutomaticallyAsUser"
	    public explicit_return_type "boolean"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78780087 "setSyncAutomatically"
	    public explicit_return_type "void"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param inout name "sync" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Set whether or not the provider is synced when it receives a network tickle.

@param providerName the provider whose behavior is being controlled
@param sync true if the provider should be synced when tickles are received for it
"
	  end

	  operation 78780215 "setSyncAutomaticallyAsUser"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param inout name "sync" explicit_type "boolean"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78780343 "getPeriodicSyncs"
	    public return_type class_ref 7017783 // PeriodicSync
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}java.util.List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get a list of periodic operations for a specified authority, or service.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
	  end

	  operation 78780471 "addPeriodicSync"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param inout name "extras" type class_ref 6925879 // Bundle
	      param in name "pollFrequency" explicit_type "long"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Set whether or not the provider is to be synced on a periodic basis.

@param providerName the provider whose behavior is being controlled
@param pollFrequency the period that a sync should be performed, in seconds. If this is
zero or less then no periodic syncs will be performed.
"
	  end

	  operation 78780599 "removePeriodicSync"
	    public explicit_return_type "void"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param inout name "extras" type class_ref 6925879 // Bundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Set whether or not the provider is to be synced on a periodic basis.

@param providerName the provider whose behavior is being controlled
@param pollFrequency the period that a sync should be performed, in seconds. If this is
zero or less then no periodic syncs will be performed.
"
	  end

	  operation 78780727 "getIsSyncable"
	    public explicit_return_type "int"
	    nparams 2
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78780855 "getIsSyncableAsUser"
	    public explicit_return_type "int"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78780983 "setIsSyncable"
	    public explicit_return_type "void"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "providerName" explicit_type "String"
	      param in name "syncable" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Set whether this account/provider is syncable.
@param syncable, >0 denotes syncable, 0 means not syncable, <0 means unknown
"
	  end

	  operation 78781111 "setMasterSyncAutomatically"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "flag" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78781239 "setMasterSyncAutomaticallyAsUser"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "flag" explicit_type "boolean"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78781367 "getMasterSyncAutomatically"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78781495 "getMasterSyncAutomaticallyAsUser"
	    public explicit_return_type "boolean"
	    nparams 1
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78781623 "getCurrentSyncs"
	    public return_type class_ref 7017911 // SyncInfo
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}java.util.List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78781751 "getCurrentSyncsAsUser"
	    public return_type class_ref 7017911 // SyncInfo
	    nparams 1
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}java.util.List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78781879 "getSyncAdapterTypes"
	    public return_type class_ref 7017655 // SyncAdapterType
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Returns the types of the SyncAdapters that are registered with the system.
@return Returns the types of the SyncAdapters that are registered with the system.
"
	  end

	  operation 78782007 "getSyncAdapterTypesAsUser"
	    public return_type class_ref 7017655 // SyncAdapterType
	    nparams 1
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78782135 "getSyncAdapterPackagesForAuthorityAsUser"
	    public explicit_return_type "String"
	    nparams 2
	      param inout name "authority" explicit_type "String"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78782263 "isSyncActive"
	    public explicit_return_type "boolean"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Returns true if there is currently a operation for the given account/authority or service
actively being processed.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
	  end

	  operation 78782391 "getSyncStatus"
	    public return_type class_ref 7018039 // SyncStatusInfo
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Returns the status that matches the authority. If there are multiples accounts for
the authority, the one with the latest \"lastSuccessTime\" status is returned.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
	  end

	  operation 78782519 "getSyncStatusAsUser"
	    public return_type class_ref 7018039 // SyncStatusInfo
	    nparams 4
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78782647 "isSyncPending"
	    public explicit_return_type "boolean"
	    nparams 3
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Return true if the pending status is true of any matching authorities.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
	  end

	  operation 78782775 "isSyncPendingAsUser"
	    public explicit_return_type "boolean"
	    nparams 4
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	      param inout name "cname" type class_ref 6926647 // ComponentName
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78782903 "addStatusChangeListener"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "mask" explicit_type "int"
	      param inout name "callback" type class_ref 7103927 // ISyncStatusObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78783031 "removeStatusChangeListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "callback" type class_ref 7103927 // ISyncStatusObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78783159 "putCache"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "packageName" explicit_type "String"
	      param inout name "key" type class_ref 6927159 // Uri
	      param inout name "value" type class_ref 6925879 // Bundle
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78783287 "getCache"
	    public return_type class_ref 6925879 // Bundle
	    nparams 3
	      param inout name "packageName" explicit_type "String"
	      param inout name "key" type class_ref 6927159 // Uri
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24553399 "TRANSACTION_unregisterContentObserver"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553527 "TRANSACTION_registerContentObserver"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553655 "TRANSACTION_notifyChange"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553783 "TRANSACTION_requestSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553911 "TRANSACTION_sync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554039 "TRANSACTION_syncAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554167 "TRANSACTION_cancelSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554295 "TRANSACTION_cancelSyncAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 7)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554423 "TRANSACTION_cancelRequest"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 8)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554551 "TRANSACTION_getSyncAutomatically"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 9)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554679 "TRANSACTION_getSyncAutomaticallyAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 10)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554807 "TRANSACTION_setSyncAutomatically"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 11)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24554935 "TRANSACTION_setSyncAutomaticallyAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 12)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555063 "TRANSACTION_getPeriodicSyncs"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 13)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555191 "TRANSACTION_addPeriodicSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 14)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555319 "TRANSACTION_removePeriodicSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 15)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555447 "TRANSACTION_getIsSyncable"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 16)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555575 "TRANSACTION_getIsSyncableAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 17)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555703 "TRANSACTION_setIsSyncable"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 18)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555831 "TRANSACTION_setMasterSyncAutomatically"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 19)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24555959 "TRANSACTION_setMasterSyncAutomaticallyAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 20)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556087 "TRANSACTION_getMasterSyncAutomatically"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 21)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556215 "TRANSACTION_getMasterSyncAutomaticallyAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 22)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556343 "TRANSACTION_getCurrentSyncs"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 23)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556471 "TRANSACTION_getCurrentSyncsAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 24)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556599 "TRANSACTION_getSyncAdapterTypes"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 25)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556727 "TRANSACTION_getSyncAdapterTypesAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 26)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556855 "TRANSACTION_getSyncAdapterPackagesForAuthorityAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 27)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24556983 "TRANSACTION_isSyncActive"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 28)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557111 "TRANSACTION_getSyncStatus"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 29)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557239 "TRANSACTION_getSyncStatusAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 30)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557367 "TRANSACTION_isSyncPending"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 31)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557495 "TRANSACTION_isSyncPendingAsUser"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 32)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557623 "TRANSACTION_addStatusChangeListener"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 33)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557751 "TRANSACTION_removeStatusChangeListener"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 34)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24557879 "TRANSACTION_putCache"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 35)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24558007 "TRANSACTION_getCache"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 36)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78783415 "unregisterContentObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 7038647 // IContentObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78783543 "registerContentObserver"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "notifyForDescendants" explicit_type "boolean"
	  param inout name "observer" type class_ref 7038647 // IContentObserver
	  param in name "userHandle" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a content observer tied to a specific user's view of the provider.
@param userHandle the user whose view of the provider is to be observed.  May be
    the calling user without requiring any permission, otherwise the caller needs to
    hold the INTERACT_ACROSS_USERS_FULL permission.  Pseudousers USER_ALL and
    USER_CURRENT are properly handled.
"
      end

      operation 78783671 "notifyChange"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "observer" type class_ref 7038647 // IContentObserver
	  param inout name "observerWantsSelfNotifications" explicit_type "boolean"
	  param in name "flags" explicit_type "int"
	  param in name "userHandle" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify observers of a particular user's view of the provider.
@param userHandle the user whose view of the provider is to be notified.  May be
    the calling user without requiring any permission, otherwise the caller needs to
    hold the INTERACT_ACROSS_USERS_FULL permission.  Pseudousers USER_ALL
    USER_CURRENT are properly interpreted.
"
      end

      operation 78783799 "requestSync"
	public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78783927 "sync"
	public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 7017527 // SyncRequest
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a sync given a request.
"
      end

      operation 78784055 "syncAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "request" type class_ref 7017527 // SyncRequest
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78784183 "cancelSync"
	public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78784311 "cancelSyncAsUser"
	public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78784439 "cancelRequest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 7017527 // SyncRequest
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cancel a sync, providing information about the sync to be cancelled. "
      end

      operation 78784567 "getSyncAutomatically"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the provider should be synced when a network tickle is received
@param providerName the provider whose setting we are querying
@return true if the provider should be synced when a network tickle is received
"
      end

      operation 78784695 "getSyncAutomaticallyAsUser"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78784823 "setSyncAutomatically"
	public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param inout name "sync" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether or not the provider is synced when it receives a network tickle.

@param providerName the provider whose behavior is being controlled
@param sync true if the provider should be synced when tickles are received for it
"
      end

      operation 78784951 "setSyncAutomaticallyAsUser"
	public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param inout name "sync" explicit_type "boolean"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78785079 "getPeriodicSyncs"
	public return_type class_ref 7017783 // PeriodicSync
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}java.util.List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a list of periodic operations for a specified authority, or service.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
      end

      operation 78785207 "addPeriodicSync"
	public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param in name "pollFrequency" explicit_type "long"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether or not the provider is to be synced on a periodic basis.

@param providerName the provider whose behavior is being controlled
@param pollFrequency the period that a sync should be performed, in seconds. If this is
zero or less then no periodic syncs will be performed.
"
      end

      operation 78785335 "removePeriodicSync"
	public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param inout name "extras" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether or not the provider is to be synced on a periodic basis.

@param providerName the provider whose behavior is being controlled
@param pollFrequency the period that a sync should be performed, in seconds. If this is
zero or less then no periodic syncs will be performed.
"
      end

      operation 78785463 "getIsSyncable"
	public explicit_return_type "int"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78785591 "getIsSyncableAsUser"
	public explicit_return_type "int"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78785719 "setIsSyncable"
	public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "providerName" explicit_type "String"
	  param in name "syncable" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether this account/provider is syncable.
@param syncable, >0 denotes syncable, 0 means not syncable, <0 means unknown
"
      end

      operation 78785847 "setMasterSyncAutomatically"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78785975 "setMasterSyncAutomaticallyAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "flag" explicit_type "boolean"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786103 "getMasterSyncAutomatically"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786231 "getMasterSyncAutomaticallyAsUser"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786359 "getCurrentSyncs"
	public return_type class_ref 7017911 // SyncInfo
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}java.util.List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786487 "getCurrentSyncsAsUser"
	public return_type class_ref 7017911 // SyncInfo
	nparams 1
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}java.util.List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786615 "getSyncAdapterTypes"
	public return_type class_ref 7017655 // SyncAdapterType
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the types of the SyncAdapters that are registered with the system.
@return Returns the types of the SyncAdapters that are registered with the system.
"
      end

      operation 78786743 "getSyncAdapterTypesAsUser"
	public return_type class_ref 7017655 // SyncAdapterType
	nparams 1
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786871 "getSyncAdapterPackagesForAuthorityAsUser"
	public explicit_return_type "String"
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78786999 "isSyncActive"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is currently a operation for the given account/authority or service
actively being processed.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
      end

      operation 78787127 "getSyncStatus"
	public return_type class_ref 7018039 // SyncStatusInfo
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status that matches the authority. If there are multiples accounts for
the authority, the one with the latest \"lastSuccessTime\" status is returned.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
      end

      operation 78787255 "getSyncStatusAsUser"
	public return_type class_ref 7018039 // SyncStatusInfo
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78787383 "isSyncPending"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the pending status is true of any matching authorities.
@param account account for authority, must be null if cname is non-null.
@param providerName name of provider, must be null if cname is non-null.
@param cname component to identify sync service, must be null if account/providerName are
non-null.
"
      end

      operation 78787511 "isSyncPendingAsUser"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	  param inout name "cname" type class_ref 6926647 // ComponentName
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78787639 "addStatusChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "mask" explicit_type "int"
	  param inout name "callback" type class_ref 7103927 // ISyncStatusObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78787767 "removeStatusChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 7103927 // ISyncStatusObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78787895 "putCache"
	public explicit_return_type "void"
	nparams 4
	  param inout name "packageName" explicit_type "String"
	  param inout name "key" type class_ref 6927159 // Uri
	  param inout name "value" type class_ref 6925879 // Bundle
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78788023 "getCache"
	public return_type class_ref 6925879 // Bundle
	nparams 3
	  param inout name "packageName" explicit_type "String"
	  param inout name "key" type class_ref 6927159 // Uri
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7037879 "Loader"
      visibility public 
      nformals 1
      formal name "D" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that performs asynchronous loading of data. While Loaders are active
they should monitor the source of their data and deliver new results when the contents
change.  See {@link android.app.LoaderManager} for more detail.

<p><b>Note on threading:</b> Clients of loaders should as a rule perform
any calls on to a Loader from the main thread of their process (that is,
the thread the Activity callbacks and other things occur on).  Subclasses
of Loader (such as {@link AsyncTaskLoader}) will often perform their work
in a separate thread, but when delivering their results this too should
be done on the main thread.</p>

<p>Subclasses generally must implement at least {@link #onStartLoading()},
{@link #onStopLoading()}, {@link #onForceLoad()}, and {@link #onReset()}.</p>

<p>Most implementations should not derive directly from this class, but
instead inherit from {@link AsyncTaskLoader}.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using loaders, read the
<a href=\"{@docRoot}guide/topics/fundamentals/loaders.html\">Loaders</a> developer guide.</p>
</div>

@param <D> The result returned when the load is complete
"
      class 7038135 "OnLoadCompleteListener"
	visibility public stereotype "interface"
	nformals 1
	formal name "D" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78064183 "onLoadComplete"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param inout name "loader" type class_ref 7037879 // Loader
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the thread that created the Loader when the load is complete.

@param loader the loader that completed the load
@param data the result of the load
"
	end
      end

      attribute 24231607 "mId"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15205943 // mListener (<unidirectional association>)
	relation 15205943 --->
	  a role_name "mListener" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<D> ${name}${value};
"
	    classrelation_ref 15205943 // mListener (<unidirectional association>)
	  b parent class_ref 7038135 // OnLoadCompleteListener
      end

      class 7038263 "OnLoadCanceledListener"
	visibility public stereotype "interface"
	nformals 1
	formal name "D" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78064311 "onLoadCanceled"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "loader" type class_ref 7037879 // Loader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the thread that created the Loader when the load is canceled.

@param loader the loader that canceled the load
"
	end
      end

      classrelation 15206071 // mOnLoadCanceledListener (<unidirectional association>)
	relation 15206071 --->
	  a role_name "mOnLoadCanceledListener" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<D> ${name}${value};
"
	    classrelation_ref 15206071 // mOnLoadCanceledListener (<unidirectional association>)
	  b parent class_ref 7038263 // OnLoadCanceledListener
      end

      classrelation 15206199 // mContext (<unidirectional association>)
	relation 15206199 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15206199 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 24231735 "mStarted"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24231863 "mAbandoned"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24231991 "mReset"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24232119 "mContentChanged"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24232247 "mProcessingChange"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7038391 "ForceLoadContentObserver"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15207991 // <generalisation>
	  relation 15207991 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15207991 // <generalisation>
	    b parent class_ref 7017399 // ContentObserver
	end

	operation 78063799 "ForceLoadContentObserver"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78063927 "deliverSelfNotifications"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78064055 "onChange"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "selfChange" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 78064439 "Loader"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores away the application context associated with context.
Since Loaders can be used across multiple activities it's dangerous to
store the context directly; always use {@link #getContext()} to retrieve
the Loader's Context, don't use the constructor argument directly.
The Context returned by {@link #getContext} is safe to use across
Activity instances.

@param context used to retrieve the application context.
"
      end

      operation 78064567 "deliverResult"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the result of the load to the registered listener. Should only be called by subclasses.

Must be called from the process's main thread.

@param data the result of the load
"
      end

      operation 78064695 "deliverCancellation"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Informs the registered {@link OnLoadCanceledListener} that the load has been canceled.
Should only be called by subclasses.

Must be called from the process's main thread.
"
      end

      operation 78064823 "getContext"
	cpp_inline public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return an application context retrieved from the Context passed to the constructor.
"
      end

      operation 78064951 "getId"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the ID of this loader
"
      end

      operation 78065079 "registerListener"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "listener" type class_ref 7038135 // OnLoadCompleteListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<D> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a class that will receive callbacks when a load is complete.
The callback will be called on the process's main thread so it's safe to
pass the results to widgets.

<p>Must be called from the process's main thread.
"
      end

      operation 78065207 "unregisterListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 7038135 // OnLoadCompleteListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener that was previously added with {@link #registerListener}.

Must be called from the process's main thread.
"
      end

      operation 78065335 "registerOnLoadCanceledListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 7038263 // OnLoadCanceledListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a listener that will receive callbacks when a load is canceled.
The callback will be called on the process's main thread so it's safe to
pass the results to widgets.

Must be called from the process's main thread.

@param listener The listener to register.
"
      end

      operation 78065463 "unregisterOnLoadCanceledListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 7038263 // OnLoadCanceledListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a listener that was previously added with
{@link #registerOnLoadCanceledListener}.

Must be called from the process's main thread.

@param listener The listener to unregister.
"
      end

      operation 78065591 "isStarted"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this load has been started.  That is, its {@link #startLoading()}
has been called and no calls to {@link #stopLoading()} or
{@link #reset()} have yet been made.
"
      end

      operation 78065719 "isAbandoned"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this loader has been abandoned.  In this state, the
loader <em>must not</em> report any new data, and <em>must</em> keep
its last reported data valid until it is finally reset.
"
      end

      operation 78065847 "isReset"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this load has been reset.  That is, either the loader
has not yet been started for the first time, or its {@link #reset()}
has been called.
"
      end

      operation 78065975 "startLoading"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when the associated fragment/activity
is being started.  When using a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

Starts an asynchronous load of the Loader's data. When the result
is ready the callbacks will be called on the process's main thread.
If a previous load has been completed and is still valid
the result may be passed to the callbacks immediately.
The loader will monitor the source of
the data set and may deliver future callbacks if the source changes.
Calling {@link #stopLoading} will stop the delivery of callbacks.

<p>This updates the Loader's internal state so that
{@link #isStarted()} and {@link #isReset()} will return the correct
values, and then calls the implementation's {@link #onStartLoading()}.

<p>Must be called from the process's main thread.
"
      end

      operation 78066103 "onStartLoading"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of loading their data,
as per {@link #startLoading()}.  This is not called by clients directly,
but as a result of a call to {@link #startLoading()}.
"
      end

      operation 78066231 "cancelLoad"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to cancel the current load task.
Must be called on the main thread of the process.

<p>Cancellation is not an immediate operation, since the load is performed
in a background thread.  If there is currently a load in progress, this
method requests that the load be canceled, and notes this is the case;
once the background thread has completed its work its remaining state
will be cleared.  If another load request comes in during this time,
it will be held until the canceled load is complete.

@return Returns <tt>false</tt> if the task could not be canceled,
typically because it has already completed normally, or
because {@link #startLoading()} hasn't been called; returns
<tt>true</tt> otherwise.  When <tt>true</tt> is returned, the task
is still running and the {@link OnLoadCanceledListener} will be called
when the task completes.
"
      end

      operation 78066359 "onCancelLoad"
	cpp_inline protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of requests to {@link #cancelLoad()}.
This will always be called from the process's main thread.

@return Returns <tt>false</tt> if the task could not be canceled,
typically because it has already completed normally, or
because {@link #startLoading()} hasn't been called; returns
<tt>true</tt> otherwise.  When <tt>true</tt> is returned, the task
is still running and the {@link OnLoadCanceledListener} will be called
when the task completes.
"
      end

      operation 78066487 "forceLoad"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Force an asynchronous load. Unlike {@link #startLoading()} this will ignore a previously
loaded data set and load a new one.  This simply calls through to the
implementation's {@link #onForceLoad()}.  You generally should only call this
when the loader is started -- that is, {@link #isStarted()} returns true.

<p>Must be called from the process's main thread.
"
      end

      operation 78066615 "onForceLoad"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of requests to {@link #forceLoad()}.
This will always be called from the process's main thread.
"
      end

      operation 78066743 "stopLoading"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when the associated fragment/activity
is being stopped.  When using a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

<p>Stops delivery of updates until the next time {@link #startLoading()} is called.
Implementations should <em>not</em> invalidate their data at this point --
clients are still free to use the last data the loader reported.  They will,
however, typically stop reporting new data if the data changes; they can
still monitor for changes, but must not report them to the client until and
if {@link #startLoading()} is later called.

<p>This updates the Loader's internal state so that
{@link #isStarted()} will return the correct
value, and then calls the implementation's {@link #onStopLoading()}.

<p>Must be called from the process's main thread.
"
      end

      operation 78066871 "onStopLoading"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of stopping their loader,
as per {@link #stopLoading()}.  This is not called by clients directly,
but as a result of a call to {@link #stopLoading()}.
This will always be called from the process's main thread.
"
      end

      operation 78066999 "abandon"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when restarting a Loader.  When using
a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

Tell the Loader that it is being abandoned.  This is called prior
to {@link #reset} to have it retain its current data but not report
any new data.
"
      end

      operation 78067127 "onAbandon"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses implement this to take care of being abandoned.  This is
an optional intermediate state prior to {@link #onReset()} -- it means that
the client is no longer interested in any new data from the loader,
so the loader must not report any further updates.  However, the
loader <em>must</em> keep its last reported data valid until the final
{@link #onReset()} happens.  You can retrieve the current abandoned
state with {@link #isAbandoned}.
"
      end

      operation 78067255 "reset"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when destroying a Loader.  When using
a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

Resets the state of the Loader.  The Loader should at this point free
all of its resources, since it may never be called again; however, its
{@link #startLoading()} may later be called at which point it must be
able to start running again.

<p>This updates the Loader's internal state so that
{@link #isStarted()} and {@link #isReset()} will return the correct
values, and then calls the implementation's {@link #onReset()}.

<p>Must be called from the process's main thread.
"
      end

      operation 78067383 "onReset"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of resetting their loader,
as per {@link #reset()}.  This is not called by clients directly,
but as a result of a call to {@link #reset()}.
This will always be called from the process's main thread.
"
      end

      operation 78067511 "takeContentChanged"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take the current flag indicating whether the loader's content had
changed while it was stopped.  If it had, true is returned and the
flag is cleared.
"
      end

      operation 78067639 "commitContentChanged"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Commit that you have actually fully processed a content change that
was returned by {@link #takeContentChanged}.  This is for use with
{@link #rollbackContentChanged()} to handle situations where a load
is cancelled.  Call this when you have completely processed a load
without it being cancelled.
"
      end

      operation 78067767 "rollbackContentChanged"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report that you have abandoned the processing of a content change that
was returned by {@link #takeContentChanged()} and would like to rollback
to the state where there is again a pending content change.  This is
to handle the case where a data load due to a content change has been
canceled before its data was delivered back to the loader.
"
      end

      operation 78067895 "onContentChanged"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when {@link ForceLoadContentObserver} detects a change.  The
default implementation checks to see if the loader is currently started;
if so, it simply calls {@link #forceLoad()}; otherwise, it sets a flag
so that {@link #takeContentChanged()} returns true.

<p>Must be called from the process's main thread.
"
      end

      operation 78068023 "dataToString"
	cpp_inline public explicit_return_type "String"
	nparams 1
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For debugging, converts an instance of the Loader's data class to
a string that can be printed.  Must handle a null data.
"
      end

      operation 78068151 "toString"
	cpp_inline public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78068279 "dump"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" explicit_type "String"
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the Loader's state into the given stream.

@param prefix Text to print at the front of each line.
@param fd The raw file descriptor that the dump is being sent to.
@param writer A PrintWriter to which the dump is to be set.
@param args Additional arguments to the dump request.
"
      end
    end

    class 7097527 "AbstractThreadedSyncAdapter"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation.
If a sync operation is already in progress when a sync request is received, an error will be
returned to the new request and the existing request will be allowed to continue.
However if there is no sync in progress then a thread will be spawned and {@link #onPerformSync}
will be invoked on that thread.
<p>
Syncs can be cancelled at any time by the framework. For example a sync that was not
user-initiated and lasts longer than 30 minutes will be considered timed-out and cancelled.
Similarly the framework will attempt to determine whether or not an adapter is making progress
by monitoring its network activity over the course of a minute. If the network traffic over this
window is close enough to zero the sync will be cancelled. You can also request the sync be
cancelled via {@link ContentResolver#cancelSync(Account, String)} or
{@link ContentResolver#cancelSync(SyncRequest)}.
<p>
A sync is cancelled by issuing a {@link Thread#interrupt()} on the syncing thread. <strong>Either
your code in {@link #onPerformSync(Account, Bundle, String, ContentProviderClient, SyncResult)}
must check {@link Thread#interrupted()}, or you you must override one of
{@link #onSyncCanceled(Thread)}/{@link #onSyncCanceled()}</strong> (depending on whether or not
your adapter supports syncing of multiple accounts in parallel). If your adapter does not
respect the cancel issued by the framework you run the risk of your app's entire process being
killed.
<p>
In order to be a sync adapter one must extend this class, provide implementations for the
abstract methods and write a service that returns the result of {@link #getSyncAdapterBinder()}
in the service's {@link android.app.Service#onBind(android.content.Intent)} when invoked
with an intent with action <code>android.content.SyncAdapter</code>. This service
must specify the following intent filter and metadata tags in its AndroidManifest.xml file
<pre>
  &lt;intent-filter&gt;
    &lt;action android:name=\"android.content.SyncAdapter\" /&gt;
  &lt;/intent-filter&gt;
  &lt;meta-data android:name=\"android.content.SyncAdapter\"
            android:resource=\"@xml/syncadapter\" /&gt;
</pre>
The <code>android:resource</code> attribute must point to a resource that looks like:
<pre>
&lt;sync-adapter xmlns:android=\"http://schemas.android.com/apk/res/android\"
   android:contentAuthority=\"authority\"
   android:accountType=\"accountType\"
   android:userVisible=\"true|false\"
   android:supportsUploading=\"true|false\"
   android:allowParallelSyncs=\"true|false\"
   android:isAlwaysSyncable=\"true|false\"
   android:syncAdapterSettingsAction=\"ACTION_OF_SETTINGS_ACTIVITY\"
/&gt;
</pre>
<ul>
<li>The <code>android:contentAuthority</code> and <code>android:accountType</code> attributes
indicate which content authority and for which account types this sync adapter serves.
<li><code>android:userVisible</code> defaults to true and controls whether or not this sync
adapter shows up in the Sync Settings screen.
<li><code>android:supportsUploading</code> defaults
to true and if true an upload-only sync will be requested for all syncadapters associated
with an authority whenever that authority's content provider does a
{@link ContentResolver#notifyChange(android.net.Uri, android.database.ContentObserver, boolean)}
with syncToNetwork set to true.
<li><code>android:allowParallelSyncs</code> defaults to false and if true indicates that
the sync adapter can handle syncs for multiple accounts at the same time. Otherwise
the SyncManager will wait until the sync adapter is not in use before requesting that
it sync an account's data.
<li><code>android:isAlwaysSyncable</code> defaults to false and if true tells the SyncManager
to intialize the isSyncable state to 1 for that sync adapter for each account that is added.
<li><code>android:syncAdapterSettingsAction</code> defaults to null and if supplied it
specifies an Intent action of an activity that can be used to adjust the sync adapter's
sync settings. The activity must live in the same package as the sync adapter.
</ul>
"
      attribute 24543927 "LOG_SYNC_DETAILS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2743"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Kernel event log tag.  Also listed in data/etc/event-log-tags.
@deprecated Private constant.  May go away in the next release.

"
      end

      classrelation 15419959 // mContext (<unidirectional association>)
	relation 15419959 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15419959 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 24544055 "mNumSyncStarts"
	const_attribute private explicit_type "AtomicInteger"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7097655 "ISyncAdapterImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15421239 // <generalisation>
	  relation 15421239 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15421239 // <generalisation>
	    b parent class_ref 7097911 // Stub
	end

	operation 78717751 "startSync"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "syncContext" type class_ref 7098167 // ISyncContext
	    param inout name "authority" explicit_type "String"
	    param inout name "account" type class_ref 6935607 // Account
	    param inout name "extras" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78717879 "cancelSync"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "syncContext" type class_ref 7098167 // ISyncContext
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78718007 "initialize"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "account" type class_ref 6935607 // Account
	    param inout name "authority" explicit_type "String"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15420087 // mISyncAdapterImpl (<unidirectional association>)
	relation 15420087 --->
	  a role_name "mISyncAdapterImpl" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15420087 // mISyncAdapterImpl (<unidirectional association>)
	  b parent class_ref 7097655 // ISyncAdapterImpl
      end

      classrelation 15420215 // mSyncThreads (<unidirectional association>)
	relation 15420215 --->
	  stereotype "HashMap"
	  a role_name "mSyncThreads" init_value " new HashMap<Account, SyncThread>()" const_relation private
	    comment " all accesses to this member variable must be synchronized on mSyncThreadLock
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, SyncThread> ${name}${value};
"
	    classrelation_ref 15420215 // mSyncThreads (<unidirectional association>)
	  b parent class_ref 6935607 // Account
      end

      attribute 24544183 "mAutoInitialize"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24544311 "mAllowParallelSyncs"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78715575 "AbstractThreadedSyncAdapter"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "autoInitialize" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@link AbstractThreadedSyncAdapter}.
@param context the {@link android.content.Context} that this is running within.
@param autoInitialize if true then sync requests that have
{@link ContentResolver#SYNC_EXTRAS_INITIALIZE} set will be internally handled by
{@link AbstractThreadedSyncAdapter} by calling
{@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with 1 if it
is currently set to <0.
"
      end

      operation 78715703 "AbstractThreadedSyncAdapter"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "autoInitialize" explicit_type "boolean"
	  param inout name "allowParallelSyncs" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@link AbstractThreadedSyncAdapter}.
@param context the {@link android.content.Context} that this is running within.
@param autoInitialize if true then sync requests that have
{@link ContentResolver#SYNC_EXTRAS_INITIALIZE} set will be internally handled by
{@link AbstractThreadedSyncAdapter} by calling
{@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with 1 if it
is currently set to <0.
@param allowParallelSyncs if true then allow syncs for different accounts to run
at the same time, each in their own thread. This must be consistent with the setting
in the SyncAdapter's configuration file.
"
      end

      operation 78715831 "getContext"
	public return_type class_ref 6923703 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78715959 "toSyncKey"
	private return_type class_ref 6935607 // Account
	nparams 1
	  param inout name "account" type class_ref 6935607 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7098295 "SyncThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15421495 // mSyncContext (<unidirectional association>)
	  relation 15421495 --->
	    a role_name "mSyncContext" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15421495 // mSyncContext (<unidirectional association>)
	    b parent class_ref 7098423 // SyncContext
	end

	classrelation 15421751 // mAccount (<unidirectional association>)
	  relation 15421751 --->
	    a role_name "mAccount" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15421751 // mAccount (<unidirectional association>)
	    b parent class_ref 6935607 // Account
	end

	classrelation 15421879 // mExtras (<unidirectional association>)
	  relation 15421879 --->
	    a role_name "mExtras" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15421879 // mExtras (<unidirectional association>)
	    b parent class_ref 6925879 // Bundle
	end

	classrelation 15422007 // mThreadsKey (<unidirectional association>)
	  relation 15422007 --->
	    a role_name "mThreadsKey" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15422007 // mThreadsKey (<unidirectional association>)
	    b parent class_ref 6935607 // Account
	end

	operation 78718135 "SyncThread"
	  private explicit_return_type ""
	  nparams 5
	    param inout name "name" explicit_type "String"
	    param inout name "syncContext" type class_ref 7098423 // SyncContext
	    param inout name "authority" explicit_type "String"
	    param inout name "account" type class_ref 6935607 // Account
	    param inout name "extras" type class_ref 6925879 // Bundle
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78718263 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78718391 "isCanceled"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 78718519 "getSyncAdapterBinder"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a reference to the IBinder of the SyncAdapter service.
"
      end

      operation 78718647 "onPerformSync"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param inout name "authority" explicit_type "String"
	  param inout name "provider" type class_ref 7017271 // ContentProviderClient
	  param inout name "syncResult" type class_ref 7098551 // SyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a sync for this account. SyncAdapter-specific parameters may
be specified in extras, which is guaranteed to not be null. Invocations
of this method are guaranteed to be serialized.

@param account the account that should be synced
@param extras SyncAdapter-specific parameters
@param authority the authority of this sync request
@param provider a ContentProviderClient that points to the ContentProvider for this
  authority
@param syncResult SyncAdapter-specific parameters
"
      end

      operation 78718775 "onSecurityException"
	public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "extras" type class_ref 6925879 // Bundle
	  param inout name "authority" explicit_type "String"
	  param inout name "syncResult" type class_ref 7098551 // SyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report that there was a security exception when opening the content provider
prior to calling {@link #onPerformSync}.  This will be treated as a sync
database failure.

@param account the account that attempted to sync
@param extras SyncAdapter-specific parameters
@param authority the authority of the failed sync request
@param syncResult SyncAdapter-specific parameters
"
      end

      operation 78718903 "onSyncCanceled"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that a sync operation has been canceled. This will be invoked on a separate
thread than the sync thread and so you must consider the multi-threaded implications
of the work that you do in this method.
<p>
This will only be invoked when the SyncAdapter indicates that it doesn't support
parallel syncs.
"
      end

      operation 78719031 "onSyncCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "thread" explicit_type "Thread"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that a sync operation has been canceled. This will be invoked on a separate
thread than the sync thread and so you must consider the multi-threaded implications
of the work that you do in this method.
<p>
This will only be invoked when the SyncAdapter indicates that it does support
parallel syncs.
@param thread the Thread of the sync that is to be canceled.
"
      end
    end

    class 7097783 "ISyncAdapter"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface used to control the sync activity on a SyncAdapter
@hide
"
      class 7097911 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15420599 // <generalisation>
	  relation 15420599 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15420599 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15420727 // <realization>
	  relation 15420727 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15420727 // <realization>
	    b parent class_ref 7097783 // ISyncAdapter
	end

	operation 78716087 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78716215 "asInterface"
	  class_operation public return_type class_ref 7097783 // ISyncAdapter
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.ISyncAdapter interface,
generating a proxy if needed.
"
	end

	operation 78716343 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78716471 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7098039 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15420983 // <realization>
	    relation 15420983 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15420983 // <realization>
	      b parent class_ref 7097783 // ISyncAdapter
	  end

	  classrelation 15421111 // mRemote (<unidirectional association>)
	    relation 15421111 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15421111 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78716599 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78716727 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78716855 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78716983 "startSync"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "syncContext" type class_ref 7098167 // ISyncContext
	      param inout name "authority" explicit_type "String"
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "extras" type class_ref 6925879 // Bundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Initiate a sync for this account. SyncAdapter-specific parameters may
be specified in extras, which is guaranteed to not be null.

@param syncContext the ISyncContext used to indicate the progress of the sync. When
  the sync is finished (successfully or not) ISyncContext.onFinished() must be called.
@param authority the authority that should be synced
@param account the account that should be synced
@param extras SyncAdapter-specific parameters
"
	  end

	  operation 78717111 "cancelSync"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "syncContext" type class_ref 7098167 // ISyncContext
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Cancel the most recently initiated sync. Due to race conditions, this may arrive
after the ISyncContext.onFinished() for that sync was called.
@param syncContext the ISyncContext that was passed to {@link #startSync}
"
	  end

	  operation 78717239 "initialize"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "account" type class_ref 6935607 // Account
	      param inout name "authority" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Initialize the SyncAdapter for this account and authority.

@param account the account that should be synced
@param authority the authority that should be synced
"
	  end
	end

	attribute 24544439 "TRANSACTION_startSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24544567 "TRANSACTION_cancelSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24544695 "TRANSACTION_initialize"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 15420471 // <generalisation>
	relation 15420471 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15420471 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      operation 78717367 "startSync"
	public explicit_return_type "void"
	nparams 4
	  param inout name "syncContext" type class_ref 7098167 // ISyncContext
	  param inout name "authority" explicit_type "String"
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "extras" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiate a sync for this account. SyncAdapter-specific parameters may
be specified in extras, which is guaranteed to not be null.

@param syncContext the ISyncContext used to indicate the progress of the sync. When
  the sync is finished (successfully or not) ISyncContext.onFinished() must be called.
@param authority the authority that should be synced
@param account the account that should be synced
@param extras SyncAdapter-specific parameters
"
      end

      operation 78717495 "cancelSync"
	public explicit_return_type "void"
	nparams 1
	  param inout name "syncContext" type class_ref 7098167 // ISyncContext
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel the most recently initiated sync. Due to race conditions, this may arrive
after the ISyncContext.onFinished() for that sync was called.
@param syncContext the ISyncContext that was passed to {@link #startSync}
"
      end

      operation 78717623 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "account" type class_ref 6935607 // Account
	  param inout name "authority" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the SyncAdapter for this account and authority.

@param account the account that should be synced
@param authority the authority that should be synced
"
      end
    end

    class 7098167 "ISyncContext"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface used by the SyncAdapter to indicate its progress.
@hide
"
      classrelation 15489463 // <generalisation>
	relation 15489463 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15489463 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7106359 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15489591 // <generalisation>
	  relation 15489591 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15489591 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15489719 // <realization>
	  relation 15489719 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15489719 // <realization>
	    b parent class_ref 7098167 // ISyncContext
	end

	operation 78828215 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78828343 "asInterface"
	  class_operation public return_type class_ref 7098167 // ISyncContext
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.ISyncContext interface,
generating a proxy if needed.
"
	end

	operation 78828471 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78828599 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7106487 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15489975 // <realization>
	    relation 15489975 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15489975 // <realization>
	      b parent class_ref 7098167 // ISyncContext
	  end

	  classrelation 15490103 // mRemote (<unidirectional association>)
	    relation 15490103 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15490103 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78828727 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78828855 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78828983 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78829111 "sendHeartbeat"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Call to indicate that the SyncAdapter is making progress. E.g., if this SyncAdapter
downloads or sends records to/from the server, this may be called after each record
is downloaded or uploaded.
"
	  end

	  operation 78829239 "onFinished"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "result" type class_ref 7098551 // SyncResult
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Signal that the corresponding sync session is completed.
@param result information about this sync session
"
	  end
	end

	attribute 24570295 "TRANSACTION_sendHeartbeat"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24570423 "TRANSACTION_onFinished"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78829367 "sendHeartbeat"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to indicate that the SyncAdapter is making progress. E.g., if this SyncAdapter
downloads or sends records to/from the server, this may be called after each record
is downloaded or uploaded.
"
      end

      operation 78829495 "onFinished"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 7098551 // SyncResult
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Signal that the corresponding sync session is completed.
@param result information about this sync session
"
      end
    end

    class 7098423 "SyncContext"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 15505975 // mSyncContext (<unidirectional association>)
	relation 15505975 --->
	  a role_name "mSyncContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15505975 // mSyncContext (<unidirectional association>)
	  b parent class_ref 7098167 // ISyncContext
      end

      attribute 24581943 "mLastHeartbeatSendTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24582071 "HEARTBEAT_SEND_INTERVAL_IN_MS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78864951 "SyncContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "syncContextInterface" type class_ref 7098167 // ISyncContext
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 78865079 "setStatusText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to update the status text for this sync. This internally invokes
{@link #updateHeartbeat}, so it also takes the place of a call to that.

@param message the current status message for this sync

@hide
"
      end

      operation 78865207 "updateHeartbeat"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to indicate that the SyncAdapter is making progress. E.g., if this SyncAdapter
downloads or sends records to/from the server, this may be called after each record
is downloaded or uploaded.
"
      end

      operation 78865335 "onFinished"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 7098551 // SyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78865463 "getSyncContextBinder"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7098551 "SyncResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to communicate the results of a sync operation to the SyncManager.
Based on the values here the SyncManager will determine the disposition of the
sync and whether or not a new sync operation needs to be scheduled in the future.

"
      classrelation 15508023 // <realization>
	relation 15508023 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15508023 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24585271 "syncAlreadyInProgress"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate that the SyncAdapter is already performing a sync operation, though
not necessarily for the requested account and authority and that it wasn't able to
process this request. The SyncManager will reschedule the request to run later.

"
      end

      attribute 24585399 "tooManyDeletions"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate that the SyncAdapter determined that it would need to issue
too many delete operations to the server in order to satisfy the request
(as defined by the SyncAdapter). The SyncManager will record
that the sync request failed and will cause a System Notification to be created
asking the user what they want to do about this. It will give the user a chance to
choose between (1) go ahead even with those deletes, (2) revert the deletes,
or (3) take no action. If the user decides (1) or (2) the SyncManager will issue another
sync request with either {@link ContentResolver#SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS}
or {@link ContentResolver#SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS} set in the extras.
It is then up to the SyncAdapter to decide how to honor that request.

"
      end

      attribute 24585527 "tooManyRetries"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate that the SyncAdapter experienced a hard error due to trying the same
operation too many times (as defined by the SyncAdapter). The SyncManager will record
that the sync request failed and it will not reschedule the request.

"
      end

      attribute 24585655 "databaseError"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate that the SyncAdapter experienced a hard error due to an error it
received from interacting with the storage layer. The SyncManager will record that
the sync request failed and it will not reschedule the request.

"
      end

      attribute 24585783 "fullSyncRequested"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If set the SyncManager will request an immediate sync with the same Account and authority
(but empty extras Bundle) as was used in the sync request.

"
      end

      attribute 24585911 "partialSyncUnavailable"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field is ignored by the SyncManager.

"
      end

      attribute 24586039 "moreRecordsToGet"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field is ignored by the SyncManager.

"
      end

      attribute 24586167 "delayUntil"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate to the SyncManager that future sync requests that match the request's
Account and authority should be delayed at least this many seconds.

"
      end

      classrelation 15508151 // stats (<unidirectional association>)
	relation 15508151 --->
	  a role_name "stats" const_relation public
	    comment "
Used to hold extras statistics about the sync operation. Some of these indicate that
the sync request resulted in a hard or soft error, others are for purely informational
purposes.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15508151 // stats (<unidirectional association>)
	  b parent class_ref 7110071 // SyncStats
      end

      classrelation 15508279 // ALREADY_IN_PROGRESS (<unidirectional association>)
	relation 15508279 --->
	  a role_name "ALREADY_IN_PROGRESS" class_relation const_relation public
	    comment "
This instance of a SyncResult is returned by the SyncAdapter in response to a
sync request when a sync is already underway. The SyncManager will reschedule the
sync request to try again later.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15508279 // ALREADY_IN_PROGRESS (<unidirectional association>)
	  b parent class_ref 7098551 // SyncResult
      end

      extra_member 288183 "initialization"
	
	cpp "" ""
	java "  static {
        ALREADY_IN_PROGRESS = new SyncResult(true);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 78869559 "SyncResult"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a \"clean\" SyncResult. If this is returned without any changes then the
SyncManager will consider the sync to have completed successfully. The various fields
can be set by the SyncAdapter in order to give the SyncManager more information as to
the disposition of the sync.
<p>
The errors are classified into two broad categories: hard errors and soft errors.
Soft errors are retried with exponential backoff. Hard errors are not retried (except
when the hard error is for a {@link ContentResolver#SYNC_EXTRAS_UPLOAD} request,
in which the request is retryed without the {@link ContentResolver#SYNC_EXTRAS_UPLOAD}
extra set). The SyncManager checks the type of error by calling
{@link SyncResult#hasHardError()} and  {@link SyncResult#hasSoftError()}. If both are
true then the SyncManager treats it as a hard error, not a soft error.
"
      end

      operation 78869687 "SyncResult"
	private explicit_return_type ""
	nparams 1
	  param inout name "syncAlreadyInProgress" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal helper for creating a clean SyncResult or one that indicated that
a sync is already in progress.
@param syncAlreadyInProgress if true then set the {@link #syncAlreadyInProgress} flag
"
      end

      operation 78869815 "SyncResult"
	private explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78869943 "hasHardError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for determining if the SyncResult indicates that a hard error
occurred. See {@link #SyncResult()} for an explanation of what the SyncManager does
when it sees a hard error.
<p>
A hard error is indicated when any of the following is true:
<ul>
<li> {@link SyncStats#numParseExceptions} > 0
<li> {@link SyncStats#numConflictDetectedExceptions} > 0
<li> {@link SyncStats#numAuthExceptions} > 0
<li> {@link #tooManyDeletions}
<li> {@link #tooManyRetries}
<li> {@link #databaseError}
@return true if a hard error is indicated
"
      end

      operation 78870071 "hasSoftError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for determining if the SyncResult indicates that a soft error
occurred. See {@link #SyncResult()} for an explanation of what the SyncManager does
when it sees a soft error.
<p>
A soft error is indicated when any of the following is true:
<ul>
<li> {@link SyncStats#numIoExceptions} > 0
<li> {@link #syncAlreadyInProgress}
</ul>
@return true if a soft error is indicated
"
      end

      operation 78870199 "hasError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience method for determining of the SyncResult indicates that an error occurred.
@return true if either a soft or hard error occurred
"
      end

      operation 78870327 "madeSomeProgress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for determining if the Sync should be rescheduled after failing for some
reason.
@return true if the SyncManager should reschedule this sync.
"
      end

      operation 78870455 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the SyncResult to a clean state. Throws an {@link UnsupportedOperationException}
if this is called when {@link #syncAlreadyInProgress} is set.
"
      end

      classrelation 15508407 // CREATOR (<unidirectional association>)
	relation 15508407 --->
	  a role_name "CREATOR" init_value " new Creator<SyncResult>() {
        public SyncResult createFromParcel(Parcel in) {
            return new SyncResult(in);
        }

        public SyncResult[] newArray(int size) {
            return new SyncResult[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncResult> ${name}${value};
"
	    classrelation_ref 15508407 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78870583 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78870711 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78870839 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78870967 "toDebugString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a debugging string indicating the status.
The string consist of a sequence of code letter followed by the count.
Code letters are f - fullSyncRequested, r - partialSyncUnavailable,
X - hardError, e - numParseExceptions, c - numConflictDetectedExceptions,
a - numAuthExceptions, D - tooManyDeletions, R - tooManyRetries,
b - databaseError, x - softError, l - syncAlreadyInProgress,
I - numIoExceptions
@return debugging string.
"
      end
    end

    class 7098679 "ActivityNotFoundException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown when a call to {@link Context#startActivity} or
one of its variants fails because an Activity can not be found to execute
the given Intent.
"
      operation 78719159 "ActivityNotFoundException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78719287 "ActivityNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7098807 "AsyncQueryHandler"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A helper class to help make handling asynchronous {@link ContentResolver}
queries easier.
"
      classrelation 15422263 // <generalisation>
	relation 15422263 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15422263 // <generalisation>
	  b parent class_ref 6926391 // Handler
      end

      attribute 24544823 "localLOGV"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24544951 "EVENT_ARG_QUERY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24545079 "EVENT_ARG_INSERT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24545207 "EVENT_ARG_UPDATE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24545335 "EVENT_ARG_DELETE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15422519 // mResolver (<unidirectional association>)
	relation 15422519 --->
	  stereotype "WeakReference"
	  a role_name "mResolver" const_relation package
	    comment " package 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15422519 // mResolver (<unidirectional association>)
	  b parent class_ref 6924215 // ContentResolver
      end

      classrelation 15422647 // sLooper (<unidirectional association>)
	relation 15422647 --->
	  a role_name "sLooper" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15422647 // sLooper (<unidirectional association>)
	  b parent class_ref 134967 // Looper
      end

      classrelation 15422775 // mWorkerThreadHandler (<unidirectional association>)
	relation 15422775 --->
	  a role_name "mWorkerThreadHandler" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15422775 // mWorkerThreadHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      class 7098935 "WorkerArgs"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15422903 // uri (<unidirectional association>)
	  relation 15422903 --->
	    a role_name "uri" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15422903 // uri (<unidirectional association>)
	    b parent class_ref 6927159 // Uri
	end

	classrelation 15423031 // handler (<unidirectional association>)
	  relation 15423031 --->
	    a role_name "handler" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15423031 // handler (<unidirectional association>)
	    b parent class_ref 6926391 // Handler
	end

	classrelation 15423927 // values (<unidirectional association>)
	  relation 15423927 --->
	    a role_name "values" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15423927 // values (<unidirectional association>)
	    b parent class_ref 7016887 // ContentValues
	end
      end

      class 7099063 "WorkerHandler"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15424055 // <generalisation>
	  relation 15424055 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15424055 // <generalisation>
	    b parent class_ref 6926391 // Handler
	end

	operation 78719415 "WorkerHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "looper" type class_ref 134967 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78719543 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 78719671 "AsyncQueryHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "cr" type class_ref 6924215 // ContentResolver
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78719799 "createHandler"
	protected return_type class_ref 6926391 // Handler
	nparams 1
	  param inout name "looper" type class_ref 134967 // Looper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78719927 "startQuery"
	public explicit_return_type "void"
	nparams 7
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "orderBy" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous query. When the query is done
{@link #onQueryComplete} is called.

@param token A token passed into {@link #onQueryComplete} to identify
 the query.
@param cookie An object that gets passed into {@link #onQueryComplete}
@param uri The URI, using the content:// scheme, for the content to
        retrieve.
@param projection A list of which columns to return. Passing null will
        return all columns, which is discouraged to prevent reading data
        from storage that isn't going to be used.
@param selection A filter declaring which rows to return, formatted as an
        SQL WHERE clause (excluding the WHERE itself). Passing null will
        return all rows for the given URI.
@param selectionArgs You may include ?s in selection, which will be
        replaced by the values from selectionArgs, in the order that they
        appear in the selection. The values will be bound as Strings.
@param orderBy How to order the rows, formatted as an SQL ORDER BY
        clause (excluding the ORDER BY itself). Passing null will use the
        default sort order, which may be unordered.
"
      end

      operation 78720055 "cancelOperation"
	public explicit_return_type "void"
	nparams 1
	  param in name "token" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to cancel operation that has not already started. Note that
there is no guarantee that the operation will be canceled. They still may
result in a call to on[Query/Insert/Update/Delete]Complete after this
call has completed.

@param token The token representing the operation to be canceled.
 If multiple operations have the same token they will all be canceled.
"
      end

      operation 78720183 "startInsert"
	public explicit_return_type "void"
	nparams 4
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "initialValues" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous insert. When the insert operation is
done {@link #onInsertComplete} is called.

@param token A token passed into {@link #onInsertComplete} to identify
 the insert operation.
@param cookie An object that gets passed into {@link #onInsertComplete}
@param uri the Uri passed to the insert operation.
@param initialValues the ContentValues parameter passed to the insert operation.
"
      end

      operation 78720311 "startUpdate"
	public explicit_return_type "void"
	nparams 6
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous update. When the update operation is
done {@link #onUpdateComplete} is called.

@param token A token passed into {@link #onUpdateComplete} to identify
 the update operation.
@param cookie An object that gets passed into {@link #onUpdateComplete}
@param uri the Uri passed to the update operation.
@param values the ContentValues parameter passed to the update operation.
"
      end

      operation 78720439 "startDelete"
	public explicit_return_type "void"
	nparams 5
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous delete. When the delete operation is
done {@link #onDeleteComplete} is called.

@param token A token passed into {@link #onDeleteComplete} to identify
 the delete operation.
@param cookie An object that gets passed into {@link #onDeleteComplete}
@param uri the Uri passed to the delete operation.
@param selection the where clause.
"
      end

      operation 78720567 "onQueryComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "cursor" type class_ref 6954295 // Cursor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous query is completed.

@param token the token to identify the query, passed in from
           {@link #startQuery}.
@param cookie the cookie object passed in from {@link #startQuery}.
@param cursor The cursor holding the results from the query.
"
      end

      operation 78720695 "onInsertComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous insert is completed.

@param token the token to identify the query, passed in from
       {@link #startInsert}.
@param cookie the cookie object that's passed in from
       {@link #startInsert}.
@param uri the uri returned from the insert operation.
"
      end

      operation 78720823 "onUpdateComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param in name "result" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous update is completed.

@param token the token to identify the query, passed in from
       {@link #startUpdate}.
@param cookie the cookie object that's passed in from
       {@link #startUpdate}.
@param result the result returned from the update operation
"
      end

      operation 78720951 "onDeleteComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param in name "result" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous delete is completed.

@param token the token to identify the query, passed in from
       {@link #startDelete}.
@param cookie the cookie object that's passed in from
       {@link #startDelete}.
@param result the result returned from the delete operation
"
      end

      operation 78721079 "handleMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7099191 "AsyncTaskLoader"
      abstract visibility public 
      nformals 1
      formal name "D" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 7037879 // Loader
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Abstract Loader that provides an {@link AsyncTask} to do the work.  See
{@link Loader} and {@link android.app.LoaderManager} for more details.

<p>Here is an example implementation of an AsyncTaskLoader subclass that
loads the currently installed applications from the package manager.  This
implementation takes care of retrieving the application labels and sorting
its result set from them, monitoring for changes to the installed
applications, and rebuilding the list when a change in configuration requires
this (such as a locale change).

{@sample development/samples/ApiDemos/src/com/example/android/apis/app/LoaderCustom.java
     loader}

<p>An example implementation of a fragment that uses the above loader to show
the currently installed applications in a list is below.

{@sample development/samples/ApiDemos/src/com/example/android/apis/app/LoaderCustom.java
     fragment}

@param <D> the data type to be loaded.
"
      classrelation 15424183 // <realization>
	relation 15424183 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15424183 // <realization>
	  b parent class_ref 7037879 // Loader
      end

      attribute 24545463 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7099319 "LoadTask"
	visibility package 
	nactuals 3
	actual class class_ref 7048247 // AsyncTask
	  rank 0 explicit_value ""
	actual class class_ref 7048247 // AsyncTask
	  rank 1 explicit_value ""
	actual class class_ref 7048247 // AsyncTask
	  rank 2 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15424439 // <realization>
	  relation 15424439 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15424439 // <realization>
	    b parent class_ref 7048247 // AsyncTask
	end

	attribute 24545591 "mDone"
	  const_attribute private explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24545719 "waiting"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Set to true to indicate that the task has been posted to a handler for
 execution at a later time.  Used to throttle updates.
"
	end

	operation 78721207 "doInBackground"
	  cpp_inline protected explicit_return_type "D"
	  nparams 1
	    param inout name "" explicit_type "Void...params"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on a worker thread "
	end

	operation 78721335 "onPostExecute"
	  cpp_inline protected explicit_return_type "void"
	  nparams 1
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on the UI thread "
	end

	operation 78721463 "onCancelled"
	  cpp_inline protected explicit_return_type "void"
	  nparams 1
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on the UI thread "
	end

	operation 78721591 "run"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on the UI thread, when the waiting task is posted to a handler.
This method is only executed when task execution was deferred (waiting was true). "
	end

	operation 78721719 "waitForLoader"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Used for testing purposes to wait for the task to complete. "
	end
      end

      attribute 24545847 "mExecutor"
	const_attribute private explicit_type "Executor"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15424695 // mTask (<unidirectional association>)
	relation 15424695 --->
	  a role_name "mTask" volatile package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15424695 // mTask (<unidirectional association>)
	  b parent class_ref 7099319 // LoadTask
      end

      classrelation 15424823 // mCancellingTask (<unidirectional association>)
	relation 15424823 --->
	  a role_name "mCancellingTask" volatile package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15424823 // mCancellingTask (<unidirectional association>)
	  b parent class_ref 7099319 // LoadTask
      end

      attribute 24545975 "mUpdateThrottle"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24546103 "mLastLoadCompleteTime"
	package explicit_type "long"
	init_value " -10000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15424951 // mHandler (<unidirectional association>)
	relation 15424951 --->
	  a role_name "mHandler" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15424951 // mHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      operation 78721847 "AsyncTaskLoader"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78721975 "AsyncTaskLoader"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "executor" explicit_type "Executor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78722103 "setUpdateThrottle"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "delayMS" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set amount to throttle updates by.  This is the minimum time from
when the last {@link #loadInBackground()} call has completed until
a new load is scheduled.

@param delayMS Amount of delay, in milliseconds.
"
      end

      operation 78722231 "onForceLoad"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78722359 "onCancelLoad"
	cpp_inline protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78722487 "onCanceled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called if the task was canceled before it was completed.  Gives the class a chance
to clean up post-cancellation and to properly dispose of the result.

@param data The value that was returned by {@link #loadInBackground}, or null
if the task threw {@link OperationCanceledException}.
"
      end

      operation 78722615 "executePendingTask"
	cpp_inline package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78722743 "dispatchOnCancelled"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 7099319 // LoadTask
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78722871 "dispatchOnLoadComplete"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 7099319 // LoadTask
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78722999 "loadInBackground"
	abstract cpp_inline public explicit_return_type "D"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called on a worker thread to perform the actual load and to return
the result of the load operation.

Implementations should not deliver the result directly, but should return them
from this method, which will eventually end up calling {@link #deliverResult} on
the UI thread.  If implementations need to process the results on the UI thread
they may override {@link #deliverResult} and do so there.

To support cancellation, this method should periodically check the value of
{@link #isLoadInBackgroundCanceled} and terminate when it returns true.
Subclasses may also override {@link #cancelLoadInBackground} to interrupt the load
directly instead of polling {@link #isLoadInBackgroundCanceled}.

When the load is canceled, this method may either return normally or throw
{@link OperationCanceledException}.  In either case, the {@link Loader} will
call {@link #onCanceled} to perform post-cancellation cleanup and to dispose of the
result object, if any.

@return The result of the load operation.

@throws OperationCanceledException if the load is canceled during execution.

@see #isLoadInBackgroundCanceled
@see #cancelLoadInBackground
@see #onCanceled
"
      end

      operation 78723127 "onLoadInBackground"
	cpp_inline protected explicit_return_type "D"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@link #loadInBackground()}.

This method is reserved for use by the loader framework.
Subclasses should override {@link #loadInBackground} instead of this method.

@return The result of the load operation.

@throws OperationCanceledException if the load is canceled during execution.

@see #loadInBackground
"
      end

      operation 78723255 "cancelLoadInBackground"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called on the main thread to abort a load in progress.

Override this method to abort the current invocation of {@link #loadInBackground}
that is running in the background on a worker thread.

This method should do nothing if {@link #loadInBackground} has not started
running or if it has already finished.

@see #loadInBackground
"
      end

      operation 78723383 "isLoadInBackgroundCanceled"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current invocation of {@link #loadInBackground} is being canceled.

@return True if the current invocation of {@link #loadInBackground} is being canceled.

@see #loadInBackground
"
      end

      operation 78723511 "waitForLoader"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locks the current thread until the loader completes the current load
operation. Returns immediately if there is no load operation running.
Should not be called from the UI thread: calling it from the UI
thread would cause a deadlock.
<p>
Use for testing only.  <b>Never</b> call this from a UI thread.

@hide
"
      end

      operation 78723639 "dump"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" explicit_type "String"
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7099447 "ClipboardManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface to the clipboard service, for placing and retrieving text in
the global clipboard.

<p>
You do not instantiate this class directly; instead, retrieve it through
{@link android.content.Context#getSystemService}.

<p>
The ClipboardManager API itself is very simple: it consists of methods
to atomically get and set the current primary clipboard data.  That data
is expressed as a {@link ClipData} object, which defines the protocol
for data exchange between applications.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using the clipboard framework, read the
<a href=\"{@docRoot}guide/topics/clipboard/copy-paste.html\">Copy and Paste</a>
developer guide.</p>
</div>

@see android.content.Context#getSystemService
"
      classrelation 15425079 // <generalisation>
	relation 15425079 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15425079 // <generalisation>
	  b parent class_ref 7099575 // ClipboardManager
      end

      classrelation 15425335 // sService (<unidirectional association>)
	relation 15425335 --->
	  a role_name "sService" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15425335 // sService (<unidirectional association>)
	  b parent class_ref 7099703 // IClipboard
      end

      classrelation 15425463 // mContext (<unidirectional association>)
	relation 15425463 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15425463 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      class 7099831 "OnPrimaryClipChangedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78724151 "onPrimaryClipChanged"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback that is invoked by {@link android.content.ClipboardManager} when the primary
clip changes.
"
	end
      end

      classrelation 15425591 // mPrimaryClipChangedListeners (<unidirectional association>)
	relation 15425591 --->
	  stereotype "ArrayList"
	  a role_name "mPrimaryClipChangedListeners" init_value " new ArrayList<OnPrimaryClipChangedListener>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15425591 // mPrimaryClipChangedListeners (<unidirectional association>)
	  b parent class_ref 7099831 // OnPrimaryClipChangedListener
      end

      classrelation 15425719 // mPrimaryClipChangedServiceListener (<unidirectional association>)
	relation 15425719 --->
	  a role_name "mPrimaryClipChangedServiceListener" init_value " new IOnPrimaryClipChangedListener.Stub() {
        public void dispatchPrimaryClipChanged() {
            mHandler.sendEmptyMessage(MSG_REPORT_PRIMARY_CLIP_CHANGED);
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15425719 // mPrimaryClipChangedServiceListener (<unidirectional association>)
	  b parent class_ref 7100087 // Stub
      end

      attribute 24546231 "MSG_REPORT_PRIMARY_CLIP_CHANGED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15425847 // mHandler (<unidirectional association>)
	relation 15425847 --->
	  a role_name "mHandler" init_value " new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MSG_REPORT_PRIMARY_CLIP_CHANGED:
                    reportPrimaryClipChanged();
            }
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15425847 // mHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      operation 78724279 "getService"
	class_operation private return_type class_ref 7099703 // IClipboard
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78724407 "ClipboardManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "handler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 78724535 "setPrimaryClip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clip" type class_ref 6950199 // ClipData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current primary clip on the clipboard.  This is the clip that
is involved in normal cut and paste operations.

@param clip The clipped data item to set.
"
      end

      operation 78724663 "getPrimaryClip"
	public return_type class_ref 6950199 // ClipData
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current primary clip on the clipboard.
"
      end

      operation 78724791 "getPrimaryClipDescription"
	public return_type class_ref 7100215 // ClipDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a description of the current primary clip on the clipboard
but not a copy of its data.
"
      end

      operation 78724919 "hasPrimaryClip"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is currently a primary clip on the clipboard.
"
      end

      operation 78725047 "addPrimaryClipChangedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "what" type class_ref 7099831 // OnPrimaryClipChangedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78725175 "removePrimaryClipChangedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "what" type class_ref 7099831 // OnPrimaryClipChangedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78725303 "getText"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated Use {@link #getPrimaryClip()} instead.  This retrieves
the primary clip and tries to coerce it to a string.
"
      end

      operation 78725431 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated Use {@link #setPrimaryClip(ClipData)} instead.  This
creates a ClippedItem holding the given text and sets it as the
primary clip.  It has no label or icon.
"
      end

      operation 78725559 "hasText"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated Use {@link #hasPrimaryClip()} instead.
"
      end

      operation 78725687 "reportPrimaryClipChanged"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7099703 "IClipboard"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Programming interface to the clipboard, which allows copying and pasting
between applications.
{@hide}
"
      classrelation 15439927 // <generalisation>
	relation 15439927 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15439927 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7103415 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15440055 // <generalisation>
	  relation 15440055 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15440055 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15440183 // <realization>
	  relation 15440183 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15440183 // <realization>
	    b parent class_ref 7099703 // IClipboard
	end

	operation 78775095 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78775223 "asInterface"
	  class_operation public return_type class_ref 7099703 // IClipboard
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.IClipboard interface,
generating a proxy if needed.
"
	end

	operation 78775351 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78775479 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7103543 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15440439 // <realization>
	    relation 15440439 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15440439 // <realization>
	      b parent class_ref 7099703 // IClipboard
	  end

	  classrelation 15440567 // mRemote (<unidirectional association>)
	    relation 15440567 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15440567 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78775607 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78775735 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78775863 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78775991 "setPrimaryClip"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "clip" type class_ref 6950199 // ClipData
	      param inout name "callingPackage" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78776119 "getPrimaryClip"
	    public return_type class_ref 6950199 // ClipData
	    nparams 1
	      param inout name "pkg" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78776247 "getPrimaryClipDescription"
	    public return_type class_ref 7100215 // ClipDescription
	    nparams 1
	      param inout name "callingPackage" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78776375 "hasPrimaryClip"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "callingPackage" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78776503 "addPrimaryClipChangedListener"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "listener" type class_ref 7099959 // IOnPrimaryClipChangedListener
	      param inout name "callingPackage" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78776631 "removePrimaryClipChangedListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "listener" type class_ref 7099959 // IOnPrimaryClipChangedListener
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78776759 "hasClipboardText"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "callingPackage" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Returns true if the clipboard contains text; false otherwise.
"
	  end
	end

	attribute 24552503 "TRANSACTION_setPrimaryClip"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24552631 "TRANSACTION_getPrimaryClip"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24552759 "TRANSACTION_getPrimaryClipDescription"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24552887 "TRANSACTION_hasPrimaryClip"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553015 "TRANSACTION_addPrimaryClipChangedListener"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553143 "TRANSACTION_removePrimaryClipChangedListener"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24553271 "TRANSACTION_hasClipboardText"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78776887 "setPrimaryClip"
	public explicit_return_type "void"
	nparams 2
	  param inout name "clip" type class_ref 6950199 // ClipData
	  param inout name "callingPackage" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78777015 "getPrimaryClip"
	public return_type class_ref 6950199 // ClipData
	nparams 1
	  param inout name "pkg" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78777143 "getPrimaryClipDescription"
	public return_type class_ref 7100215 // ClipDescription
	nparams 1
	  param inout name "callingPackage" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78777271 "hasPrimaryClip"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "callingPackage" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78777399 "addPrimaryClipChangedListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 7099959 // IOnPrimaryClipChangedListener
	  param inout name "callingPackage" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78777527 "removePrimaryClipChangedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 7099959 // IOnPrimaryClipChangedListener
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78777655 "hasClipboardText"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "callingPackage" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the clipboard contains text; false otherwise.
"
      end
    end

    class 7099959 "IOnPrimaryClipChangedListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@hide}
"
      class 7100087 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15488055 // <generalisation>
	  relation 15488055 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15488055 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15488183 // <realization>
	  relation 15488183 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15488183 // <realization>
	    b parent class_ref 7099959 // IOnPrimaryClipChangedListener
	end

	operation 78824887 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78825015 "asInterface"
	  class_operation public return_type class_ref 7099959 // IOnPrimaryClipChangedListener
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.IOnPrimaryClipChangedListener interface,
generating a proxy if needed.
"
	end

	operation 78825143 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78825271 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7105847 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15488439 // <realization>
	    relation 15488439 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15488439 // <realization>
	      b parent class_ref 7099959 // IOnPrimaryClipChangedListener
	  end

	  classrelation 15488567 // mRemote (<unidirectional association>)
	    relation 15488567 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15488567 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78825399 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78825527 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78825655 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78825783 "dispatchPrimaryClipChanged"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24569527 "TRANSACTION_dispatchPrimaryClipChanged"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 15487927 // <generalisation>
	relation 15487927 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15487927 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      operation 78825911 "dispatchPrimaryClipChanged"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7100215 "ClipDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Meta-data describing the contents of a {@link ClipData}.  Provides enough
information to know if you can handle the ClipData, but not the data
itself.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using the clipboard framework, read the
<a href=\"{@docRoot}guide/topics/clipboard/copy-paste.html\">Copy and Paste</a>
developer guide.</p>
</div>
"
      classrelation 15427511 // <realization>
	relation 15427511 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15427511 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24546487 "mLabel"
	const_attribute package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15428535 // mExtras (<unidirectional association>)
	relation 15428535 --->
	  a role_name "mExtras" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15428535 // mExtras (<unidirectional association>)
	  b parent class_ref 6955319 // PersistableBundle
      end

      operation 78731319 "ClipDescription"
	public explicit_return_type ""
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "mimeTypes" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip.

@param label Label to show to the user describing this clip.
@param mimeTypes An array of MIME types this data is available as.
"
      end

      operation 78731447 "ClipDescription"
	public explicit_return_type ""
	nparams 1
	  param inout name "o" type class_ref 7100215 // ClipDescription
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a copy of a ClipDescription.
"
      end

      operation 78731575 "compareMimeTypes"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "concreteType" explicit_type "String"
	  param inout name "desiredType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to compare two MIME types, where one may be a pattern.
@param concreteType A fully-specified MIME type.
@param desiredType A desired MIME type that may be a pattern such as *&#47;*.
@return Returns true if the two MIME types match.
"
      end

      operation 78731703 "getLabel"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the label for this clip.
"
      end

      operation 78731831 "hasMimeType"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mimeType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the clip description contains the given MIME type.

@param mimeType The desired MIME type.  May be a pattern.
@return Returns true if one of the MIME types in the clip description
matches the desired MIME type, else false.
"
      end

      operation 78731959 "filterMimeTypes"
	public explicit_return_type "String"
	nparams 1
	  param inout name "mimeType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter the clip description MIME types by the given MIME type.  Returns
all MIME types in the clip that match the given MIME type.

@param mimeType The desired MIME type.  May be a pattern.
@return Returns an array of all matching MIME types.  If there are no
matching MIME types, null is returned.
"
      end

      operation 78732087 "getMimeTypeCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of MIME types the clip is available in.
"
      end

      operation 78732215 "getMimeType"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return one of the possible clip MIME types.
"
      end

      operation 78732343 "getExtras"
	public return_type class_ref 6955319 // PersistableBundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the clip description.

@return the bundle containing extended data previously set with
{@link #setExtras(PersistableBundle)}, or null if no extras have been set.

@see #setExtras(PersistableBundle)
"
      end

      operation 78732471 "setExtras"
	public explicit_return_type "void"
	nparams 1
	  param inout name "extras" type class_ref 6955319 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the clip description.

@see #getExtras()
"
      end

      operation 78732599 "validate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78732727 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78732855 "toShortString"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78732983 "toShortStringTypesOnly"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78733111 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78733239 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78733367 "ClipDescription"
	package explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15428663 // CREATOR (<unidirectional association>)
	relation 15428663 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<ClipDescription>() {

            public ClipDescription createFromParcel(Parcel source) {
                return new ClipDescription(source);
            }

            public ClipDescription[] newArray(int size) {
                return new ClipDescription[size];
            }
        }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClipDescription> ${name}${value};
"
	    classrelation_ref 15428663 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 7100471 "ContentInsertHandler"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface to insert data to ContentResolver
@hide
"
      operation 78737079 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 6924215 // ContentResolver
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "insert data from InputStream to ContentResolver
@param contentResolver
@param in InputStream
@throws IOException
@throws SAXException
"
      end

      operation 78737207 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 6924215 // ContentResolver
	  param inout name "in" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "insert data from String to ContentResolver
@param contentResolver
@param in input string
@throws SAXException
"
      end
    end

    class 7100983 "ContentProviderNative"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@hide}
"
      classrelation 15430967 // <generalisation>
	relation 15430967 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15430967 // <generalisation>
	  b parent class_ref 6931511 // Binder
      end

      classrelation 15431351 // <realization>
	relation 15431351 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15431351 // <realization>
	  b parent class_ref 6991671 // IContentProvider
      end

      operation 78739639 "ContentProviderNative"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78739767 "asInterface"
	class_operation public return_type class_ref 6991671 // IContentProvider
	nparams 1
	  param inout name "obj" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast a Binder object into a content resolver interface, generating
a proxy if needed.
"
      end

      operation 78739895 "getProviderName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the content provider.
Should probably be part of the {@link IContentProvider} interface.
@return The content provider name.
"
      end

      operation 78740023 "onTransact"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 6931895 // Parcel
	  param inout name "reply" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78740151 "asBinder"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7101111 "ContentProviderProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 15431479 // <realization>
	relation 15431479 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15431479 // <realization>
	  b parent class_ref 6991671 // IContentProvider
      end

      operation 78740279 "ContentProviderProxy"
	public explicit_return_type ""
	nparams 1
	  param inout name "remote" type class_ref 6927031 // IBinder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78740407 "asBinder"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78740535 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 7
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 7049271 // ICancellationSignal
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78740663 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78740791 "insert"
	public return_type class_ref 6927159 // Uri
	nparams 3
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78740919 "bulkInsert"
	public explicit_return_type "int"
	nparams 3
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78741047 "applyBatch"
	public return_type class_ref 7017015 // ContentProviderResult
	nparams 2
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  exception class_ref 7017143 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78741175 "delete"
	public explicit_return_type "int"
	nparams 4
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78741303 "update"
	public explicit_return_type "int"
	nparams 5
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78741431 "openFile"
	public return_type class_ref 6986295 // ParcelFileDescriptor
	nparams 5
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7049271 // ICancellationSignal
	  param inout name "token" type class_ref 6927031 // IBinder
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78741559 "openAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 4
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 7049271 // ICancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78741687 "call"
	public return_type class_ref 6925879 // Bundle
	nparams 4
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "method" explicit_type "String"
	  param inout name "request" explicit_type "String"
	  param inout name "args" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78741815 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mimeTypeFilter" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78741943 "openTypedAssetFile"
	public return_type class_ref 7016631 // AssetFileDescriptor
	nparams 5
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	  param inout name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 6925879 // Bundle
	  param inout name "signal" type class_ref 7049271 // ICancellationSignal
	nexceptions 2
	  exception class_ref 6931639 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78742071 "createCancellationSignal"
	public return_type class_ref 7049271 // ICancellationSignal
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78742199 "canonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78742327 "uncanonicalize"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 6927159 // Uri
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15431607 // mRemote (<unidirectional association>)
	relation 15431607 --->
	  a role_name "mRemote" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15431607 // mRemote (<unidirectional association>)
	  b parent class_ref 6927031 // IBinder
      end
    end

    class 7101623 "ContentProviderOperation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a single operation to be performed as part of a batch of operations.

@see ContentProvider#applyBatch(ArrayList)
"
      classrelation 15433143 // <realization>
	relation 15433143 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15433143 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24549943 "TYPE_INSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide exposed for unit tests 
"
      end

      attribute 24550071 "TYPE_UPDATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide exposed for unit tests 
"
      end

      attribute 24550199 "TYPE_DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide exposed for unit tests 
"
      end

      attribute 24550327 "TYPE_ASSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide exposed for unit tests 
"
      end

      attribute 24550455 "mType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15433271 // mUri (<unidirectional association>)
	relation 15433271 --->
	  a role_name "mUri" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15433271 // mUri (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      classrelation 15433655 // mValues (<unidirectional association>)
	relation 15433655 --->
	  a role_name "mValues" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15433655 // mValues (<unidirectional association>)
	  b parent class_ref 7016887 // ContentValues
      end

      attribute 24550583 "mExpectedCount"
	const_attribute private explicit_type "Integer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15433783 // mValuesBackReferences (<unidirectional association>)
	relation 15433783 --->
	  a role_name "mValuesBackReferences" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15433783 // mValuesBackReferences (<unidirectional association>)
	  b parent class_ref 7016887 // ContentValues
      end

      attribute 24550711 "mSelectionArgsBackReferences"
	const_attribute private explicit_type "Integer, Integer"
	stereotype "Map"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24550839 "mYieldAllowed"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78756663 "ContentProviderOperation"
	private explicit_return_type ""
	nparams 1
	  param inout name "builder" type class_ref 7101751 // Builder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link ContentProviderOperation} by copying the contents of a
{@link Builder}.
"
      end

      class 7101751 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24550967 "mType"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15434167 // mUri (<unidirectional association>)
	  relation 15434167 --->
	    a role_name "mUri" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15434167 // mUri (<unidirectional association>)
	    b parent class_ref 6927159 // Uri
	end

	classrelation 15434551 // mValues (<unidirectional association>)
	  relation 15434551 --->
	    a role_name "mValues" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15434551 // mValues (<unidirectional association>)
	    b parent class_ref 7016887 // ContentValues
	end

	attribute 24551095 "mExpectedCount"
	  private explicit_type "Integer"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15434679 // mValuesBackReferences (<unidirectional association>)
	  relation 15434679 --->
	    a role_name "mValuesBackReferences" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15434679 // mValuesBackReferences (<unidirectional association>)
	    b parent class_ref 7016887 // ContentValues
	end

	attribute 24551223 "mSelectionArgsBackReferences"
	  private explicit_type "Integer, Integer"
	  stereotype "Map"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24551351 "mYieldAllowed"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78759735 "Builder"
	  private explicit_return_type ""
	  nparams 2
	    param in name "type" explicit_type "int"
	    param inout name "uri" type class_ref 6927159 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a {@link Builder} of a given type. The uri must not be null. "
	end

	operation 78759863 "build"
	  public return_type class_ref 7101623 // ContentProviderOperation
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a ContentProviderOperation from this {@link Builder}. "
	end

	operation 78759991 "withValueBackReferences"
	  public return_type class_ref 7101751 // Builder
	  nparams 1
	    param inout name "backReferences" type class_ref 7016887 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a {@link ContentValues} of back references. The key is the name of the column
and the value is an integer that is the index of the previous result whose
value should be used for the column. The value is added as a {@link String}.
A column value from the back references takes precedence over a value specified in
{@link #withValues}.
This can only be used with builders of type insert, update, or assert.
@return this builder, to allow for chaining.
"
	end

	operation 78760119 "withValueBackReference"
	  public return_type class_ref 7101751 // Builder
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param in name "previousResult" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a ContentValues back reference.
A column value from the back references takes precedence over a value specified in
{@link #withValues}.
This can only be used with builders of type insert, update, or assert.
@return this builder, to allow for chaining.
"
	end

	operation 78760247 "withSelectionBackReference"
	  public return_type class_ref 7101751 // Builder
	  nparams 2
	    param in name "selectionArgIndex" explicit_type "int"
	    param in name "previousResult" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a back references as a selection arg. Any value at that index of the selection arg
that was specified by {@link #withSelection} will be overwritten.
This can only be used with builders of type update, delete, or assert.
@return this builder, to allow for chaining.
"
	end

	operation 78760375 "withValues"
	  public return_type class_ref 7101751 // Builder
	  nparams 1
	    param inout name "values" type class_ref 7016887 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The ContentValues to use. This may be null. These values may be overwritten by
the corresponding value specified by {@link #withValueBackReference} or by
future calls to {@link #withValues} or {@link #withValue}.
This can only be used with builders of type insert, update, or assert.
@return this builder, to allow for chaining.
"
	end

	operation 78760503 "withValue"
	  public return_type class_ref 7101751 // Builder
	  nparams 2
	    param inout name "key" explicit_type "String"
	    param inout name "value" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "A value to insert or update. This value may be overwritten by
the corresponding value specified by {@link #withValueBackReference}.
This can only be used with builders of type insert, update, or assert.
@param key the name of this value
@param value the value itself. the type must be acceptable for insertion by
{@link ContentValues#put}
@return this builder, to allow for chaining.
"
	end

	operation 78760631 "withSelection"
	  public return_type class_ref 7101751 // Builder
	  nparams 2
	    param inout name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The selection and arguments to use. An occurrence of '?' in the selection will be
replaced with the corresponding occurence of the selection argument. Any of the
selection arguments may be overwritten by a selection argument back reference as
specified by {@link #withSelectionBackReference}.
This can only be used with builders of type update, delete, or assert.
@return this builder, to allow for chaining.
"
	end

	operation 78760759 "withExpectedCount"
	  public return_type class_ref 7101751 // Builder
	  nparams 1
	    param in name "count" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "If set then if the number of rows affected by this operation does not match
this count {@link OperationApplicationException} will be throw.
This can only be used with builders of type update, delete, or assert.
@return this builder, to allow for chaining.
"
	end

	operation 78760887 "withYieldAllowed"
	  public return_type class_ref 7101751 // Builder
	  nparams 1
	    param inout name "yieldAllowed" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "If set to true then the operation allows yielding the database to other transactions
if the database is contended.
@return this builder, to allow for chaining.
@see android.database.sqlite.SQLiteDatabase#yieldIfContendedSafely()
"
	end
      end

      operation 78756791 "ContentProviderOperation"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78756919 "ContentProviderOperation"
	public explicit_return_type ""
	nparams 2
	  param inout name "cpo" type class_ref 7101623 // ContentProviderOperation
	  param inout name "removeUserIdFromUri" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78757047 "getWithoutUserIdInUri"
	public return_type class_ref 7101623 // ContentProviderOperation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78757175 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78757303 "newInsert"
	class_operation public return_type class_ref 7101751 // Builder
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building an insert {@link ContentProviderOperation}.
@param uri The {@link Uri} that is the target of the insert.
@return a {@link Builder}
"
      end

      operation 78757431 "newUpdate"
	class_operation public return_type class_ref 7101751 // Builder
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building an update {@link ContentProviderOperation}.
@param uri The {@link Uri} that is the target of the update.
@return a {@link Builder}
"
      end

      operation 78757559 "newDelete"
	class_operation public return_type class_ref 7101751 // Builder
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building a delete {@link ContentProviderOperation}.
@param uri The {@link Uri} that is the target of the delete.
@return a {@link Builder}
"
      end

      operation 78757687 "newAssertQuery"
	class_operation public return_type class_ref 7101751 // Builder
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building a
{@link ContentProviderOperation} to assert a set of values as provided
through {@link Builder#withValues(ContentValues)}.
"
      end

      operation 78757815 "getUri"
	public return_type class_ref 6927159 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Uri for the target of the operation.
"
      end

      operation 78757943 "isYieldAllowed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation allows yielding the database to other transactions
if the database is contended.

@see android.database.sqlite.SQLiteDatabase#yieldIfContendedSafely()
"
      end

      operation 78758071 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide exposed for unit tests "
      end

      operation 78758199 "isInsert"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation represents an insertion.

@see #newInsert
"
      end

      operation 78758327 "isDelete"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation represents a deletion.

@see #newDelete
"
      end

      operation 78758455 "isUpdate"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation represents an update.

@see #newUpdate
"
      end

      operation 78758583 "isAssertQuery"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation represents an assert query.

@see #newAssertQuery
"
      end

      operation 78758711 "isWriteOperation"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation represents an insertion, deletion, or update.

@see #isInsert
@see #isDelete
@see #isUpdate
"
      end

      operation 78758839 "isReadOperation"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation represents an assert query.

@see #isAssertQuery
"
      end

      operation 78758967 "apply"
	public return_type class_ref 7017015 // ContentProviderResult
	nparams 3
	  param inout name "provider" type class_ref 6994743 // ContentProvider
	  param inout name "backRefs" type class_ref 7017015 // ContentProviderResult
	multiplicity "[]"
	  param in name "numBackRefs" explicit_type "int"
	nexceptions 1
	  exception class_ref 7017143 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies this operation using the given provider. The backRefs array is used to resolve any
back references that were requested using
{@link Builder#withValueBackReferences(ContentValues)} and
{@link Builder#withSelectionBackReference}.
@param provider the {@link ContentProvider} on which this batch is applied
@param backRefs a {@link ContentProviderResult} array that will be consulted
to resolve any requested back references.
@param numBackRefs the number of valid results on the backRefs array.
@return a {@link ContentProviderResult} that contains either the {@link Uri} of the inserted
row if this was an insert otherwise the number of rows affected.
@throws OperationApplicationException thrown if either the insert fails or
if the number of rows affected didn't match the expected count
"
      end

      operation 78759095 "resolveValueBackReferences"
	public return_type class_ref 7016887 // ContentValues
	nparams 2
	  param inout name "backRefs" type class_ref 7017015 // ContentProviderResult
	multiplicity "[]"
	  param in name "numBackRefs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The ContentValues back references are represented as a ContentValues object where the
key refers to a column and the value is an index of the back reference whose
valued should be associated with the column.
<p>
This is intended to be a private method but it is exposed for
unit testing purposes
@param backRefs an array of previous results
@param numBackRefs the number of valid previous results in backRefs
@return the ContentValues that should be used in this operation application after
expansion of back references. This can be called if either mValues or mValuesBackReferences
is null
"
      end

      operation 78759223 "resolveSelectionArgsBackReferences"
	public explicit_return_type "String"
	nparams 2
	  param inout name "backRefs" type class_ref 7017015 // ContentProviderResult
	multiplicity "[]"
	  param in name "numBackRefs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The Selection Arguments back references are represented as a Map of Integer->Integer where
the key is an index into the selection argument array (see {@link Builder#withSelection})
and the value is the index of the previous result that should be used for that selection
argument array slot.
<p>
This is intended to be a private method but it is exposed for
unit testing purposes
@param backRefs an array of previous results
@param numBackRefs the number of valid previous results in backRefs
@return the ContentValues that should be used in this operation application after
expansion of back references. This can be called if either mValues or mValuesBackReferences
is null
"
      end

      operation 78759351 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78759479 "backRefToValue"
	private explicit_return_type "long"
	nparams 3
	  param inout name "backRefs" type class_ref 7017015 // ContentProviderResult
	multiplicity "[]"
	  param in name "numBackRefs" explicit_type "int"
	  param inout name "backRefIndex" explicit_type "Integer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the string representation of the requested back reference.
@param backRefs an array of results
@param numBackRefs the number of items in the backRefs array that are valid
@param backRefIndex which backRef to be used
@throws ArrayIndexOutOfBoundsException thrown if the backRefIndex is larger than
the numBackRefs
@return the string representation of the requested back reference.
"
      end

      operation 78759607 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15434039 // CREATOR (<unidirectional association>)
	relation 15434039 --->
	  a role_name "CREATOR" init_value "
            new Creator<ContentProviderOperation>() {
        public ContentProviderOperation createFromParcel(Parcel source) {
            return new ContentProviderOperation(source);
        }

        public ContentProviderOperation[] newArray(int size) {
            return new ContentProviderOperation[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ContentProviderOperation> ${name}${value};
"
	    classrelation_ref 15434039 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 7101879 "ContentQueryMap"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Caches the contents of a cursor into a Map of String->ContentValues and optionally
keeps the cache fresh by registering for updates on the content backing the cursor. The column of
the database that is to be used as the key of the map is user-configurable, and the
ContentValues contains all columns other than the one that is designated the key.
<p>
The cursor data is accessed by row key and column name via getValue().
"
      classrelation 15435319 // mCursor (<unidirectional association>)
	relation 15435319 --->
	  a role_name "mCursor" volatile private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15435319 // mCursor (<unidirectional association>)
	  b parent class_ref 6954295 // Cursor
      end

      attribute 24551607 "mKeyColumn"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15435575 // mHandlerForUpdateNotifications (<unidirectional association>)
	relation 15435575 --->
	  a role_name "mHandlerForUpdateNotifications" init_value " null" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15435575 // mHandlerForUpdateNotifications (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      attribute 24551735 "mKeepUpdated"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15435831 // mContentObserver (<unidirectional association>)
	relation 15435831 --->
	  a role_name "mContentObserver" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15435831 // mContentObserver (<unidirectional association>)
	  b parent class_ref 7017399 // ContentObserver
      end

      attribute 24551863 "mDirty"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set when a cursor change notification is received and is cleared on a call to requery(). 
"
      end

      operation 78761911 "ContentQueryMap"
	public explicit_return_type ""
	nparams 4
	  param inout name "cursor" type class_ref 6954295 // Cursor
	  param inout name "columnNameOfKey" explicit_type "String"
	  param inout name "keepUpdated" explicit_type "boolean"
	  param inout name "handlerForUpdateNotifications" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a ContentQueryMap that caches the content backing the cursor

@param cursor the cursor whose contents should be cached
@param columnNameOfKey the column that is to be used as the key of the values map
@param keepUpdated true if the cursor's ContentProvider should be monitored for changes and 
the map updated when changes do occur
@param handlerForUpdateNotifications the Handler that should be used to receive
 notifications of changes (if requested). Normally you pass null here, but if
 you know that the thread that is creating this isn't a thread that can receive
 messages then you can create your own handler and use that here.
"
      end

      operation 78762039 "setKeepUpdated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keepUpdated" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change whether or not the ContentQueryMap will register with the cursor's ContentProvider 
for change notifications. If you use a ContentQueryMap in an activity you should call this
with false in onPause(), which means you need to call it with true in onResume()
if want it to be kept updated.
@param keepUpdated if true the ContentQueryMap should be registered with the cursor's
ContentProvider, false otherwise
"
      end

      operation 78762167 "getValues"
	public return_type class_ref 7016887 // ContentValues
	nparams 1
	  param inout name "rowName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Access the ContentValues for the row specified by rowName
@param rowName which row to read
@return the ContentValues for the row, or null if the row wasn't present in the cursor
"
      end

      operation 78762295 "requery"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Requeries the cursor and reads the contents into the cache "
      end

      operation 78762423 "readCursorIntoCache"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cursor" type class_ref 6954295 // Cursor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78762551 "getRows"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, ContentValues> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78762679 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78762807 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7102135 "ContentUris"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility methods useful for working with {@link android.net.Uri} objects
that use the &quot;content&quot; (content://) scheme.

<p>
  Content URIs have the syntax
</p>
<p>
  <code>content://<em>authority</em>/<em>path</em>/<em>id</em></code>
</p>
<dl>
  <dt>
      <code>content:</code>
  </dt>
  <dd>
      The scheme portion of the URI. This is always set to {@link
      android.content.ContentResolver#SCHEME_CONTENT ContentResolver.SCHEME_CONTENT} (value
      <code>content://</code>).
  </dd>
  <dt>
      <em>authority</em>
  </dt>
  <dd>
      A string that identifies the entire content provider. All the content URIs for the provider
      start with this string. To guarantee a unique authority, providers should consider
      using an authority that is the same as the provider class' package identifier.
  </dd>
  <dt>
      <em>path</em>
  </dt>
  <dd>
      Zero or more segments, separated by a forward slash (<code>/</code>), that identify
      some subset of the provider's data. Most providers use the path part to identify
      individual tables. Individual segments in the path are often called
      &quot;directories&quot; although they do not refer to file directories. The right-most
      segment in a path is often called a &quot;twig&quot;
  </dd>
  <dt>
      <em>id</em>
  </dt>
  <dd>
      A unique numeric identifier for a single row in the subset of data identified by the
      preceding path part. Most providers recognize content URIs that contain an id part
      and give them special handling. A table that contains a column named <code>_ID</code>
      often expects the id part to be a particular value for that column.
  </dd>
</dl>

"
      operation 78762935 "parseId"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "contentUri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the last path segment to a long.

<p>This supports a common convention for content URIs where an ID is
stored in the last segment.

@throws UnsupportedOperationException if this isn't a hierarchical URI
@throws NumberFormatException if the last segment isn't a number

@return the long conversion of the last segment or -1 if the path is
 empty
"
      end

      operation 78763063 "appendId"
	class_operation public return_type class_ref 7102263 // Builder
	nparams 2
	  param inout name "builder" type class_ref 7102263 // Builder
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the given ID to the end of the path.

@param builder to append the ID to
@param id to append

@return the given builder
"
      end

      operation 78763191 "withAppendedId"
	class_operation public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "contentUri" type class_ref 6927159 // Uri
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the given ID to the end of the path.

@param contentUri to start with
@param id to append

@return a new URI with the given ID appended to the end of the path
"
      end
    end

    class 7102391 "CursorEntityIterator"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Abstract implementation of EntityIterator that makes it easy to wrap a cursor
that can contain several consecutive rows for an entity.
@hide
"
      classrelation 15436599 // <realization>
	relation 15436599 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15436599 // <realization>
	  b parent class_ref 7102519 // EntityIterator
      end

      classrelation 15436727 // mCursor (<unidirectional association>)
	relation 15436727 --->
	  a role_name "mCursor" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15436727 // mCursor (<unidirectional association>)
	  b parent class_ref 6954295 // Cursor
      end

      attribute 24551991 "mIsClosed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78768439 "CursorEntityIterator"
	public explicit_return_type ""
	nparams 1
	  param inout name "cursor" type class_ref 6954295 // Cursor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that makes initializes the cursor such that the iterator points to the
first Entity, if there are any.
@param cursor the cursor that contains the rows that make up the entities
"
      end

      operation 78768567 "getEntityAndIncrementCursor"
	abstract public return_type class_ref 7102647 // Entity
	nparams 1
	  param inout name "cursor" type class_ref 6954295 // Cursor
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the entity that the cursor is currently pointing to. This must take care to advance
the cursor past this entity. This will never be called if the cursor is at the end.
@param cursor the cursor that contains the entity rows
@return the entity that the cursor is currently pointing to
@throws RemoteException if a RemoteException is caught while attempting to build the Entity
"
      end

      operation 78768695 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether there are more elements to iterate, i.e. whether the
iterator is positioned in front of an element.

@return {@code true} if there are more elements, {@code false} otherwise.
@see EntityIterator#next()
"
      end

      operation 78768823 "next"
	public return_type class_ref 7102647 // Entity
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next object in the iteration, i.e. returns the element in
front of the iterator and advances the iterator by one position.

@return the next object.
@throws java.util.NoSuchElementException
            if there are no more elements.
@see EntityIterator#hasNext()
"
      end

      operation 78768951 "remove"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78769079 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78769207 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that this iterator is no longer needed and that any associated resources
may be released (such as a SQLite cursor).
"
      end
    end

    class 7102519 "EntityIterator"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A specialization of {@link Iterator} that allows iterating over a collection of
{@link Entity} objects. In addition to the iteration functionality it also allows
resetting the iterator back to the beginning and provides for an explicit {@link #close()}
method to indicate that the iterator is no longer needed and that its resources
can be released.
"
      operation 78768183 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator back to the beginning.
"
      end

      operation 78768311 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that this iterator is no longer needed and that any associated resources
may be released (such as a SQLite cursor).
"
      end
    end

    class 7102647 "Entity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of a item using ContentValues. It contains one top level ContentValue
plus a collection of Uri, ContentValues tuples as subvalues. One example of its use
is in Contacts, where the top level ContentValue contains the columns from the RawContacts
table and the subvalues contain a ContentValues object for each row from the Data table that
corresponds to that RawContact. The uri refers to the Data table uri for each row.
"
      classrelation 15439415 // mValues (<unidirectional association>)
	relation 15439415 --->
	  a role_name "mValues" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15439415 // mValues (<unidirectional association>)
	  b parent class_ref 7016887 // ContentValues
      end

      class 7103159 "NamedContentValues"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15439671 // uri (<unidirectional association>)
	  relation 15439671 --->
	    a role_name "uri" const_relation public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15439671 // uri (<unidirectional association>)
	    b parent class_ref 6927159 // Uri
	end

	classrelation 15439799 // values (<unidirectional association>)
	  relation 15439799 --->
	    a role_name "values" const_relation public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15439799 // values (<unidirectional association>)
	    b parent class_ref 7016887 // ContentValues
	end

	operation 78774327 "NamedContentValues"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "uri" type class_ref 6927159 // Uri
	    param inout name "values" type class_ref 7016887 // ContentValues
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15439543 // mSubValues (<unidirectional association>)
	relation 15439543 --->
	  stereotype "ArrayList"
	  a role_name "mSubValues" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15439543 // mSubValues (<unidirectional association>)
	  b parent class_ref 7103159 // NamedContentValues
      end

      operation 78773815 "Entity"
	public explicit_return_type ""
	nparams 1
	  param inout name "values" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773943 "getEntityValues"
	public return_type class_ref 7016887 // ContentValues
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78774071 "getSubValues"
	public return_type class_ref 7103159 // NamedContentValues
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78774199 "addSubValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78774455 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7102903 "CursorLoader"
      visibility public 
      nactuals 1
      actual class class_ref 7099191 // AsyncTaskLoader
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A loader that queries the {@link ContentResolver} and returns a {@link Cursor}.
This class implements the {@link Loader} protocol in a standard way for
querying cursors, building on {@link AsyncTaskLoader} to perform the cursor
query on a background thread so that it does not block the application's UI.

<p>A CursorLoader must be built with the full information for the query to
perform, either through the
{@link #CursorLoader(Context, Uri, String[], String, String[], String)} or
creating an empty instance with {@link #CursorLoader(Context)} and filling
in the desired paramters with {@link #setUri(Uri)}, {@link #setSelection(String)},
{@link #setSelectionArgs(String[])}, {@link #setSortOrder(String)},
and {@link #setProjection(String[])}.
"
      classrelation 15436855 // <realization>
	relation 15436855 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15436855 // <realization>
	  b parent class_ref 7099191 // AsyncTaskLoader
      end

      classrelation 15436983 // mObserver (<unidirectional association>)
	relation 15436983 --->
	  a role_name "mObserver" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15436983 // mObserver (<unidirectional association>)
	  b parent class_ref 7038391 // ForceLoadContentObserver
      end

      classrelation 15437111 // mUri (<unidirectional association>)
	relation 15437111 --->
	  a role_name "mUri" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15437111 // mUri (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      classrelation 15437751 // mCursor (<unidirectional association>)
	relation 15437751 --->
	  a role_name "mCursor" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15437751 // mCursor (<unidirectional association>)
	  b parent class_ref 6954295 // Cursor
      end

      classrelation 15437879 // mCancellationSignal (<unidirectional association>)
	relation 15437879 --->
	  a role_name "mCancellationSignal" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15437879 // mCancellationSignal (<unidirectional association>)
	  b parent class_ref 7016503 // CancellationSignal
      end

      operation 78769335 "loadInBackground"
	public return_type class_ref 6954295 // Cursor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Runs on a worker thread "
      end

      operation 78769463 "cancelLoadInBackground"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78769591 "deliverResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" type class_ref 6954295 // Cursor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Runs on the UI thread "
      end

      operation 78769719 "CursorLoader"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty unspecified CursorLoader.  You must follow this with
calls to {@link #setUri(Uri)}, {@link #setSelection(String)}, etc
to specify the query to perform.
"
      end

      operation 78769847 "CursorLoader"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a fully-specified CursorLoader.  See
{@link ContentResolver#query(Uri, String[], String, String[], String)
ContentResolver.query()} for documentation on the meaning of the
parameters.  These will be passed as-is to that call.
"
      end

      operation 78769975 "onStartLoading"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Starts an asynchronous load of the contacts list data. When the result is ready the callbacks
will be called on the UI thread. If a previous load has been completed and is still valid
the result may be passed to the callbacks immediately.

Must be called from the UI thread
"
      end

      operation 78770103 "onStopLoading"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Must be called from the UI thread
"
      end

      operation 78770231 "onCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" type class_ref 6954295 // Cursor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78770359 "onReset"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78770487 "getUri"
	public return_type class_ref 6927159 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78770615 "setUri"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78770743 "getProjection"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78770871 "setProjection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78770999 "getSelection"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78771127 "setSelection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selection" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78771255 "getSelectionArgs"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78771383 "setSelectionArgs"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78771511 "getSortOrder"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78771639 "setSortOrder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78771767 "dump"
	public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" explicit_type "String"
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7103031 "DefaultDataHandler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Inserts default data from InputStream, should be in XML format.
If the provider syncs data to the server, the imported data will be synced to the server.
<p>Samples:</p>
<br/>
 Insert one row:
<pre>
&lt;row uri=\"content://contacts/people\">
 &lt;Col column = \"name\" value = \"foo feebe \"/>
 &lt;Col column = \"addr\" value = \"Tx\"/>
&lt;/row></pre>
<br/>
Delete, it must be in order of uri, select, and arg:
<pre>
&lt;del uri=\"content://contacts/people\" select=\"name=? and addr=?\" 
 arg1 = \"foo feebe\" arg2 =\"Tx\"/></pre>
<br/>
 Use first row's uri to insert into another table,
 content://contacts/people/1/phones:
<pre>
&lt;row uri=\"content://contacts/people\">
 &lt;col column = \"name\" value = \"foo feebe\"/>
 &lt;col column = \"addr\" value = \"Tx\"/>
 &lt;row postfix=\"phones\">
   &lt;col column=\"number\" value=\"512-514-6535\"/>
 &lt;/row>
 &lt;row postfix=\"phones\">
   &lt;col column=\"cell\" value=\"512-514-6535\"/>
 &lt;/row>  
&lt;/row></pre>
<br/>
 Insert multiple rows in to same table and same attributes:
<pre>
&lt;row uri=\"content://contacts/people\" >
 &lt;row>
  &lt;col column= \"name\" value = \"foo feebe\"/>
  &lt;col column= \"addr\" value = \"Tx\"/>
 &lt;/row>
 &lt;row>
 &lt;/row>
&lt;/row></pre>

@hide
"
      classrelation 15438007 // <realization>
	relation 15438007 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15438007 // <realization>
	  b parent class_ref 7100471 // ContentInsertHandler
      end

      classrelation 15439031 // mUris (<unidirectional association>)
	relation 15439031 --->
	  stereotype "Stack"
	  a role_name "mUris" init_value " new Stack<Uri>()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15439031 // mUris (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      classrelation 15439159 // mValues (<unidirectional association>)
	relation 15439159 --->
	  a role_name "mValues" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15439159 // mValues (<unidirectional association>)
	  b parent class_ref 7016887 // ContentValues
      end

      classrelation 15439287 // mContentResolver (<unidirectional association>)
	relation 15439287 --->
	  a role_name "mContentResolver" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15439287 // mContentResolver (<unidirectional association>)
	  b parent class_ref 6924215 // ContentResolver
      end

      operation 78771895 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 6924215 // ContentResolver
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772023 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 6924215 // ContentResolver
	  param inout name "in" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772151 "parseRow"
	private explicit_return_type "void"
	nparams 1
	  param inout name "atts" explicit_type "Attributes"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772279 "insertRow"
	private return_type class_ref 6927159 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772407 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" explicit_type "String"
	  param inout name "localName" explicit_type "String"
	  param inout name "name" explicit_type "String"
	  param inout name "atts" explicit_type "Attributes"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772535 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" explicit_type "String"
	  param inout name "localName" explicit_type "String"
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772663 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772791 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78772919 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773047 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773175 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" explicit_type "String"
	  param inout name "data" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773303 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" explicit_type "Locator"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773431 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773559 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78773687 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" explicit_type "String"
	  param inout name "uri" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7103287 "EventLogTags"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      operation 78774583 "EventLogTags"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 24552119 "CONTENT_QUERY_SAMPLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 52002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " don't instantiate
 52002 content_query_sample (uri|3),(projection|3),(selection|3),(sortorder|3),(time|1|3),(blocking_package|3),(sample_percent|1|6) 
"
      end

      attribute 24552247 "CONTENT_UPDATE_SAMPLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 52003"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 52003 content_update_sample (uri|3),(operation|3),(selection|3),(time|1|3),(blocking_package|3),(sample_percent|1|6) 
"
      end

      attribute 24552375 "BINDER_SAMPLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 52004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 52004 binder_sample (descriptor|3),(method_num|1|5),(time|1|3),(blocking_package|3),(sample_percent|1|6) 
"
      end

      operation 78774711 "writeContentQuerySample"
	class_operation public explicit_return_type "void"
	nparams 7
	  param inout name "uri" explicit_type "String"
	  param inout name "projection" explicit_type "String"
	  param inout name "selection" explicit_type "String"
	  param inout name "sortorder" explicit_type "String"
	  param in name "time" explicit_type "int"
	  param inout name "blockingPackage" explicit_type "String"
	  param in name "samplePercent" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78774839 "writeContentUpdateSample"
	class_operation public explicit_return_type "void"
	nparams 6
	  param inout name "uri" explicit_type "String"
	  param inout name "operation" explicit_type "String"
	  param inout name "selection" explicit_type "String"
	  param in name "time" explicit_type "int"
	  param inout name "blockingPackage" explicit_type "String"
	  param in name "samplePercent" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78774967 "writeBinderSample"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "descriptor" explicit_type "String"
	  param in name "methodNum" explicit_type "int"
	  param in name "time" explicit_type "int"
	  param inout name "blockingPackage" explicit_type "String"
	  param in name "samplePercent" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7103927 "ISyncStatusObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      classrelation 15490999 // <generalisation>
	relation 15490999 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15490999 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7106999 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15491127 // <generalisation>
	  relation 15491127 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15491127 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15491255 // <realization>
	  relation 15491255 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15491255 // <realization>
	    b parent class_ref 7103927 // ISyncStatusObserver
	end

	operation 78831031 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78831159 "asInterface"
	  class_operation public return_type class_ref 7103927 // ISyncStatusObserver
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.ISyncStatusObserver interface,
generating a proxy if needed.
"
	end

	operation 78831287 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78831415 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7107127 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15491511 // <realization>
	    relation 15491511 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15491511 // <realization>
	      b parent class_ref 7103927 // ISyncStatusObserver
	  end

	  classrelation 15491639 // mRemote (<unidirectional association>)
	    relation 15491639 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15491639 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78831543 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78831671 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78831799 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78831927 "onStatusChanged"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "which" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24570807 "TRANSACTION_onStatusChanged"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78832055 "onStatusChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "which" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7105975 "IRestrictionsManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface used by the RestrictionsManager
@hide
"
      classrelation 15488695 // <generalisation>
	relation 15488695 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15488695 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7106103 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15488823 // <generalisation>
	  relation 15488823 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15488823 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15488951 // <realization>
	  relation 15488951 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15488951 // <realization>
	    b parent class_ref 7105975 // IRestrictionsManager
	end

	operation 78826039 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78826167 "asInterface"
	  class_operation public return_type class_ref 7105975 // IRestrictionsManager
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.IRestrictionsManager interface,
generating a proxy if needed.
"
	end

	operation 78826295 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78826423 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7106231 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15489207 // <realization>
	    relation 15489207 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15489207 // <realization>
	      b parent class_ref 7105975 // IRestrictionsManager
	  end

	  classrelation 15489335 // mRemote (<unidirectional association>)
	    relation 15489335 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15489335 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78826551 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78826679 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78826807 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78826935 "getApplicationRestrictions"
	    public return_type class_ref 6925879 // Bundle
	    nparams 1
	      param inout name "packageName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78827063 "hasRestrictionsProvider"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78827191 "requestPermission"
	    public explicit_return_type "void"
	    nparams 4
	      param inout name "packageName" explicit_type "String"
	      param inout name "requestType" explicit_type "String"
	      param inout name "requestId" explicit_type "String"
	      param inout name "requestData" type class_ref 6955319 // PersistableBundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78827319 "notifyPermissionResponse"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "packageName" explicit_type "String"
	      param inout name "response" type class_ref 6955319 // PersistableBundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78827447 "createLocalApprovalIntent"
	    public return_type class_ref 6925623 // Intent
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24569655 "TRANSACTION_getApplicationRestrictions"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24569783 "TRANSACTION_hasRestrictionsProvider"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24569911 "TRANSACTION_requestPermission"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24570039 "TRANSACTION_notifyPermissionResponse"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24570167 "TRANSACTION_createLocalApprovalIntent"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78827575 "getApplicationRestrictions"
	public return_type class_ref 6925879 // Bundle
	nparams 1
	  param inout name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78827703 "hasRestrictionsProvider"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78827831 "requestPermission"
	public explicit_return_type "void"
	nparams 4
	  param inout name "packageName" explicit_type "String"
	  param inout name "requestType" explicit_type "String"
	  param inout name "requestId" explicit_type "String"
	  param inout name "requestData" type class_ref 6955319 // PersistableBundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78827959 "notifyPermissionResponse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "response" type class_ref 6955319 // PersistableBundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78828087 "createLocalApprovalIntent"
	public return_type class_ref 6925623 // Intent
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7106615 "ISyncServiceAdapter"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface to define an anonymous service that is extended by developers
in order to perform anonymous syncs (syncs without an Account or Content
Provider specified). See {@link android.content.AbstractThreadedSyncAdapter}.
{@hide}
"
      classrelation 15490231 // <generalisation>
	relation 15490231 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15490231 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7106743 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15490359 // <generalisation>
	  relation 15490359 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15490359 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15490487 // <realization>
	  relation 15490487 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15490487 // <realization>
	    b parent class_ref 7106615 // ISyncServiceAdapter
	end

	operation 78829623 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78829751 "asInterface"
	  class_operation public return_type class_ref 7106615 // ISyncServiceAdapter
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.content.ISyncServiceAdapter interface,
generating a proxy if needed.
"
	end

	operation 78829879 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78830007 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7106871 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15490743 // <realization>
	    relation 15490743 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15490743 // <realization>
	      b parent class_ref 7106615 // ISyncServiceAdapter
	  end

	  classrelation 15490871 // mRemote (<unidirectional association>)
	    relation 15490871 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15490871 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78830135 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78830263 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78830391 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78830519 "startSync"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "syncContext" type class_ref 7098167 // ISyncContext
	      param inout name "extras" type class_ref 6925879 // Bundle
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Initiate a sync. SyncAdapter-specific parameters may be specified in
extras, which is guaranteed to not be null.

@param syncContext the ISyncContext used to indicate the progress of the sync. When
  the sync is finished (successfully or not) ISyncContext.onFinished() must be called.
@param extras SyncAdapter-specific parameters.

"
	  end

	  operation 78830647 "cancelSync"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "syncContext" type class_ref 7098167 // ISyncContext
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Cancel the currently ongoing sync.
"
	  end
	end

	attribute 24570551 "TRANSACTION_startSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24570679 "TRANSACTION_cancelSync"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78830775 "startSync"
	public explicit_return_type "void"
	nparams 2
	  param inout name "syncContext" type class_ref 7098167 // ISyncContext
	  param inout name "extras" type class_ref 6925879 // Bundle
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiate a sync. SyncAdapter-specific parameters may be specified in
extras, which is guaranteed to not be null.

@param syncContext the ISyncContext used to indicate the progress of the sync. When
  the sync is finished (successfully or not) ISyncContext.onFinished() must be called.
@param extras SyncAdapter-specific parameters.

"
      end

      operation 78830903 "cancelSync"
	public explicit_return_type "void"
	nparams 1
	  param inout name "syncContext" type class_ref 7098167 // ISyncContext
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel the currently ongoing sync.
"
      end
    end

    class 7107255 "MutableContextWrapper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Special version of {@link ContextWrapper} that allows the base context to
be modified after it is initially set.
"
      classrelation 15491767 // <generalisation>
	relation 15491767 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15491767 // <generalisation>
	  b parent class_ref 6923575 // ContextWrapper
      end

      operation 78832183 "MutableContextWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "base" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78832311 "setBaseContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "base" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the base context for this ContextWrapper. All calls will then be
delegated to the base context.  Unlike ContextWrapper, the base context
can be changed even after one is already set.

@param base The new base context for this wrapper.
"
      end
    end

    class 7107383 "ReceiverCallNotAllowedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown from {@link Context#registerReceiver} and
{@link Context#bindService} when these methods are being used from
an {@link BroadcastReceiver} component.  In this case, the component will no
longer be active upon returning from receiving the Intent, so it is
not valid to use asynchronous APIs.
"
      classrelation 15492663 // <generalisation>
	relation 15492663 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15492663 // <generalisation>
	  b parent class_ref 6992823 // AndroidRuntimeException
      end

      operation 78834487 "ReceiverCallNotAllowedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7107511 "RestrictionEntry"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Applications can expose restrictions for a restricted user on a
multiuser device. The administrator can configure these restrictions that will then be
applied to the restricted user. Each RestrictionsEntry is one configurable restriction.
<p/>
Any application that chooses to expose such restrictions does so by implementing a
receiver that handles the {@link Intent#ACTION_GET_RESTRICTION_ENTRIES} action.
The receiver then returns a result bundle that contains an entry called \"restrictions\", whose
value is an ArrayList<RestrictionsEntry>.
"
      classrelation 15492791 // <realization>
	relation 15492791 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15492791 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24571319 "TYPE_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hidden restriction type. Use this type for information that needs to be transferred
across but shouldn't be presented to the user in the UI. Stores a single String value.

"
      end

      attribute 24571447 "TYPE_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"bool\". Use this for storing a boolean value, typically presented as
a checkbox in the UI.

"
      end

      attribute 24571575 "TYPE_CHOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"choice\". Use this for storing a string value, typically presented as
a single-select list. Call {@link #setChoiceEntries(String[])} and
{@link #setChoiceValues(String[])} to set the localized list entries to present to the user
and the corresponding values, respectively.

"
      end

      attribute 24571703 "TYPE_CHOICE_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Internal restriction type. Use this for storing a string value, typically presented as
a single-select list. Call {@link #setChoiceEntries(String[])} and
{@link #setChoiceValues(String[])} to set the localized list entries to present to the user
and the corresponding values, respectively.
The presentation could imply that values in lower array indices are included when a
particular value is chosen.
@hide

"
      end

      attribute 24571831 "TYPE_MULTI_SELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"multi-select\". Use this for presenting a multi-select list where more
than one entry can be selected, such as for choosing specific titles to white-list.
Call {@link #setChoiceEntries(String[])} and
{@link #setChoiceValues(String[])} to set the localized list entries to present to the user
and the corresponding values, respectively.
Use {@link #getAllSelectedStrings()} and {@link #setAllSelectedStrings(String[])} to
manipulate the selections.

"
      end

      attribute 24571959 "TYPE_INTEGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"integer\". Use this for storing an integer value. The range of values
is from {@link Integer#MIN_VALUE} to {@link Integer#MAX_VALUE}.

"
      end

      attribute 24572087 "TYPE_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"string\". Use this for storing a string value.
@see #setSelectedString
@see #getSelectedString

"
      end

      attribute 24572215 "TYPE_BUNDLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"bundle\". Use this for storing {@link android.os.Bundle bundles} of
restrictions

"
      end

      attribute 24572343 "TYPE_BUNDLE_ARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Restriction of type \"bundle_array\". Use this for storing arrays of
{@link android.os.Bundle bundles} of restrictions

"
      end

      attribute 24572471 "mType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The type of restriction. 
"
      end

      classrelation 15493815 // mRestrictions (<unidirectional association>)
	relation 15493815 --->
	  a role_name "mRestrictions" multiplicity "[]" private
	    comment "
List of nested restrictions. Used by {@link #TYPE_BUNDLE bundle} and
{@link #TYPE_BUNDLE_ARRAY bundle_array} restrictions.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 15493815 // mRestrictions (<unidirectional association>)
	  b parent class_ref 7107511 // RestrictionEntry
      end

      operation 78834615 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for specifying the type and key, with no initial value;

@param type the restriction type.
@param key the unique key for this restriction
"
      end

      operation 78834743 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "selectedString" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_CHOICE} type.
@param key the unique key for this restriction
@param selectedString the current value
"
      end

      operation 78834871 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "selectedState" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_BOOLEAN} type.
@param key the unique key for this restriction
@param selectedState whether this restriction is selected or not
"
      end

      operation 78834999 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "selectedStrings" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_MULTI_SELECT} type.
@param key the unique key for this restriction
@param selectedStrings the list of values that are currently selected
"
      end

      operation 78835127 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" explicit_type "String"
	  param in name "selectedInt" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_INTEGER} type.
@param key the unique key for this restriction
@param selectedInt the integer value of the restriction
"
      end

      operation 78835255 "RestrictionEntry"
	private explicit_return_type ""
	nparams 3
	  param inout name "key" explicit_type "String"
	  param inout name "restrictionEntries" type class_ref 7107511 // RestrictionEntry
	multiplicity "[]"
	  param inout name "isBundleArray" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_BUNDLE}/{@link #TYPE_BUNDLE_ARRAY} type.
@param key the unique key for this restriction
@param restrictionEntries array of nested restriction entries. If the entry, being created
represents a {@link #TYPE_BUNDLE_ARRAY bundle-array}, {@code restrictionEntries} array may
only contain elements of type {@link #TYPE_BUNDLE bundle}.
@param isBundleArray true if this restriction represents
{@link #TYPE_BUNDLE_ARRAY bundle-array} type, otherwise the type will be set to
{@link #TYPE_BUNDLE bundle}.
"
      end

      operation 78835383 "createBundleEntry"
	class_operation public return_type class_ref 7107511 // RestrictionEntry
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "restrictionEntries" type class_ref 7107511 // RestrictionEntry
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an entry of type {@link #TYPE_BUNDLE}.
@param key the unique key for this restriction
@param restrictionEntries array of nested restriction entries.
@return the newly created restriction
"
      end

      operation 78835511 "createBundleArrayEntry"
	class_operation public return_type class_ref 7107511 // RestrictionEntry
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "restrictionEntries" type class_ref 7107511 // RestrictionEntry
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an entry of type {@link #TYPE_BUNDLE_ARRAY}.
@param key the unique key for this restriction
@param restrictionEntries array of nested restriction entries. The array may only contain
elements of type {@link #TYPE_BUNDLE bundle}.
@return the newly created restriction
"
      end

      operation 78835639 "setType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type for this restriction.
@param type the type for this restriction.
"
      end

      operation 78835767 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type for this restriction.
@return the type for this restriction
"
      end

      operation 78835895 "getSelectedString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently selected string value.
@return the currently selected value, which can be null for types that aren't for holding
single string values.
"
      end

      operation 78836023 "getAllSelectedStrings"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of currently selected values.
@return the list of current selections, if type is {@link #TYPE_MULTI_SELECT},
 null otherwise.
"
      end

      operation 78836151 "getSelectedState"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current selected state for an entry of type {@link #TYPE_BOOLEAN}.
@return the current selected state of the entry.
"
      end

      operation 78836279 "getIntValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the entry as an integer when the type is {@link #TYPE_INTEGER}.
@return the integer value of the entry.
"
      end

      operation 78836407 "setIntValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the integer value of the entry when the type is {@link #TYPE_INTEGER}.
@param value the integer value to set.
"
      end

      operation 78836535 "setSelectedString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selectedString" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the string value to use as the selected value for this restriction. This value will
be persisted by the system for later use by the application.
@param selectedString the string value to select.
"
      end

      operation 78836663 "setSelectedState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current selected state for an entry of type {@link #TYPE_BOOLEAN}. This value will
be persisted by the system for later use by the application.
@param state the current selected state
"
      end

      operation 78836791 "setAllSelectedStrings"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allSelectedStrings" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current list of selected values for an entry of type {@link #TYPE_MULTI_SELECT}.
These values will be persisted by the system for later use by the application.
@param allSelectedStrings the current list of selected values.
"
      end

      operation 78836919 "setChoiceValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "choiceValues" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a list of string values that can be selected by the user. If no user-visible entries
are set by a call to {@link #setChoiceEntries(String[])}, these values will be the ones
shown to the user. Values will be chosen from this list as the user's selection and the
selected values can be retrieved by a call to {@link #getAllSelectedStrings()}, or
{@link #getSelectedString()}, depending on whether it is a multi-select type or choice type.
This method is not relevant for types other than
{@link #TYPE_CHOICE}, and {@link #TYPE_MULTI_SELECT}.
@param choiceValues an array of Strings which will be the selected values for the user's
selections.
@see #getChoiceValues()
@see #getAllSelectedStrings()
"
      end

      operation 78837047 "setChoiceValues"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "stringArrayResId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @ArrayRes ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a list of string values that can be selected by the user, similar to
{@link #setChoiceValues(String[])}.
@param context the application context for retrieving the resources.
@param stringArrayResId the resource id for a string array containing the possible values.
@see #setChoiceValues(String[])
"
      end

      operation 78837175 "getRestrictions"
	public return_type class_ref 7107511 // RestrictionEntry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns array of possible restriction entries that this entry may contain.
"
      end

      operation 78837303 "setRestrictions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "restrictions" type class_ref 7107511 // RestrictionEntry
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an array of possible restriction entries, that this entry may contain.
<p>This method is only relevant for types {@link #TYPE_BUNDLE} and
{@link #TYPE_BUNDLE_ARRAY}
"
      end

      operation 78837431 "getChoiceValues"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of possible string values set earlier.
@return the list of possible values.
"
      end

      operation 78837559 "setChoiceEntries"
	public explicit_return_type "void"
	nparams 1
	  param inout name "choiceEntries" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a list of strings that will be presented as choices to the user. When the
user selects one or more of these choices, the corresponding value from the possible values
are stored as the selected strings. The size of this array must match the size of the array
set in {@link #setChoiceValues(String[])}. This method is not relevant for types other
than {@link #TYPE_CHOICE}, and {@link #TYPE_MULTI_SELECT}.
@param choiceEntries the list of user-visible choices.
@see #setChoiceValues(String[])
"
      end

      operation 78837687 "setChoiceEntries"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "stringArrayResId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @ArrayRes ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets a list of strings that will be presented as choices to the user. This is similar to
{@link #setChoiceEntries(String[])}.
@param context the application context, used for retrieving the resources.
@param stringArrayResId the resource id of a string array containing the possible entries.
"
      end

      operation 78837815 "getChoiceEntries"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of strings, set earlier, that will be presented as choices to the user.
@return the list of choices presented to the user.
"
      end

      operation 78837943 "getDescription"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provided user-visible description of the entry, if any.
@return the user-visible description, null if none was set earlier.
"
      end

      operation 78838071 "setDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the user-visible description of the entry, as a possible sub-text for the title.
You can use this to describe the entry in more detail or to display the current state of
the restriction.
@param description the user-visible description string.
"
      end

      operation 78838199 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is the unique key for the restriction entry.
@return the key for the restriction.
"
      end

      operation 78838327 "getTitle"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user-visible title for the entry, if any.
@return the user-visible title for the entry, null if none was set earlier.
"
      end

      operation 78838455 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the user-visible title for the entry.
@param title the user-visible title for the entry.
"
      end

      operation 78838583 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78838711 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78838839 "RestrictionEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78838967 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78839095 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15493943 // CREATOR (<unidirectional association>)
	relation 15493943 --->
	  a role_name "CREATOR" init_value " new Creator<RestrictionEntry>() {
        public RestrictionEntry createFromParcel(Parcel source) {
            return new RestrictionEntry(source);
        }

        public RestrictionEntry[] newArray(int size) {
            return new RestrictionEntry[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestrictionEntry> ${name}${value};
"
	    classrelation_ref 15493943 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78839223 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7107639 "RestrictionsManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides a mechanism for apps to query restrictions imposed by an entity that
manages the user. Apps can also send permission requests to a local or remote
device administrator to override default app-specific restrictions or any other
operation that needs explicit authorization from the administrator.
<p>
Apps can expose a set of restrictions via an XML file specified in the manifest.
<p>
If the user has an active Restrictions Provider, dynamic requests can be made in
addition to the statically imposed restrictions. Dynamic requests are app-specific
and can be expressed via a predefined set of request types.
<p>
The RestrictionsManager forwards the dynamic requests to the active
Restrictions Provider. The Restrictions Provider can respond back to requests by calling
{@link #notifyPermissionResponse(String, PersistableBundle)}, when
a response is received from the administrator of the device or user.
The response is relayed back to the application via a protected broadcast,
{@link #ACTION_PERMISSION_RESPONSE_RECEIVED}.
<p>
Static restrictions are specified by an XML file referenced by a meta-data attribute
in the manifest. This enables applications as well as any web administration consoles
to be able to read the list of available restrictions from the apk.
<p>
The syntax of the XML format is as follows:
<pre>
&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;
&lt;restrictions xmlns:android=\"http://schemas.android.com/apk/res/android\" &gt;
    &lt;restriction
        android:key=\"string\"
        android:title=\"string resource\"
        android:restrictionType=[\"bool\" | \"string\" | \"integer\"
                                        | \"choice\" | \"multi-select\" | \"hidden\"
                                        | \"bundle\" | \"bundle_array\"]
        android:description=\"string resource\"
        android:entries=\"string-array resource\"
        android:entryValues=\"string-array resource\"
        android:defaultValue=\"reference\" &gt;
            &lt;restriction ... /&gt;
            ...
    &lt;/restriction&gt;
    &lt;restriction ... /&gt;
    ...
&lt;/restrictions&gt;
</pre>
<p>
The attributes for each restriction depend on the restriction type.
<p>
<ul>
<li><code>key</code>, <code>title</code> and <code>restrictionType</code> are mandatory.</li>
<li><code>entries</code> and <code>entryValues</code> are required if <code>restrictionType
</code> is <code>choice</code> or <code>multi-select</code>.</li>
<li><code>defaultValue</code> is optional and its type depends on the
<code>restrictionType</code></li>
<li><code>hidden</code> type must have a <code>defaultValue</code> and will
not be shown to the administrator. It can be used to pass along data that cannot be modified,
such as a version code.</li>
<li><code>description</code> is meant to describe the restriction in more detail to the
administrator controlling the values, if the title is not sufficient.</li>
</ul>
<p>
Only restrictions of type {@code bundle} and {@code bundle_array} can have one or multiple nested
restriction elements.
<p>
In your manifest's <code>application</code> section, add the meta-data tag to point to
the restrictions XML file as shown below:
<pre>
&lt;application ... &gt;
    &lt;meta-data android:name=\"android.content.APP_RESTRICTIONS\"
                  android:resource=\"@xml/app_restrictions\" /&gt;
    ...
&lt;/application&gt;
</pre>

@see RestrictionEntry
@see RestrictionsReceiver
@see DevicePolicyManager#setRestrictionsProvider(ComponentName, ComponentName)
@see DevicePolicyManager#setApplicationRestrictions(ComponentName, String, Bundle)
"
      attribute 24572599 "RESULT_APPROVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Response result value indicating that the request was approved.

"
      end

      attribute 24572727 "RESULT_DENIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Response result value indicating that the request was denied.

"
      end

      attribute 24572855 "RESULT_NO_RESPONSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Response result value indicating that the request has not received a response yet.

"
      end

      attribute 24572983 "RESULT_UNKNOWN_REQUEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Response result value indicating that the request is unknown, when it's not a new
request.

"
      end

      attribute 24573111 "RESULT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Response result value indicating an error condition. Additional error code might be available
in the response bundle, for the key {@link #RESPONSE_KEY_ERROR_CODE}. There might also be
an associated error message in the response bundle, for the key
{@link #RESPONSE_KEY_MESSAGE}.

"
      end

      attribute 24573239 "RESULT_ERROR_BAD_REQUEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Error code indicating that there was a problem with the request.
<p>
Stored in {@link #RESPONSE_KEY_ERROR_CODE} field in the response bundle.

"
      end

      attribute 24573367 "RESULT_ERROR_NETWORK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Error code indicating that there was a problem with the network.
<p>
Stored in {@link #RESPONSE_KEY_ERROR_CODE} field in the response bundle.

"
      end

      attribute 24573495 "RESULT_ERROR_INTERNAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Error code indicating that there was an internal error.
<p>
Stored in {@link #RESPONSE_KEY_ERROR_CODE} field in the response bundle.

"
      end

      classrelation 15497143 // mContext (<unidirectional association>)
	relation 15497143 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15497143 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      classrelation 15497271 // mService (<unidirectional association>)
	relation 15497271 --->
	  a role_name "mService" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15497271 // mService (<unidirectional association>)
	  b parent class_ref 7105975 // IRestrictionsManager
      end

      operation 78839351 "RestrictionsManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "service" type class_ref 7105975 // IRestrictionsManager
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 78839479 "getApplicationRestrictions"
	public return_type class_ref 6925879 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns any available set of application-specific restrictions applicable
to this application.
@return the application restrictions as a Bundle. Returns null if there
are no restrictions.
"
      end

      operation 78839607 "hasRestrictionsProvider"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by an application to check if there is an active Restrictions Provider. If
there isn't, {@link #requestPermission(String, String, PersistableBundle)} is not available.

@return whether there is an active Restrictions Provider.
"
      end

      operation 78839735 "requestPermission"
	public explicit_return_type "void"
	nparams 3
	  param inout name "requestType" explicit_type "String"
	  param inout name "requestId" explicit_type "String"
	  param inout name "request" type class_ref 6955319 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by an application to request permission for an operation. The contents of the
request are passed in a Bundle that contains several pieces of data depending on the
chosen request type.

@param requestType The type of request. The type could be one of the
predefined types specified here or a custom type that the specific
Restrictions Provider might understand. For custom types, the type name should be
namespaced to avoid collisions with predefined types and types specified by
other Restrictions Providers.
@param requestId A unique id generated by the app that contains sufficient information
to identify the parameters of the request when it receives the id in the response.
@param request A PersistableBundle containing the data corresponding to the specified request
type. The keys for the data in the bundle depend on the request type.

@throws IllegalArgumentException if any of the required parameters are missing.
"
      end

      operation 78839863 "createLocalApprovalIntent"
	public return_type class_ref 6925623 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78839991 "notifyPermissionResponse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "response" type class_ref 6955319 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the Restrictions Provider to deliver a response to an application.

@param packageName the application to deliver the response to. Cannot be null.
@param response the bundle containing the response status, request ID and other information.
                Cannot be null.

@throws IllegalArgumentException if any of the required parameters are missing.
"
      end

      operation 78840119 "getManifestRestrictions"
	public return_type class_ref 7107511 // RestrictionEntry
	nparams 1
	  param inout name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse and return the list of restrictions defined in the manifest for the specified
package, if any.

@param packageName The application for which to fetch the restrictions list.
@return The list of RestrictionEntry objects created from the XML file specified
in the manifest, or null if none was specified.
"
      end

      operation 78840247 "loadManifestRestrictions"
	private return_type class_ref 7107511 // RestrictionEntry
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "xml" type class_ref 7009591 // XmlResourceParser
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78840375 "loadRestrictionElement"
	private return_type class_ref 7107511 // RestrictionEntry
	nparams 2
	  param inout name "appContext" type class_ref 6923703 // Context
	  param inout name "xml" type class_ref 7009591 // XmlResourceParser
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "XmlPullParserException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78840503 "loadRestriction"
	private return_type class_ref 7107511 // RestrictionEntry
	nparams 3
	  param inout name "appContext" type class_ref 6923703 // Context
	  param inout name "a" type class_ref 6924727 // TypedArray
	  param inout name "xml" type class_ref 7009591 // XmlResourceParser
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "XmlPullParserException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78840631 "convertRestrictionsToBundle"
	class_operation public return_type class_ref 6925879 // Bundle
	nparams 1
	  param inout name "entries" explicit_type "List<RestrictionEntry>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a list of restrictions to the corresponding bundle, using the following mapping:
<table>
    <tr><th>RestrictionEntry</th><th>Bundle</th></tr>
    <tr><td>{@link RestrictionEntry#TYPE_BOOLEAN}</td><td>{@link Bundle#putBoolean}</td></tr>
    <tr><td>{@link RestrictionEntry#TYPE_CHOICE},
    {@link RestrictionEntry#TYPE_MULTI_SELECT}</td>
    <td>{@link Bundle#putStringArray}</td></tr>
    <tr><td>{@link RestrictionEntry#TYPE_INTEGER}</td><td>{@link Bundle#putInt}</td></tr>
    <tr><td>{@link RestrictionEntry#TYPE_STRING}</td><td>{@link Bundle#putString}</td></tr>
    <tr><td>{@link RestrictionEntry#TYPE_BUNDLE}</td><td>{@link Bundle#putBundle}</td></tr>
    <tr><td>{@link RestrictionEntry#TYPE_BUNDLE_ARRAY}</td>
    <td>{@link Bundle#putParcelableArray}</td></tr>
</table>
@param entries list of restrictions
"
      end

      operation 78840759 "addRestrictionToBundle"
	class_operation private return_type class_ref 6925879 // Bundle
	nparams 2
	  param inout name "bundle" type class_ref 6925879 // Bundle
	  param inout name "entry" type class_ref 7107511 // RestrictionEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7107767 "SearchRecentSuggestionsProvider"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This superclass can be used to create a simple search suggestions provider for your application.
It creates suggestions (as the user types) based on recent queries and/or recent views.

<p>In order to use this class, you must do the following.

<ul>
<li>Implement and test query search, as described in {@link android.app.SearchManager}.  (This
provider will send any suggested queries via the standard 
{@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} Intent, which you'll already
support once you have implemented and tested basic searchability.)</li>
<li>Create a Content Provider within your application by extending 
{@link android.content.SearchRecentSuggestionsProvider}.  The class you create will be
very simple - typically, it will have only a constructor.  But the constructor has a very 
important responsibility:  When it calls {@link #setupSuggestions(String, int)}, it
<i>configures</i> the provider to match the requirements of your searchable activity.</li>
<li>Create a manifest entry describing your provider.  Typically this would be as simple
as adding the following lines:
<pre class=\"prettyprint\">
    &lt;!-- Content provider for search suggestions --&gt;
    &lt;provider android:name=\"YourSuggestionProviderClass\"
              android:authorities=\"your.suggestion.authority\" /&gt;</pre>
</li>
<li>Please note that you <i>do not</i> instantiate this content provider directly from within
your code.  This is done automatically by the system Content Resolver, when the search dialog
looks for suggestions.</li>
<li>In order for the Content Resolver to do this, you must update your searchable activity's 
XML configuration file with information about your content provider.  The following additions 
are usually sufficient:
<pre class=\"prettyprint\">
    android:searchSuggestAuthority=\"your.suggestion.authority\"
    android:searchSuggestSelection=\" ? \"</pre>
</li>
<li>In your searchable activities, capture any user-generated queries and record them
for future searches by calling {@link android.provider.SearchRecentSuggestions#saveRecentQuery
SearchRecentSuggestions.saveRecentQuery()}.</li>
</ul>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about using search suggestions in your application, read the
<a href=\"{@docRoot}guide/topics/search/index.html\">Search</a> developer guide.</p>
</div>

@see android.provider.SearchRecentSuggestions
"
      classrelation 15497399 // <generalisation>
	relation 15497399 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15497399 // <generalisation>
	  b parent class_ref 6994743 // ContentProvider
      end

      attribute 24573623 "mMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24573751 "mTwoLineDisplay"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15497783 // mOpenHelper (<unidirectional association>)
	relation 15497783 --->
	  a role_name "mOpenHelper" private
	    comment " general database configuration and tables
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15497783 // mOpenHelper (<unidirectional association>)
	  b parent class_ref 7107895 // SQLiteOpenHelper
      end

      attribute 24573879 "DATABASE_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2 * 256"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Table of database versions.  Don't forget to update!
 NOTE:  These version values are shifted left 8 bits (x 256) in order to create space for
 a small set of mode bitflags in the version int.

 1      original implementation with queries, and 1 or 2 display columns
 1->2   added UNIQUE constraint to display1 column
"
      end

      attribute 24574007 "DATABASE_MODE_QUERIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This mode bit configures the database to record recent queries.  <i>required</i>

@see #setupSuggestions(String, int)

"
      end

      attribute 24574135 "DATABASE_MODE_2LINES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This mode bit configures the database to include a 2nd annotation line with each entry.
<i>optional</i>

@see #setupSuggestions(String, int)

"
      end

      attribute 24574263 "URI_MATCH_SUGGEST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Uri and query support
"
      end

      classrelation 15498423 // mSuggestionsUri (<unidirectional association>)
	relation 15498423 --->
	  a role_name "mSuggestionsUri" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15498423 // mSuggestionsUri (<unidirectional association>)
	  b parent class_ref 6927159 // Uri
      end

      classrelation 15498551 // mUriMatcher (<unidirectional association>)
	relation 15498551 --->
	  a role_name "mUriMatcher" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15498551 // mUriMatcher (<unidirectional association>)
	  b parent class_ref 7108023 // UriMatcher
      end

      class 7108151 "DatabaseHelper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15499703 // <generalisation>
	  relation 15499703 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15499703 // <generalisation>
	    b parent class_ref 7107895 // SQLiteOpenHelper
	end

	attribute 24574903 "mNewVersion"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78842551 "DatabaseHelper"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 6923703 // Context
	    param in name "newVersion" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78842679 "onCreate"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "db" type class_ref 6925239 // SQLiteDatabase
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78842807 "onUpgrade"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "db" type class_ref 6925239 // SQLiteDatabase
	    param in name "oldVersion" explicit_type "int"
	    param in name "newVersion" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 78842935 "setupSuggestions"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In order to use this class, you must extend it, and call this setup function from your
constructor.  In your application or activities, you must provide the same values when 
you create the {@link android.provider.SearchRecentSuggestions} helper.

@param authority This must match the authority that you've declared in your manifest.
@param mode You can use mode flags here to determine certain functional aspects of your
database.  Note, this value should not change from run to run, because when it does change,
your suggestions database may be wiped.

@see #DATABASE_MODE_QUERIES
@see #DATABASE_MODE_2LINES
"
      end

      operation 78843063 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.
"
      end

      operation 78843191 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.
"
      end

      operation 78843319 "insert"
	public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.
"
      end

      operation 78843447 "onCreate"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.
"
      end

      operation 78843575 "query"
	public return_type class_ref 6954295 // Cursor
	nparams 5
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "projection" explicit_type "String"
	multiplicity "[]"
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	  param inout name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.

 TODO: Confirm no injection attacks here, or rewrite."
      end

      operation 78843703 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 6927159 // Uri
	  param inout name "values" type class_ref 7016887 // ContentValues
	  param inout name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.
"
      end
    end

    class 7108023 "UriMatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class to aid in matching URIs in content providers.

<p>To use this class, build up a tree of <code>UriMatcher</code> objects.
For example:
<pre>
private static final int PEOPLE = 1;
private static final int PEOPLE_ID = 2;
private static final int PEOPLE_PHONES = 3;
private static final int PEOPLE_PHONES_ID = 4;
private static final int PEOPLE_CONTACTMETHODS = 7;
private static final int PEOPLE_CONTACTMETHODS_ID = 8;

private static final int DELETED_PEOPLE = 20;

private static final int PHONES = 9;
private static final int PHONES_ID = 10;
private static final int PHONES_FILTER = 14;

private static final int CONTACTMETHODS = 18;
private static final int CONTACTMETHODS_ID = 19;

private static final int CALLS = 11;
private static final int CALLS_ID = 12;
private static final int CALLS_FILTER = 15;

private static final UriMatcher sURIMatcher = new UriMatcher(UriMatcher.NO_MATCH);

static
{
sURIMatcher.addURI(\"contacts\", \"people\", PEOPLE);
sURIMatcher.addURI(\"contacts\", \"people/#\", PEOPLE_ID);
sURIMatcher.addURI(\"contacts\", \"people/#/phones\", PEOPLE_PHONES);
sURIMatcher.addURI(\"contacts\", \"people/#/phones/#\", PEOPLE_PHONES_ID);
sURIMatcher.addURI(\"contacts\", \"people/#/contact_methods\", PEOPLE_CONTACTMETHODS);
sURIMatcher.addURI(\"contacts\", \"people/#/contact_methods/#\", PEOPLE_CONTACTMETHODS_ID);
sURIMatcher.addURI(\"contacts\", \"deleted_people\", DELETED_PEOPLE);
sURIMatcher.addURI(\"contacts\", \"phones\", PHONES);
sURIMatcher.addURI(\"contacts\", \"phones/filter/*\", PHONES_FILTER);
sURIMatcher.addURI(\"contacts\", \"phones/#\", PHONES_ID);
sURIMatcher.addURI(\"contacts\", \"contact_methods\", CONTACTMETHODS);
sURIMatcher.addURI(\"contacts\", \"contact_methods/#\", CONTACTMETHODS_ID);
sURIMatcher.addURI(\"call_log\", \"calls\", CALLS);
sURIMatcher.addURI(\"call_log\", \"calls/filter/*\", CALLS_FILTER);
sURIMatcher.addURI(\"call_log\", \"calls/#\", CALLS_ID);
}
</pre>
<p>Starting from API level {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR2}, paths can start
with a leading slash.  For example:
<pre>
sURIMatcher.addURI(\"contacts\", \"/people\", PEOPLE);
</pre>
<p>Then when you need to match against a URI, call {@link #match}, providing
the URL that you have been given.  You can use the result to build a query,
return a type, insert or delete a row, or whatever you need, without duplicating
all of the if-else logic that you would otherwise need.  For example:
<pre>
public String getType(Uri url)
{
int match = sURIMatcher.match(url);
switch (match)
{
case PEOPLE:
return \"vnd.android.cursor.dir/person\";
case PEOPLE_ID:
return \"vnd.android.cursor.item/person\";
... snip ...
return \"vnd.android.cursor.dir/snail-mail\";
case PEOPLE_ADDRESS_ID:
return \"vnd.android.cursor.item/snail-mail\";
default:
return null;
}
}
</pre>
instead of:
<pre>
public String getType(Uri url)
{
List<String> pathSegments = url.getPathSegments();
if (pathSegments.size() >= 2) {
if (\"people\".equals(pathSegments.get(1))) {
if (pathSegments.size() == 2) {
return \"vnd.android.cursor.dir/person\";
} else if (pathSegments.size() == 3) {
return \"vnd.android.cursor.item/person\";
... snip ...
return \"vnd.android.cursor.dir/snail-mail\";
} else if (pathSegments.size() == 3) {
return \"vnd.android.cursor.item/snail-mail\";
}
}
}
return null;
}
</pre>
"
      attribute 24591799 "NO_MATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78882615 "UriMatcher"
	public explicit_return_type ""
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the root node of the URI tree.

@param code the code to match for the root URI
"
      end

      operation 78882743 "UriMatcher"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78882871 "addURI"
	public explicit_return_type "void"
	nparams 3
	  param inout name "authority" explicit_type "String"
	  param inout name "path" explicit_type "String"
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a URI to match, and the code to return when this URI is
matched. URI nodes may be exact match string, the token \"*\"
that matches any text, or the token \"#\" that matches only
numbers.
<p>
Starting from API level {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR2},
this method will accept a leading slash in the path.

@param authority the authority to match
@param path the path to match. * may be used as a wild card for
any text, and # may be used as a wild card for numbers.
@param code the code that is returned when a URI is matched
against the given components. Must be positive.
"
      end

      operation 78882999 "match"
	public explicit_return_type "int"
	nparams 1
	  param inout name "uri" type class_ref 6927159 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to match against the path in a url.

@param uri       The url whose path we will match against.

@return  The code for the matched node (added using addURI), 
or -1 if there is no matched node.
"
      end

      attribute 24591927 "EXACT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24592055 "NUMBER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24592183 "TEXT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24592311 "mCode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24592439 "mWhich"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15511095 // mChildren (<unidirectional association>)
	relation 15511095 --->
	  stereotype "ArrayList"
	  a role_name "mChildren" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15511095 // mChildren (<unidirectional association>)
	  b parent class_ref 7108023 // UriMatcher
      end
    end

    class 7108279 "SyncActivityTooManyDeletes"
      visibility public 
      nactuals 1
      actual class class_ref 7005623 // AdapterView
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Presents multiple options for handling the case where a sync was aborted because there
were too many pending deletes. One option is to force the delete, another is to rollback
the deletes, the third is to do nothing.
@hide
"
      classrelation 15499831 // <generalisation>
	relation 15499831 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15499831 // <generalisation>
	  b parent class_ref 6936247 // Activity
      end

      classrelation 15501623 // <realization>
	relation 15501623 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15501623 // <realization>
	  b parent class_ref 7035191 // OnItemClickListener
      end

      attribute 24580535 "mNumDeletes"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15501751 // mAccount (<unidirectional association>)
	relation 15501751 --->
	  a role_name "mAccount" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15501751 // mAccount (<unidirectional association>)
	  b parent class_ref 6935607 // Account
      end

      operation 78857271 "onCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78857399 "onItemClick"
	public explicit_return_type "void"
	nparams 4
	  param inout name "parent" type class_ref 7005623 // AdapterView
	  param inout name "view" type class_ref 6937143 // View
	  param in name "position" explicit_type "int"
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78857527 "startSyncReallyDelete"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78857655 "startSyncUndoDeletes"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7108919 "SyncAdaptersCache"
      visibility public 
      nactuals 1
      actual class class_ref 7109047 // RegisteredServicesCache
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A cache of services that export the {@link android.content.ISyncAdapter} interface.
@hide
"
      classrelation 15504311 // <realization>
	relation 15504311 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15504311 // <realization>
	  b parent class_ref 7109047 // RegisteredServicesCache
      end

      class 7109815 "MySerializer"
	visibility package 
	nactuals 1
	actual class class_ref 7109175 // XmlSerializerAndParser
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15505207 // <realization>
	  relation 15505207 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15505207 // <realization>
	    b parent class_ref 7109175 // XmlSerializerAndParser
	end

	operation 78862775 "writeAsXml"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "item" type class_ref 7017655 // SyncAdapterType
	    param inout name "out" explicit_type "XmlSerializer"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78862903 "createFromXml"
	  public return_type class_ref 7017655 // SyncAdapterType
	  nparams 1
	    param inout name "parser" explicit_type "XmlPullParser"
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15504951 // sSerializer (<unidirectional association>)
	relation 15504951 --->
	  a role_name "sSerializer" init_value " new MySerializer()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15504951 // sSerializer (<unidirectional association>)
	  b parent class_ref 7109815 // MySerializer
      end

      classrelation 15505079 // mAuthorityToSyncAdapters (<unidirectional association>)
	relation 15505079 --->
	  a role_name "mAuthorityToSyncAdapters" init_value " new SparseArray<>()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ArrayMap<String,String[]>> ${name}${value};
"
	    java_annotation "@GuardedBy(\"mServicesLock\")
"
	    classrelation_ref 15505079 // mAuthorityToSyncAdapters (<unidirectional association>)
	  b parent class_ref 6929975 // SparseArray
      end

      operation 78861879 "SyncAdaptersCache"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78862007 "parseServiceAttributes"
	public return_type class_ref 7017655 // SyncAdapterType
	nparams 3
	  param inout name "res" type class_ref 6923959 // Resources
	  param inout name "packageName" explicit_type "String"
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78862135 "onServicesChangedLocked"
	protected explicit_return_type "void"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78862263 "getSyncAdapterPackagesForAuthority"
	public explicit_return_type "String"
	nparams 2
	  param inout name "authority" explicit_type "String"
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78862391 "onUserRemoved"
	protected explicit_return_type "void"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7110071 "SyncStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to record various statistics about the result of a sync operation. The SyncManager
gets access to these via a {@link SyncResult} and uses some of them to determine the
disposition of the sync. See {@link SyncResult} for further dicussion on how the
SyncManager uses these values.
"
      classrelation 15508535 // <realization>
	relation 15508535 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15508535 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24586295 "numAuthExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SyncAdapter was unable to authenticate the {@link android.accounts.Account}
that was specified in the request. The user needs to take some action to resolve
before a future request can expect to succeed. This is considered a hard error.

"
      end

      attribute 24586423 "numIoExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SyncAdapter had a problem, most likely with the network connectivity or a timeout
while waiting for a network response. The request may succeed if it is tried again
later. This is considered a soft error.

"
      end

      attribute 24586551 "numParseExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SyncAdapter had a problem with the data it received from the server or the storage
later. This problem will likely repeat if the request is tried again. The problem
will need to be cleared up by either the server or the storage layer (likely with help
from the user). If the SyncAdapter cleans up the data itself then it typically won't
increment this value although it may still do so in order to record that it had to
perform some cleanup. E.g., if the SyncAdapter received a bad entry from the server
when processing a feed of entries, it may choose to drop the entry and thus make
progress and still increment this value just so the SyncAdapter can record that an
error occurred. This is considered a hard error.

"
      end

      attribute 24586679 "numConflictDetectedExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SyncAdapter detected that there was an unrecoverable version conflict when it
attempted to update or delete a version of a resource on the server. This is expected
to clear itself automatically once the new state is retrieved from the server,
though it may remain until the user intervenes manually, perhaps by clearing the
local storage and starting over frmo scratch. This is considered a hard error.

"
      end

      attribute 24586807 "numInserts"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Counter for tracking how many inserts were performed by the sync operation, as defined
by the SyncAdapter.

"
      end

      attribute 24586935 "numUpdates"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Counter for tracking how many updates were performed by the sync operation, as defined
by the SyncAdapter.

"
      end

      attribute 24587063 "numDeletes"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Counter for tracking how many deletes were performed by the sync operation, as defined
by the SyncAdapter.

"
      end

      attribute 24587191 "numEntries"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Counter for tracking how many entries were affected by the sync operation, as defined
by the SyncAdapter.

"
      end

      attribute 24587319 "numSkippedEntries"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Counter for tracking how many entries, either from the server or the local store, were
ignored during the sync operation. This could happen if the SyncAdapter detected some
unparsable data but decided to skip it and move on rather than failing immediately.

"
      end

      operation 78871095 "SyncStats"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78871223 "SyncStats"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78871351 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78871479 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all the counters to 0.
"
      end

      operation 78871607 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78871735 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15508663 // CREATOR (<unidirectional association>)
	relation 15508663 --->
	  a role_name "CREATOR" init_value " new Creator<SyncStats>() {
        public SyncStats createFromParcel(Parcel in) {
            return new SyncStats(in);
        }

        public SyncStats[] newArray(int size) {
            return new SyncStats[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncStats> ${name}${value};
"
	    classrelation_ref 15508663 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 7110199 "UndoManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Top-level class for managing and interacting with the global undo state for
a document or application.  This class supports both undo and redo and has
helpers for merging undoable operations together as they are performed.

<p>A single undoable operation is represented by {@link UndoOperation} which
apps implement to define their undo/redo behavior.  The UndoManager keeps
a stack of undo states; each state can have one or more undo operations
inside of it.</p>

<p>Updates to the stack must be done inside of a {@link #beginUpdate}/{@link #endUpdate()}
pair.  During this time you can add new operations to the stack with
{@link #addOperation}, retrieve and modify existing operations with
{@link #getLastOperation}, control the label shown to the user for this operation
with {@link #setUndoLabel} and {@link #suggestUndoLabel}, etc.</p>

<p>Every {link UndoOperation} is associated with an {@link UndoOwner}, which identifies
the data it belongs to.  The owner is used to indicate how operations are dependent
on each other -- operations with the same owner are dependent on others with the
same owner.  For example, you may have a document with multiple embedded objects.  If the
document itself and each embedded object use different owners, then you
can provide undo semantics appropriate to the user's context: while within
an embedded object, only edits to that object are seen and the user can
undo/redo them without needing to impact edits in other objects; while
within the larger document, all edits can be seen and the user must
undo/redo them as a single stream.</p>

@hide
"
      classrelation 15509303 // mOwners (<unidirectional association>)
	relation 15509303 --->
	  a role_name "mOwners" init_value "
            new ArrayMap<String, UndoOwner>(1 /* capacity */)" const_relation private
	    comment " The common case is a single undo owner (e.g. for a TextView), so default to that capacity.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, UndoOwner> ${name}${value};
"
	    classrelation_ref 15509303 // mOwners (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      class 7110327 "UndoState"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15509943 // mManager (<unidirectional association>)
	  relation 15509943 --->
	    a role_name "mManager" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15509943 // mManager (<unidirectional association>)
	    b parent class_ref 7110199 // UndoManager
	end

	attribute 24590903 "mCommitId"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15510071 // mOperations (<unidirectional association>)
	  relation 15510071 --->
	    stereotype "ArrayList"
	    a role_name "mOperations" init_value " new ArrayList<UndoOperation<?>>()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<?>> ${name}${value};
"
	      classrelation_ref 15510071 // mOperations (<unidirectional association>)
	    b parent class_ref 7110583 // UndoOperation
	end

	classrelation 15510199 // mRecent (<unidirectional association>)
	  relation 15510199 --->
	    stereotype "ArrayList"
	    a role_name "mRecent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<?>> ${name}${value};
"
	      classrelation_ref 15510199 // mRecent (<unidirectional association>)
	    b parent class_ref 7110583 // UndoOperation
	end

	attribute 24591031 "mLabel"
	  private explicit_type "CharSequence"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24591159 "mCanMerge"
	  private explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24591287 "mExecuted"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78878007 "UndoState"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "manager" type class_ref 7110199 // UndoManager
	    param in name "commitId" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878135 "UndoState"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "manager" type class_ref 7110199 // UndoManager
	    param inout name "p" type class_ref 6931895 // Parcel
	    param inout name "loader" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878263 "writeToParcel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "p" type class_ref 6931895 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878391 "getCommitId"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878519 "setLabel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "label" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878647 "updateLabel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "label" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878775 "getLabel"
	  package explicit_return_type "CharSequence"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78878903 "setCanMerge"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "state" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879031 "makeExecuted"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879159 "canMerge"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879287 "countOperations"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879415 "hasOperation"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "owner" type class_ref 7110455 // UndoOwner
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879543 "hasMultipleOwners"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879671 "addOperation"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "op" type class_ref 7110583 // UndoOperation
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879799 "getLastOperation"
	  package explicit_return_type "T"
	  nparams 2
	    param inout name "clazz" explicit_type "Class"
	    param inout name "owner" type class_ref 7110455 // UndoOwner
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends UndoOperation> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78879927 "matchOwner"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "owner" type class_ref 7110455 // UndoOwner
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78880055 "hasData"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78880183 "commit"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78880311 "undo"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78880439 "redo"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78880567 "destroy"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15509431 // mUndos (<unidirectional association>)
	relation 15509431 --->
	  stereotype "ArrayList"
	  a role_name "mUndos" init_value " new ArrayList<UndoState>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15509431 // mUndos (<unidirectional association>)
	  b parent class_ref 7110327 // UndoState
      end

      classrelation 15509559 // mRedos (<unidirectional association>)
	relation 15509559 --->
	  stereotype "ArrayList"
	  a role_name "mRedos" init_value " new ArrayList<UndoState>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15509559 // mRedos (<unidirectional association>)
	  b parent class_ref 7110327 // UndoState
      end

      attribute 24589623 "mUpdateCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24589751 "mHistorySize"
	private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15509687 // mWorking (<unidirectional association>)
	relation 15509687 --->
	  a role_name "mWorking" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15509687 // mWorking (<unidirectional association>)
	  b parent class_ref 7110327 // UndoState
      end

      attribute 24589879 "mCommitId"
	private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24590007 "mInUndo"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24590135 "mMerged"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24590263 "mStateSeq"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24590391 "mNextSavedIdx"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15509815 // mStateOwners (<unidirectional association>)
	relation 15509815 --->
	  a role_name "mStateOwners" multiplicity "[]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 15509815 // mStateOwners (<unidirectional association>)
	  b parent class_ref 7110455 // UndoOwner
      end

      attribute 24590519 "MERGE_MODE_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Never merge with the last undo state.

"
      end

      attribute 24590647 "MERGE_MODE_UNIQUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Allow merge with the last undo state only if it contains
operations with the caller's owner.

"
      end

      attribute 24590775 "MERGE_MODE_ANY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Always allow merge with the last undo state, if possible.

"
      end

      operation 78873271 "getOwner"
	public return_type class_ref 7110455 // UndoOwner
	nparams 2
	  param inout name "tag" explicit_type "String"
	  param inout name "data" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78873399 "removeOwner"
	package explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78873527 "saveInstanceState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten the current undo state into a Parcel object, which can later be restored
with {@link #restoreInstanceState(android.os.Parcel, java.lang.ClassLoader)}.
"
      end

      operation 78873655 "saveOwner"
	package explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	  param inout name "out" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78873783 "restoreInstanceState"
	public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 6931895 // Parcel
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore an undo state previously created with {@link #saveInstanceState(Parcel)}.  This
will restore the UndoManager's state to almost exactly what it was at the point it had
been previously saved; the only information not restored is the data object
associated with each {@link UndoOwner}, which requires separate calls to
{@link #getOwner(String, Object)} to re-associate the owner with its data.
"
      end

      operation 78873911 "restoreOwner"
	package return_type class_ref 7110455 // UndoOwner
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78874039 "setHistorySize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the maximum number of undo states that will be retained.
"
      end

      operation 78874167 "getHistorySize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current maximum number of undo states.
"
      end

      operation 78874295 "undo"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform undo of last/top <var>count</var> undo states.  The states impacted
by this can be limited through <var>owners</var>.
@param owners Optional set of owners that should be impacted.  If null, all
undo states will be visible and available for undo.  If non-null, only those
states that contain one of the owners specified here will be visible.
@param count Number of undo states to pop.
@return Returns the number of undo states that were actually popped.
"
      end

      operation 78874423 "redo"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform redo of last/top <var>count</var> undo states in the transient redo stack.
The states impacted by this can be limited through <var>owners</var>.
@param owners Optional set of owners that should be impacted.  If null, all
undo states will be visible and available for undo.  If non-null, only those
states that contain one of the owners specified here will be visible.
@param count Number of undo states to pop.
@return Returns the number of undo states that were actually redone.
"
      end

      operation 78874551 "isInUndo"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if we are currently inside of an undo/redo operation.  This is
useful for editors to know whether they should be generating new undo state
when they see edit operations happening.
"
      end

      operation 78874679 "forgetUndos"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78874807 "forgetRedos"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78874935 "countUndos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of undo states on the undo stack.
@param owners If non-null, only those states containing an operation with one of
the owners supplied here will be counted.
"
      end

      operation 78875063 "countRedos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of redo states on the undo stack.
@param owners If non-null, only those states containing an operation with one of
the owners supplied here will be counted.
"
      end

      operation 78875191 "getUndoLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user-visible label for the top undo state on the stack.
@param owners If non-null, will select the top-most undo state containing an
operation with one of the owners supplied here.
"
      end

      operation 78875319 "getRedoLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user-visible label for the top redo state on the stack.
@param owners If non-null, will select the top-most undo state containing an
operation with one of the owners supplied here.
"
      end

      operation 78875447 "beginUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start creating a new undo state.  Multiple calls to this function will nest until
they are all matched by a later call to {@link #endUpdate}.
@param label Optional user-visible label for this new undo state.
"
      end

      operation 78875575 "createWorkingState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78875703 "isInUpdate"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if currently inside of a {@link #beginUpdate}.
"
      end

      operation 78875831 "setUndoLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forcibly set a new for the new undo state being built within a {@link #beginUpdate}.
Any existing label will be replaced with this one.
"
      end

      operation 78875959 "suggestUndoLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a new for the new undo state being built within a {@link #beginUpdate}, but
only if there is not a label currently set for it.
"
      end

      operation 78876087 "getUpdateNestingLevel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of times {@link #beginUpdate} has been called without a matching
{@link #endUpdate} call.
"
      end

      operation 78876215 "hasOperation"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether there is an {@link UndoOperation} in the current {@link #beginUpdate}
undo state.
@param owner Optional owner of the operation to look for.  If null, will succeed
if there is any operation; if non-null, will only succeed if there is an operation
with the given owner.
@return Returns true if there is a matching operation in the current undo state.
"
      end

      operation 78876343 "getLastOperation"
	public return_type class_ref 7110583 // UndoOperation
	nparams 1
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most recent {@link UndoOperation} that was added to the update.
@param mergeMode May be either {@link #MERGE_MODE_NONE} or {@link #MERGE_MODE_ANY}.
"
      end

      operation 78876471 "getLastOperation"
	public return_type class_ref 7110583 // UndoOperation
	nparams 2
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most recent {@link UndoOperation} that was added to the update and
has the given owner.
@param owner Optional owner of last operation to retrieve.  If null, the last
operation regardless of owner will be retrieved; if non-null, the last operation
matching the given owner will be retrieved.
@param mergeMode May be either {@link #MERGE_MODE_NONE}, {@link #MERGE_MODE_UNIQUE},
or {@link #MERGE_MODE_ANY}.
"
      end

      operation 78876599 "getLastOperation"
	public explicit_return_type "T"
	nparams 3
	  param inout name "clazz" explicit_type "Class"
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends UndoOperation> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most recent {@link UndoOperation} that was added to the update and
has the given owner.
@param clazz Optional class of the last operation to retrieve.  If null, the
last operation regardless of class will be retrieved; if non-null, the last
operation whose class is the same as the given class will be retrieved.
@param owner Optional owner of last operation to retrieve.  If null, the last
operation regardless of owner will be retrieved; if non-null, the last operation
matching the given owner will be retrieved.
@param mergeMode May be either {@link #MERGE_MODE_NONE}, {@link #MERGE_MODE_UNIQUE},
or {@link #MERGE_MODE_ANY}.
"
      end

      operation 78876727 "addOperation"
	public explicit_return_type "void"
	nparams 2
	  param inout name "op" type class_ref 7110583 // UndoOperation
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new UndoOperation to the current update.
@param op The new operation to add.
@param mergeMode May be either {@link #MERGE_MODE_NONE}, {@link #MERGE_MODE_UNIQUE},
or {@link #MERGE_MODE_ANY}.
"
      end

      operation 78876855 "endUpdate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish the creation of an undo state, matching a previous call to
{@link #beginUpdate}.
"
      end

      operation 78876983 "pushWorkingState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78877111 "commitState"
	public explicit_return_type "int"
	nparams 1
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Commit the last finished undo state.  This undo state can no longer be
modified with further {@link #MERGE_MODE_UNIQUE} or
{@link #MERGE_MODE_ANY} merge modes.  If called while inside of an update,
this will push any changes in the current update on to the undo stack
and result with a fresh undo state, behaving as if {@link #endUpdate()}
had been called enough to unwind the current update, then the last state
committed, and {@link #beginUpdate} called to restore the update nesting.
@param owner The optional owner to determine whether to perform the commit.
If this is non-null, the commit will only execute if the current top undo
state contains an operation with the given owner.
@return Returns an integer identifier for the committed undo state, which
can later be used to try to uncommit the state to perform further edits on it.
"
      end

      operation 78877239 "uncommitState"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "commitId" explicit_type "int"
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to undo a previous call to {@link #commitState}.  This will work
if the undo state at the top of the stack has the given id, and has not been
involved in an undo operation.  Otherwise false is returned.
@param commitId The identifier for the state to be uncommitted, as returned
by {@link #commitState}.
@param owner Optional owner that must appear in the committed state.
@return Returns true if the uncommit is successful, else false.
"
      end

      operation 78877367 "getTopUndo"
	package return_type class_ref 7110327 // UndoState
	nparams 1
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78877495 "getTopRedo"
	package return_type class_ref 7110327 // UndoState
	nparams 1
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78877623 "matchOwners"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "state" type class_ref 7110327 // UndoState
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78877751 "findPrevState"
	package explicit_return_type "int"
	nparams 3
	  param inout name "states" explicit_type "ArrayList<UndoState>"
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78877879 "findNextState"
	package explicit_return_type "int"
	nparams 3
	  param inout name "states" explicit_type "ArrayList<UndoState>"
	  param inout name "owners" type class_ref 7110455 // UndoOwner
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7110455 "UndoOwner"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Representation of an owner of {@link UndoOperation} objects in an {@link UndoManager}.

@hide
"
      classrelation 15510711 // mManager (<unidirectional association>)
	relation 15510711 --->
	  a role_name "mManager" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15510711 // mManager (<unidirectional association>)
	  b parent class_ref 7110199 // UndoManager
      end

      attribute 24591415 "mOpCount"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24591543 "mStateSeq"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " For saving/restoring state.
"
      end

      attribute 24591671 "mSavedIdx"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78882103 "UndoOwner"
	package explicit_return_type ""
	nparams 2
	  param inout name "tag" explicit_type "String"
	  param inout name "manager" type class_ref 7110199 // UndoManager
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78882231 "getTag"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the unique tag name identifying this owner.  This is the tag
supplied to {@link UndoManager#getOwner(String, Object) UndoManager.getOwner}
and is immutable.
"
      end

      operation 78882359 "getData"
	public explicit_return_type "Object"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual data object of the owner.  This is the data object
supplied to {@link UndoManager#getOwner(String, Object) UndoManager.getOwner}.  An
owner may have a null data if it was restored from a previously saved state with
no getOwner call to associate it with its data.
"
      end

      operation 78882487 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7110583 "UndoOperation"
      abstract visibility public 
      nformals 1
      formal name "DATA" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A single undoable operation.  You must subclass this to implement the state
and behavior for your operation.  Instances of this class are placed and
managed in an {@link UndoManager}.

@hide
"
      classrelation 15510327 // <realization>
	relation 15510327 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15510327 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15510455 // mOwner (<unidirectional association>)
	relation 15510455 --->
	  a role_name "mOwner" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15510455 // mOwner (<unidirectional association>)
	  b parent class_ref 7110455 // UndoOwner
      end

      operation 78880695 "UndoOperation"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new instance of the operation.
@param owner Who owns the data being modified by this undo state; must be
returned by {@link UndoManager#getOwner(String, Object) UndoManager.getOwner}.
"
      end

      operation 78880823 "UndoOperation"
	cpp_inline protected explicit_return_type ""
	nparams 2
	  param inout name "src" type class_ref 6931895 // Parcel
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct from a Parcel.
"
      end

      operation 78880951 "getOwner"
	cpp_inline public return_type class_ref 7110455 // UndoOwner
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Owning object as given to {@link #UndoOperation(UndoOwner)}.
"
      end

      operation 78881079 "getOwnerData"
	cpp_inline public explicit_return_type "DATA"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Synonym for {@link #getOwner()}.{@link android.content.UndoOwner#getData()}.
"
      end

      operation 78881207 "matchOwner"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "owner" type class_ref 7110455 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this undo operation is a member of the given owner.
The default implementation is <code>owner == getOwner()</code>.  You
can override this to provide more sophisticated dependencies between
owners.
"
      end

      operation 78881335 "hasData"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this operation actually contains modification data.  The
default implementation always returns true.  If you return false, the
operation will be dropped when the final undo state is being built.
"
      end

      operation 78881463 "allowMerge"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this operation can be merged with a later operation.
The default implementation always returns true.
"
      end

      operation 78881591 "commit"
	abstract cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this undo state is being committed to the undo stack.
The implementation should perform the initial edits and save any state that
may be needed to undo them.
"
      end

      operation 78881719 "undo"
	abstract cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this undo state is being popped off the undo stack (in to
the temporary redo stack).  The implementation should remove the original
edits and thus restore the target object to its prior value.
"
      end

      operation 78881847 "redo"
	abstract cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this undo state is being pushed back from the transient
redo stack to the main undo stack.  The implementation should re-apply
the edits that were previously removed by {@link #undo}.
"
      end

      operation 78881975 "describeContents"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  package_ref 131127 // res

  package_ref 133687 // pm

  deploymentview 130999 "content"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2156471 "AssetTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetManager;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.SmallTest;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 5875511 // AssetTest
      end
    end

    artifact 2156599 "BrickDeniedTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.SmallTest;
${definition}"
      associated_classes
	class_ref 5875639 // BrickDeniedTest
      end
    end

    artifact 2156727 "ContentProviderOperationTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ContentValues;
import android.database.Cursor;
import android.database.MatrixCursor;
import android.net.Uri;
import android.os.Parcel;
import android.test.suitebuilder.annotation.SmallTest;
import android.text.TextUtils;
import junit.framework.TestCase;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.util.HashMap;
import java.util.Set;
import java.util.Map;
import java.util.Map.Entry;
${definition}"
      associated_classes
	class_ref 5875767 // ContentProviderOperationTest
      end
    end

    artifact 2156855 "ContentQueryMapTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ContentQueryMap;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.database.Cursor;
import android.os.Handler;
import android.os.Looper;
import android.provider.Settings;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.Suppress;
import java.util.Observable;
import java.util.Observer;
${definition}"
      associated_classes
	class_ref 5876023 // ContentQueryMapTest
      end
    end

    artifact 2156983 "ContentResolverTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ContentResolver;
import android.provider.ContactsContract;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.LargeTest;
import android.test.suitebuilder.annotation.Suppress;
${definition}"
      associated_classes
	class_ref 5876279 // ContentResolverTest
      end
    end

    artifact 2157111 "ContentTests"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import junit.framework.TestSuite;
${definition}"
      associated_classes
	class_ref 5876407 // ContentTests
      end
    end

    artifact 2157239 "MemoryFileProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.database.DatabaseUtils;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 5876535 // MemoryFileProvider
      end
    end

    artifact 2157367 "MemoryFileProviderTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.LargeTest;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.SmallTest;
import java.io.InputStream;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 5876791 // MemoryFileProviderTest
      end
    end

    artifact 2157495 "RestrictionsManagerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Bundle;
import android.os.Parcelable;
import android.test.AndroidTestCase;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 5876919 // RestrictionsManagerTest
      end
    end

    artifact 2742071 "Context"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.AttrRes;
import android.annotation.CheckResult;
import android.annotation.ColorInt;
import android.annotation.ColorRes;
import android.annotation.DrawableRes;
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.annotation.RequiresPermission;
import android.annotation.StringDef;
import android.annotation.StringRes;
import android.annotation.StyleRes;
import android.annotation.StyleableRes;
import android.annotation.SystemApi;
import android.annotation.TestApi;
import android.annotation.UserIdInt;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.ColorStateList;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.database.DatabaseErrorHandler;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.StatFs;
import android.os.UserHandle;
import android.os.UserManager;
import android.provider.MediaStore;
import android.util.AttributeSet;
import android.view.Display;
import android.view.DisplayAdjustments;
import android.view.ViewDebug;
import android.view.WindowManager;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_classes
	class_ref 6923703 // Context
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2742199 "ContextWrapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.DatabaseErrorHandler;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.UserHandle;
import android.view.Display;
import android.view.DisplayAdjustments;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 6923575 // ContextWrapper
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2742327 "ComponentCallbacks"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.Configuration;
${definition}"
      associated_classes
	class_ref 6924343 // ComponentCallbacks
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2742455 "ComponentCallbacks2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 6927927 // ComponentCallbacks2
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2761015 "BroadcastReceiver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityManagerNative;
import android.app.ActivityThread;
import android.app.IActivityManager;
import android.app.QueuedWork;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.util.Log;
import android.util.Slog;
${definition}"
      associated_classes
	class_ref 6926263 // BroadcastReceiver
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2762807 "DialogInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.KeyEvent;
${definition}"
      associated_classes
	class_ref 7004471 // DialogInterface
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2766391 "ContentResolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.annotation.RequiresPermission;
import android.annotation.TestApi;
import android.annotation.UserIdInt;
import android.app.ActivityManagerNative;
import android.app.ActivityThread;
import android.app.AppGlobals;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.AssetFileDescriptor;
import android.content.res.Resources;
import android.database.ContentObserver;
import android.database.CrossProcessCursorWrapper;
import android.database.Cursor;
import android.database.IContentObserver;
import android.graphics.Point;
import android.net.Uri;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.DeadObjectException;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.OperationCanceledException;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.os.SystemClock;
import android.os.UserHandle;
import android.text.TextUtils;
import android.util.EventLog;
import android.util.Log;
import com.android.internal.util.ArrayUtils;
import com.android.internal.util.Preconditions;
import dalvik.system.CloseGuard;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.atomic.AtomicBoolean;
import static android.system.OsConstants.AF_UNIX;
import static android.system.OsConstants.SEEK_SET;
import static android.system.OsConstants.SOCK_STREAM;
import static android.system.OsConstants.SOCK_SEQPACKET;
import static android.system.OsConstants.S_ISLNK;
import static android.system.OsConstants.S_ISREG;
${definition}"
      associated_classes
	class_ref 6924215 // ContentResolver
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2772023 "IIntentReceiver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 6988855 // IIntentReceiver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/IIntentReceiver.aidl
"
    end

    artifact 2772535 "Loader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.ContentObserver;
import android.os.Handler;
import android.util.DebugUtils;
import java.io.FileDescriptor;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 7037879 // Loader
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2775991 "SharedPreferences"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.Nullable;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 6925111 // SharedPreferences
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2797495 "ISyncAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7097783 // ISyncAdapter
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/ISyncAdapter.aidl
"
    end

    artifact 2797623 "AbstractThreadedSyncAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Process;
import android.os.RemoteException;
import android.os.Trace;
import java.util.HashMap;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 7097527 // AbstractThreadedSyncAdapter
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2797751 "ActivityNotFoundException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7098679 // ActivityNotFoundException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2797879 "AsyncQueryHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import java.lang.ref.WeakReference;
${definition}"
      associated_classes
	class_ref 7098807 // AsyncQueryHandler
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798007 "AsyncTaskLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.AsyncTask;
import android.os.Handler;
import android.os.OperationCanceledException;
import android.os.SystemClock;
import android.util.Log;
import android.util.TimeUtils;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executor;
${definition}"
      associated_classes
	class_ref 7099191 // AsyncTaskLoader
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798263 "ClipboardManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.Message;
import android.os.RemoteException;
import android.os.Handler;
import android.os.IBinder;
import android.os.ServiceManager;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7099447 // ClipboardManager
      end
      comment "Copyright (c) 2010, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798391 "ClipData"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetFileDescriptor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.StrictMode;
import android.text.Html;
import android.text.Spannable;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.TextUtils;
import android.text.style.URLSpan;
import android.util.Log;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import static android.content.ContentProvider.maybeAddUserId;
${definition}"
      associated_classes
	class_ref 6950199 // ClipData
      end
      comment "Copyright (c) 2010, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798519 "ClipDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.os.PersistableBundle;
import android.text.TextUtils;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7100215 // ClipDescription
      end
      comment "Copyright (c) 2010, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798647 "ComponentName"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import java.io.PrintWriter;
import java.lang.Comparable;
${definition}"
      associated_classes
	class_ref 6926647 // ComponentName
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798775 "ContentInsertHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 7100471 // ContentInsertHandler
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2798903 "IContentProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.Nullable;
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.IInterface;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import java.io.FileNotFoundException;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 6991671 // IContentProvider
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799031 "ContentProviderNative"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetFileDescriptor;
import android.database.BulkCursorDescriptor;
import android.database.BulkCursorToCursorAdaptor;
import android.database.Cursor;
import android.database.CursorToBulkCursorAdaptor;
import android.database.DatabaseUtils;
import android.database.IContentObserver;
import android.net.Uri;
import android.os.Binder;
import android.os.Bundle;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.Parcel;
import android.os.ParcelFileDescriptor;
import android.os.Parcelable;
import android.os.RemoteException;
import java.io.FileNotFoundException;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7100983 // ContentProviderNative
	class_ref 7101111 // ContentProviderProxy
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799159 "ContentProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.app.AppOpsManager;
import android.content.pm.PathPermission;
import android.content.pm.ProviderInfo;
import android.content.res.AssetFileDescriptor;
import android.content.res.Configuration;
import android.database.Cursor;
import android.database.MatrixCursor;
import android.database.SQLException;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Binder;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.OperationCanceledException;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.os.UserHandle;
import android.text.TextUtils;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 6994743 // ContentProvider
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799287 "ContentProviderClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.content.res.AssetFileDescriptor;
import android.database.CrossProcessCursorWrapper;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.DeadObjectException;
import android.os.Handler;
import android.os.ICancellationSignal;
import android.os.Looper;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.util.Log;
import com.android.internal.annotations.GuardedBy;
import com.android.internal.annotations.VisibleForTesting;
import com.android.internal.util.Preconditions;
import dalvik.system.CloseGuard;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;
${definition}"
      associated_classes
	class_ref 7017271 // ContentProviderClient
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799415 "ContentProviderOperation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ContentProvider;
import android.database.Cursor;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import android.util.Log;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7101623 // ContentProviderOperation
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799543 "ContentProviderResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ContentProvider;
import android.net.Uri;
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 7017015 // ContentProviderResult
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799671 "ContentQueryMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.ContentObserver;
import android.database.Cursor;
import android.os.Handler;
import java.util.HashMap;
import java.util.Map;
import java.util.Observable;
${definition}"
      associated_classes
	class_ref 7101879 // ContentQueryMap
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799799 "ContentUris"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
${definition}"
      associated_classes
	class_ref 7102135 // ContentUris
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2799927 "ContentValues"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 7016887 // ContentValues
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2800055 "EntityIterator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 7102519 // EntityIterator
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2800183 "CursorEntityIterator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.os.RemoteException;
${definition}"
      associated_classes
	class_ref 7102391 // CursorEntityIterator
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2800311 "CursorLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.net.Uri;
import android.os.CancellationSignal;
import android.os.OperationCanceledException;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 7102903 // CursorLoader
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2800439 "DefaultDataHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.util.Xml;
import org.xml.sax.Attributes;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Stack;
${definition}"
      associated_classes
	class_ref 7103031 // DefaultDataHandler
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2800567 "Entity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7102647 // Entity
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2800695 "EventLogTags"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7103287 // EventLogTags
      end
      comment " This file is auto-generated.  DO NOT MODIFY.
Source file: frameworks/base/core/java/android/content/EventLogTags.logtags
"
    end

    artifact 2800823 "IClipboard"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7099703 // IClipboard
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/IClipboard.aidl
"
    end

    artifact 2800951 "IContentService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7020343 // IContentService
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/IContentService.aidl
"
    end

    artifact 2801079 "IIntentSender"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 6988215 // IIntentSender
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/IIntentSender.aidl
"
    end

    artifact 2801207 "Intent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.AnyRes;
import android.annotation.IntDef;
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.annotation.SystemApi;
import android.content.pm.ActivityInfo;
import android.content.pm.ApplicationInfo;
import android.content.pm.ComponentInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Rect;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Process;
import android.os.ResultReceiver;
import android.os.ShellCommand;
import android.os.StrictMode;
import android.os.UserHandle;
import android.provider.DocumentsContract;
import android.provider.DocumentsProvider;
import android.provider.MediaStore;
import android.provider.OpenableColumns;
import android.util.ArraySet;
import android.util.AttributeSet;
import android.util.Log;
import com.android.internal.util.XmlUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Serializable;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Objects;
import java.util.Set;
import static android.content.ContentProvider.maybeAddUserId;
${definition}"
      associated_classes
	class_ref 6925623 // Intent
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2801335 "IntentFilter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.PatternMatcher;
import android.text.TextUtils;
import android.util.AndroidException;
import android.util.Log;
import android.util.Printer;
import com.android.internal.util.XmlUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 6926519 // IntentFilter
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2801463 "IntentSender"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityManagerNative;
import android.os.Bundle;
import android.os.RemoteException;
import android.os.Handler;
import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.UserHandle;
import android.util.AndroidException;
${definition}"
      associated_classes
	class_ref 6926007 // IntentSender
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2801591 "IOnPrimaryClipChangedListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7099959 // IOnPrimaryClipChangedListener
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/IOnPrimaryClipChangedListener.aidl
"
    end

    artifact 2801719 "IRestrictionsManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7105975 // IRestrictionsManager
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/IRestrictionsManager.aidl
"
    end

    artifact 2801847 "ISyncContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7098167 // ISyncContext
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/ISyncContext.aidl
"
    end

    artifact 2801975 "ISyncServiceAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7106615 // ISyncServiceAdapter
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/ISyncServiceAdapter.aidl
"
    end

    artifact 2802103 "ISyncStatusObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7103927 // ISyncStatusObserver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/content/ISyncStatusObserver.aidl
"
    end

    artifact 2802231 "MutableContextWrapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7107255 // MutableContextWrapper
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2802359 "OperationApplicationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7017143 // OperationApplicationException
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2802487 "PeriodicSync"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Bundle;
import android.os.Parcel;
import android.accounts.Account;
import java.util.Objects;
${definition}"
      associated_classes
	class_ref 7017783 // PeriodicSync
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2802615 "ReceiverCallNotAllowedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.AndroidRuntimeException;
${definition}"
      associated_classes
	class_ref 7107383 // ReceiverCallNotAllowedException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2802743 "RestrictionEntry"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.ArrayRes;
import android.os.Parcel;
import android.os.Parcelable;
import java.util.Arrays;
import java.util.Objects;
${definition}"
      associated_classes
	class_ref 7107511 // RestrictionEntry
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2802871 "RestrictionsManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.admin.DevicePolicyManager;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.os.Bundle;
import android.os.PersistableBundle;
import android.os.RemoteException;
import android.service.restrictions.RestrictionsReceiver;
import android.util.AttributeSet;
import android.util.Log;
import android.util.Xml;
import com.android.internal.R;
import com.android.internal.util.XmlUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
${definition}"
      associated_classes
	class_ref 7107639 // RestrictionsManager
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2803127 "SearchRecentSuggestionsProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.SearchManager;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import android.text.TextUtils;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 7107767 // SearchRecentSuggestionsProvider
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2803255 "ServiceConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 6926775 // ServiceConnection
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2803895 "SyncActivityTooManyDeletes"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.accounts.Account;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;
${definition}"
      associated_classes
	class_ref 7108279 // SyncActivityTooManyDeletes
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2804279 "SyncAdaptersCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.pm.RegisteredServicesCache;
import android.content.pm.XmlSerializerAndParser;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.util.ArrayMap;
import android.util.AttributeSet;
import android.util.SparseArray;
import com.android.internal.annotations.GuardedBy;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
${definition}"
      associated_classes
	class_ref 7108919 // SyncAdaptersCache
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2804407 "SyncAdapterType"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.text.TextUtils;
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 7017655 // SyncAdapterType
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2804535 "SyncContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.RemoteException;
import android.os.SystemClock;
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 7098423 // SyncContext
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2804663 "SyncInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7017911 // SyncInfo
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2804791 "SyncRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7017527 // SyncRequest
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2804919 "SyncResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7098551 // SyncResult
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805047 "SyncStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 7110071 // SyncStats
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805175 "SyncStatusInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7018039 // SyncStatusInfo
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805303 "SyncStatusObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7018167 // SyncStatusObserver
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805431 "UndoManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.os.ParcelableParcel;
import android.text.TextUtils;
import android.util.ArrayMap;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7110199 // UndoManager
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805559 "UndoOperation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7110583 // UndoOperation
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805687 "UndoOwner"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7110455 // UndoOwner
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805815 "UriMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 7108023 // UriMatcher
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2805943 "UriPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 6986935 // UriPermission
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
