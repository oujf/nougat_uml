format 213
"backup" // android::frameworks::base::core::java::android::app::backup
  revision 5
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/core/java/android/app/backup/"
  java_package "android.app.backup"
  classview 129975 "backup"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 5875255 "BackupDataTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 19978807 "mFile"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 19978935 "mDirectory"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 11449399 // mAssets (<unidirectional association>)
	relation 11449399 --->
	  a role_name "mAssets" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11449399 // mAssets (<unidirectional association>)
	  b parent class_ref 151095 // AssetManager
      end

      operation 47847735 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47847863 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47847991 "testSingle"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848119 "testMultiple"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848247 "testDelete"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848375 "testMixed"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848503 "testReadMockData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848631 "testReadRealData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848759 "copyAssetToFile"
	private explicit_return_type "void"
	nparams 2
	  param inout name "source" explicit_type "String"
	  param inout name "destination" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47848887 "openForWriting"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47849015 "openForReading"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47849143 "writeEntity"
	private explicit_return_type "void"
	nparams 3
	  param inout name "bdo" explicit_type "BackupDataOutput"
	  param inout name "key" explicit_type "String"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47849271 "deleteEntity"
	private explicit_return_type "void"
	nparams 2
	  param inout name "bdo" explicit_type "BackupDataOutput"
	  param inout name "key" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47849399 "readAndVerifyEntity"
	private explicit_return_type "void"
	nparams 3
	  param inout name "bdi" explicit_type "BackupDataInput"
	  param inout name "expectedKey" explicit_type "String"
	  param inout name "expectedData" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47849527 "readAndVerifyDeletedEntity"
	private explicit_return_type "void"
	nparams 2
	  param inout name "bdi" explicit_type "BackupDataInput"
	  param inout name "expectedKey" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 5875383 "FullBackupTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 19979063 "mFactory"
	private explicit_type "XmlPullParserFactory"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 19979191 "mXpp"
	private explicit_type "XmlPullParser"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 47849655 "setUp"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 47849783 "testparseBackupSchemeFromXml_onlyInclude"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47849911 "testparseBackupSchemeFromXml_onlyExclude"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47850039 "testparseBackupSchemeFromXml_includeAndExclude"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47850167 "testparseBackupSchemeFromXml_lotsOfIncludesAndExcludes"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47850295 "testParseBackupSchemeFromXml_invalidXmlFails"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47850423 "testInvalidPath_doesNotBackup"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47850551 "testDoubleDotInPath_isIgnored"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 47850679 "testDoubleSlashInPath_isIgnored"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7025079 "IBackupManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Direct interface to the Backup Manager Service that applications invoke on.  The only
operation currently needed is a simple notification that the app has made changes to
data it wishes to back up, so the system should run a backup pass.

Apps will use the {@link android.app.backup.BackupManager} class rather than going through
this Binder interface directly.

{@hide}
"
      classrelation 15316023 // <generalisation>
	relation 15316023 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15316023 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7067831 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15316151 // <generalisation>
	  relation 15316151 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15316151 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15316279 // <realization>
	  relation 15316279 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15316279 // <realization>
	    b parent class_ref 7025079 // IBackupManager
	end

	operation 78416567 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78416695 "asInterface"
	  class_operation public return_type class_ref 7025079 // IBackupManager
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IBackupManager interface,
generating a proxy if needed.
"
	end

	operation 78416823 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78416951 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7067959 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15316535 // <realization>
	    relation 15316535 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15316535 // <realization>
	      b parent class_ref 7025079 // IBackupManager
	  end

	  classrelation 15316663 // mRemote (<unidirectional association>)
	    relation 15316663 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15316663 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78417079 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78417207 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78417335 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78417463 "dataChanged"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "packageName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Tell the system service that the caller has made changes to its
data, and therefore needs to undergo an incremental backup pass.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages.
"
	  end

	  operation 78417591 "clearBackupData"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "transportName" explicit_type "String"
	      param inout name "packageName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Erase all backed-up data for the given package from the given storage
destination.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages.
"
	  end

	  operation 78417719 "agentConnected"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "packageName" explicit_type "String"
	      param inout name "agent" type class_ref 6927031 // IBinder
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notifies the Backup Manager Service that an agent has become available.  This
method is only invoked by the Activity Manager.
"
	  end

	  operation 78417847 "agentDisconnected"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "packageName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify the Backup Manager Service that an agent has unexpectedly gone away.
This method is only invoked by the Activity Manager.
"
	  end

	  operation 78417975 "restoreAtInstall"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "packageName" explicit_type "String"
	      param in name "token" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify the Backup Manager Service that an application being installed will
need a data-restore pass.  This method is only invoked by the Package Manager.
"
	  end

	  operation 78418103 "setBackupEnabled"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "isEnabled" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78418231 "setAutoRestore"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "doAutoRestore" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Enable/disable automatic restore of application data at install time.  When
enabled, installation of any package will involve the Backup Manager.  If data
exists for the newly-installed package, either from the device's current [enabled]
backup dataset or from the restore set used in the last wholesale restore operation,
that data will be supplied to the new package's restore agent before the package
is made generally available for launch.

<p>Callers must hold  the android.permission.BACKUP permission to use this method.

@param doAutoRestore When true, enables the automatic app-data restore facility.  When
  false, this facility will be disabled.
"
	  end

	  operation 78418359 "setBackupProvisioned"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "isProvisioned" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Indicate that any necessary one-time provisioning has occurred.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78418487 "isBackupEnabled"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78418615 "setBackupPassword"
	    public explicit_return_type "boolean"
	    nparams 2
	      param inout name "currentPw" explicit_type "String"
	      param inout name "newPw" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Set the device's backup password.  Returns {@code true} if the password was set
successfully, {@code false} otherwise.  Typically a failure means that an incorrect
current password was supplied.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78418743 "hasBackupPassword"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Reports whether a backup password is currently set.  If not, then a null or empty
\"current password\" argument should be passed to setBackupPassword().

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78418871 "backupNow"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Schedule an immediate backup attempt for all pending updates.  This is
primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78418999 "fullBackup"
	    public explicit_return_type "void"
	    nparams 9
	      param inout name "fd" type class_ref 6986295 // ParcelFileDescriptor
	      param inout name "includeApks" explicit_type "boolean"
	      param inout name "includeObbs" explicit_type "boolean"
	      param inout name "includeShared" explicit_type "boolean"
	      param inout name "doWidgets" explicit_type "boolean"
	      param inout name "allApps" explicit_type "boolean"
	      param inout name "allIncludesSystem" explicit_type "boolean"
	      param inout name "doCompress" explicit_type "boolean"
	      param inout name "packageNames" explicit_type "String"
	    multiplicity "[]"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Write a full backup of the given package to the supplied file descriptor.
The fd may be a socket or other non-seekable destination.  If no package names
are supplied, then every application on the device will be backed up to the output.

<p>This method is <i>synchronous</i> -- it does not return until the backup has
completed.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param fd The file descriptor to which a 'tar' file stream is to be written
@param includeApks If <code>true</code>, the resulting tar stream will include the
    application .apk files themselves as well as their data.
@param includeObbs If <code>true</code>, the resulting tar stream will include any
    application expansion (OBB) files themselves belonging to each application.
@param includeShared If <code>true</code>, the resulting tar stream will include
    the contents of the device's shared storage (SD card or equivalent).
@param allApps If <code>true</code>, the resulting tar stream will include all
    installed applications' data, not just those named in the <code>packageNames</code>
    parameter.
@param allIncludesSystem If {@code true}, then {@code allApps} will be interpreted
    as including packages pre-installed as part of the system. If {@code false},
    then setting {@code allApps} to {@code true} will mean only that all 3rd-party
    applications will be included in the dataset.
@param packageNames The package names of the apps whose data (and optionally .apk files)
    are to be backed up.  The <code>allApps</code> parameter supersedes this.
"
	  end

	  operation 78419127 "fullTransportBackup"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "packageNames" explicit_type "String"
	    multiplicity "[]"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Perform a full-dataset backup of the given applications via the currently active
transport.

@param packageNames The package names of the apps whose data are to be backed up.
"
	  end

	  operation 78419255 "fullRestore"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "fd" type class_ref 6986295 // ParcelFileDescriptor
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Restore device content from the data stream passed through the given socket.  The
data stream must be in the format emitted by fullBackup().

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78419383 "acknowledgeFullBackupOrRestore"
	    public explicit_return_type "void"
	    nparams 5
	      param in name "token" explicit_type "int"
	      param inout name "allow" explicit_type "boolean"
	      param inout name "curPassword" explicit_type "String"
	      param inout name "encryptionPassword" explicit_type "String"
	      param inout name "observer" type class_ref 7068087 // IFullBackupRestoreObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Confirm that the requested full backup/restore operation can proceed.  The system will
not actually perform the operation described to fullBackup() / fullRestore() unless the
UI calls back into the Backup Manager to confirm, passing the correct token.  At
the same time, the UI supplies a callback Binder for progress notifications during
the operation.

<p>The password passed by the confirming entity must match the saved backup or
full-device encryption password in order to perform a backup.  If a password is
supplied for restore, it must match the password used when creating the full
backup dataset being used for restore.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78419511 "getCurrentTransport"
	    public explicit_return_type "String"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78419639 "listAllTransports"
	    public explicit_return_type "String"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method.
"
	  end

	  operation 78419767 "getTransportWhitelist"
	    public explicit_return_type "String"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Retrieve the list of whitelisted transport components.  Callers do </i>not</i> need
any special permission.

@return The names of all whitelisted transport components defined by the system.
"
	  end

	  operation 78419895 "selectBackupTransport"
	    public explicit_return_type "String"
	    nparams 1
	      param inout name "transport" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
of {@link BackupManager.TRANSPORT_GOOGLE} or {@link BackupManager.TRANSPORT_ADB}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null.
"
	  end

	  operation 78420023 "getConfigurationIntent"
	    public return_type class_ref 6925623 // Intent
	    nparams 1
	      param inout name "transport" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get the configuration Intent, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return An Intent to use with Activity#startActivity() to bring up the configuration
  UI supplied by the transport.  If the transport has no configuration UI, it should
  return {@code null} here.
"
	  end

	  operation 78420151 "getDestinationString"
	    public explicit_return_type "String"
	    nparams 1
	      param inout name "transport" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get the destination string supplied by the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return A string describing the current backup destination.  This string is used
  verbatim by the Settings UI as the summary text of the \"configure...\" item.
"
	  end

	  operation 78420279 "getDataManagementIntent"
	    public return_type class_ref 6925623 // Intent
	    nparams 1
	      param inout name "transport" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get the manage-data UI intent, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.
"
	  end

	  operation 78420407 "getDataManagementLabel"
	    public explicit_return_type "String"
	    nparams 1
	      param inout name "transport" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get the manage-data menu label, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.
"
	  end

	  operation 78420535 "beginRestoreSession"
	    public return_type class_ref 7068215 // IRestoreSession
	    nparams 2
	      param inout name "packageName" explicit_type "String"
	      param inout name "transportID" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Begin a restore session.  Either or both of packageName and transportID
may be null.  If packageName is non-null, then only the given package will be
considered for restore.  If transportID is null, then the restore will use
the current active transport.
<p>
This method requires the android.permission.BACKUP permission <i>except</i>
when transportID is null and packageName is the name of the caller's own
package.  In that case, the restore session returned is suitable for supporting
the BackupManager.requestRestore() functionality via RestoreSession.restorePackage()
without requiring the app to hold any special permission.

@param packageName The name of the single package for which a restore will
       be requested.  May be null, in which case all packages in the restore
       set can be restored.
@param transportID The name of the transport to use for the restore operation.
       May be null, in which case the current active transport is used.
@return An interface to the restore session, or null on error.
"
	  end

	  operation 78420663 "opComplete"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "token" explicit_type "int"
	      param in name "result" explicit_type "long"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify the backup manager that a BackupAgent has completed the operation
corresponding to the given token.

@param token The transaction token passed to the BackupAgent method being
       invoked.
@param result In the case of a full backup measure operation, the estimated
       total file size that would result from the operation. Unused in all other
       cases.
{@hide}
"
	  end

	  operation 78420791 "setBackupServiceActive"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "whichUser" explicit_type "int"
	      param inout name "makeActive" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Make the device's backup and restore machinery (in)active.  When it is inactive,
the device will not perform any backup operations, nor will it deliver data for
restore, although clients can still safely call BackupManager methods.

@param whichUser User handle of the defined user whose backup active state
    is to be adjusted.
@param makeActive {@code true} when backup services are to be made active;
    {@code false} otherwise.
"
	  end

	  operation 78420919 "isBackupServiceActive"
	    public explicit_return_type "boolean"
	    nparams 1
	      param in name "whichUser" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Queries the activity status of backup service as set by {@link #setBackupServiceActive}.
@param whichUser User handle of the defined user whose backup active state
    is being queried.
"
	  end

	  operation 78421047 "getAvailableRestoreToken"
	    public explicit_return_type "long"
	    nparams 1
	      param inout name "packageName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Ask the framework which dataset, if any, the given package's data would be
restored from if we were to install it right now.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package whose most-suitable dataset we
    wish to look up
@return The dataset token from which a restore should be attempted, or zero if
    no suitable data is available.
"
	  end

	  operation 78421175 "isAppEligibleForBackup"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "packageName" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Ask the framework whether this app is eligible for backup.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package.
@return Whether this app is eligible for backup.
"
	  end

	  operation 78421303 "requestBackup"
	    public explicit_return_type "int"
	    nparams 2
	      param inout name "packages" explicit_type "String"
	    multiplicity "[]"
	      param inout name "observer" type class_ref 7065783 // IBackupObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 24349367 "TRANSACTION_dataChanged"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24349495 "TRANSACTION_clearBackupData"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24349623 "TRANSACTION_agentConnected"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24349751 "TRANSACTION_agentDisconnected"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24349879 "TRANSACTION_restoreAtInstall"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350007 "TRANSACTION_setBackupEnabled"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350135 "TRANSACTION_setAutoRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350263 "TRANSACTION_setBackupProvisioned"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 7)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350391 "TRANSACTION_isBackupEnabled"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 8)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350519 "TRANSACTION_setBackupPassword"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 9)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350647 "TRANSACTION_hasBackupPassword"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 10)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350775 "TRANSACTION_backupNow"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 11)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24350903 "TRANSACTION_fullBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 12)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351031 "TRANSACTION_fullTransportBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 13)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351159 "TRANSACTION_fullRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 14)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351287 "TRANSACTION_acknowledgeFullBackupOrRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 15)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351415 "TRANSACTION_getCurrentTransport"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 16)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351543 "TRANSACTION_listAllTransports"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 17)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351671 "TRANSACTION_getTransportWhitelist"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 18)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351799 "TRANSACTION_selectBackupTransport"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 19)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24351927 "TRANSACTION_getConfigurationIntent"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 20)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352055 "TRANSACTION_getDestinationString"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 21)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352183 "TRANSACTION_getDataManagementIntent"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 22)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352311 "TRANSACTION_getDataManagementLabel"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 23)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352439 "TRANSACTION_beginRestoreSession"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 24)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352567 "TRANSACTION_opComplete"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 25)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352695 "TRANSACTION_setBackupServiceActive"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 26)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352823 "TRANSACTION_isBackupServiceActive"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 27)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24352951 "TRANSACTION_getAvailableRestoreToken"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 28)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353079 "TRANSACTION_isAppEligibleForBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 29)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353207 "TRANSACTION_requestBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 30)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78421431 "dataChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the system service that the caller has made changes to its
data, and therefore needs to undergo an incremental backup pass.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages.
"
      end

      operation 78421559 "clearBackupData"
	public explicit_return_type "void"
	nparams 2
	  param inout name "transportName" explicit_type "String"
	  param inout name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Erase all backed-up data for the given package from the given storage
destination.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages.
"
      end

      operation 78421687 "agentConnected"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "agent" type class_ref 6927031 // IBinder
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the Backup Manager Service that an agent has become available.  This
method is only invoked by the Activity Manager.
"
      end

      operation 78421815 "agentDisconnected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the Backup Manager Service that an agent has unexpectedly gone away.
This method is only invoked by the Activity Manager.
"
      end

      operation 78421943 "restoreAtInstall"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param in name "token" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the Backup Manager Service that an application being installed will
need a data-restore pass.  This method is only invoked by the Package Manager.
"
      end

      operation 78422071 "setBackupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78422199 "setAutoRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doAutoRestore" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable automatic restore of application data at install time.  When
enabled, installation of any package will involve the Backup Manager.  If data
exists for the newly-installed package, either from the device's current [enabled]
backup dataset or from the restore set used in the last wholesale restore operation,
that data will be supplied to the new package's restore agent before the package
is made generally available for launch.

<p>Callers must hold  the android.permission.BACKUP permission to use this method.

@param doAutoRestore When true, enables the automatic app-data restore facility.  When
  false, this facility will be disabled.
"
      end

      operation 78422327 "setBackupProvisioned"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isProvisioned" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicate that any necessary one-time provisioning has occurred.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78422455 "isBackupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78422583 "setBackupPassword"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "currentPw" explicit_type "String"
	  param inout name "newPw" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the device's backup password.  Returns {@code true} if the password was set
successfully, {@code false} otherwise.  Typically a failure means that an incorrect
current password was supplied.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78422711 "hasBackupPassword"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether a backup password is currently set.  If not, then a null or empty
\"current password\" argument should be passed to setBackupPassword().

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78422839 "backupNow"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule an immediate backup attempt for all pending updates.  This is
primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78422967 "fullBackup"
	public explicit_return_type "void"
	nparams 9
	  param inout name "fd" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "includeApks" explicit_type "boolean"
	  param inout name "includeObbs" explicit_type "boolean"
	  param inout name "includeShared" explicit_type "boolean"
	  param inout name "doWidgets" explicit_type "boolean"
	  param inout name "allApps" explicit_type "boolean"
	  param inout name "allIncludesSystem" explicit_type "boolean"
	  param inout name "doCompress" explicit_type "boolean"
	  param inout name "packageNames" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a full backup of the given package to the supplied file descriptor.
The fd may be a socket or other non-seekable destination.  If no package names
are supplied, then every application on the device will be backed up to the output.

<p>This method is <i>synchronous</i> -- it does not return until the backup has
completed.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param fd The file descriptor to which a 'tar' file stream is to be written
@param includeApks If <code>true</code>, the resulting tar stream will include the
    application .apk files themselves as well as their data.
@param includeObbs If <code>true</code>, the resulting tar stream will include any
    application expansion (OBB) files themselves belonging to each application.
@param includeShared If <code>true</code>, the resulting tar stream will include
    the contents of the device's shared storage (SD card or equivalent).
@param allApps If <code>true</code>, the resulting tar stream will include all
    installed applications' data, not just those named in the <code>packageNames</code>
    parameter.
@param allIncludesSystem If {@code true}, then {@code allApps} will be interpreted
    as including packages pre-installed as part of the system. If {@code false},
    then setting {@code allApps} to {@code true} will mean only that all 3rd-party
    applications will be included in the dataset.
@param packageNames The package names of the apps whose data (and optionally .apk files)
    are to be backed up.  The <code>allApps</code> parameter supersedes this.
"
      end

      operation 78423095 "fullTransportBackup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageNames" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a full-dataset backup of the given applications via the currently active
transport.

@param packageNames The package names of the apps whose data are to be backed up.
"
      end

      operation 78423223 "fullRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore device content from the data stream passed through the given socket.  The
data stream must be in the format emitted by fullBackup().

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78423351 "acknowledgeFullBackupOrRestore"
	public explicit_return_type "void"
	nparams 5
	  param in name "token" explicit_type "int"
	  param inout name "allow" explicit_type "boolean"
	  param inout name "curPassword" explicit_type "String"
	  param inout name "encryptionPassword" explicit_type "String"
	  param inout name "observer" type class_ref 7068087 // IFullBackupRestoreObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Confirm that the requested full backup/restore operation can proceed.  The system will
not actually perform the operation described to fullBackup() / fullRestore() unless the
UI calls back into the Backup Manager to confirm, passing the correct token.  At
the same time, the UI supplies a callback Binder for progress notifications during
the operation.

<p>The password passed by the confirming entity must match the saved backup or
full-device encryption password in order to perform a backup.  If a password is
supplied for restore, it must match the password used when creating the full
backup dataset being used for restore.

<p>Callers must hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78423479 "getCurrentTransport"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method.
"
      end

      operation 78423607 "listAllTransports"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method.
"
      end

      operation 78423735 "getTransportWhitelist"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the list of whitelisted transport components.  Callers do </i>not</i> need
any special permission.

@return The names of all whitelisted transport components defined by the system.
"
      end

      operation 78423863 "selectBackupTransport"
	public explicit_return_type "String"
	nparams 1
	  param inout name "transport" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
of {@link BackupManager.TRANSPORT_GOOGLE} or {@link BackupManager.TRANSPORT_ADB}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null.
"
      end

      operation 78423991 "getConfigurationIntent"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "transport" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the configuration Intent, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return An Intent to use with Activity#startActivity() to bring up the configuration
  UI supplied by the transport.  If the transport has no configuration UI, it should
  return {@code null} here.
"
      end

      operation 78424119 "getDestinationString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "transport" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the destination string supplied by the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return A string describing the current backup destination.  This string is used
  verbatim by the Settings UI as the summary text of the \"configure...\" item.
"
      end

      operation 78424247 "getDataManagementIntent"
	public return_type class_ref 6925623 // Intent
	nparams 1
	  param inout name "transport" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the manage-data UI intent, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.
"
      end

      operation 78424375 "getDataManagementLabel"
	public explicit_return_type "String"
	nparams 1
	  param inout name "transport" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the manage-data menu label, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.
"
      end

      operation 78424503 "beginRestoreSession"
	public return_type class_ref 7068215 // IRestoreSession
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "transportID" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin a restore session.  Either or both of packageName and transportID
may be null.  If packageName is non-null, then only the given package will be
considered for restore.  If transportID is null, then the restore will use
the current active transport.
<p>
This method requires the android.permission.BACKUP permission <i>except</i>
when transportID is null and packageName is the name of the caller's own
package.  In that case, the restore session returned is suitable for supporting
the BackupManager.requestRestore() functionality via RestoreSession.restorePackage()
without requiring the app to hold any special permission.

@param packageName The name of the single package for which a restore will
       be requested.  May be null, in which case all packages in the restore
       set can be restored.
@param transportID The name of the transport to use for the restore operation.
       May be null, in which case the current active transport is used.
@return An interface to the restore session, or null on error.
"
      end

      operation 78424631 "opComplete"
	public explicit_return_type "void"
	nparams 2
	  param in name "token" explicit_type "int"
	  param in name "result" explicit_type "long"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the backup manager that a BackupAgent has completed the operation
corresponding to the given token.

@param token The transaction token passed to the BackupAgent method being
       invoked.
@param result In the case of a full backup measure operation, the estimated
       total file size that would result from the operation. Unused in all other
       cases.
{@hide}
"
      end

      operation 78424759 "setBackupServiceActive"
	public explicit_return_type "void"
	nparams 2
	  param in name "whichUser" explicit_type "int"
	  param inout name "makeActive" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make the device's backup and restore machinery (in)active.  When it is inactive,
the device will not perform any backup operations, nor will it deliver data for
restore, although clients can still safely call BackupManager methods.

@param whichUser User handle of the defined user whose backup active state
    is to be adjusted.
@param makeActive {@code true} when backup services are to be made active;
    {@code false} otherwise.
"
      end

      operation 78424887 "isBackupServiceActive"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "whichUser" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the activity status of backup service as set by {@link #setBackupServiceActive}.
@param whichUser User handle of the defined user whose backup active state
    is being queried.
"
      end

      operation 78425015 "getAvailableRestoreToken"
	public explicit_return_type "long"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the framework which dataset, if any, the given package's data would be
restored from if we were to install it right now.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package whose most-suitable dataset we
    wish to look up
@return The dataset token from which a restore should be attempted, or zero if
    no suitable data is available.
"
      end

      operation 78425143 "isAppEligibleForBackup"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the framework whether this app is eligible for backup.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package.
@return Whether this app is eligible for backup.
"
      end

      operation 78425271 "requestBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packages" explicit_type "String"
	multiplicity "[]"
	  param inout name "observer" type class_ref 7065783 // IBackupObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7063095 "AbsoluteFileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Like FileBackupHelper, but takes absolute paths for the files instead of
subpaths of getFilesDir()

@hide
"
      classrelation 15305143 // <generalisation>
	relation 15305143 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15305143 // <generalisation>
	  b parent class_ref 7063223 // FileBackupHelperBase
      end

      classrelation 15305271 // <realization>
	relation 15305271 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15305271 // <realization>
	  b parent class_ref 7063607 // BackupHelper
      end

      attribute 24338743 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15305527 // mContext (<unidirectional association>)
	relation 15305527 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15305527 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 78382647 "AbsoluteFileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files
"
      end

      operation 78382775 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now.
"
      end

      operation 78382903 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one absolute file entity from the restore stream
"
      end
    end

    class 7063223 "FileBackupHelperBase"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class for the {@link android.app.backup.FileBackupHelper} implementation.
"
      attribute 24338487 "mPtr"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15305015 // mContext (<unidirectional association>)
	relation 15305015 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15305015 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 24338615 "mExceptionLogged"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78380855 "FileBackupHelperBase"
	package explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78380983 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78381111 "performBackup_checked"
	class_operation package explicit_return_type "void"
	nparams 5
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "files" explicit_type "String"
	multiplicity "[]"
	  param inout name "keys" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the parameters so the native code doesn't have to throw all the exceptions
since it's easier to do that from Java.
"
      end

      operation 78381239 "writeFile"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "f" explicit_type "File"
	  param inout name "in" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78381367 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78381495 "isKeyInList"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "list" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78381623 "ctor"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 78381751 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 78381879 "performBackup_native"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "oldState" explicit_type "FileDescriptor"
	  param in name "data" explicit_type "long"
	  param inout name "newState" explicit_type "FileDescriptor"
	  param inout name "files" explicit_type "String"
	multiplicity "[]"
	  param inout name "keys" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws};
s"
	
	
	
      end

      operation 78382007 "writeFile_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "ptr" explicit_type "long"
	  param inout name "filename" explicit_type "String"
	  param in name "backupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end

      operation 78382135 "writeSnapshot_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "ptr" explicit_type "long"
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end
    end

    class 7063351 "BackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} commits
information to the backup data set, via its {@link
BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method.  Data written for backup is presented
as a set of \"entities,\" key/value pairs in which each binary data record \"value\" is
named with a string \"key.\"
<p>
To commit a data record to the backup transport, the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method first writes an \"entity header\" that supplies the key string for the record
and the total size of the binary value for the record.  After the header has been
written, the agent then writes the binary entity value itself.  The entity value can
be written in multiple chunks if desired, as long as the total count of bytes written
matches what was supplied to {@link #writeEntityHeader(String, int) writeEntityHeader()}.
<p>
Entity key strings are considered to be unique within a given application's backup
data set. If a backup agent writes a new entity under an existing key string, its value will
replace any previous value in the transport's remote data store.  You can remove a record
entirely from the remote data set by writing a new entity header using the
existing record's key, but supplying a negative <code>dataSize</code> parameter.
When you do so, the agent does not need to call {@link #writeEntityData(byte[], int)}.
<h3>Example</h3>
<p>
Here is an example illustrating a way to back up the value of a String variable
called <code>mStringToBackUp</code>:
<pre>
static final String MY_STRING_KEY = \"storedstring\";

public void {@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup(ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState)}
        throws IOException {
    ...
    byte[] stringBytes = mStringToBackUp.getBytes();
    data.writeEntityHeader(MY_STRING_KEY, stringBytes.length);
    data.writeEntityData(stringBytes, stringBytes.length);
    ...
}</pre>

@see BackupAgent
"
      attribute 24340279 "mBackupWriter"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78389687 "BackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 78389815 "writeEntityHeader"
	public explicit_return_type "int"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param in name "dataSize" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the beginning of one record in the backup data stream. This must be called before
{@link #writeEntityData}.
@param key A string key that uniquely identifies the data record within the application.
   Keys whose first character is \\uFF00 or higher are not valid.
@param dataSize The size in bytes of this record's data.  Passing a dataSize
   of -1 indicates that the record under this key should be deleted.
@return The number of bytes written to the backup stream
@throws IOException if the write failed
"
      end

      operation 78389943 "writeEntityData"
	public explicit_return_type "int"
	nparams 2
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a chunk of data under the current entity to the backup transport.
@param data A raw data buffer to send
@param size The number of bytes to be sent in this chunk
@return the number of bytes written
@throws IOException if the write failed
"
      end

      operation 78390071 "setKeyPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyPrefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78390199 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 78390327 "ctor"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 78390455 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupWriter" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 78390583 "writeEntityHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "key" explicit_type "String"
	  param in name "dataSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end

      operation 78390711 "writeEntityData_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end

      operation 78390839 "setKeyPrefix_native"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "keyPrefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end
    end

    class 7063479 "BackupDataInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides an {@link java.io.InputStream}-like interface for accessing an
entity's data during a restore operation. Used by {@link BackupHelper} classes within the {@link
BackupAgentHelper} mechanism.
<p>
When {@link BackupHelper#restoreEntity(BackupDataInputStream) BackupHelper.restoreEntity()}
is called, the current entity's header has already been read from the underlying
{@link BackupDataInput}.  The entity's key string and total data size are available
through this class's {@link #getKey()} and {@link #size()} methods, respectively.
<p class=\"note\">
<strong>Note:</strong> The caller should take care not to seek or close the underlying data
source, nor read more than {@link #size()} bytes from the stream.</p>

@see BackupAgentHelper
@see BackupHelper
"
      attribute 24340023 "dataSize"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15307831 // mData (<unidirectional association>)
	relation 15307831 --->
	  a role_name "mData" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15307831 // mData (<unidirectional association>)
	  b parent class_ref 7063991 // BackupDataInput
      end

      attribute 24340151 "mOneByte"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78388919 "BackupDataInputStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "data" type class_ref 7063991 // BackupDataInput
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78389047 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read one byte of entity data from the stream, returning it as
an integer value.  If more than {@link #size()} bytes of data
are read from the stream, the output of this method is undefined.

@return The byte read, or undefined if the end of the stream has been reached.
"
      end

      operation 78389175 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read up to {@code size} bytes of data into a byte array, beginning at position
{@code offset} within the array.

@param b Byte array into which the data will be read
@param offset The data will be stored in {@code b} beginning at this index
  within the array.
@param size The number of bytes to read in this operation.  If insufficient
  data exists within the entity to fulfill this request, only as much data
  will be read as is available.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read.
"
      end

      operation 78389303 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read enough entity data into a byte array to fill the array.

@param b Byte array to fill with data from the stream.  If the stream does not
  have sufficient data to fill the array, then the contents of the remainder of
  the array will be undefined.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read.
"
      end

      operation 78389431 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key string associated with this entity within the backup data set.

@return The key string for this entity, equivalent to calling
  {@link BackupDataInput#getKey()} on the underlying {@link BackupDataInput}.
"
      end

      operation 78389559 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the total number of bytes of data available for the current entity.

@return The number of data bytes available, equivalent to calling
  {@link BackupDataInput#getDataSize()} on the underlying {@link BackupDataInput}.
"
      end
    end

    class 7063607 "BackupHelper"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the calling interface that {@link BackupAgentHelper} uses
when dispatching backup and restore operations to the installed helpers.
Applications can define and install their own helpers as well as using those
provided as part of the Android framework.
<p>
Although multiple helper objects may be installed simultaneously, each helper
is responsible only for handling its own data, and will not see entities
created by other components within the backup system.  Invocations of multiple
helpers are performed sequentially by the {@link BackupAgentHelper}, with each
helper given a chance to access its own saved state from within the state record
produced during the previous backup operation.

@see BackupAgentHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper
"
      operation 78382263 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine what application content
needs to be backed up, write it to <code>data</code>, and fill in
<code>newState</code> with the complete state as it exists now.
<p>
Implementing this method is much like implementing
{@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
onBackup()} &mdash; the method parameters are the same.  When this method is invoked the
{@code oldState} descriptor points to the beginning of the state data
written during this helper's previous backup operation, and the {@code newState}
descriptor points to the file location at which the helper should write its
new state after performing the backup operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek either the {@code oldState} or
the {@code newState} file descriptors.  It is essential that when reading the helper's
saved state from the {@code oldState} file, no extra content is consumed beyond
what was stored by this helper.  If more old state data is read, even accidentally,
it will make it impossible for additional helpers that may be invoked after this one
to properly reconstruct their prior state.</p>

@param oldState An open, read-only {@link android.os.ParcelFileDescriptor} pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data An open, read/write {@link BackupDataOutput}
           pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write {@link android.os.ParcelFileDescriptor} pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream.
"
      end

      operation 78382391 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
to restore a single entity from the restore data set.  This method will be
called for each entity in the data set that belongs to this handler.
<p class=\"note\">
<strong>Note:</strong> Do not close the <code>data</code> stream.  Do not read more than
{@link android.app.backup.BackupDataInputStream#size() size()} bytes from
<code>data</code>.</p>

@param data An open {@link BackupDataInputStream} from which the backup data can be read.
"
      end

      operation 78382519 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
after a restore operation to write the backup state file corresponding to
the data as processed by the helper.  The data written here will be
available to the helper during the next call to its
{@link #performBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
performBackup()} method.
<p>
This method will be called even if the handler's
{@link #restoreEntity(BackupDataInputStream) restoreEntity()} method was never invoked during
the restore operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek the {@code newState}
file descriptor.</p>

@param newState A {@link android.os.ParcelFileDescriptor} to which the new state will be
written.
"
      end
    end

    class 7063735 "BackupAgent"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the central interface between an
application and Android's data backup infrastructure.  An application that wishes
to participate in the backup and restore mechanism will declare a subclass of
{@link android.app.backup.BackupAgent}, implement the
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()}
and {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} methods,
and provide the name of its backup agent class in its {@code AndroidManifest.xml} file via
the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag's {@code android:backupAgent} attribute.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgent, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

<h3>Basic Operation</h3>
<p>
When the application makes changes to data that it wishes to keep backed up,
it should call the
{@link android.app.backup.BackupManager#dataChanged() BackupManager.dataChanged()} method.
This notifies the Android Backup Manager that the application needs an opportunity
to update its backup image.  The Backup Manager, in turn, schedules a
backup pass to be performed at an opportune time.
<p>
Restore operations are typically performed only when applications are first
installed on a device.  At that time, the operating system checks to see whether
there is a previously-saved data set available for the application being installed, and if so,
begins an immediate restore pass to deliver the backup data as part of the installation
process.
<p>
When a backup or restore pass is run, the application's process is launched
(if not already running), the manifest-declared backup agent class (in the {@code
android:backupAgent} attribute) is instantiated within
that process, and the agent's {@link #onCreate()} method is invoked.  This prepares the
agent instance to run the actual backup or restore logic.  At this point the
agent's
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()} or
{@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} method will be
invoked as appropriate for the operation being performed.
<p>
A backup data set consists of one or more \"entities,\" flattened binary data
records that are each identified with a key string unique within the data set.  Adding a
record to the active data set or updating an existing record is done by simply
writing new entity data under the desired key.  Deleting an entity from the data set
is done by writing an entity under that key with header specifying a negative data
size, and no actual entity data.
<p>
<b>Helper Classes</b>
<p>
An extensible agent based on convenient helper classes is available in
{@link android.app.backup.BackupAgentHelper}.  That class is particularly
suited to handling of simple file or {@link android.content.SharedPreferences}
backup and restore.

@see android.app.backup.BackupManager
@see android.app.backup.BackupAgentHelper
@see android.app.backup.BackupDataInput
@see android.app.backup.BackupDataOutput
"
      classrelation 15305783 // <generalisation>
	relation 15305783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15305783 // <generalisation>
	  b parent class_ref 6923575 // ContextWrapper
      end

      attribute 24338871 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24338999 "TYPE_EOF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 24339127 "TYPE_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "During a full restore, indicates that the file system object being restored
is an ordinary file.

"
      end

      attribute 24339255 "TYPE_DIRECTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "During a full restore, indicates that the file system object being restored
is a directory.

"
      end

      attribute 24339383 "TYPE_SYMLINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      classrelation 15306039 // mHandler (<unidirectional association>)
	relation 15306039 --->
	  a role_name "mHandler" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15306039 // mHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      operation 78383031 "getHandler"
	package return_type class_ref 6926391 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7063863 "SharedPrefsSynchronizer"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24339511 "mLatch"
	  const_attribute public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78383159 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 78383287 "waitForSharedPrefs"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Syncing shared preferences deferred writes needs to happen on the main looper thread"
      end

      operation 78383415 "BackupAgent"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78383543 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need an opportunity
to do one-time initialization before the actual backup or restore operation
is begun.
<p>
"
      end

      operation 78383671 "onDestroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need to do some
sort of shutdown process after backup or restore is completed.
<p>
Agents do not need to override this method.
"
      end

      operation 78383799 "onBackup"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being asked to write any data changed since the last
time it performed a backup operation. The state data recorded during the
last backup pass is provided in the <code>oldState</code> file
descriptor. If <code>oldState</code> is <code>null</code>, no old state
is available and the application should perform a full backup. In both
cases, a representation of the final backup state after this pass should
be written to the file pointed to by the file descriptor wrapped in
<code>newState</code>.
<p>
Each entity written to the {@link android.app.backup.BackupDataOutput}
<code>data</code> stream will be transmitted
over the current backup transport and stored in the remote data set under
the key supplied as part of the entity.  Writing an entity with a negative
data size instructs the transport to delete whatever entity currently exists
under that key from the remote data set.

@param oldState An open, read-only ParcelFileDescriptor pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data A structured wrapper around an open, read/write
           file descriptor pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream.
"
      end

      operation 78383927 "onRestore"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 7063991 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being restored from backup and should replace any
existing data with the contents of the backup. The backup data is
provided through the <code>data</code> parameter. Once
the restore is finished, the application should write a representation of
the final state to the <code>newState</code> file descriptor.
<p>
The application is responsible for properly erasing its old data and
replacing it with the data supplied to this method. No \"clear user data\"
operation will be performed automatically by the operating system. The
exception to this is in the case of a failed restore attempt: if
onRestore() throws an exception, the OS will assume that the
application's data may now be in an incoherent state, and will clear it
before proceeding.

@param data A structured wrapper around an open, read-only
           file descriptor pointing to a full snapshot of the
           application's data.  The application should consume every
           entity represented in this data stream.
@param appVersionCode The value of the <a
href=\"{@docRoot}guide/topics/manifest/manifest-element.html#vcode\">{@code
           android:versionCode}</a> manifest attribute,
           from the application that backed up this particular data set. This
           makes it possible for an application's agent to distinguish among any
           possible older data versions when asked to perform the restore
           operation.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after restoring its data from the <code>data</code> stream.
           When a full-backup dataset is being restored, this will be <code>null</code>.
"
      end

      operation 78384055 "onFullBackup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7064119 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is having its entire file system contents backed up.  {@code data}
points to the backup destination, and the app has the opportunity to choose which
files are to be stored.  To commit a file as part of the backup, call the
{@link #fullBackupFile(File, FullBackupDataOutput)} helper method.  After all file
data is written to the output, the agent returns from this method and the backup
operation concludes.

<p>Certain parts of the app's data are never backed up even if the app explicitly
sends them to the output:

<ul>
<li>The contents of the {@link #getCacheDir()} directory</li>
<li>The contents of the {@link #getCodeCacheDir()} directory</li>
<li>The contents of the {@link #getNoBackupFilesDir()} directory</li>
<li>The contents of the app's shared library directory</li>
</ul>

<p>The default implementation of this method backs up the entirety of the
application's \"owned\" file system trees to the output other than the few exceptions
listed above.  Apps only need to override this method if they need to impose special
limitations on which files are being stored beyond the control that
{@link #getNoBackupFilesDir()} offers.
Alternatively they can provide an xml resource to specify what data to include or exclude.


@param data A structured wrapper pointing to the backup destination.
@throws IOException

@see Context#getNoBackupFilesDir()
@see ApplicationInfo#fullBackupContent
@see #fullBackupFile(File, FullBackupDataOutput)
@see #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long)
"
      end

      operation 78384183 "onQuotaExceeded"
	public explicit_return_type "void"
	nparams 2
	  param in name "backupDataBytes" explicit_type "long"
	  param in name "quotaBytes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification that the application's current backup operation causes it to exceed
the maximum size permitted by the transport.  The ongoing backup operation is
halted and rolled back: any data that had been stored by a previous backup operation
is still intact.  Typically the quota-exceeded state will be detected before any data
is actually transmitted over the network.

<p>The {@code quotaBytes} value is the total data size currently permitted for this
application.  If desired, the application can use this as a hint for determining
how much data to store.  For example, a messaging application might choose to
store only the newest messages, dropping enough older content to stay under
the quota.

<p class=\"note\">Note that the maximum quota for the application can change over
time.  In particular, in the future the quota may grow.  Applications that adapt
to the quota when deciding what data to store should be aware of this and implement
their data storage mechanisms in a way that can take advantage of additional
quota.

@param backupDataBytes The amount of data measured while initializing the backup
   operation, if the total exceeds the app's alloted quota.  If initial measurement
   suggested that the data would fit but then too much data was actually submitted
   as part of the operation, then this value is the amount of data that had been
   streamed into the transport at the time the quota was reached.
@param quotaBytes The maximum data size that the transport currently permits
   this application to store as a backup.
"
      end

      operation 78384311 "applyXmlFiltersAndDoFullBackupForDomain"
	private explicit_return_type "void"
	nparams 6
	  param inout name "packageName" explicit_type "String"
	  param inout name "domainToken" explicit_type "String"
	  param inout name "includeMap" explicit_type "Map<String, Set<String>>"
	  param inout name "filterSet" type class_ref 7041591 // ArraySet
	  param inout name "traversalExcludeSet" type class_ref 7041591 // ArraySet
	  param inout name "data" type class_ref 7064119 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String> ${p3}, ${t4}<String> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the xml yielded any <include/> tag for the provided <code>domainToken</code>.
If so, perform a {@link #fullBackupFileTree} which backs up the file or recurses if the path
is a directory.
"
      end

      operation 78384439 "fullBackupFile"
	public explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "output" type class_ref 7064119 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an entire file as part of a full-backup operation.  The file's contents
will be delivered to the backup destination along with the metadata necessary
to place it with the proper location and permissions on the device where the
data is restored.

<p class=\"note\">Attempting to back up files in directories that are ignored by
the backup system will have no effect.  For example, if the app calls this method
with a file inside the {@link #getNoBackupFilesDir()} directory, it will be ignored.
See {@link #onFullBackup(FullBackupDataOutput) for details on what directories
are excluded from backups.

@param file The file to be backed up.  The file must exist and be readable by
    the caller.
@param output The destination to which the backed-up file data will be sent.
"
      end

      operation 78384567 "fullBackupFileTree"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "packageName" explicit_type "String"
	  param inout name "domain" explicit_type "String"
	  param inout name "startingPath" explicit_type "String"
	  param inout name "manifestExcludes" type class_ref 7041591 // ArraySet
	  param inout name "systemExcludes" type class_ref 7041591 // ArraySet
	  param inout name "output" type class_ref 7064119 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String> ${p3}, ${t4}<String> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan the dir tree (if it actually exists) and process each entry we find.  If the
'excludes' parameters are non-null, they are consulted each time a new file system entity
is visited to see whether that entity (and its subtree, if appropriate) should be
omitted from the backup process.

@param systemExcludes An optional list of excludes.
@hide
"
      end

      operation 78384695 "onRestoreFile"
	public explicit_return_type "void"
	nparams 6
	  param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param inout name "destination" explicit_type "File"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle the data delivered via the given file descriptor during a full restore
operation.  The agent is given the path to the file's original location as well
as its size and metadata.
<p>
The file descriptor can only be read for {@code size} bytes; attempting to read
more data has undefined behavior.
<p>
The default implementation creates the destination file/directory and populates it
with the data from the file descriptor, then sets the file's access mode and
modification time to match the restore arguments.

@param data A read-only file descriptor from which the agent can read {@code size}
    bytes of file data.
@param size The number of bytes of file content to be restored to the given
    destination.  If the file system object being restored is a directory, {@code size}
    will be zero.
@param destination The File on disk to be restored with the given data.
@param type The kind of file system object being restored.  This will be either
    {@link BackupAgent#TYPE_FILE} or {@link BackupAgent#TYPE_DIRECTORY}.
@param mode The access mode to be assigned to the destination after its data is
    written.  This is in the standard format used by {@code chmod()}.
@param mtime The modification time of the file when it was backed up, suitable to
    be assigned to the file after its data is written.
@throws IOException
"
      end

      operation 78384823 "isFileEligibleForRestore"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "destination" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78384951 "isFileSpecifiedInPathList"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "canonicalPathList" explicit_type "Collection<String>"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if the provided file is either directly in the provided list, or the provided
file is within a directory in the list.
"
      end

      operation 78385079 "onRestoreFile"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param inout name "domain" explicit_type "String"
	  param inout name "path" explicit_type "String"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only specialized platform agents should overload this entry point to support
restores to crazy non-app locations.
@hide
"
      end

      operation 78385207 "onRestoreFinished"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application's restore operation has completed.  This method is called after
all available data has been delivered to the application for restore (via either
the {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} or
{@link #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long) onRestoreFile()}
callbacks).  This provides the app with a stable end-of-restore opportunity to
perform any appropriate post-processing on the data that was just delivered.

@see #onRestore(BackupDataInput, int, ParcelFileDescriptor)
@see #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long)
"
      end

      operation 78385335 "onBind"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----- Core implementation -----
 @hide "
      end

      classrelation 15306295 // mBinder (<unidirectional association>)
	relation 15306295 --->
	  a role_name "mBinder" init_value " new BackupServiceBinder().asBinder()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15306295 // mBinder (<unidirectional association>)
	  b parent class_ref 6927031 // IBinder
      end

      operation 78385463 "attach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      class 7064247 "BackupServiceBinder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15306423 // <generalisation>
	  relation 15306423 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15306423 // <generalisation>
	    b parent class_ref 7024823 // Stub
	end

	operation 78385591 "doBackup"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	    param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	    param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" type class_ref 7025079 // IBackupManager
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78385719 "doRestore"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "appVersionCode" explicit_type "int"
	    param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" type class_ref 7025079 // IBackupManager
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78385847 "doFullBackup"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" type class_ref 7025079 // IBackupManager
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78385975 "doMeasureFullBackup"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" type class_ref 7025079 // IBackupManager
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78386103 "doRestoreFile"
	  public explicit_return_type "void"
	  nparams 9
	    param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "size" explicit_type "long"
	    param in name "type" explicit_type "int"
	    param inout name "domain" explicit_type "String"
	    param inout name "path" explicit_type "String"
	    param in name "mode" explicit_type "long"
	    param in name "mtime" explicit_type "long"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" type class_ref 7025079 // IBackupManager
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78386231 "doRestoreFinished"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" type class_ref 7025079 // IBackupManager
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78386359 "fail"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "message" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78386487 "doQuotaExceeded"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "backupDataBytes" explicit_type "long"
	    param in name "quotaBytes" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7064375 "FailRunnable"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78386615 "FailRunnable"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "message" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78386743 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7063991 "BackupDataInput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} reads
information from the backup data set, via its
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.  The data is presented as a set of \"entities,\" each
representing one named record as previously stored by the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} implementation.  An entity is composed of a descriptive header plus a
byte array that holds the raw data saved in the remote backup.
<p>
The agent must consume every entity in the data stream, otherwise the
restored state of the application will be incomplete.
<h3>Example</h3>
<p>
A typical
{@link BackupAgent#onRestore(BackupDataInput,int,ParcelFileDescriptor)
onRestore()} implementation might be structured something like this:
<pre>
public void onRestore(BackupDataInput data, int appVersionCode,
                      ParcelFileDescriptor newState) {
    while (data.readNextHeader()) {
        String key = data.getKey();
        int dataSize = data.getDataSize();

        if (key.equals(MY_BACKUP_KEY_ONE)) {
            // process this kind of record here
            byte[] buffer = new byte[dataSize];
            data.readEntityData(buffer, 0, dataSize); // reads the entire entity at once

            // now 'buffer' holds the raw data and can be processed however
            // the agent wishes
            processBackupKeyOne(buffer);
        } else if (key.equals(MY_BACKUP_KEY_TO_IGNORE) {
            // a key we recognize but wish to discard
            data.skipEntityData();
        } // ... etc.
   }
}</pre>
"
      attribute 24339639 "mBackupReader"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7064759 "EntityHeader"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24339895 "dataSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 15307319 // mHeader (<unidirectional association>)
	relation 15307319 --->
	  a role_name "mHeader" init_value " new EntityHeader()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15307319 // mHeader (<unidirectional association>)
	  b parent class_ref 7064759 // EntityHeader
      end

      attribute 24339767 "mHeaderReady"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78387383 "BackupDataInput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 78387511 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 78387639 "readNextHeader"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract the next entity header from the restore stream.  After this method
return success, the {@link #getKey()} and {@link #getDataSize()} methods can
be used to inspect the entity that is now available for processing.

@return <code>true</code> when there is an entity ready for consumption from the
   restore stream, <code>false</code> if the restore stream has been fully consumed.
@throws IOException if an error occurred while reading the restore stream
"
      end

      operation 78387767 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key associated with the current entity in the restore stream
@return the current entity's key string
@throws IllegalStateException if the next record header has not yet been read
"
      end

      operation 78387895 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the size in bytes of the data associated with the current entity in the
restore stream.

@return The size of the record's raw data, in bytes
@throws IllegalStateException if the next record header has not yet been read
"
      end

      operation 78388023 "readEntityData"
	public explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a record's raw data from the restore stream.  The record's header must first
have been processed by the {@link #readNextHeader()} method.  Multiple calls to
this method may be made in order to process the data in chunks; not all of it
must be read in a single call.  Once all of the raw data for the current entity
has been read, further calls to this method will simply return zero.

@param data An allocated byte array of at least 'size' bytes
@param offset Offset within the 'data' array at which the data will be placed
   when read from the stream
@param size The number of bytes to read in this pass
@return The number of bytes of data read.  Once all of the data for this entity
   has been read, further calls to this method will return zero.
@throws IOException if an error occurred when trying to read the restore data stream
"
      end

      operation 78388151 "skipEntityData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume the current entity's data without extracting it into a buffer
for further processing.  This allows a {@link android.app.backup.BackupAgent} to
efficiently discard obsolete or otherwise uninteresting records during the
restore operation.

@throws IOException if an error occurred when trying to read the restore data stream
"
      end

      operation 78388279 "ctor"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 78388407 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 78388535 "readNextHeader_native"
	private explicit_return_type "int"
	nparams 2
	  param in name "mBackupReader" explicit_type "long"
	  param inout name "entity" type class_ref 7064759 // EntityHeader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 78388663 "readEntityData_native"
	private explicit_return_type "int"
	nparams 4
	  param in name "mBackupReader" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 78388791 "skipEntityData_native"
	private explicit_return_type "int"
	nparams 1
	  param in name "mBackupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 7064119 "FullBackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the interface through which a {@link BackupAgent} writes entire files
to a full backup data set, via its {@link BackupAgent#onFullBackup(FullBackupDataOutput)}
method.
"
      classrelation 15315895 // mData (<unidirectional association>)
	relation 15315895 --->
	  a role_name "mData" const_relation private
	    comment " Currently a name-scoping shim around BackupDataOutput
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15315895 // mData (<unidirectional association>)
	  b parent class_ref 7063351 // BackupDataOutput
      end

      attribute 24349239 "mSize"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78415927 "FullBackupDataOutput"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - used only in measure operation "
      end

      operation 78416055 "FullBackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78416183 "getData"
	public return_type class_ref 7063351 // BackupDataOutput
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78416311 "addSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - used for measurement pass "
      end

      operation 78416439 "getSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - used for measurement pass "
      end
    end

    class 7064503 "BackupAgentHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A convenient {@link BackupAgent} wrapper class that automatically manages
heterogeneous data sets within the backup data, each identified by a unique
key prefix.  When processing a backup or restore operation, the BackupAgentHelper
dispatches to one or more installed {@link BackupHelper} objects, each
of which is responsible for a defined subset of the data being processed.
<p>
An application will typically extend this class in its own
backup agent. Then, within the agent's {@link BackupAgent#onCreate() onCreate()}
method, it will call {@link #addHelper(String, BackupHelper) addHelper()} one or more times to
install the handlers for each kind of data it wishes to manage within its backups.
<p>
The Android framework currently provides two predefined {@link BackupHelper} classes:</p>
<ul><li>{@link FileBackupHelper} - Manages the backup and restore of entire files
within an application's data directory hierarchy.</li>
<li>{@link SharedPreferencesBackupHelper} - Manages the backup and restore of an
application's {@link android.content.SharedPreferences} data.</li></ul>
<p>
An application can also implement its own helper classes to work within the
{@link BackupAgentHelper} framework.  See the {@link BackupHelper} interface
documentation for details.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgentHelper, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p>
</div>

@see BackupHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper
"
      classrelation 15306935 // <generalisation>
	relation 15306935 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15306935 // <generalisation>
	  b parent class_ref 7063735 // BackupAgent
      end

      classrelation 15307191 // mDispatcher (<unidirectional association>)
	relation 15307191 --->
	  a role_name "mDispatcher" init_value " new BackupHelperDispatcher()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15307191 // mDispatcher (<unidirectional association>)
	  b parent class_ref 7064631 // BackupHelperDispatcher
      end

      operation 78386871 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the backup process on each of the configured handlers.
"
      end

      operation 78386999 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 7063991 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the restore process on each of the configured handlers.
"
      end

      operation 78387127 "getDispatcher"
	public return_type class_ref 7064631 // BackupHelperDispatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 78387255 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param inout name "keyPrefix" explicit_type "String"
	  param inout name "helper" type class_ref 7063607 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a helper for a given data subset to the agent's configuration.  Each helper
must have a prefix string that is unique within this backup agent's set of
helpers.

@param keyPrefix A string used to disambiguate the various helpers within this agent
@param helper A backup/restore helper object to be invoked during backup and restore
   operations.
"
      end
    end

    class 7064631 "BackupHelperDispatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " @hide "
      class 7065015 "Header"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24340407 "chunkSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " not including the header"
	end

      end

      operation 78390967 "BackupHelperDispatcher"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78391095 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param inout name "keyPrefix" explicit_type "String"
	  param inout name "helper" type class_ref 7063607 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78391223 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78391351 "doOneBackup"
	private explicit_return_type "void"
	nparams 5
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "header" type class_ref 7065015 // Header
	  param inout name "helper" type class_ref 7063607 // BackupHelper
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78391479 "performRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "input" type class_ref 7063991 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78391607 "readHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 7065015 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 78391735 "skipChunk_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "bytesToSkip" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 78391863 "allocateHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 7065015 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 78391991 "writeHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "h" type class_ref 7065015 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end
    end

    class 7065143 "BackupManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface through which an application interacts with the Android backup service to
request backup and restore operations.
Applications instantiate it using the constructor and issue calls through that instance.
<p>
When an application has made changes to data which should be backed up, a
call to {@link #dataChanged()} will notify the backup service. The system
will then schedule a backup operation to occur in the near future. Repeated
calls to {@link #dataChanged()} have no further effect until the backup
operation actually occurs.
<p>
A backup or restore operation for your application begins when the system launches the
{@link android.app.backup.BackupAgent} subclass you've declared in your manifest. See the
documentation for {@link android.app.backup.BackupAgent} for a detailed description
of how the operation then proceeds.
<p>
Several attributes affecting the operation of the backup and restore mechanism
can be set on the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag in your application's AndroidManifest.xml file.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupManager, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

@attr ref android.R.styleable#AndroidManifestApplication_allowBackup
@attr ref android.R.styleable#AndroidManifestApplication_backupAgent
@attr ref android.R.styleable#AndroidManifestApplication_killAfterRestore
@attr ref android.R.styleable#AndroidManifestApplication_restoreAnyVersion
"
      attribute 24340535 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " BackupObserver status codes

Indicates that backup succeeded.

@hide

"
      end

      attribute 24340663 "ERROR_BACKUP_NOT_ALLOWED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that backup is either not enabled at all or
backup for the package was rejected by backup service
or backup transport,

@hide

"
      end

      attribute 24340791 "ERROR_PACKAGE_NOT_FOUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The requested app is not installed on the device.

@hide

"
      end

      attribute 24340919 "ERROR_TRANSPORT_ABORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " BackupTransport.TRANSPORT_ERROR"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The transport for some reason was not in a good state and
aborted the entire backup request. This is a transient
failure and should not be retried immediately.

@hide

"
      end

      attribute 24341047 "ERROR_TRANSPORT_PACKAGE_REJECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value "
            BackupTransport.TRANSPORT_PACKAGE_REJECTED"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Returned when the transport was unable to process the
backup request for a given package, for example if the
transport hit a transient network failure. The remaining
packages provided to {@link #requestBackup(String[], BackupObserver)}
will still be attempted.

@hide

"
      end

      attribute 24341175 "ERROR_TRANSPORT_QUOTA_EXCEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value "
            BackupTransport.TRANSPORT_QUOTA_EXCEEDED"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Returned when the transport reject the attempt to backup because
backup data size exceeded current quota limit for this package.

@hide

"
      end

      attribute 24341303 "ERROR_AGENT_FAILURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " BackupTransport.AGENT_ERROR"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The {@link BackupAgent} for the requested package failed for some reason
and didn't provide appropriate backup data.

@hide

"
      end

      classrelation 15308471 // mContext (<unidirectional association>)
	relation 15308471 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15308471 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      classrelation 15308599 // sService (<unidirectional association>)
	relation 15308599 --->
	  a role_name "sService" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15308599 // sService (<unidirectional association>)
	  b parent class_ref 7025079 // IBackupManager
      end

      operation 78392119 "checkServiceBinder"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78392247 "BackupManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a BackupManager object through which the application can
communicate with the Android backup system.

@param context The {@link android.content.Context} that was provided when
               one of your application's {@link android.app.Activity Activities}
               was created.
"
      end

      operation 78392375 "dataChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the Android backup system that your application wishes to back up
new changes to its data.  A backup operation using your application's
{@link android.app.backup.BackupAgent} subclass will be scheduled when you
call this method.
"
      end

      operation 78392503 "dataChanged"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for callers who need to indicate that some other package
needs a backup pass.  This can be useful in the case of groups of packages
that share a uid.
<p>
This method requires that the application hold the \"android.permission.BACKUP\"
permission if the package named in the argument does not run under the same uid
as the caller.

@param packageName The package name identifying the application to back up.
"
      end

      operation 78392631 "requestRestore"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 7065271 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the calling application from backup.  The data will be restored from the
current backup dataset if the application has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this application
in either source, a nonzero value will be returned.

<p>If this method returns zero (meaning success), the OS will attempt to retrieve
a backed-up dataset from the remote transport, instantiate the application's
backup agent, and pass the dataset to the agent's
{@link android.app.backup.BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.

@param observer The {@link RestoreObserver} to receive callbacks during the restore
operation. This must not be null.

@return Zero on success; nonzero on error.
"
      end

      operation 78392759 "beginRestoreSession"
	public return_type class_ref 7065399 // RestoreSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " system APIs start here

Begin the process of restoring data from backup.  See the
{@link android.app.backup.RestoreSession} class for documentation on that process.
@hide
"
      end

      operation 78392887 "setBackupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide
"
      end

      operation 78393015 "isBackupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide
"
      end

      operation 78393143 "setAutoRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Enable/disable data restore at application install time.  When enabled, app
installation will include an attempt to fetch the app's historical data from
the archival restore dataset (if any).  When disabled, no such attempt will
be made.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide
"
      end

      operation 78393271 "getCurrentTransport"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method.
@return The name of the currently active backup transport.  In case of
  failure or if no transport is currently active, this method returns {@code null}.

@hide
"
      end

      operation 78393399 "listAllTransports"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method.

@hide
"
      end

      operation 78393527 "selectBackupTransport"
	public explicit_return_type "String"
	nparams 1
	  param inout name "transport" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
  of the names returned by {@link #listAllTransports()}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null.

@hide
"
      end

      operation 78393655 "backupNow"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Schedule an immediate backup attempt for all pending key/value updates.  This
is primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide
"
      end

      operation 78393783 "getAvailableRestoreToken"
	public explicit_return_type "long"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Ask the framework which dataset, if any, the given package's data would be
restored from if we were to install it right now.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package whose most-suitable dataset we
    wish to look up
@return The dataset token from which a restore should be attempted, or zero if
    no suitable data is available.

@hide
"
      end

      operation 78393911 "isAppEligibleForBackup"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Ask the framework whether this app is eligible for backup.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package.
@return Whether this app is eligible for backup.

@hide
"
      end

      operation 78394039 "requestBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packages" explicit_type "String"
	multiplicity "[]"
	  param inout name "observer" type class_ref 7065527 // BackupObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Request an immediate backup, providing an observer to which results of the backup operation
will be published. The Android backup system will decide for each package whether it will
be full app data backup or key/value-pair-based backup.

<p>If this method returns {@link BackupManager#SUCCESS}, the OS will attempt to backup all
provided packages using the remote transport.

@param packages List of package names to backup.
@param observer The {@link BackupObserver} to receive callbacks during the backup
operation. Could be {@code null}.
@return {@link BackupManager#SUCCESS} on success; nonzero on error.
@exception  IllegalArgumentException on null or empty {@code packages} param.

@hide
"
      end

      class 7065655 "BackupObserverWrapper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15309495 // <generalisation>
	  relation 15309495 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15309495 // <generalisation>
	    b parent class_ref 7065911 // Stub
	end

	classrelation 15309623 // mHandler (<unidirectional association>)
	  relation 15309623 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15309623 // mHandler (<unidirectional association>)
	    b parent class_ref 6926391 // Handler
	end

	classrelation 15309751 // mObserver (<unidirectional association>)
	  relation 15309751 --->
	    a role_name "mObserver" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15309751 // mObserver (<unidirectional association>)
	    b parent class_ref 7065527 // BackupObserver
	end

	attribute 24341815 "MSG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24341943 "MSG_RESULT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24342071 "MSG_FINISHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78395831 "BackupObserverWrapper"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 6923703 // Context
	    param inout name "observer" type class_ref 7065527 // BackupObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78395959 "onUpdate"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "currentPackage" explicit_type "String"
	    param inout name "backupProgress" type class_ref 7066167 // BackupProgress
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Binder calls into this object just enqueue on the main-thread handler"
	end

	operation 78396087 "onResult"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "currentPackage" explicit_type "String"
	    param in name "status" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78396215 "backupFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "status" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7065271 "RestoreObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Callback class for receiving progress reports during a restore operation.  These
methods will all be called on your application's main thread.
"
      operation 78433079 "restoreSetsAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 7066551 // RestoreSet
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}.

@hide
"
      end

      operation 78433207 "restoreStarting"
	public explicit_return_type "void"
	nparams 1
	  param in name "numPackages" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation.
"
      end

      operation 78433335 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param in name "nowBeingRestored" explicit_type "int"
	  param inout name "currentPackage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int)} callback.  This method
is not guaranteed to be called: if the transport is unable to obtain
data for one or more of the requested packages, no onUpdate() call will
occur for those packages.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the {@link #restoreStarting(int)} callback, of the package now being
  restored.  This may be non-monotonic; it is intended purely as a rough
  indication of the backup manager's progress through the overall restore process.
@param currentPackage The name of the package now being restored.
"
      end

      operation 78433463 "restoreFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore process has completed.  This method will always be called,
even if no individual package restore operations were attempted.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed.
"
      end
    end

    class 7065399 "RestoreSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface for managing a restore session.
@hide
"
      classrelation 15319863 // mContext (<unidirectional association>)
	relation 15319863 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15319863 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      classrelation 15319991 // mBinder (<unidirectional association>)
	relation 15319991 --->
	  a role_name "mBinder" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15319991 // mBinder (<unidirectional association>)
	  b parent class_ref 7068215 // IRestoreSession
      end

      class 7069239 "RestoreObserverWrapper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15320247 // <generalisation>
	  relation 15320247 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15320247 // <generalisation>
	    b parent class_ref 7068727 // Stub
	end

	classrelation 15320375 // mHandler (<unidirectional association>)
	  relation 15320375 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15320375 // mHandler (<unidirectional association>)
	    b parent class_ref 6926391 // Handler
	end

	classrelation 15320503 // mAppObserver (<unidirectional association>)
	  relation 15320503 --->
	    a role_name "mAppObserver" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15320503 // mAppObserver (<unidirectional association>)
	    b parent class_ref 7065271 // RestoreObserver
	end

	attribute 24355767 "MSG_RESTORE_STARTING"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24355895 "MSG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24356023 "MSG_RESTORE_FINISHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24356151 "MSG_RESTORE_SETS_AVAILABLE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 78434359 "RestoreObserverWrapper"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 6923703 // Context
	    param inout name "appObserver" type class_ref 7065271 // RestoreObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78434487 "restoreSetsAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "result" type class_ref 7066551 // RestoreSet
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Binder calls into this object just enqueue on the main-thread handler"
	end

	operation 78434615 "restoreStarting"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "numPackages" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78434743 "onUpdate"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "nowBeingRestored" explicit_type "int"
	    param inout name "currentPackage" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78434871 "restoreFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "error" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 15320119 // mObserver (<unidirectional association>)
	relation 15320119 --->
	  a role_name "mObserver" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15320119 // mObserver (<unidirectional association>)
	  b parent class_ref 7069239 // RestoreObserverWrapper
      end

      operation 78433591 "getAvailableRestoreSets"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 7065271 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the current transport what the available restore sets are.

@param observer a RestoreObserver object whose restoreSetsAvailable() method will
  be called on the application's main thread in order to supply the results of
  the restore set lookup by the backup transport.  This parameter must not be
  null.
@return Zero on success, nonzero on error.  The observer's restoreSetsAvailable()
  method will only be called if this method returned zero.
"
      end

      operation 78433719 "restoreAll"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 7065271 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the given set onto the device, replacing the current data of any app
contained in the restore set with the data previously backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link #getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
"
      end

      operation 78433847 "restoreSome"
	public explicit_return_type "int"
	nparams 3
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 7065271 // RestoreObserver
	  param inout name "packages" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore select packages from the given set onto the device, replacing the
current data of any app contained in the set with the data previously
backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success, nonzero on error. The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
@param packages The set of packages for which to attempt a restore.  Regardless of
  the contents of the actual back-end dataset named by {@code token}, only
  applications mentioned in this list will have their data restored.

@hide
"
      end

      operation 78433975 "restorePackage"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "observer" type class_ref 7065271 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore a single application from backup.  The data will be restored from the
current backup dataset if the given package has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this package
in either source, a nonzero value will be returned.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param packageName The name of the package whose data to restore.  If this is
  not the name of the caller's own package, then the android.permission.BACKUP
  permission must be held.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
"
      end

      operation 78434103 "endRestoreSession"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End this restore session.  After this method is called, the RestoreSession
object is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link #restorePackage(String, RestoreObserver)} failed.
"
      end

      operation 78434231 "RestoreSession"
	package explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "binder" type class_ref 7068215 // IRestoreSession
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Nonpublic implementation here
"
      end
    end

    class 7065527 "BackupObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Callback class for receiving progress reports during a backup operation.  These
methods will all be called on your application's main thread.

@hide
"
      operation 78396343 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "currentBackupPackage" explicit_type "String"
	  param inout name "backupProgress" type class_ref 7066167 // BackupProgress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method could be called several times for packages with full data backup.
It will tell how much of backup data is already saved and how much is expected.

@param currentBackupPackage The name of the package that now being backuped.
@param backupProgress Current progress of backup for the package.
"
      end

      operation 78396471 "onResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "currentBackupPackage" explicit_type "String"
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The backup of single package has completed.  This method will be called at most one time
for each package and could be not called if backup is failed before and
backupFinished() is called.

@param currentBackupPackage The name of the package that was backuped.
@param status Zero on success; a nonzero error code if the backup operation failed.
"
      end

      operation 78396599 "backupFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The backup process has completed.  This method will always be called,
even if no individual package backup operations were attempted.

@param status Zero on success; a nonzero error code if the backup operation
  as a whole failed.
"
      end
    end

    class 7065783 "IBackupObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Callback class for receiving progress reports during a backup operation.  These
methods will all be called on your application's main thread.

@hide
"
      class 7065911 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15308855 // <generalisation>
	  relation 15308855 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15308855 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15308983 // <realization>
	  relation 15308983 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15308983 // <realization>
	    b parent class_ref 7065783 // IBackupObserver
	end

	operation 78394167 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78394295 "asInterface"
	  class_operation public return_type class_ref 7065783 // IBackupObserver
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IBackupObserver interface,
generating a proxy if needed.
"
	end

	operation 78394423 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78394551 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7066039 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15309239 // <realization>
	    relation 15309239 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15309239 // <realization>
	      b parent class_ref 7065783 // IBackupObserver
	  end

	  classrelation 15309367 // mRemote (<unidirectional association>)
	    relation 15309367 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15309367 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78394679 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78394807 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78394935 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78395063 "onUpdate"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "currentPackage" explicit_type "String"
	      param inout name "backupProgress" type class_ref 7066167 // BackupProgress
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "This method could be called several times for packages with full data backup.
It will tell how much of backup data is already saved and how much is expected.

@param currentBackupPackage The name of the package that now being backuped.
@param backupProgress Current progress of backup for the package.
"
	  end

	  operation 78395191 "onResult"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "currentPackage" explicit_type "String"
	      param in name "status" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The backup of single package has completed.  This method will be called at most one time
for each package and could be not called if backup is failed before and
backupFinished() is called.

@param currentBackupPackage The name of the package that was backuped.
@param status Zero on success; a nonzero error code if the backup operation failed.
"
	  end

	  operation 78395319 "backupFinished"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "status" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The backup process has completed.  This method will always be called,
even if no individual package backup operations were attempted.

@param status Zero on success; a nonzero error code if the backup operation
  as a whole failed.
"
	  end
	end

	attribute 24341431 "TRANSACTION_onUpdate"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24341559 "TRANSACTION_onResult"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24341687 "TRANSACTION_backupFinished"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 15308727 // <generalisation>
	relation 15308727 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15308727 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      operation 78395447 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "currentPackage" explicit_type "String"
	  param inout name "backupProgress" type class_ref 7066167 // BackupProgress
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method could be called several times for packages with full data backup.
It will tell how much of backup data is already saved and how much is expected.

@param currentBackupPackage The name of the package that now being backuped.
@param backupProgress Current progress of backup for the package.
"
      end

      operation 78395575 "onResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "currentPackage" explicit_type "String"
	  param in name "status" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The backup of single package has completed.  This method will be called at most one time
for each package and could be not called if backup is failed before and
backupFinished() is called.

@param currentBackupPackage The name of the package that was backuped.
@param status Zero on success; a nonzero error code if the backup operation failed.
"
      end

      operation 78395703 "backupFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The backup process has completed.  This method will always be called,
even if no individual package backup operations were attempted.

@param status Zero on success; a nonzero error code if the backup operation
  as a whole failed.
"
      end
    end

    class 7066167 "BackupProgress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Information about current progress of full data backup
Used in {@link BackupObserver#onUpdate(String, BackupProgress)}

@hide
"
      classrelation 15309879 // <realization>
	relation 15309879 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15309879 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24342199 "bytesExpected"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Expected size of data in full backup.

"
      end

      attribute 24342327 "bytesTransferred"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Amount of backup data that is already saved in backup.

"
      end

      operation 78396727 "BackupProgress"
	public explicit_return_type ""
	nparams 2
	  param in name "_bytesExpected" explicit_type "long"
	  param in name "_bytesTransferred" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78396855 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78396983 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15310007 // CREATOR (<unidirectional association>)
	relation 15310007 --->
	  a role_name "CREATOR" init_value " new Creator<BackupProgress>() {
        public BackupProgress createFromParcel(Parcel in) {
            return new BackupProgress(in);
        }

        public BackupProgress[] newArray(int size) {
            return new BackupProgress[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BackupProgress> ${name}${value};
"
	    classrelation_ref 15310007 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78397111 "BackupProgress"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7066295 "BackupTransport"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Concrete class that provides a stable-API bridge between IBackupTransport
and its implementations.

@hide
"
      attribute 24342455 "TRANSPORT_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Zero return always means things are okay.  If returned from
 getNextFullRestoreDataChunk(), it means that no data could be delivered at
 this time, but the restore is still running and the caller should simply
 retry.
"
      end

      attribute 24342583 "NO_MORE_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -1 is special; it is used in getNextFullRestoreDataChunk() to indicate that
 we've delivered the entire data stream for the current restore target.
"
      end

      attribute 24342711 "TRANSPORT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Result codes that indicate real errors are negative and not -1
"
      end

      attribute 24342839 "TRANSPORT_NOT_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24342967 "TRANSPORT_PACKAGE_REJECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24343095 "AGENT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1003"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24343223 "AGENT_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24343351 "TRANSPORT_QUOTA_EXCEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1005"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24343479 "FLAG_USER_INITIATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates that operation was initiated by user, not a scheduled one.
 Transport should ignore its own moratoriums for call with this flag set.
"
      end

      operation 78397239 "getBinder"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78397367 "name"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Transport self-description and general configuration interfaces


Ask the transport for the name under which it should be registered.  This will
typically be its host service's component name, but need not be.
"
      end

      operation 78397495 "configurationIntent"
	public return_type class_ref 6925623 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport for an Intent that can be used to launch any internal
configuration Activity that it wishes to present.  For example, the transport
may offer a UI for allowing the user to supply login credentials for the
transport's off-device backend.

<p>If the transport does not supply any user-facing configuration UI, it should
return {@code null} from this method.

@return An Intent that can be passed to Context.startActivity() in order to
        launch the transport's configuration UI.  This method will return {@code null}
        if the transport does not offer any user-facing configuration UI.
"
      end

      operation 78397623 "currentDestinationString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On demand, supply a one-line string that can be shown to the user that
describes the current backend destination.  For example, a transport that
can potentially associate backup data with arbitrary user accounts should
include the name of the currently-active account here.

@return A string describing the destination to which the transport is currently
        sending data.  This method should not return null.
"
      end

      operation 78397751 "dataManagementIntent"
	public return_type class_ref 6925623 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport for an Intent that can be used to launch a more detailed
secondary data management activity.  For example, the configuration intent might
be one for allowing the user to select which account they wish to associate
their backups with, and the management intent might be one which presents a
UI for managing the data on the backend.

<p>In the Settings UI, the configuration intent will typically be invoked
when the user taps on the preferences item labeled with the current
destination string, and the management intent will be placed in an overflow
menu labelled with the management label string.

<p>If the transport does not supply any user-facing data management
UI, then it should return {@code null} from this method.

@return An intent that can be passed to Context.startActivity() in order to
        launch the transport's data-management UI.  This method will return
        {@code null} if the transport does not offer any user-facing data
        management UI.
"
      end

      operation 78397879 "dataManagementLabel"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On demand, supply a short string that can be shown to the user as the label
on an overflow menu item used to invoked the data management UI.

@return A string to be used as the label for the transport's data management
        affordance.  If the transport supplies a data management intent, this
        method must not return {@code null}.
"
      end

      operation 78398007 "transportDirName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport where, on local device storage, to keep backup state blobs.
This is per-transport so that mock transports used for testing can coexist with
\"live\" backup services without interfering with the live bookkeeping.  The
returned string should be a name that is expected to be unambiguous among all
available backup transports; the name of the class implementing the transport
is a good choice.

@return A unique name, suitable for use as a file or directory name, that the
        Backup Manager could use to disambiguate state files associated with
        different backup transports.
"
      end

      operation 78398135 "initializeDevice"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Device-level operations common to both key/value and full-data storage

Initialize the server side storage for this device, erasing all stored data.
The transport may send the request immediately, or may buffer it.  After
this is called, {@link #finishBackup} will be called to ensure the request
is sent and received successfully.

<p>If the transport returns anything other than TRANSPORT_OK from this method,
the OS will halt the current initialize operation and schedule a retry in the
near future.  Even if the transport is in a state such that attempting to
\"initialize\" the backend storage is meaningless -- for example, if there is
no current live dataset at all, or there is no authenticated account under which
to store the data remotely -- the transport should return TRANSPORT_OK here
and treat the initializeDevice() / finishBackup() pair as a graceful no-op.

@return One of {@link BackupTransport#TRANSPORT_OK} (OK so far) or
  {@link BackupTransport#TRANSPORT_ERROR} (to retry following network error
  or other failure).
"
      end

      operation 78398263 "clearBackupData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "packageInfo" type class_ref 7008823 // PackageInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Erase the given application's data from the backup destination.  This clears
out the given package's data from the current backup set, making it as though
the app had never yet been backed up.  After this is called, {@link finishBackup}
must be called to ensure that the operation is recorded successfully.

@return the same error codes as {@link #performBackup}.
"
      end

      operation 78398391 "finishBackup"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish sending application data to the backup destination.  This must be
called after {@link #performBackup}, {@link #performFullBackup}, or {@link clearBackupData}
to ensure that all data is sent and the operation properly finalized.  Only when this
method returns true can a backup be assumed to have succeeded.

@return the same error codes as {@link #performBackup} or {@link #performFullBackup}.
"
      end

      operation 78398519 "requestBackupTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Key/value incremental backup support interfaces

Verify that this is a suitable time for a key/value backup pass.  This should return zero
if a backup is reasonable right now, some positive value otherwise.  This method
will be called outside of the {@link #performBackup}/{@link #finishBackup} pair.

<p>If this is not a suitable time for a backup, the transport should return a
backoff delay, in milliseconds, after which the Backup Manager should try again.

@return Zero if this is a suitable time for a backup pass, or a positive time delay
  in milliseconds to suggest deferring the backup pass for a while.
"
      end

      operation 78398647 "performBackup"
	public explicit_return_type "int"
	nparams 3
	  param inout name "packageInfo" type class_ref 7008823 // PackageInfo
	  param inout name "inFd" type class_ref 6986295 // ParcelFileDescriptor
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send one application's key/value data update to the backup destination.  The
transport may send the data immediately, or may buffer it.  If this method returns
{@link #TRANSPORT_OK}, {@link #finishBackup} will then be called to ensure the data
is sent and recorded successfully.

@param packageInfo The identity of the application whose data is being backed up.
  This specifically includes the signature list for the package.
@param inFd Descriptor of file with data that resulted from invoking the application's
  BackupService.doBackup() method.  This may be a pipe rather than a file on
  persistent media, so it may not be seekable.
@param flags {@link BackupTransport#FLAG_USER_INITIATED} or 0.
@return one of {@link BackupTransport#TRANSPORT_OK} (OK so far),
 {@link BackupTransport#TRANSPORT_PACKAGE_REJECTED} (to suppress backup of this
 specific package, but allow others to proceed),
 {@link BackupTransport#TRANSPORT_ERROR} (on network error or other failure), or
 {@link BackupTransport#TRANSPORT_NOT_INITIALIZED} (if the backend dataset has
 become lost due to inactivity purge or some other reason and needs re-initializing)
"
      end

      operation 78398775 "performBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageInfo" type class_ref 7008823 // PackageInfo
	  param inout name "inFd" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Legacy version of {@link #performBackup(PackageInfo, ParcelFileDescriptor, int)} that
doesn't use flags parameter.
"
      end

      operation 78398903 "getAvailableRestoreSets"
	public return_type class_ref 7066551 // RestoreSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Key/value dataset restore interfaces

Get the set of all backups currently available over this transport.

@return Descriptions of the set of restore images available for this device,
  or null if an error occurred (the attempt should be rescheduled).
"
      end

      operation 78399031 "getCurrentRestoreSet"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the identifying token of the backup set currently being stored from
this device.  This is used in the case of applications wishing to restore
their last-known-good data.

@return A token that can be passed to {@link #startRestore}, or 0 if there
  is no backup set available corresponding to the current device state.
"
      end

      operation 78399159 "startRestore"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "packages" type class_ref 7008823 // PackageInfo
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start restoring application data from backup.  After calling this function,
alternate calls to {@link #nextRestorePackage} and {@link #nextRestoreData}
to walk through the actual application data.

@param token A backup token as returned by {@link #getAvailableRestoreSets}
  or {@link #getCurrentRestoreSet}.
@param packages List of applications to restore (if data is available).
  Application data will be restored in the order given.
@return One of {@link BackupTransport#TRANSPORT_OK} (OK so far, call
  {@link #nextRestorePackage}) or {@link BackupTransport#TRANSPORT_ERROR}
  (an error occurred, the restore should be aborted and rescheduled).
"
      end

      operation 78399287 "nextRestorePackage"
	public return_type class_ref 7066679 // RestoreDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the package name of the next application with data in the backup store, plus
a description of the structure of the restored archive: either TYPE_KEY_VALUE for
an original-API key/value dataset, or TYPE_FULL_STREAM for a tarball-type archive stream.

<p>If the package name in the returned RestoreDescription object is the singleton
{@link RestoreDescription#NO_MORE_PACKAGES}, it indicates that no further data is available
in the current restore session: all packages described in startRestore() have been
processed.

<p>If this method returns {@code null}, it means that a transport-level error has
occurred and the entire restore operation should be abandoned.

<p class=\"note\">The OS may call {@link #nextRestorePackage()} multiple times
before calling either {@link #getRestoreData(ParcelFileDescriptor) getRestoreData()}
or {@link #getNextFullRestoreDataChunk(ParcelFileDescriptor) getNextFullRestoreDataChunk()}.
It does this when it has determined that it needs to skip restore of one or more
packages.  The transport should not actually transfer any restore data for
the given package in response to {@link #nextRestorePackage()}, but rather wait
for an explicit request before doing so.

@return A RestoreDescription object containing the name of one of the packages
  supplied to {@link #startRestore} plus an indicator of the data type of that
  restore data; or {@link RestoreDescription#NO_MORE_PACKAGES} to indicate that
  no more packages can be restored in this session; or {@code null} to indicate
  a transport-level error.
"
      end

      operation 78399415 "getRestoreData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "outFd" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the data for the application returned by {@link #nextRestorePackage}, if that
method reported {@link RestoreDescription#TYPE_KEY_VALUE} as its delivery type.
If the package has only TYPE_FULL_STREAM data, then this method will return an
error.

@param data An open, writable file into which the key/value backup data should be stored.
@return the same error codes as {@link #startRestore}.
"
      end

      operation 78399543 "finishRestore"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End a restore session (aborting any in-process data transfer as necessary),
freeing any resources and connections used during the restore process.
"
      end

      operation 78399671 "requestFullBackupTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Full backup interfaces

Verify that this is a suitable time for a full-data backup pass.  This should return zero
if a backup is reasonable right now, some positive value otherwise.  This method
will be called outside of the {@link #performFullBackup}/{@link #finishBackup} pair.

<p>If this is not a suitable time for a backup, the transport should return a
backoff delay, in milliseconds, after which the Backup Manager should try again.

@return Zero if this is a suitable time for a backup pass, or a positive time delay
  in milliseconds to suggest deferring the backup pass for a while.

@see #requestBackupTime()
"
      end

      operation 78399799 "performFullBackup"
	public explicit_return_type "int"
	nparams 3
	  param inout name "targetPackage" type class_ref 7008823 // PackageInfo
	  param inout name "socket" type class_ref 6986295 // ParcelFileDescriptor
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the process of sending an application's full-data archive to the backend.
The description of the package whose data will be delivered is provided, as well as
the socket file descriptor on which the transport will receive the data itself.

<p>If the package is not eligible for backup, the transport should return
{@link BackupTransport#TRANSPORT_PACKAGE_REJECTED}.  In this case the system will
simply proceed with the next candidate if any, or finish the full backup operation
if all apps have been processed.

<p>After the transport returns {@link BackupTransport#TRANSPORT_OK} from this
method, the OS will proceed to call {@link #sendBackupData()} one or more times
to deliver the application's data as a streamed tarball.  The transport should not
read() from the socket except as instructed to via the {@link #sendBackupData(int)}
method.

<p>After all data has been delivered to the transport, the system will call
{@link #finishBackup()}.  At this point the transport should commit the data to
its datastore, if appropriate, and close the socket that had been provided in
{@link #performFullBackup(PackageInfo, ParcelFileDescriptor)}.

<p class=\"note\">If the transport returns TRANSPORT_OK from this method, then the
OS will always provide a matching call to {@link #finishBackup()} even if sending
data via {@link #sendBackupData(int)} failed at some point.

@param targetPackage The package whose data is to follow.
@param socket The socket file descriptor through which the data will be provided.
   If the transport returns {@link #TRANSPORT_PACKAGE_REJECTED} here, it must still
   close this file descriptor now; otherwise it should be cached for use during
   succeeding calls to {@link #sendBackupData(int)}, and closed in response to
   {@link #finishBackup()}.
@param flags {@link BackupTransport#FLAG_USER_INITIATED} or 0.
@return TRANSPORT_PACKAGE_REJECTED to indicate that the stated application is not
   to be backed up; TRANSPORT_OK to indicate that the OS may proceed with delivering
   backup data; TRANSPORT_ERROR to indicate a fatal error condition that precludes
   performing a backup at this time.
"
      end

      operation 78399927 "performFullBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "targetPackage" type class_ref 7008823 // PackageInfo
	  param inout name "socket" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Legacy version of {@link #performFullBackup(PackageInfo, ParcelFileDescriptor, int)} that
doesn't use flags parameter.
"
      end

      operation 78400055 "checkFullBackupSize"
	public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called after {@link #performFullBackup} to make sure that the transport is willing to
handle a full-data backup operation of the specified size on the current package.
If the transport returns anything other than TRANSPORT_OK, the package's backup
operation will be skipped (and {@link #finishBackup() invoked} with no data for that
package being passed to {@link #sendBackupData}.

<p class=\"note\">The platform does no size-based rejection of full backup attempts on
its own: it is always the responsibility of the transport to implement its own policy.
In particular, even if the preflighted payload size is zero, the platform will still call
this method and will proceed to back up an archive metadata header with no file content
if this method returns TRANSPORT_OK.  To avoid storing such payloads the transport
must recognize this case and return TRANSPORT_PACKAGE_REJECTED.

Added in {@link android.os.Build.VERSION_CODES#M}.

@param size The estimated size of the full-data payload for this app.  This includes
        manifest and archive format overhead, but is not guaranteed to be precise.
@return TRANSPORT_OK if the platform is to proceed with the full-data backup,
        TRANSPORT_PACKAGE_REJECTED if the proposed payload size is too large for
        the transport to handle, or TRANSPORT_ERROR to indicate a fatal error
        condition that means the platform cannot perform a backup at this time.
"
      end

      operation 78400183 "sendBackupData"
	public explicit_return_type "int"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the transport to read {@code numBytes} bytes of data from the socket file
descriptor provided in the {@link #performFullBackup(PackageInfo, ParcelFileDescriptor)}
call, and deliver those bytes to the datastore.

@param numBytes The number of bytes of tarball data available to be read from the
   socket.
@return TRANSPORT_OK on successful processing of the data; TRANSPORT_ERROR to
   indicate a fatal error situation.  If an error is returned, the system will
   call finishBackup() and stop attempting backups until after a backoff and retry
   interval.
"
      end

      operation 78400311 "cancelFullBackup"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the transport to cancel the currently-ongoing full backup operation.  This
will happen between {@link #performFullBackup()} and {@link #finishBackup()}
if the OS needs to abort the backup operation for any reason, such as a crash in
the application undergoing backup.

<p>When it receives this call, the transport should discard any partial archive
that it has stored so far.  If possible it should also roll back to the previous
known-good archive in its datastore.

<p>If the transport receives this callback, it will <em>not</em> receive a
call to {@link #finishBackup()}.  It needs to tear down any ongoing backup state
here.
"
      end

      operation 78400439 "isAppEligibleForBackup"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "targetPackage" type class_ref 7008823 // PackageInfo
	  param inout name "isFullBackup" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport whether this app is eligible for backup.

@param targetPackage The identity of the application.
@param isFullBackup If set, transport should check if app is eligible for full data backup,
  otherwise to check if eligible for key-value backup.
@return Whether this app is eligible for backup.
"
      end

      operation 78400567 "getBackupQuota"
	public explicit_return_type "long"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "isFullBackup" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport about current quota for backup size of the package.

@param packageName ID of package to provide the quota.
@param isFullBackup If set, transport should return limit for full data backup, otherwise
                    for key-value backup.
@return Current limit on backup size in bytes.
"
      end

      operation 78400695 "getNextFullRestoreDataChunk"
	public explicit_return_type "int"
	nparams 1
	  param inout name "socket" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Full restore interfaces

Ask the transport to provide data for the \"current\" package being restored.  This
is the package that was just reported by {@link #nextRestorePackage()} as having
{@link RestoreDescription#TYPE_FULL_STREAM} data.

The transport writes some data to the socket supplied to this call, and returns
the number of bytes written.  The system will then read that many bytes and
stream them to the application's agent for restore, then will call this method again
to receive the next chunk of the archive.  This sequence will be repeated until the
transport returns zero indicating that all of the package's data has been delivered
(or returns a negative value indicating some sort of hard error condition at the
transport level).

<p>After this method returns zero, the system will then call
{@link #nextRestorePackage()} to begin the restore process for the next
application, and the sequence begins again.

<p>The transport should always close this socket when returning from this method.
Do not cache this socket across multiple calls or you may leak file descriptors.

@param socket The file descriptor that the transport will use for delivering the
   streamed archive.  The transport must close this socket in all cases when returning
   from this method.
@return {@link #NO_MORE_DATA} when no more data for the current package is available.
   A positive value indicates the presence of that many bytes to be delivered to the app.
   A value of zero indicates that no data was deliverable at this time, but the restore
   is still running and the caller should retry.  {@link #TRANSPORT_PACKAGE_REJECTED}
   means that the current package's restore operation should be aborted, but that
   the transport itself is still in a good state and so a multiple-package restore
   sequence can still be continued.  Any other negative return value is treated as a
   fatal error condition that aborts all further restore operations on the current dataset.
"
      end

      operation 78400823 "abortFullRestore"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the OS encounters an error while processing {@link RestoreDescription#TYPE_FULL_STREAM}
data for restore, it will invoke this method to tell the transport that it should
abandon the data download for the current package.  The OS will then either call
{@link #nextRestorePackage()} again to move on to restoring the next package in the
set being iterated over, or will call {@link #finishRestore()} to shut down the restore
operation.

@return {@link #TRANSPORT_OK} if the transport was successful in shutting down the
   current stream cleanly, or {@link #TRANSPORT_ERROR} to indicate a serious
   transport-level failure.  If the transport reports an error here, the entire restore
   operation will immediately be finished with no further attempts to restore app data.
"
      end

      class 7066807 "TransportImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 78408503 "name"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78408631 "configurationIntent"
	  public return_type class_ref 6925623 // Intent
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78408759 "currentDestinationString"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78408887 "dataManagementIntent"
	  public return_type class_ref 6925623 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409015 "dataManagementLabel"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409143 "transportDirName"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409271 "requestBackupTime"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409399 "initializeDevice"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409527 "performBackup"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "packageInfo" type class_ref 7008823 // PackageInfo
	    param inout name "inFd" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409655 "clearBackupData"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "packageInfo" type class_ref 7008823 // PackageInfo
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409783 "finishBackup"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78409911 "getAvailableRestoreSets"
	  public return_type class_ref 7066551 // RestoreSet
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410039 "getCurrentRestoreSet"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410167 "startRestore"
	  public explicit_return_type "int"
	  nparams 2
	    param in name "token" explicit_type "long"
	    param inout name "packages" type class_ref 7008823 // PackageInfo
	  multiplicity "[]"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410295 "nextRestorePackage"
	  public return_type class_ref 7066679 // RestoreDescription
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410423 "getRestoreData"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "outFd" type class_ref 6986295 // ParcelFileDescriptor
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410551 "finishRestore"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410679 "requestFullBackupTime"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410807 "performFullBackup"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "targetPackage" type class_ref 7008823 // PackageInfo
	    param inout name "socket" type class_ref 6986295 // ParcelFileDescriptor
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78410935 "checkFullBackupSize"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "size" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78411063 "sendBackupData"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "numBytes" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78411191 "cancelFullBackup"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78411319 "isAppEligibleForBackup"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "targetPackage" type class_ref 7008823 // PackageInfo
	    param inout name "isFullBackup" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78411447 "getBackupQuota"
	  public explicit_return_type "long"
	  nparams 2
	    param inout name "packageName" explicit_type "String"
	    param inout name "isFullBackup" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78411575 "getNextFullRestoreDataChunk"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "socket" type class_ref 6986295 // ParcelFileDescriptor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78411703 "abortFullRestore"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7066551 "RestoreSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Descriptive information about a set of backed-up app data available for restore.
Used by IRestoreSession clients.

@hide
"
      classrelation 15320631 // <realization>
	relation 15320631 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15320631 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24356279 "token"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Token that identifies this backup set unambiguously to the backup/restore
transport.  This is guaranteed to be valid for the duration of a restore
session, but is meaningless once the session has ended.

"
      end

      operation 78434999 "RestoreSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78435127 "RestoreSet"
	public explicit_return_type ""
	nparams 3
	  param inout name "_name" explicit_type "String"
	  param inout name "_dev" explicit_type "String"
	  param in name "_token" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78435255 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parcelable implementation"
      end

      operation 78435383 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 15321015 // CREATOR (<unidirectional association>)
	relation 15321015 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreSet>() {
        public RestoreSet createFromParcel(Parcel in) {
            return new RestoreSet(in);
        }

        public RestoreSet[] newArray(int size) {
            return new RestoreSet[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestoreSet> ${name}${value};
"
	    classrelation_ref 15321015 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78435511 "RestoreSet"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7066679 "RestoreDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Description of the available restore data for a given package.  Returned by a
BackupTransport in response to a request about the next available restorable
package.

@see BackupTransport#nextRestorePackage()

@hide
"
      classrelation 15319095 // <realization>
	relation 15319095 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15319095 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 24355383 "mDataType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15319479 // NO_MORE_PACKAGES (<unidirectional association>)
	relation 15319479 --->
	  a role_name "NO_MORE_PACKAGES" init_value "
            new RestoreDescription(NO_MORE_PACKAGES_SENTINEL, 0)" class_relation const_relation public
	    comment "
Return this constant RestoreDescription from BackupTransport.nextRestorePackage()
to indicate that no more package data is available in the current restore operation.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15319479 // NO_MORE_PACKAGES (<unidirectional association>)
	  b parent class_ref 7066679 // RestoreDescription
      end

      attribute 24355511 "TYPE_KEY_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ---------------------------------------
 Data type identifiers
 This package's restore data is an original-style key/value dataset 
"
      end

      attribute 24355639 "TYPE_FULL_STREAM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This package's restore data is a tarball-type full data stream 
"
      end

      operation 78432183 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78432311 "RestoreDescription"
	public explicit_return_type ""
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param in name "dataType" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------
 API"
      end

      operation 78432439 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78432567 "getDataType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78432695 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------
 Parcelable implementation - not used by transport"
      end

      operation 78432823 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15319607 // CREATOR (<unidirectional association>)
	relation 15319607 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreDescription>() {
        public RestoreDescription createFromParcel(Parcel in) {
            final RestoreDescription unparceled = new RestoreDescription(in);
            return (NO_MORE_PACKAGES_SENTINEL.equals(unparceled.mPackageName))
                    ? NO_MORE_PACKAGES
                    : unparceled;
        }

        public RestoreDescription[] newArray(int size) {
            return new RestoreDescription[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestoreDescription> ${name}${value};
"
	    classrelation_ref 15319607 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 78432951 "RestoreDescription"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7067191 "BlobBackupHelper"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for writing BackupHelpers whose underlying data is a
fixed set of byte-array blobs.  The helper manages diff detection
and compression on the wire.

@hide
"
      classrelation 15311159 // <realization>
	relation 15311159 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15311159 // <realization>
	  b parent class_ref 7063607 // BackupHelper
      end

      attribute 24346935 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24347063 "mCurrentBlobVersion"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78411831 "BlobBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param in name "currentBlobVersion" explicit_type "int"
	  param inout name "" explicit_type "String...keys"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78411959 "getBackupPayload"
	abstract protected explicit_return_type "byte"
	nparams 1
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Client interface

Generate and return the byte array containing the backup payload describing
the current data state.  During a backup operation this method is called once
per key that was supplied to the helper's constructor.

@return A byte array containing the data blob that the caller wishes to store,
    or {@code null} if the current state is empty or undefined.
"
      end

      operation 78412087 "applyRestoredPayload"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "payload" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a byte array that was restored from backup, do whatever is appropriate
to apply that described state in the live system.  This method is called once
per key/value payload that was delivered for restore.  Typically data is delivered
for restore in lexical order by key, <i>not</i> in the order in which the keys
were supplied in the constructor.

@param payload The byte array that was passed to {@link #getBackupPayload()}
    on the ancestral device.
"
      end

      operation 78412215 "readOldState"
	private return_type class_ref 6930743 // ArrayMap
	nparams 1
	  param inout name "oldStateFd" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Long> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"resource\")
"
	
	
	
	comment " Internal implementation

State on-disk format:
[Int]    : overall blob version number
[Int=N] : number of keys represented in the state blob
N* :
    [String] key
    [Long]   blob checksum, calculated after compression
"
      end

      operation 78412343 "writeBackupState"
	private explicit_return_type "void"
	nparams 2
	  param inout name "state" type class_ref 6930743 // ArrayMap
	  param inout name "stateFile" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Long> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New overall state record
"
      end

      operation 78412471 "deflate"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Also versions the deflated blob internally in case we need to revise it"
      end

      operation 78412599 "inflate"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "compressedData" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns null if inflation failed"
      end

      operation 78412727 "checksum"
	private explicit_return_type "long"
	nparams 1
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78412855 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldStateFd" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newStateFd" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " BackupHelper interface"
      end

      operation 78412983 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78413111 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7067319 "FileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of a set of
files. Whenever backup is performed, all files changed since the last backup
will be saved in their entirety. When backup first occurs,
every file in the list provided to {@link #FileBackupHelper} will be backed up.
<p>
During restore, if the helper encounters data for a file that was not
specified when the FileBackupHelper object was constructed, that data
will be ignored.
<p class=\"note\"><strong>Note:</strong> This should be
used only with small configuration files, not large binary files.
"
      classrelation 15311543 // <generalisation>
	relation 15311543 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15311543 // <generalisation>
	  b parent class_ref 7063223 // FileBackupHelperBase
      end

      classrelation 15311671 // <realization>
	relation 15311671 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15311671 // <realization>
	  b parent class_ref 7063607 // BackupHelper
      end

      attribute 24347191 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15311927 // mContext (<unidirectional association>)
	relation 15311927 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15311927 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 24347319 "mFilesDir"
	package explicit_type "File"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78413239 "FileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper to manage backup/restore of entire files within the
application's data directory hierarchy.

@param context The backup agent's Context object
@param files A list of the files to be backed up or restored.
"
      end

      operation 78413367 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine which of the files from the
application's data directory need to be backed up, write them to the data
stream, and fill in <code>newState</code> with the state as it exists
now. When <code>oldState</code> is <code>null</code>, all the files will
be backed up.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation. See
{@link android.app.backup.BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)}
for a description of parameter meanings.
"
      end

      operation 78413495 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one record [representing a single file] from the restore dataset.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation.
"
      end
    end

    class 7067447 "FullBackup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Global constant definitions et cetera related to the full-backup-to-fd
binary format.  Nothing in this namespace is part of any API; it's all
hidden details of the current implementation gathered into one location.

@hide
"
      operation 78413623 "backupToTar"
	class_operation public explicit_return_type "int"
	nparams 6
	  param inout name "packageName" explicit_type "String"
	  param inout name "domain" explicit_type "String"
	  param inout name "linkdomain" explicit_type "String"
	  param inout name "rootpath" explicit_type "String"
	  param inout name "path" explicit_type "String"
	  param inout name "output" type class_ref 7064119 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
s"
	
	
	
	comment "@hide
"
      end

      class 7067575 "BackupScheme"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@VisibleForTesting
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 24347447 "FILES_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24347575 "DATABASE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24347703 "ROOT_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24347831 "SHAREDPREF_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24347959 "CACHE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348087 "NOBACKUP_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348215 "DEVICE_FILES_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348343 "DEVICE_DATABASE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348471 "DEVICE_ROOT_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348599 "DEVICE_SHAREDPREF_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348727 "DEVICE_CACHE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348855 "DEVICE_NOBACKUP_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24348983 "EXTERNAL_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24349111 "mFullBackupContent"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 15315255 // mPackageManager (<unidirectional association>)
	  relation 15315255 --->
	    a role_name "mPackageManager" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15315255 // mPackageManager (<unidirectional association>)
	    b parent class_ref 6924087 // PackageManager
	end

	operation 78414135 "tokenToDirectoryPath"
	  package explicit_return_type "String"
	  nparams 1
	    param inout name "domainToken" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parse out the semantic domains into the correct physical location.
"
	end

	classrelation 15315639 // mExcludes (<unidirectional association>)
	  relation 15315639 --->
	    a role_name "mExcludes" package
	      comment "e
List that will be populated with the canonical names of each file or directory that is
to be excluded.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 15315639 // mExcludes (<unidirectional association>)
	    b parent class_ref 7041591 // ArraySet
	end

	operation 78414263 "BackupScheme"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "context" type class_ref 6923703 // Context
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78414391 "isFullBackupContentEnabled"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78414519 "maybeParseAndGetCanonicalIncludePaths"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, Set<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return A mapping of domain -> canonical paths within that domain. Each of these paths
specifies a file that the client has explicitly included in their backup set. If this
map is empty we will back up the entire data directory (including managed external
storage).
"
	end

	operation 78414647 "maybeParseAndGetCanonicalExcludePaths"
	  public return_type class_ref 7041591 // ArraySet
	  nparams 0
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return A set of canonical paths that are to be excluded from the backup/restore set.
"
	end

	operation 78414775 "maybeParseBackupSchemeLocked"
	  private explicit_return_type "void"
	  nparams 0
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78414903 "parseBackupSchemeFromXmlLocked"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "parser" explicit_type "XmlPullParser"
	    param inout name "excludes" explicit_type "Set<String>"
	    param inout name "includes" explicit_type "Map<String, Set<String>>"
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@VisibleForTesting
"
	  
	  
	  
	end

	operation 78415031 "parseCurrentTagForDomain"
	  private explicit_return_type "String"
	  nparams 4
	    param inout name "parser" explicit_type "XmlPullParser"
	    param inout name "excludes" explicit_type "Set<String>"
	    param inout name "includes" explicit_type "Map<String, Set<String>>"
	    param inout name "domain" explicit_type "String"
	  nexceptions 1
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 78415159 "getTokenForXmlDomain"
	  private explicit_return_type "String"
	  nparams 1
	    param inout name "xmlDomain" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Map xml specified domain (human-readable, what clients put in their manifest's xml) to
BackupAgent internal data token.
@return null if the xml domain was invalid.
"
	end

	operation 78415287 "extractCanonicalFile"
	  private explicit_return_type "File"
	  nparams 2
	    param inout name "domain" explicit_type "File"
	    param inout name "filePathFromXml" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@param domain Directory where the specified file should exist. Not null.
@param filePathFromXml parsed from xml. Not sanitised before calling this function so may be
                       null.
@return The canonical path of the file specified or null if no such file exists.
"
	end

	operation 78415415 "getDirectoryForCriteriaDomain"
	  private explicit_return_type "File"
	  nparams 1
	    param inout name "domain" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param domain parsed from xml. Not sanitised before calling this function so may be null.
@return The directory relevant to the domain specified.
"
	end

	operation 78415543 "validateInnerTagContents"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "parser" explicit_type "XmlPullParser"
	  nexceptions 1
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Let's be strict about the type of xml the client can write. If we see anything untoward,
throw an XmlPullParserException.
"
	end
      end

      operation 78413751 "getBackupScheme"
	class_operation package return_type class_ref 7067575 // BackupScheme
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78413879 "getBackupSchemeForTest"
	class_operation public return_type class_ref 7067575 // BackupScheme
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78414007 "restoreFile"
	class_operation public explicit_return_type "void"
	nparams 6
	  param inout name "data" type class_ref 6986295 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	  param inout name "outFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy data from a socket to the given File location on permanent storage.  The
modification time and access mode of the resulting file will be set if desired,
although group/all rwx modes will be stripped: the restored file will not be
accessible from outside the target application even if the original file was.
If the {@code type} parameter indicates that the result should be a directory,
the socket parameter may be {@code null}; even if it is valid, no data will be
read from it in this case.
<p>
If the {@code mode} argument is negative, then the resulting output file will not
have its access mode or last modification time reset as part of this operation.

@param data Socket supplying the data to be copied to the output file.  If the
   output is a directory, this may be {@code null}.
@param size Number of bytes of data to copy from the socket to the file.  At least
   this much data must be available through the {@code data} parameter.
@param type Must be either {@link BackupAgent#TYPE_FILE} for ordinary file data
   or {@link BackupAgent#TYPE_DIRECTORY} for a directory.
@param mode Unix-style file mode (as used by the chmod(2) syscall) to be set on
   the output file or directory.  group/all rwx modes are stripped even if set
   in this parameter.  If this parameter is negative then neither
   the mode nor the mtime values will be applied to the restored file.
@param mtime A timestamp in the standard Unix epoch that will be imposed as the
   last modification time of the output file.  if the {@code mode} parameter is
   negative then this parameter will be ignored.
@param outFile Location within the filesystem to place the data.  This must point
   to a location that is writeable by the caller, preferably using an absolute path.
@throws IOException
"
      end
    end

    class 7067703 "FullBackupAgent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple concrete class that merely provides the default BackupAgent full backup/restore
implementations for applications that do not supply their own.

{@hide}
"
      classrelation 15315767 // <generalisation>
	relation 15315767 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15315767 // <generalisation>
	  b parent class_ref 7063735 // BackupAgent
      end

      operation 78415671 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 78415799 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 7063991 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7068087 "IFullBackupRestoreObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Observer of a full backup or restore process.  The observer is told \"interesting\"
information about an ongoing full backup or restore action.

{@hide}
"
      classrelation 15316791 // <generalisation>
	relation 15316791 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15316791 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7068343 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15316919 // <generalisation>
	  relation 15316919 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15316919 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15317047 // <realization>
	  relation 15317047 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15317047 // <realization>
	    b parent class_ref 7068087 // IFullBackupRestoreObserver
	end

	operation 78425399 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78425527 "asInterface"
	  class_operation public return_type class_ref 7068087 // IFullBackupRestoreObserver
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IFullBackupRestoreObserver interface,
generating a proxy if needed.
"
	end

	operation 78425655 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78425783 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7068471 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15317303 // <realization>
	    relation 15317303 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15317303 // <realization>
	      b parent class_ref 7068087 // IFullBackupRestoreObserver
	  end

	  classrelation 15317431 // mRemote (<unidirectional association>)
	    relation 15317431 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15317431 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78425911 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78426039 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78426167 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78426295 "onStartBackup"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: a full backup operation has begun.
"
	  end

	  operation 78426423 "onBackupPackage"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "name" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the system has begun backing up the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed.
"
	  end

	  operation 78426551 "onEndBackup"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the full backup operation has ended.
"
	  end

	  operation 78426679 "onStartRestore"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: a restore-from-full-backup operation has begun.
"
	  end

	  operation 78426807 "onRestorePackage"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "name" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the system has begun restore of the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed.
"
	  end

	  operation 78426935 "onEndRestore"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the restore-from-full-backup operation has ended.
"
	  end

	  operation 78427063 "onTimeout"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The user's window of opportunity for confirming the operation has timed out.
"
	  end
	end

	attribute 24353335 "TRANSACTION_onStartBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353463 "TRANSACTION_onBackupPackage"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353591 "TRANSACTION_onEndBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353719 "TRANSACTION_onStartRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353847 "TRANSACTION_onRestorePackage"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24353975 "TRANSACTION_onEndRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24354103 "TRANSACTION_onTimeout"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78427191 "onStartBackup"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: a full backup operation has begun.
"
      end

      operation 78427319 "onBackupPackage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the system has begun backing up the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed.
"
      end

      operation 78427447 "onEndBackup"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the full backup operation has ended.
"
      end

      operation 78427575 "onStartRestore"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: a restore-from-full-backup operation has begun.
"
      end

      operation 78427703 "onRestorePackage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the system has begun restore of the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed.
"
      end

      operation 78427831 "onEndRestore"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the restore-from-full-backup operation has ended.
"
      end

      operation 78427959 "onTimeout"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The user's window of opportunity for confirming the operation has timed out.
"
      end
    end

    class 7068215 "IRestoreSession"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Binder interface used by clients who wish to manage a restore operation.  Every
method in this interface requires the android.permission.BACKUP permission.

{@hide}
"
      classrelation 15318327 // <generalisation>
	relation 15318327 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15318327 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7068983 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15318455 // <generalisation>
	  relation 15318455 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15318455 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15318583 // <realization>
	  relation 15318583 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15318583 // <realization>
	    b parent class_ref 7068215 // IRestoreSession
	end

	operation 78430007 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78430135 "asInterface"
	  class_operation public return_type class_ref 7068215 // IRestoreSession
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IRestoreSession interface,
generating a proxy if needed.
"
	end

	operation 78430263 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78430391 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7069111 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15318839 // <realization>
	    relation 15318839 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15318839 // <realization>
	      b parent class_ref 7068215 // IRestoreSession
	  end

	  classrelation 15318967 // mRemote (<unidirectional association>)
	    relation 15318967 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15318967 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78430519 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78430647 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78430775 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78430903 "getAvailableRestoreSets"
	    public explicit_return_type "int"
	    nparams 1
	      param inout name "observer" type class_ref 7068599 // IRestoreObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78431031 "restoreAll"
	    public explicit_return_type "int"
	    nparams 2
	      param in name "token" explicit_type "long"
	      param inout name "observer" type class_ref 7068599 // IRestoreObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78431159 "restoreSome"
	    public explicit_return_type "int"
	    nparams 3
	      param in name "token" explicit_type "long"
	      param inout name "observer" type class_ref 7068599 // IRestoreObserver
	      param inout name "packages" explicit_type "String"
	    multiplicity "[]"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78431287 "restorePackage"
	    public explicit_return_type "int"
	    nparams 2
	      param inout name "packageName" explicit_type "String"
	      param inout name "observer" type class_ref 7068599 // IRestoreObserver
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78431415 "endRestoreSession"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "End this restore session.  After this method is called, the IRestoreSession binder
is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link getAvailableRestoreSets} or {@link performRestore} failed.
"
	  end
	end

	attribute 24354743 "TRANSACTION_getAvailableRestoreSets"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24354871 "TRANSACTION_restoreAll"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24354999 "TRANSACTION_restoreSome"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24355127 "TRANSACTION_restorePackage"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24355255 "TRANSACTION_endRestoreSession"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78431543 "getAvailableRestoreSets"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 7068599 // IRestoreObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78431671 "restoreAll"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 7068599 // IRestoreObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78431799 "restoreSome"
	public explicit_return_type "int"
	nparams 3
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 7068599 // IRestoreObserver
	  param inout name "packages" explicit_type "String"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78431927 "restorePackage"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageName" explicit_type "String"
	  param inout name "observer" type class_ref 7068599 // IRestoreObserver
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 78432055 "endRestoreSession"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End this restore session.  After this method is called, the IRestoreSession binder
is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link getAvailableRestoreSets} or {@link performRestore} failed.
"
      end
    end

    class 7068599 "IRestoreObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Callback class for receiving progress reports during a restore operation.

@hide
"
      classrelation 15317559 // <generalisation>
	relation 15317559 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15317559 // <generalisation>
	  b parent class_ref 6931383 // IInterface
      end

      class 7068727 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15317687 // <generalisation>
	  relation 15317687 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15317687 // <generalisation>
	    b parent class_ref 6931511 // Binder
	end

	classrelation 15317815 // <realization>
	  relation 15317815 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15317815 // <realization>
	    b parent class_ref 7068599 // IRestoreObserver
	end

	operation 78428087 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 78428215 "asInterface"
	  class_operation public return_type class_ref 7068599 // IRestoreObserver
	  nparams 1
	    param inout name "obj" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IRestoreObserver interface,
generating a proxy if needed.
"
	end

	operation 78428343 "asBinder"
	  public return_type class_ref 6927031 // IBinder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 78428471 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 6931895 // Parcel
	    param inout name "reply" type class_ref 6931895 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 6931639 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 7068855 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 15318071 // <realization>
	    relation 15318071 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 15318071 // <realization>
	      b parent class_ref 7068599 // IRestoreObserver
	  end

	  classrelation 15318199 // mRemote (<unidirectional association>)
	    relation 15318199 --->
	      a role_name "mRemote" private
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 15318199 // mRemote (<unidirectional association>)
	      b parent class_ref 6927031 // IBinder
	  end

	  operation 78428599 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" type class_ref 6927031 // IBinder
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78428727 "asBinder"
	    public return_type class_ref 6927031 // IBinder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 78428855 "getInterfaceDescriptor"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 78428983 "restoreSetsAvailable"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "result" type class_ref 7066551 // RestoreSet
	    multiplicity "[]"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}.
"
	  end

	  operation 78429111 "restoreStarting"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "numPackages" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation.
"
	  end

	  operation 78429239 "onUpdate"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "nowBeingRestored" explicit_type "int"
	      param inout name "curentPackage" explicit_type "String"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int numPackages)} callback.
This method is not guaranteed to be called.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the restoreStarting() callback, of the package now being restored.
@param currentPackage The name of the package now being restored.
"
	  end

	  operation 78429367 "restoreFinished"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "error" explicit_type "int"
	    nexceptions 1
	      exception class_ref 6931639 // RemoteException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The restore operation has completed.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed.
"
	  end
	end

	attribute 24354231 "TRANSACTION_restoreSetsAvailable"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24354359 "TRANSACTION_restoreStarting"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24354487 "TRANSACTION_onUpdate"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 24354615 "TRANSACTION_restoreFinished"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 78429495 "restoreSetsAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 7066551 // RestoreSet
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}.
"
      end

      operation 78429623 "restoreStarting"
	public explicit_return_type "void"
	nparams 1
	  param in name "numPackages" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation.
"
      end

      operation 78429751 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param in name "nowBeingRestored" explicit_type "int"
	  param inout name "curentPackage" explicit_type "String"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int numPackages)} callback.
This method is not guaranteed to be called.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the restoreStarting() callback, of the package now being restored.
@param currentPackage The name of the package now being restored.
"
      end

      operation 78429879 "restoreFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "error" explicit_type "int"
	nexceptions 1
	  exception class_ref 6931639 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has completed.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed.
"
      end
    end

    class 7069367 "SharedPreferencesBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of
{@link android.content.SharedPreferences}. Whenever a backup is performed, it
will back up all named shared preferences that have changed since the last
backup operation.
<p>
To use this class, the application's backup agent class should extend
{@link android.app.backup.BackupAgentHelper}.  Then, in the agent's
{@link BackupAgent#onCreate()} method, an instance of this class should be
allocated and installed as a backup/restore handler within the BackupAgentHelper
framework.  For example, an agent supporting backup and restore for
an application with two groups of {@link android.content.SharedPreferences}
data might look something like this:
<pre>
import android.app.backup.BackupAgentHelper;
import android.app.backup.SharedPreferencesBackupHelper;

public class MyBackupAgent extends BackupAgentHelper {
    // The names of the SharedPreferences groups that the application maintains.  These
    // are the same strings that are passed to {@link Context#getSharedPreferences(String, int)}.
    static final String PREFS_DISPLAY = \"displayprefs\";
    static final String PREFS_SCORES = \"highscores\";

    // An arbitrary string used within the BackupAgentHelper implementation to
    // identify the SharedPreferenceBackupHelper's data.
    static final String MY_PREFS_BACKUP_KEY = \"myprefs\";

    // Simply allocate a helper and install it
    void onCreate() {
        SharedPreferencesBackupHelper helper =
                new SharedPreferencesBackupHelper(this, PREFS_DISPLAY, PREFS_SCORES);
        addHelper(MY_PREFS_BACKUP_KEY, helper);
    }
}</pre>
<p>
No further implementation is needed; the {@link BackupAgentHelper} mechanism automatically
dispatches the
{@link BackupAgent#onBackup(android.os.ParcelFileDescriptor, BackupDataOutput, android.os.ParcelFileDescriptor) BackupAgent.onBackup()}
and
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) BackupAgent.onRestore()}
callbacks to the SharedPreferencesBackupHelper as appropriate.
"
      classrelation 15321143 // <generalisation>
	relation 15321143 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15321143 // <generalisation>
	  b parent class_ref 7063223 // FileBackupHelperBase
      end

      classrelation 15321271 // <realization>
	relation 15321271 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15321271 // <realization>
	  b parent class_ref 7063607 // BackupHelper
      end

      attribute 24356407 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15321527 // mContext (<unidirectional association>)
	relation 15321527 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15321527 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 78435639 "SharedPreferencesBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "" explicit_type "String...prefGroups"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up and restoring the
{@link android.content.SharedPreferences} under the given names.

@param context The application {@link android.content.Context}
@param prefGroups The names of each {@link android.content.SharedPreferences} file to
back up
"
      end

      operation 78435767 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Backs up the configured {@link android.content.SharedPreferences} groups.
"
      end

      operation 78435895 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores one entity from the restore data stream to its proper shared
preferences file store.
"
      end
    end

    class 7069495 "WallpaperBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper for backing up / restoring wallpapers.  Basically an AbsoluteFileBackupHelper,
but with logic for deciding what to do with restored wallpaper images.

@hide
"
      classrelation 15321783 // <generalisation>
	relation 15321783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15321783 // <generalisation>
	  b parent class_ref 7063223 // FileBackupHelperBase
      end

      classrelation 15321911 // <realization>
	relation 15321911 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15321911 // <realization>
	  b parent class_ref 7063607 // BackupHelper
      end

      attribute 24356535 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24356663 "REJECT_OUTSIZED_RESTORE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If 'true', then apply an acceptable-size heuristic at restore time, dropping back
 to the factory default wallpaper if the restored one differs \"too much\" from the
 device's preferred wallpaper image dimensions.
"
      end

      attribute 24356791 "MAX_HEIGHT_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 1.35"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " When outsized restore rejection is enabled, this is the maximum ratio between the
 source and target image heights that will be permitted.  The ratio is checked both
 ways (i.e. >= MAX, or <= 1/MAX) to validate restores from both largeer-than-target
 and smaller-than-target sources.
"
      end

      attribute 24356919 "MIN_HEIGHT_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The height ratio check when applying larger images on smaller screens is separate;
 in current policy we accept any such restore regardless of the relative dimensions.
"
      end

      classrelation 15322807 // mContext (<unidirectional association>)
	relation 15322807 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15322807 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 24357047 "mDesiredMinWidth"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24357175 "mDesiredMinHeight"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 78436023 "WallpaperBackupHelper"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "files" explicit_type "String"
	multiplicity "[]"
	  param inout name "keys" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files
"
      end

      operation 78436151 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 6986295 // ParcelFileDescriptor
	  param inout name "data" type class_ref 7063351 // BackupDataOutput
	  param inout name "newState" type class_ref 6986295 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now.
"
      end

      operation 78436279 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 7063479 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Restore one absolute file entity from the restore stream.  If we're restoring the
magic wallpaper file, take specific action to determine whether it is suitable for
the current device.
"
      end

      operation 78436407 "onRestoreFinished"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hook for the agent to call this helper upon completion of the restore.  We do this
upon completion so that we know both the imagery and the wallpaper info have
been emplaced without requiring either or relying on ordering.
"
      end
    end
  end

  deploymentview 133943 "backup"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2156215 "BackupDataTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.backup.BackupDataInput;
import android.app.backup.BackupDataOutput;
import android.content.res.AssetFileDescriptor;
import android.content.res.AssetManager;
import android.os.Bundle;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.test.AndroidTestCase;
import android.test.InstrumentationTestCase;
import android.util.Base64;
import android.util.Log;
import org.json.JSONObject;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.Exception;
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 5875255 // BackupDataTest
      end
    end

    artifact 2156343 "FullBackupTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.test.AndroidTestCase;
import android.util.ArrayMap;
import android.util.ArraySet;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;
import java.io.File;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Set;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
${definition}"
      associated_classes
	class_ref 5875383 // FullBackupTest
      end
    end

    artifact 2779319 "FileBackupHelperBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 7063223 // FileBackupHelperBase
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2779447 "BackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 7063607 // BackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2779575 "AbsoluteFileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 7063095 // AbsoluteFileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2779703 "BackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.IBackupAgent;
import android.app.QueuedWork;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.ApplicationInfo;
import android.os.Binder;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.os.RemoteException;
import android.system.ErrnoException;
import android.system.Os;
import android.system.OsConstants;
import android.system.StructStat;
import android.util.ArraySet;
import android.util.Log;
import org.xmlpull.v1.XmlPullParserException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.CountDownLatch;
${definition}"
      associated_classes
	class_ref 7063735 // BackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2779831 "BackupAgentHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7064503 // BackupAgentHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2779959 "BackupDataInput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7063991 // BackupDataInput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2780087 "BackupDataInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7063479 // BackupDataInputStream
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2780215 "BackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.ParcelFileDescriptor;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7063351 // BackupDataOutput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2780343 "BackupHelperDispatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;
${definition}"
      associated_classes
	class_ref 7064631 // BackupHelperDispatcher
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2780471 "IBackupObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7065783 // IBackupObserver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IBackupObserver.aidl
"
    end

    artifact 2780599 "BackupManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.util.Log;
import android.util.Pair;
${definition}"
      associated_classes
	class_ref 7065143 // BackupManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2780727 "BackupObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
${definition}"
      associated_classes
	class_ref 7065527 // BackupObserver
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 2780855 "BackupProgress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7066167 // BackupProgress
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 2781111 "BackupTransport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.os.IBinder;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import com.android.internal.backup.IBackupTransport;
${definition}"
      associated_classes
	class_ref 7066295 // BackupTransport
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2781239 "BlobBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.ArrayMap;
import android.util.Log;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.CRC32;
import java.util.zip.DeflaterOutputStream;
import java.util.zip.InflaterInputStream;
${definition}"
      associated_classes
	class_ref 7067191 // BlobBackupHelper
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2781367 "FileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 7067319 // FileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2781495 "FullBackup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.res.XmlResourceParser;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.system.ErrnoException;
import android.system.Os;
import android.text.TextUtils;
import android.util.ArrayMap;
import android.util.ArraySet;
import android.util.Log;
import com.android.internal.annotations.VisibleForTesting;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 7067447 // FullBackup
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2781623 "FullBackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7067703 // FullBackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2781751 "FullBackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 7064119 // FullBackupDataOutput
      end
    end

    artifact 2781879 "IBackupManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7025079 // IBackupManager
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IBackupManager.aidl
"
    end

    artifact 2782007 "IFullBackupRestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7068087 // IFullBackupRestoreObserver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IFullBackupRestoreObserver.aidl
"
    end

    artifact 2782135 "IRestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7068599 // IRestoreObserver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IRestoreObserver.aidl
"
    end

    artifact 2782263 "IRestoreSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7068215 // IRestoreSession
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IRestoreSession.aidl
"
    end

    artifact 2782391 "RestoreDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7066679 // RestoreDescription
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2782519 "RestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.String;
import android.annotation.SystemApi;
import android.app.backup.RestoreSet;
${definition}"
      associated_classes
	class_ref 7065271 // RestoreObserver
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2782647 "RestoreSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.app.backup.RestoreObserver;
import android.app.backup.RestoreSet;
import android.app.backup.IRestoreObserver;
import android.app.backup.IRestoreSession;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 7065399 // RestoreSession
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2782775 "RestoreSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7066551 // RestoreSet
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2782903 "SharedPreferencesBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.QueuedWork;
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 7069367 // SharedPreferencesBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2783031 "WallpaperBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.WallpaperManager;
import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.Point;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.os.UserHandle;
import android.util.Slog;
import android.view.Display;
import android.view.WindowManager;
import java.io.File;
${definition}"
      associated_classes
	class_ref 7069495 // WallpaperBackupHelper
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
