format 213
"transition" // android::frameworks::base::core::java::android::transition
  revision 5
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/core/java/android/transition/"
  java_package "android.transition"
  classview 135863 "transition"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 183607 "Transition"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Transition holds information about animations that will be run on its
targets during a scene change. Subclasses of this abstract class may
choreograph several child transitions ({@link TransitionSet} or they may
perform custom animations themselves. Any Transition has two main jobs:
(1) capture property values, and (2) play animations based on changes to
captured property values. A custom transition knows what property values
on View objects are of interest to it, and also knows how to animate
changes to those values. For example, the {@link Fade} transition tracks
changes to visibility-related properties and is able to construct and run
animations that fade items in or out based on changes to those properties.

<p>Note: Transitions may not work correctly with either {@link SurfaceView}
or {@link TextureView}, due to the way that these views are displayed
on the screen. For SurfaceView, the problem is that the view is updated from
a non-UI thread, so changes to the view due to transitions (such as moving
and resizing the view) may be out of sync with the display inside those bounds.
TextureView is more compatible with transitions in general, but some
specific transitions (such as {@link Fade}) may not be compatible
with TextureView because they rely on {@link ViewOverlay} functionality,
which does not currently work with TextureView.</p>

<p>Transitions can be declared in XML resource files inside the <code>res/transition</code>
directory. Transition resources consist of a tag name for one of the Transition
subclasses along with attributes to define some of the attributes of that transition.
For example, here is a minimal resource file that declares a {@link ChangeBounds} transition:

{@sample development/samples/ApiDemos/res/transition/changebounds.xml ChangeBounds}

<p>This TransitionSet contains {@link android.transition.Explode} for visibility,
{@link android.transition.ChangeBounds}, {@link android.transition.ChangeTransform},
and {@link android.transition.ChangeClipBounds} and
{@link android.transition.ChangeImageTransform}:</p>

{@sample development/samples/ApiDemos/res/transition/explode_move_together.xml MultipleTransform}

<p>Custom transition classes may be instantiated with a <code>transition</code> tag:</p>
<pre>&lt;transition class=\"my.app.transition.CustomTransition\"/></pre>
<p>Custom transition classes loaded from XML should have a public constructor taking
a {@link android.content.Context} and {@link android.util.AttributeSet}.</p>

<p>Note that attributes for the transition are not required, just as they are
optional when declared in code; Transitions created from XML resources will use
the same defaults as their code-created equivalents. Here is a slightly more
elaborate example which declares a {@link TransitionSet} transition with
{@link ChangeBounds} and {@link Fade} child transitions:</p>

{@sample
development/samples/ApiDemos/res/transition/changebounds_fadeout_sequential.xml TransitionSet}

<p>In this example, the transitionOrdering attribute is used on the TransitionSet
object to change from the default {@link TransitionSet#ORDERING_TOGETHER} behavior
to be {@link TransitionSet#ORDERING_SEQUENTIAL} instead. Also, the {@link Fade}
transition uses a fadingMode of {@link Fade#OUT} instead of the default
out-in behavior. Finally, note the use of the <code>targets</code> sub-tag, which
takes a set of {@link android.R.styleable#TransitionTarget target} tags, each
of which lists a specific <code>targetId</code>, <code>targetClass</code>,
<code>targetName</code>, <code>excludeId</code>, <code>excludeClass</code>, or
<code>excludeName</code>, which this transition acts upon.
Use of targets is optional, but can be used to either limit the time spent checking
attributes on unchanging views, or limiting the types of animations run on specific views.
In this case, we know that only the <code>grayscaleContainer</code> will be
disappearing, so we choose to limit the {@link Fade} transition to only that view.</p>

Further information on XML resource descriptions for transitions can be found for
{@link android.R.styleable#Transition}, {@link android.R.styleable#TransitionSet},
{@link android.R.styleable#TransitionTarget}, {@link android.R.styleable#Fade},
{@link android.R.styleable#Slide}, and {@link android.R.styleable#ChangeTransform}.

"
      class 6999991 "TransitionListenerAdapter"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15091383 // <realization>
	  relation 15091383 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15091383 // <realization>
	    b parent class_ref 7000631 // TransitionListener
	end

	operation 77697335 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 77697463 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 77697591 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 77697719 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 77697847 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      attribute 24126007 "DBG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24126135 "MATCH_INSTANCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by View instance.

"
      end

      attribute 24126263 "MATCH_FIRST"
	class_attribute const_attribute private explicit_type "int"
	init_value " MATCH_INSTANCE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24126391 "MATCH_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by
{@link android.view.View#getTransitionName()}. Null names will not be matched.

"
      end

      attribute 24126519 "MATCH_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by
{@link android.view.View#getId()}. Negative IDs will not be matched.

"
      end

      attribute 24126647 "MATCH_ITEM_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by the {@link android.widget.Adapter}
item id. When {@link android.widget.Adapter#hasStableIds()} returns false, no match
will be made for items.

"
      end

      attribute 24126775 "MATCH_LAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " MATCH_ITEM_ID"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24126903 "DEFAULT_MATCH_ORDER"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        MATCH_NAME,
        MATCH_INSTANCE,
        MATCH_ID,
        MATCH_ITEM_ID,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15088183 // STRAIGHT_PATH_MOTION (<unidirectional association>)
	relation 15088183 --->
	  a role_name "STRAIGHT_PATH_MOTION" init_value " new PathMotion() {
        @Override
        public Path getPath(float startX, float startY, float endX, float endY) {
            Path path = new Path();
            path.moveTo(startX, startY);
            path.lineTo(endX, endY);
            return path;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15088183 // STRAIGHT_PATH_MOTION (<unidirectional association>)
	  b parent class_ref 7000119 // PathMotion
      end

      attribute 24127031 "mStartDelay"
	package explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 24127159 "mDuration"
	package explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15088439 // mInterpolator (<unidirectional association>)
	relation 15088439 --->
	  a role_name "mInterpolator" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15088439 // mInterpolator (<unidirectional association>)
	  b parent class_ref 6966967 // TimeInterpolator
      end

      attribute 24127287 "mTargetIds"
	package explicit_type "Integer"
	init_value " new ArrayList<Integer>()"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15088567 // mTargets (<unidirectional association>)
	relation 15088567 --->
	  stereotype "ArrayList"
	  a role_name "mTargets" init_value " new ArrayList<View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15088567 // mTargets (<unidirectional association>)
	  b parent class_ref 6937143 // View
      end

      attribute 24127415 "mTargetIdExcludes"
	package explicit_type "Integer"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15088951 // mTargetExcludes (<unidirectional association>)
	relation 15088951 --->
	  stereotype "ArrayList"
	  a role_name "mTargetExcludes" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15088951 // mTargetExcludes (<unidirectional association>)
	  b parent class_ref 6937143 // View
      end

      attribute 24127543 "mTargetIdChildExcludes"
	package explicit_type "Integer"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15089335 // mTargetChildExcludes (<unidirectional association>)
	relation 15089335 --->
	  stereotype "ArrayList"
	  a role_name "mTargetChildExcludes" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15089335 // mTargetChildExcludes (<unidirectional association>)
	  b parent class_ref 6937143 // View
      end

      classrelation 15089591 // mStartValues (<unidirectional association>)
	relation 15089591 --->
	  a role_name "mStartValues" init_value " new TransitionValuesMaps()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15089591 // mStartValues (<unidirectional association>)
	  b parent class_ref 7000247 // TransitionValuesMaps
      end

      classrelation 15089719 // mEndValues (<unidirectional association>)
	relation 15089719 --->
	  a role_name "mEndValues" init_value " new TransitionValuesMaps()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15089719 // mEndValues (<unidirectional association>)
	  b parent class_ref 7000247 // TransitionValuesMaps
      end

      classrelation 15089847 // mParent (<unidirectional association>)
	relation 15089847 --->
	  a role_name "mParent" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15089847 // mParent (<unidirectional association>)
	  b parent class_ref 7000375 // TransitionSet
      end

      attribute 24127671 "mMatchOrder"
	package explicit_type "int"
	multiplicity "[]"
	init_value " DEFAULT_MATCH_ORDER"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15089975 // mStartValuesList (<unidirectional association>)
	relation 15089975 --->
	  stereotype "ArrayList"
	  a role_name "mStartValuesList" package
	    comment " only valid after playTransition starts"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15089975 // mStartValuesList (<unidirectional association>)
	  b parent class_ref 7000503 // TransitionValues
      end

      classrelation 15090103 // mEndValuesList (<unidirectional association>)
	relation 15090103 --->
	  stereotype "ArrayList"
	  a role_name "mEndValuesList" package
	    comment " only valid after playTransitions starts"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15090103 // mEndValuesList (<unidirectional association>)
	  b parent class_ref 7000503 // TransitionValues
      end

      classrelation 15090231 // sRunningAnimators (<unidirectional association>)
	relation 15090231 --->
	  stereotype "ThreadLocal"
	  a role_name "sRunningAnimators" init_value "
            new ThreadLocal<ArrayMap<Animator, AnimationInfo>>()" class_relation private
	    comment " Per-animator information used for later canceling when future transitions overlap
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<Animator, AnimationInfo>> ${name}${value};
"
	    classrelation_ref 15090231 // sRunningAnimators (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 15090359 // mSceneRoot (<unidirectional association>)
	relation 15090359 --->
	  a role_name "mSceneRoot" init_value " null" package
	    comment " Scene Root is set at createAnimator() time in the cloned Transition
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15090359 // mSceneRoot (<unidirectional association>)
	  b parent class_ref 6937399 // ViewGroup
      end

      attribute 24127799 "mCanRemoveViews"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether removing views from their parent is possible. This is only for views
 in the start scene, which are no longer in the view hierarchy. This property
 is determined by whether the previous Scene was created from a layout
 resource, and thus the views from the exited scene are going away anyway
 and can be removed as necessary to achieve a particular effect, such as
 removing them from parents to add them to overlays.
"
      end

      classrelation 15090487 // mCurrentAnimators (<unidirectional association>)
	relation 15090487 --->
	  stereotype "ArrayList"
	  a role_name "mCurrentAnimators" init_value " new ArrayList<Animator>()" private
	    comment " Track all animators in use in case the transition gets canceled and needs to
 cancel running animators
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15090487 // mCurrentAnimators (<unidirectional association>)
	  b parent class_ref 6966327 // Animator
      end

      attribute 24127927 "mNumInstances"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of per-target instances of this Transition currently running. This count is
 determined by calls to start() and end()
"
      end

      attribute 24128055 "mPaused"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether this transition is currently paused, due to a call to pause()
"
      end

      attribute 24128183 "mEnded"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether this transition has ended. Used to avoid pause/resume on transitions
 that have completed
"
      end

      class 7000631 "TransitionListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77696695 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notification about the start of the transition.

@param transition The started transition.
"
	end

	operation 77696823 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notification about the end of the transition. Canceled transitions
will always notify listeners of both the cancellation and end
events. That is, {@link #onTransitionEnd(Transition)} is always called,
regardless of whether the transition was canceled or played
through to completion.

@param transition The transition which reached its end.
"
	end

	operation 77696951 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notification about the cancellation of the transition.
Note that cancel may be called by a parent {@link TransitionSet} on
a child transition which has not yet started. This allows the child
transition to restore state on target objects which was set at
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)
createAnimator()} time.

@param transition The transition which was canceled.
"
	end

	operation 77697079 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notification when a transition is paused.
Note that createAnimator() may be called by a parent {@link TransitionSet} on
a child transition which has not yet started. This allows the child
transition to restore state on target objects which was set at
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)
createAnimator()} time.

@param transition The transition which was paused.
"
	end

	operation 77697207 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notification when a transition is resumed.
Note that resume() may be called by a parent {@link TransitionSet} on
a child transition which has not yet started. This allows the child
transition to restore state which may have changed in an earlier call
to {@link #onTransitionPause(Transition)}.

@param transition The transition which was resumed.
"
	end
      end

      classrelation 15090615 // mListeners (<unidirectional association>)
	relation 15090615 --->
	  stereotype "ArrayList"
	  a role_name "mListeners" init_value " null" package
	    comment " The set of listeners to be sent transition lifecycle events.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15090615 // mListeners (<unidirectional association>)
	  b parent class_ref 7000631 // TransitionListener
      end

      classrelation 15090743 // mAnimators (<unidirectional association>)
	relation 15090743 --->
	  stereotype "ArrayList"
	  a role_name "mAnimators" init_value " new ArrayList<Animator>()" package
	    comment " The set of animators collected from calls to createAnimator(),
 to be run in runAnimators()
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 15090743 // mAnimators (<unidirectional association>)
	  b parent class_ref 6966327 // Animator
      end

      classrelation 15090871 // mPropagation (<unidirectional association>)
	relation 15090871 --->
	  a role_name "mPropagation" package
	    comment " The function for calculating the Animation start delay.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15090871 // mPropagation (<unidirectional association>)
	  b parent class_ref 7000759 // TransitionPropagation
      end

      class 7000887 "EpicenterCallback"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77698359 "onGetEpicenter"
	  abstract public return_type class_ref 5772599 // Rect
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Implementers must override to return the epicenter of the Transition in screen
coordinates. Transitions like {@link android.transition.Explode} depend upon
an epicenter for the Transition. In Explode, Views move toward or away from the
center of the epicenter Rect along the vector between the epicenter and the center
of the View appearing and disappearing. Some Transitions, such as
{@link android.transition.Fade} pay no attention to the epicenter.

@param transition The transition for which the epicenter applies.
@return The Rect region of the epicenter of <code>transition</code> or null if
there is no epicenter.
"
	end
      end

      classrelation 15090999 // mEpicenterCallback (<unidirectional association>)
	relation 15090999 --->
	  a role_name "mEpicenterCallback" package
	    comment " The rectangular region for Transitions like Explode and TransitionPropagations
 like CircularPropagation
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15090999 // mEpicenterCallback (<unidirectional association>)
	  b parent class_ref 7000887 // EpicenterCallback
      end

      classrelation 15091127 // mNameOverrides (<unidirectional association>)
	relation 15091127 --->
	  a role_name "mNameOverrides" package
	    comment " For Fragment shared element transitions, linking views explicitly by mismatching
 transitionNames.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 15091127 // mNameOverrides (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 15091255 // mPathMotion (<unidirectional association>)
	relation 15091255 --->
	  a role_name "mPathMotion" init_value " STRAIGHT_PATH_MOTION" package
	    comment " The function used to interpolate along two-dimensional points. Typically used
 for adding curves to x/y View motion.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15091255 // mPathMotion (<unidirectional association>)
	  b parent class_ref 7000119 // PathMotion
      end

      operation 77686199 "Transition"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Transition object with no target objects. A transition with
no targets defaults to running on all target objects in the scene hierarchy
(if the transition is not contained in a TransitionSet), or all target
objects passed down from its parent (if it is in a TransitionSet).
"
      end

      operation 77686327 "Transition"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform inflation from XML and apply a class-specific base style from a
theme attribute or style resource. This constructor of Transition allows
subclasses to use their own base style when they are inflating.

@param context The Context the transition is running in, through which it can
       access the current theme, resources, etc.
@param attrs The attributes of the XML tag that is inflating the transition.
"
      end

      operation 77686455 "parseMatchOrder"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "matchOrderString" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77686583 "setDuration"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param in name "duration" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the duration of this transition. By default, there is no duration
(indicated by a negative number), which means that the Animator created by
the transition will have its own specified duration. If the duration of a
Transition is set, that duration will override the Animator duration.

@param duration The length of the animation, in milliseconds.
@return This transition object.
@attr ref android.R.styleable#Transition_duration
"
      end

      operation 77686711 "getDuration"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the duration set on this transition. If no duration has been set,
the returned value will be negative, indicating that resulting animators will
retain their own durations.

@return The duration set on this transition, in milliseconds, if one has been
set, otherwise returns a negative number.
"
      end

      operation 77686839 "setStartDelay"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param in name "startDelay" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the startDelay of this transition. By default, there is no delay
(indicated by a negative number), which means that the Animator created by
the transition will have its own specified startDelay. If the delay of a
Transition is set, that delay will override the Animator delay.

@param startDelay The length of the delay, in milliseconds.
@return This transition object.
@attr ref android.R.styleable#Transition_startDelay
"
      end

      operation 77686967 "getStartDelay"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the startDelay set on this transition. If no startDelay has been set,
the returned value will be negative, indicating that resulting animators will
retain their own startDelays.

@return The startDelay set on this transition, in milliseconds, if one has
been set, otherwise returns a negative number.
"
      end

      operation 77687095 "setInterpolator"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "interpolator" type class_ref 6966967 // TimeInterpolator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the interpolator of this transition. By default, the interpolator
is null, which means that the Animator created by the transition
will have its own specified interpolator. If the interpolator of a
Transition is set, that interpolator will override the Animator interpolator.

@param interpolator The time interpolator used by the transition
@return This transition object.
@attr ref android.R.styleable#Transition_interpolator
"
      end

      operation 77687223 "getInterpolator"
	public return_type class_ref 6966967 // TimeInterpolator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interpolator set on this transition. If no interpolator has been set,
the returned value will be null, indicating that resulting animators will
retain their own interpolators.

@return The interpolator set on this transition, if one has been set, otherwise
returns null.
"
      end

      operation 77687351 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of property names used stored in the {@link TransitionValues}
object passed into {@link #captureStartValues(TransitionValues)} that
this transition cares about for the purposes of canceling overlapping animations.
When any transition is started on a given scene root, all transitions
currently running on that same scene root are checked to see whether the
properties on which they based their animations agree with the end values of
the same properties in the new transition. If the end values are not equal,
then the old animation is canceled since the new transition will start a new
animation to these new values. If the values are equal, the old animation is
allowed to continue and no new animation is started for that transition.

<p>A transition does not need to override this method. However, not doing so
will mean that the cancellation logic outlined in the previous paragraph
will be skipped for that transition, possibly leading to artifacts as
old transitions and new transitions on the same targets run in parallel,
animating views toward potentially different end values.</p>

@return An array of property names as described in the class documentation for
{@link TransitionValues}. The default implementation returns <code>null</code>.
"
      end

      operation 77687479 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method creates an animation that will be run for this transition
given the information in the startValues and endValues structures captured
earlier for the start and end scenes. Subclasses of Transition should override
this method. The method should only be called by the transition system; it is
not intended to be called from external classes.

<p>This method is called by the transition's parent (all the way up to the
topmost Transition in the hierarchy) with the sceneRoot and start/end
values that the transition may need to set up initial target values
and construct an appropriate animation. For example, if an overall
Transition is a {@link TransitionSet} consisting of several
child transitions in sequence, then some of the child transitions may
want to set initial values on target views prior to the overall
Transition commencing, to put them in an appropriate state for the
delay between that start and the child Transition start time. For
example, a transition that fades an item in may wish to set the starting
alpha value to 0, to avoid it blinking in prior to the transition
actually starting the animation. This is necessary because the scene
change that triggers the Transition will automatically set the end-scene
on all target views, so a Transition that wants to animate from a
different value should set that value prior to returning from this method.</p>

<p>Additionally, a Transition can perform logic to determine whether
the transition needs to run on the given target and start/end values.
For example, a transition that resizes objects on the screen may wish
to avoid running for views which are not present in either the start
or end scenes.</p>

<p>If there is an animator created and returned from this method, the
transition mechanism will apply any applicable duration, startDelay,
and interpolator to that animation and start it. A return value of
<code>null</code> indicates that no animation should run. The default
implementation returns null.</p>

<p>The method is called for every applicable target object, which is
stored in the {@link TransitionValues#view} field.</p>


@param sceneRoot The root of the transition hierarchy.
@param startValues The values for a specific target in the start scene.
@param endValues The values for the target in the end scene.
@return A Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 77687607 "setMatchOrder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "int...matches"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the order in which Transition matches View start and end values.
<p>
The default behavior is to match first by {@link android.view.View#getTransitionName()},
then by View instance, then by {@link android.view.View#getId()} and finally
by its item ID if it is in a direct child of ListView. The caller can
choose to have only some or all of the values of {@link #MATCH_INSTANCE},
{@link #MATCH_NAME}, {@link #MATCH_ITEM_ID}, and {@link #MATCH_ID}. Only
the match algorithms supplied will be used to determine whether Views are the
the same in both the start and end Scene. Views that do not match will be considered
as entering or leaving the Scene.
</p>
@param matches A list of zero or more of {@link #MATCH_INSTANCE},
               {@link #MATCH_NAME}, {@link #MATCH_ITEM_ID}, and {@link #MATCH_ID}.
               If none are provided, then the default match order will be set.
"
      end

      operation 77687735 "isValidMatch"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "match" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77687863 "alreadyContains"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "searchIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77687991 "matchInstances"
	private explicit_return_type "void"
	nparams 2
	  param inout name "unmatchedStart" type class_ref 6930743 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match start/end values by View instance. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd.
"
      end

      operation 77688119 "matchItemIds"
	private explicit_return_type "void"
	nparams 4
	  param inout name "unmatchedStart" type class_ref 6930743 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 6930743 // ArrayMap
	  param inout name "startItemIds" type class_ref 7001015 // LongSparseArray
	  param inout name "endItemIds" type class_ref 7001015 // LongSparseArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}, ${t2}<View> ${p2}, ${t3}<View> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match start/end values by Adapter item ID. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd, using
startItemIds and endItemIds as a guide for which Views have unique item IDs.
"
      end

      operation 77688247 "matchIds"
	private explicit_return_type "void"
	nparams 4
	  param inout name "unmatchedStart" type class_ref 6930743 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 6930743 // ArrayMap
	  param inout name "startIds" type class_ref 6929975 // SparseArray
	  param inout name "endIds" type class_ref 6929975 // SparseArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}, ${t2}<View> ${p2}, ${t3}<View> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match start/end values by Adapter view ID. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd, using
startIds and endIds as a guide for which Views have unique IDs.
"
      end

      operation 77688375 "matchNames"
	private explicit_return_type "void"
	nparams 4
	  param inout name "unmatchedStart" type class_ref 6930743 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 6930743 // ArrayMap
	  param inout name "startNames" type class_ref 6930743 // ArrayMap
	  param inout name "endNames" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}, ${t2}<String, View> ${p2}, ${t3}<String, View> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match start/end values by Adapter transitionName. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd, using
startNames and endNames as a guide for which Views have unique transitionNames.
"
      end

      operation 77688503 "addUnmatched"
	private explicit_return_type "void"
	nparams 2
	  param inout name "unmatchedStart" type class_ref 6930743 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all values from unmatchedStart and unmatchedEnd to mStartValuesList and mEndValuesList,
assuming that there is no match between values in the list.
"
      end

      operation 77688631 "matchStartAndEnd"
	private explicit_return_type "void"
	nparams 2
	  param inout name "startValues" type class_ref 7000247 // TransitionValuesMaps
	  param inout name "endValues" type class_ref 7000247 // TransitionValuesMaps
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77688759 "createAnimators"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000247 // TransitionValuesMaps
	  param inout name "endValues" type class_ref 7000247 // TransitionValuesMaps
	  param inout name "startValuesList" explicit_type "ArrayList<TransitionValues>"
	  param inout name "endValuesList" explicit_type "ArrayList<TransitionValues>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method, essentially a wrapper around all calls to createAnimator for all
possible target views, is called with the entire set of start/end
values. The implementation in Transition iterates through these lists
and calls {@link #createAnimator(ViewGroup, TransitionValues, TransitionValues)}
with each set of start/end values on this transition. The
TransitionSet subclass overrides this method and delegates it to
each of its children in succession.

@hide
"
      end

      operation 77688887 "isValidTarget"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "target" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal utility method for checking whether a given view/id
is valid for this transition, where \"valid\" means that either
the Transition has no target/targetId list (the default, in which
cause the transition should act on all views in the hiearchy), or
the given view is in the target list or the view id is in the
targetId list. If the target parameter is null, then the target list
is not checked (this is in the case of ListView items, where the
views are ignored and only the ids are used).
"
      end

      operation 77689015 "getRunningAnimators"
	class_operation private return_type class_ref 6930743 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Animator, AnimationInfo> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77689143 "runAnimators"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called internally once all animations have been set up by the
transition hierarchy.

@hide
"
      end

      operation 77689271 "runAnimator"
	private explicit_return_type "void"
	nparams 2
	  param inout name "animator" type class_ref 6966327 // Animator
	  param in name "runningAnimators" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1}<Animator, AnimationInfo> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77689399 "captureStartValues"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Captures the values in the start scene for the properties that this
transition monitors. These values are then passed as the startValues
structure in a later call to
{@link #createAnimator(ViewGroup, TransitionValues, TransitionValues)}.
The main concern for an implementation is what the
properties are that the transition cares about and what the values are
for all of those properties. The start and end values will be compared
later during the
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)}
method to determine what, if any, animations, should be run.

<p>Subclasses must implement this method. The method should only be called by the
transition system; it is not intended to be called from external classes.</p>

@param transitionValues The holder for any values that the Transition
wishes to store. Values are stored in the <code>values</code> field
of this TransitionValues object and are keyed from
a String value. For example, to store a view's rotation value,
a transition might call
<code>transitionValues.values.put(\"appname:transitionname:rotation\",
view.getRotation())</code>. The target view will already be stored in
the transitionValues structure when this method is called.

@see #captureEndValues(TransitionValues)
@see #createAnimator(ViewGroup, TransitionValues, TransitionValues)
"
      end

      operation 77689527 "captureEndValues"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Captures the values in the end scene for the properties that this
transition monitors. These values are then passed as the endValues
structure in a later call to
{@link #createAnimator(ViewGroup, TransitionValues, TransitionValues)}.
The main concern for an implementation is what the
properties are that the transition cares about and what the values are
for all of those properties. The start and end values will be compared
later during the
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)}
method to determine what, if any, animations, should be run.

<p>Subclasses must implement this method. The method should only be called by the
transition system; it is not intended to be called from external classes.</p>

@param transitionValues The holder for any values that the Transition
wishes to store. Values are stored in the <code>values</code> field
of this TransitionValues object and are keyed from
a String value. For example, to store a view's rotation value,
a transition might call
<code>transitionValues.values.put(\"appname:transitionname:rotation\",
view.getRotation())</code>. The target view will already be stored in
the transitionValues structure when this method is called.

@see #captureStartValues(TransitionValues)
@see #createAnimator(ViewGroup, TransitionValues, TransitionValues)
"
      end

      operation 77689655 "addTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the id of a target view that this Transition is interested in
animating. By default, there are no targetIds, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targetIds constrains
the Transition to only listen for, and act on, views with these IDs.
Views with different IDs, or no IDs whatsoever, will be ignored.

<p>Note that using ids to specify targets implies that ids should be unique
within the view hierarchy underneath the scene root.</p>

@see View#getId()
@param targetId The id of a target view, must be a positive number.
@return The Transition to which the targetId is added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(someId);</code>
"
      end

      operation 77689783 "addTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "targetName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the transitionName of a target view that this Transition is interested in
animating. By default, there are no targetNames, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targetNames constrains
the Transition to only listen for, and act on, views with these transitionNames.
Views with different transitionNames, or no transitionName whatsoever, will be ignored.

<p>Note that transitionNames should be unique within the view hierarchy.</p>

@see android.view.View#getTransitionName()
@param targetName The transitionName of a target view, must be non-null.
@return The Transition to which the target transitionName is added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(someName);</code>
"
      end

      operation 77689911 "addTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "targetType" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the Class of a target view that this Transition is interested in
animating. By default, there are no targetTypes, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targetTypes constrains
the Transition to only listen for, and act on, views with these classes.
Views with different classes will be ignored.

<p>Note that any View that can be cast to targetType will be included, so
if targetType is <code>View.class</code>, all Views will be included.</p>

@see #addTarget(int)
@see #addTarget(android.view.View)
@see #excludeTarget(Class, boolean)
@see #excludeChildren(Class, boolean)

@param targetType The type to include when running this transition.
@return The Transition to which the target class was added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(ImageView.class);</code>
"
      end

      operation 77690039 "removeTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the given targetId from the list of ids that this Transition
is interested in animating.

@param targetId The id of a target view, must be a positive number.
@return The Transition from which the targetId is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTargetId(someId);</code>
"
      end

      operation 77690167 "removeTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "targetName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the given targetName from the list of transitionNames that this Transition
is interested in animating.

@param targetName The transitionName of a target view, must not be null.
@return The Transition from which the targetName is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTargetName(someName);</code>
"
      end

      operation 77690295 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param in name "targetId" explicit_type "int"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the given id to the list of target ids to exclude from this
transition. The <code>exclude</code> parameter specifies whether the target
should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeChildren(int, boolean)
@see #excludeTarget(View, boolean)
@see #excludeTarget(Class, boolean)

@param targetId The id of a target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 77690423 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "targetName" explicit_type "String"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the given transitionName to the list of target transitionNames to exclude
from this transition. The <code>exclude</code> parameter specifies whether the target
should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded by their
id, their instance reference, their transitionName, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(View, boolean)
@see #excludeTarget(int, boolean)
@see #excludeTarget(Class, boolean)

@param targetName The name of a target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 77690551 "excludeChildren"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param in name "targetId" explicit_type "int"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the children of the given id to the list of targets to exclude
from this transition. The <code>exclude</code> parameter specifies whether
the children of the target should be added to or removed from the excluded list.
Excluding children in this way provides a simple mechanism for excluding all
children of specific targets, rather than individually excluding each
child individually.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(int, boolean)
@see #excludeChildren(View, boolean)
@see #excludeChildren(Class, boolean)

@param targetId The id of a target whose children should be ignored when running
this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded-child targets.
@return This transition object.
"
      end

      operation 77690679 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "target" type class_ref 6937143 // View
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the given target to the list of targets to exclude from this
transition. The <code>exclude</code> parameter specifies whether the target
should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeChildren(View, boolean)
@see #excludeTarget(int, boolean)
@see #excludeTarget(Class, boolean)

@param target The target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 77690807 "excludeChildren"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "target" type class_ref 6937143 // View
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the children of given target to the list of target children
to exclude from this transition. The <code>exclude</code> parameter specifies
whether the target should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(View, boolean)
@see #excludeChildren(int, boolean)
@see #excludeChildren(Class, boolean)

@param target The target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 77690935 "excludeObject"
	class_operation private explicit_return_type "ArrayList<T>"
	nparams 3
	  param inout name "list" explicit_type "ArrayList<T>"
	  param inout name "target" explicit_type "T"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method to manage the boilerplate code that is the same whether we
are excluding targets or their children.
"
      end

      operation 77691063 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "type" explicit_type "Class"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the given type to the list of types to exclude from this
transition. The <code>exclude</code> parameter specifies whether the target
type should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeChildren(Class, boolean)
@see #excludeTarget(int, boolean)
@see #excludeTarget(View, boolean)

@param type The type to ignore when running this transition.
@param exclude Whether to add the target type to or remove it from the
current list of excluded target types.
@return This transition object.
"
      end

      operation 77691191 "excludeChildren"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "type" explicit_type "Class"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether to add the given type to the list of types whose children should
be excluded from this transition. The <code>exclude</code> parameter
specifies whether the target type should be added to or removed from
the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(Class, boolean)
@see #excludeChildren(int, boolean)
@see #excludeChildren(View, boolean)

@param type The type to ignore when running this transition.
@param exclude Whether to add the target type to or remove it from the
current list of excluded target types.
@return This transition object.
"
      end

      operation 77691319 "addTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "target" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the target view instances that this Transition is interested in
animating. By default, there are no targets, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targets constrains
the Transition to only listen for, and act on, these views.
All other views will be ignored.

<p>The target list is like the {@link #addTarget(int) targetId}
list except this list specifies the actual View instances, not the ids
of the views. This is an important distinction when scene changes involve
view hierarchies which have been inflated separately; different views may
share the same id but not actually be the same instance. If the transition
should treat those views as the same, then {@link #addTarget(int)} should be used
instead of {@link #addTarget(View)}. If, on the other hand, scene changes involve
changes all within the same view hierarchy, among views which do not
necessarily have ids set on them, then the target list of views may be more
convenient.</p>

@see #addTarget(int)
@param target A View on which the Transition will act, must be non-null.
@return The Transition to which the target is added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(someView);</code>
"
      end

      operation 77691447 "removeTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "target" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the given target from the list of targets that this Transition
is interested in animating.

@param target The target view, must be non-null.
@return Transition The Transition from which the target is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTarget(someView);</code>
"
      end

      operation 77691575 "removeTarget"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "target" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the given target from the list of targets that this Transition
is interested in animating.

@param target The type of the target view, must be non-null.
@return Transition The Transition from which the target is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTarget(someType);</code>
"
      end

      operation 77691703 "getTargetIds"
	public explicit_return_type "List<Integer>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of target IDs that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target IDs
"
      end

      operation 77691831 "getTargets"
	public return_type class_ref 6937143 // View
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of target views that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target views
"
      end

      operation 77691959 "getTargetNames"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of target transitionNames that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target transitionNames
"
      end

      operation 77692087 "getTargetViewNames"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To be removed before L release.
@hide
"
      end

      operation 77692215 "getTargetTypes"
	public explicit_return_type "Class"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of target transitionNames that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target Types
"
      end

      operation 77692343 "captureValues"
	package explicit_return_type "void"
	nparams 2
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recursive method that captures values for the given view and the
hierarchy underneath it.
@param sceneRoot The root of the view hierarchy being captured
@param start true if this capture is happening before the scene change,
false otherwise
"
      end

      operation 77692471 "addViewValues"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "transitionValuesMaps" type class_ref 7000247 // TransitionValuesMaps
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77692599 "clearValues"
	package explicit_return_type "void"
	nparams 1
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear valuesMaps for specified start/end state

@param start true if the start values should be cleared, false otherwise
"
      end

      operation 77692727 "captureHierarchy"
	private explicit_return_type "void"
	nparams 2
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recursive method which captures values for an entire view hierarchy,
starting at some root view. Transitions without targetIDs will use this
method to capture values for all possible views.

@param view The view for which to capture values. Children of this View
will also be captured, recursively down to the leaf nodes.
@param start true if values are being captured in the start scene, false
otherwise.
"
      end

      operation 77692855 "getTransitionValues"
	public return_type class_ref 7000503 // TransitionValues
	nparams 2
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method can be called by transitions to get the TransitionValues for
any particular view during the transition-playing process. This might be
necessary, for example, to query the before/after state of related views
for a given transition.
"
      end

      operation 77692983 "getMatchedTransitionValues"
	package return_type class_ref 7000503 // TransitionValues
	nparams 2
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "viewInStart" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the matched start or end value for a given View. This is only valid
after playTransition starts. For example, it will be valid in
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)}, but not
in {@link #captureStartValues(TransitionValues)}.

@param view The view to find the match for.
@param viewInStart Is View from the start values or end values.
@return The matching TransitionValues for view in either start or end values, depending
on viewInStart or null if there is no match for the given view.
"
      end

      operation 77693111 "pause"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pauses this transition, sending out calls to {@link
TransitionListener#onTransitionPause(Transition)} to all listeners
and pausing all running animators started by this transition.

@hide
"
      end

      operation 77693239 "resume"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resumes this transition, sending out calls to {@link
TransitionListener#onTransitionPause(Transition)} to all listeners
and pausing all running animators started by this transition.

@hide
"
      end

      operation 77693367 "playTransition"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by TransitionManager to play the transition. This calls
createAnimators() to set things up and create all of the animations and then
runAnimations() to actually start the animations.
"
      end

      operation 77693495 "isTransitionRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not the transition should create an Animator, based on the values
captured during {@link #captureStartValues(TransitionValues)} and
{@link #captureEndValues(TransitionValues)}. The default implementation compares the
property values returned from {@link #getTransitionProperties()}, or all property values if
{@code getTransitionProperties()} returns null. Subclasses may override this method to
provide logic more specific to the transition implementation.

@param startValues the values from captureStartValues, This may be {@code null} if the
                   View did not exist in the start state.
@param endValues the values from captureEndValues. This may be {@code null} if the View
                 did not exist in the end state.
"
      end

      operation 77693623 "isValueChanged"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "oldValues" type class_ref 7000503 // TransitionValues
	  param inout name "newValues" type class_ref 7000503 // TransitionValues
	  param inout name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77693751 "animate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "animator" type class_ref 6966327 // Animator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a utility method used by subclasses to handle standard parts of
setting up and running an Animator: it sets the {@link #getDuration()
duration} and the {@link #getStartDelay() startDelay}, starts the
animation, and, when the animator ends, calls {@link #end()}.

@param animator The Animator to be run during this transition.

@hide
"
      end

      operation 77693879 "start"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called automatically by the transition and
TransitionSet classes prior to a Transition subclass starting;
subclasses should not need to call it directly.

@hide
"
      end

      operation 77694007 "end"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called automatically by the Transition and
TransitionSet classes when a transition finishes, either because
a transition did nothing (returned a null Animator from
{@link Transition#createAnimator(ViewGroup, TransitionValues,
TransitionValues)}) or because the transition returned a valid
Animator and end() was called in the onAnimationEnd()
callback of the AnimatorListener.

@hide
"
      end

      operation 77694135 "cancel"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method cancels a transition that is currently running.

@hide
"
      end

      operation 77694263 "addListener"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "listener" type class_ref 7000631 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the set of listeners that are sent events through the
life of an animation, such as start, repeat, and end.

@param listener the listener to be added to the current set of listeners
for this animation.
@return This transition object.
"
      end

      operation 77694391 "removeListener"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "listener" type class_ref 7000631 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the set listening to this animation.

@param listener the listener to be removed from the current set of
listeners for this transition.
@return This transition object.
"
      end

      operation 77694519 "setEpicenterCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "epicenterCallback" type class_ref 7000887 // EpicenterCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the callback to use to find the epicenter of a Transition. A null value indicates
that there is no epicenter in the Transition and onGetEpicenter() will return null.
Transitions like {@link android.transition.Explode} use a point or Rect to orient
the direction of travel. This is called the epicenter of the Transition and is
typically centered on a touched View. The
{@link android.transition.Transition.EpicenterCallback} allows a Transition to
dynamically retrieve the epicenter during a Transition.
@param epicenterCallback The callback to use to find the epicenter of the Transition.
"
      end

      operation 77694647 "getEpicenterCallback"
	public return_type class_ref 7000887 // EpicenterCallback
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the callback used to find the epicenter of the Transition.
Transitions like {@link android.transition.Explode} use a point or Rect to orient
the direction of travel. This is called the epicenter of the Transition and is
typically centered on a touched View. The
{@link android.transition.Transition.EpicenterCallback} allows a Transition to
dynamically retrieve the epicenter during a Transition.
@return the callback used to find the epicenter of the Transition.
"
      end

      operation 77694775 "getEpicenter"
	public return_type class_ref 5772599 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the epicenter as specified by the
{@link android.transition.Transition.EpicenterCallback} or null if no callback exists.
@return the epicenter as specified by the
{@link android.transition.Transition.EpicenterCallback} or null if no callback exists.
@see #setEpicenterCallback(android.transition.Transition.EpicenterCallback)
"
      end

      operation 77694903 "setPathMotion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pathMotion" type class_ref 7000119 // PathMotion
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the algorithm used to calculate two-dimensional interpolation.
<p>
    Transitions such as {@link android.transition.ChangeBounds} move Views, typically
    in a straight path between the start and end positions. Applications that desire to
    have these motions move in a curve can change how Views interpolate in two dimensions
    by extending PathMotion and implementing
    {@link android.transition.PathMotion#getPath(float, float, float, float)}.
</p>
<p>
    When describing in XML, use a nested XML tag for the path motion. It can be one of
    the built-in tags <code>arcMotion</code> or <code>patternPathMotion</code> or it can
    be a custom PathMotion using <code>pathMotion</code> with the <code>class</code>
    attributed with the fully-described class name. For example:</p>
<pre>
{@code
<changeBounds>
    <pathMotion class=\"my.app.transition.MyPathMotion\"/>
</changeBounds>
}
</pre>
<p>or</p>
<pre>
{@code
<changeBounds>
  <arcMotion android:minimumHorizontalAngle=\"15\"
    android:minimumVerticalAngle=\"0\" android:maximumAngle=\"90\"/>
</changeBounds>
}
</pre>

@param pathMotion Algorithm object to use for determining how to interpolate in two
                  dimensions. If null, a straight-path algorithm will be used.
@see android.transition.ArcMotion
@see PatternPathMotion
@see android.transition.PathMotion
"
      end

      operation 77695031 "getPathMotion"
	public return_type class_ref 7000119 // PathMotion
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm object used to interpolate along two dimensions. This is typically
used to determine the View motion between two points.

<p>
    When describing in XML, use a nested XML tag for the path motion. It can be one of
    the built-in tags <code>arcMotion</code> or <code>patternPathMotion</code> or it can
    be a custom PathMotion using <code>pathMotion</code> with the <code>class</code>
    attributed with the fully-described class name. For example:</p>
<pre>{@code
<changeBounds>
    <pathMotion class=\"my.app.transition.MyPathMotion\"/>
</changeBounds>}
</pre>
<p>or</p>
<pre>{@code
<changeBounds>
  <arcMotion android:minimumHorizontalAngle=\"15\"
             android:minimumVerticalAngle=\"0\"
             android:maximumAngle=\"90\"/>
</changeBounds>}
</pre>

@return The algorithm object used to interpolate along two dimensions.
@see android.transition.ArcMotion
@see PatternPathMotion
@see android.transition.PathMotion
"
      end

      operation 77695159 "setPropagation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionPropagation" type class_ref 7000759 // TransitionPropagation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method for determining Animator start delays.
When a Transition affects several Views like {@link android.transition.Explode} or
{@link android.transition.Slide}, there may be a desire to have a \"wave-front\" effect
such that the Animator start delay depends on position of the View. The
TransitionPropagation specifies how the start delays are calculated.
@param transitionPropagation The class used to determine the start delay of
                             Animators created by this Transition. A null value
                             indicates that no delay should be used.
"
      end

      operation 77695287 "getPropagation"
	public return_type class_ref 7000759 // TransitionPropagation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link android.transition.TransitionPropagation} used to calculate Animator start
delays.
When a Transition affects several Views like {@link android.transition.Explode} or
{@link android.transition.Slide}, there may be a desire to have a \"wave-front\" effect
such that the Animator start delay depends on position of the View. The
TransitionPropagation specifies how the start delays are calculated.
@return the {@link android.transition.TransitionPropagation} used to calculate Animator start
delays. This is null by default.
"
      end

      operation 77695415 "capturePropagationValues"
	package explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Captures TransitionPropagation values for the given view and the
hierarchy underneath it.
"
      end

      operation 77695543 "setSceneRoot"
	package return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77695671 "setCanRemoveViews"
	package explicit_return_type "void"
	nparams 1
	  param inout name "canRemoveViews" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77695799 "canRemoveViews"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 77695927 "setNameOverrides"
	public explicit_return_type "void"
	nparams 1
	  param inout name "overrides" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the shared element names -- a mapping from a name at the start state to
a different name at the end state.
@hide
"
      end

      operation 77696055 "getNameOverrides"
	public return_type class_ref 6930743 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 77696183 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77696311 "clone"
	public return_type class_ref 183607 // Transition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 77696439 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this Transition. This name is used internally to distinguish
between different transitions to determine when interrupting transitions overlap.
For example, a ChangeBounds running on the same target view as another ChangeBounds
should determine whether the old transition is animating to different end values
and should be canceled in favor of the new transition.

<p>By default, a Transition's name is simply the value of {@link Class#getName()},
but subclasses are free to override and return something different.</p>

@return The name of this transition.
"
      end

      operation 77696567 "toString"
	package explicit_return_type "String"
	nparams 1
	  param inout name "indent" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7001143 "AnimationInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15091511 // view (<unidirectional association>)
	  relation 15091511 --->
	    a role_name "view" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15091511 // view (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	classrelation 15091767 // values (<unidirectional association>)
	  relation 15091767 --->
	    a role_name "values" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15091767 // values (<unidirectional association>)
	    b parent class_ref 7000503 // TransitionValues
	end

	classrelation 15091895 // windowId (<unidirectional association>)
	  relation 15091895 --->
	    a role_name "windowId" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15091895 // windowId (<unidirectional association>)
	    b parent class_ref 6949815 // WindowId
	end

	classrelation 15092023 // transition (<unidirectional association>)
	  relation 15092023 --->
	    a role_name "transition" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 15092023 // transition (<unidirectional association>)
	    b parent class_ref 183607 // Transition
	end

	operation 77697975 "AnimationInfo"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "view" type class_ref 6937143 // View
	    param inout name "name" explicit_type "String"
	    param inout name "transition" type class_ref 183607 // Transition
	    param inout name "windowId" type class_ref 6949815 // WindowId
	    param inout name "values" type class_ref 7000503 // TransitionValues
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 7001271 "ArrayListManager"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 77698103 "add"
	  class_operation package explicit_return_type "ArrayList<T>"
	  nparams 2
	    param inout name "list" explicit_type "ArrayList<T>"
	    param inout name "item" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add the specified item to the list, returning the resulting list.
The returned list can either the be same list passed in or, if that
list was null, the new list that was created.

Note that the list holds unique items; if the item already exists in the
list, the list is not modified.
"
	end

	operation 77698231 "remove"
	  class_operation package explicit_return_type "ArrayList<T>"
	  nparams 2
	    param inout name "list" explicit_type "ArrayList<T>"
	    param inout name "item" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove the specified item from the list, returning the resulting list.
The returned list can either the be same list passed in or, if that
list becomes empty as a result of the remove(), the new list was created.
"
	end
      end
    end

    class 5910967 "AutoTransitionTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@RunWith(AndroidJUnit4.class)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 48095799 "testFadeOutMoveFadeIn"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
@SmallTest
"
	
	
	
      end
    end

    class 5911095 "FadeTransitionTest"
      visibility public 
      nactuals 1
      actual class class_ref 5865015 // ActivityInstrumentationTestCase2
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 11536183 // <realization>
	relation 11536183 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11536183 // <realization>
	  b parent class_ref 5865015 // ActivityInstrumentationTestCase2
      end

      operation 48095927 "FadeTransitionTest"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 48096055 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 48096183 "testFadeOutAndIn"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 48096311 "testFadeOutInterrupt"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 48096439 "testFadeInInterrupt"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      class 5911223 "TransitionLatch"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 20029495 "startLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20029623 "endLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20029751 "cancelLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20029879 "pauseLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20030007 "resumeLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 48096695 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48096823 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48096951 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48097079 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48097207 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 48096567 "setVisibilityInTransition"
	public return_type class_ref 5911223 // TransitionLatch
	nparams 3
	  param in name "transition" type class_ref 183607 // Transition
	  param in name "viewId" explicit_type "int"
	  param in name "visibility" explicit_type "int"
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 5911351 "FadeValueCheck"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 20030135 "startTransitionAlpha"
	  public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20030263 "pauseTransitionAlpha"
	  public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 48097335 "FadeValueCheck"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 48097463 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48097591 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 5911479 "SlideTransitionTest"
      visibility public 
      nactuals 1
      actual class class_ref 5865015 // ActivityInstrumentationTestCase2
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 11536823 // <realization>
	relation 11536823 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11536823 // <realization>
	  b parent class_ref 5865015 // ActivityInstrumentationTestCase2
      end

      operation 48097719 "SlideTransitionTest"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 48097847 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 48097975 "testShortSlide"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      class 5911607 "TransitionLatch"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 20030391 "startLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20030519 "endLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20030647 "cancelLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20030775 "pauseLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20030903 "resumeLatch"
	  public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 48098231 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48098359 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48098487 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48098615 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 48098743 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 48098103 "setVisibilityInTransition"
	public return_type class_ref 5911607 // TransitionLatch
	nparams 3
	  param in name "transition" type class_ref 183607 // Transition
	  param in name "viewId" explicit_type "int"
	  param in name "visibility" explicit_type "int"
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 5911735 "SlideTranslationValueRatchet"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 20031031 "mInitialized"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20031159 "minX"
	  public explicit_type "float"
	  init_value " Float.NaN"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20031287 "minY"
	  public explicit_type "float"
	  init_value " Float.NaN"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20031415 "maxX"
	  public explicit_type "float"
	  init_value " Float.NaN"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 20031543 "maxY"
	  public explicit_type "float"
	  init_value " Float.NaN"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 48098871 "SlideTranslationValueRatchet"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 48098999 "reset"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 48099127 "onPreDraw"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 5911863 "TransitionTest"
      visibility public 
      nactuals 1
      actual class class_ref 5865015 // ActivityInstrumentationTestCase2
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 11537463 // <realization>
	relation 11537463 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11537463 // <realization>
	  b parent class_ref 5865015 // ActivityInstrumentationTestCase2
      end

      operation 48099255 "TransitionTest"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 48099383 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 48099511 "testClone"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6940087 "TransitionManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class manages the set of transitions that fire when there is a
change of {@link Scene}. To use the manager, add scenes along with
transition objects with calls to {@link #setTransition(Scene, Transition)}
or {@link #setTransition(Scene, Scene, Transition)}. Setting specific
transitions for scene changes is not required; by default, a Scene change
will use {@link AutoTransition} to do something reasonable for most
situations. Specifying other transitions for particular scene changes is
only necessary if the application wants different transition behavior
in these situations.

<p>TransitionManagers can be declared in XML resource files inside the
<code>res/transition</code> directory. TransitionManager resources consist of
the <code>transitionManager</code>tag name, containing one or more
<code>transition</code> tags, each of which describe the relationship of
that transition to the from/to scene information in that tag.
For example, here is a resource file that declares several scene
transitions:</p>

{@sample development/samples/ApiDemos/res/transition/transitions_mgr.xml TransitionManager}

<p>For each of the <code>fromScene</code> and <code>toScene</code> attributes,
there is a reference to a standard XML layout file. This is equivalent to
creating a scene from a layout in code by calling
{@link Scene#getSceneForLayout(ViewGroup, int, Context)}. For the
<code>transition</code> attribute, there is a reference to a resource
file in the <code>res/transition</code> directory which describes that
transition.</p>

Information on XML resource descriptions for transitions can be found for
{@link android.R.styleable#Transition}, {@link android.R.styleable#TransitionSet},
{@link android.R.styleable#TransitionTarget}, {@link android.R.styleable#Fade},
and {@link android.R.styleable#TransitionManager}.
"
      classrelation 16508599 // sDefaultTransition (<unidirectional association>)
	relation 16508599 --->
	  a role_name "sDefaultTransition" init_value " new AutoTransition()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16508599 // sDefaultTransition (<unidirectional association>)
	  b parent class_ref 183607 // Transition
      end

      classrelation 16508855 // mSceneTransitions (<unidirectional association>)
	relation 16508855 --->
	  a role_name "mSceneTransitions" init_value " new ArrayMap<Scene, Transition>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Scene, Transition> ${name}${value};
"
	    classrelation_ref 16508855 // mSceneTransitions (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 16508983 // mScenePairTransitions (<unidirectional association>)
	relation 16508983 --->
	  a role_name "mScenePairTransitions" init_value "
            new ArrayMap<Scene, ArrayMap<Scene, Transition>>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Scene, ArrayMap<Scene, Transition>> ${name}${value};
"
	    classrelation_ref 16508983 // mScenePairTransitions (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      attribute 25625399 "sRunningTransitions"
	class_attribute private explicit_type "WeakReference<ArrayMap<ViewGroup, ArrayList<Transition>>>"
	init_value "
            new ThreadLocal<WeakReference<ArrayMap<ViewGroup, ArrayList<Transition>>>>()"
	stereotype "ThreadLocal"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 16509111 // sPendingTransitions (<unidirectional association>)
	relation 16509111 --->
	  stereotype "ArrayList"
	  a role_name "sPendingTransitions" init_value " new ArrayList<ViewGroup>()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 16509111 // sPendingTransitions (<unidirectional association>)
	  b parent class_ref 6937399 // ViewGroup
      end

      operation 81262263 "setDefaultTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the transition to be used for any scene change for which no
other transition is explicitly set. The initial value is
an {@link AutoTransition} instance.

@param transition The default transition to be used for scene changes.

@hide pending later changes
"
      end

      operation 81262391 "getDefaultTransition"
	class_operation public return_type class_ref 183607 // Transition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current default transition. The initial value is an {@link
AutoTransition} instance.

@return The current default transition.
@see #setDefaultTransition(Transition)

@hide pending later changes
"
      end

      operation 81262519 "setTransition"
	public explicit_return_type "void"
	nparams 2
	  param inout name "scene" type class_ref 6940215 // Scene
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a specific transition to occur when the given scene is entered.

@param scene The scene which, when applied, will cause the given
transition to run.
@param transition The transition that will play when the given scene is
entered. A value of null will result in the default behavior of
using the default transition instead.
"
      end

      operation 81262647 "setTransition"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fromScene" type class_ref 6940215 // Scene
	  param inout name "toScene" type class_ref 6940215 // Scene
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a specific transition to occur when the given pair of scenes is
exited/entered.

@param fromScene The scene being exited when the given transition will
be run
@param toScene The scene being entered when the given transition will
be run
@param transition The transition that will play when the given scene is
entered. A value of null will result in the default behavior of
using the default transition instead.
"
      end

      operation 81262775 "getTransition"
	private return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "scene" type class_ref 6940215 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Transition for the given scene being entered. The result
depends not only on the given scene, but also the scene which the
{@link Scene#getSceneRoot() sceneRoot} of the Scene is currently in.

@param scene The scene being entered
@return The Transition to be used for the given scene change. If no
Transition was specified for this scene change, the default transition
will be used instead.
"
      end

      operation 81262903 "changeScene"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "scene" type class_ref 6940215 // Scene
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is where all of the work of a transition/scene-change is
orchestrated. This method captures the start values for the given
transition, exits the current Scene, enters the new scene, captures
the end values for the transition, and finally plays the
resulting values-populated transition.

@param scene The scene being entered
@param transition The transition to play for this scene change
"
      end

      operation 81263031 "getRunningTransitions"
	class_operation private return_type class_ref 6930743 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ViewGroup, ArrayList<Transition>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81263159 "sceneChangeRunTransition"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param in name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7376695 "MultiListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16509239 // <realization>
	  relation 16509239 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16509239 // <realization>
	    b parent class_ref 6971447 // OnPreDrawListener
	end

	classrelation 16509367 // <realization>
	  relation 16509367 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16509367 // <realization>
	    b parent class_ref 6944567 // OnAttachStateChangeListener
	end

	classrelation 16509495 // mTransition (<unidirectional association>)
	  relation 16509495 --->
	    a role_name "mTransition" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16509495 // mTransition (<unidirectional association>)
	    b parent class_ref 183607 // Transition
	end

	classrelation 16509623 // mSceneRoot (<unidirectional association>)
	  relation 16509623 --->
	    a role_name "mSceneRoot" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16509623 // mSceneRoot (<unidirectional association>)
	    b parent class_ref 6937399 // ViewGroup
	end

	operation 81263287 "MultiListener"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "transition" type class_ref 183607 // Transition
	    param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81263415 "removeListeners"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81263543 "onViewAttachedToWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "v" type class_ref 6937143 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81263671 "onViewDetachedFromWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "v" type class_ref 6937143 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81263799 "onPreDraw"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 81263927 "sceneChangeSetup"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81264055 "transitionTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scene" type class_ref 6940215 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change to the given scene, using the
appropriate transition for this particular scene change
(as specified to the TransitionManager, or the default
if no such transition exists).

@param scene The Scene to change to
"
      end

      operation 81264183 "go"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "scene" type class_ref 6940215 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to simply change to the given scene using
the default transition for TransitionManager.

@param scene The Scene to change to
"
      end

      operation 81264311 "go"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "scene" type class_ref 6940215 // Scene
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to simply change to the given scene using
the given transition.

<p>Passing in <code>null</code> for the transition parameter will
result in the scene changing without any transition running, and is
equivalent to calling {@link Scene#exit()} on the scene root's
current scene, followed by {@link Scene#enter()} on the scene
specified by the <code>scene</code> parameter.</p>

@param scene The Scene to change to
@param transition The transition to use for this scene change. A
value of null causes the scene change to happen with no transition.
"
      end

      operation 81264439 "beginDelayedTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to animate, using the default transition,
to a new scene defined by all changes within the given scene root between
calling this method and the next rendering frame.
Equivalent to calling {@link #beginDelayedTransition(ViewGroup, Transition)}
with a value of <code>null</code> for the <code>transition</code> parameter.

@param sceneRoot The root of the View hierarchy to run the transition on.
"
      end

      operation 81264567 "beginDelayedTransition"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to animate to a new scene defined by all changes within
the given scene root between calling this method and the next rendering frame.
Calling this method causes TransitionManager to capture current values in the
scene root and then post a request to run a transition on the next frame.
At that time, the new values in the scene root will be captured and changes
will be animated. There is no need to create a Scene; it is implied by
changes which take place between calling this method and the next frame when
the transition begins.

<p>Calling this method several times before the next frame (for example, if
unrelated code also wants to make dynamic changes and run a transition on
the same scene root), only the first call will trigger capturing values
and exiting the current scene. Subsequent calls to the method with the
same scene root during the same frame will be ignored.</p>

<p>Passing in <code>null</code> for the transition parameter will
cause the TransitionManager to use its default transition.</p>

@param sceneRoot The root of the View hierarchy to run the transition on.
@param transition The transition to use for this change. A
value of null causes the TransitionManager to use the default transition.
"
      end

      operation 81264695 "endTransitions"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ends all pending and ongoing transitions on the specified scene root.

@param sceneRoot The root of the View hierarchy to end transitions on.
"
      end
    end

    class 6940215 "Scene"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A scene represents the collection of values that various properties in the
View hierarchy will have when the scene is applied. A Scene can be
configured to automatically run a Transition when it is applied, which will
animate the various property changes that take place during the
scene change.
"
      classrelation 16505655 // mContext (<unidirectional association>)
	relation 16505655 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16505655 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      attribute 25624503 "mLayoutId"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 16505783 // mSceneRoot (<unidirectional association>)
	relation 16505783 --->
	  a role_name "mSceneRoot" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16505783 // mSceneRoot (<unidirectional association>)
	  b parent class_ref 6937399 // ViewGroup
      end

      classrelation 16505911 // mLayout (<unidirectional association>)
	relation 16505911 --->
	  a role_name "mLayout" private
	    comment " alternative to layoutId"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16505911 // mLayout (<unidirectional association>)
	  b parent class_ref 6937143 // View
      end

      attribute 25624631 "mEnterAction"
	package explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25624759 "mExitAction"
	package explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81256887 "getSceneForLayout"
	class_operation public return_type class_ref 6940215 // Scene
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param in name "layoutId" explicit_type "int"
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Scene described by the resource file associated with the given
<code>layoutId</code> parameter. If such a Scene has already been created for
the given <code>sceneRoot</code>, that same Scene will be returned.
This caching of layoutId-based scenes enables sharing of common scenes
between those created in code and those referenced by {@link TransitionManager}
XML resource files.

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
@param layoutId The id of a standard layout resource file.
@param context The context used in the process of inflating
the layout resource.
@return The scene for the given root and layout id
"
      end

      operation 81257015 "Scene"
	public explicit_return_type ""
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Scene with no information about how values will change
when this scene is applied. This constructor might be used when
a Scene is created with the intention of being dynamically configured,
through setting {@link #setEnterAction(Runnable)} and possibly
{@link #setExitAction(Runnable)}.

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
"
      end

      operation 81257143 "Scene"
	private explicit_return_type ""
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param in name "layoutId" explicit_type "int"
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Scene which, when entered, will remove any
children from the sceneRoot container and will inflate and add
the hierarchy specified by the layoutId resource file.

<p>This method is hidden because layoutId-based scenes should be
created by the caching factory method {@link Scene#getCurrentScene(View)}.</p>

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
@param layoutId The id of a resource file that defines the view
hierarchy of this scene.
@param context The context used in the process of inflating
the layout resource.
"
      end

      operation 81257271 "Scene"
	public explicit_return_type ""
	nparams 2
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "layout" type class_ref 6937143 // View
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Scene which, when entered, will remove any
children from the sceneRoot container and add the layout
object as a new child of that container.

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
@param layout The view hierarchy of this scene, added as a child
of sceneRoot when this scene is entered.
"
      end

      operation 81257399 "Scene"
	public explicit_return_type ""
	nparams 2
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "layout" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated use {@link #Scene(ViewGroup, View)}.
"
      end

      operation 81257527 "getSceneRoot"
	public return_type class_ref 6937399 // ViewGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root of the scene, which is the root of the view hierarchy
affected by changes due to this scene, and which will be animated
when this scene is entered.

@return The root of the view hierarchy affected by this scene.
"
      end

      operation 81257655 "exit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Exits this scene, if it is the current scene
on the scene's {@link #getSceneRoot() scene root}. The current scene is
set when {@link #enter() entering} a scene.
Exiting a scene runs the {@link #setExitAction(Runnable) exit action}
if there is one.
"
      end

      operation 81257783 "enter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enters this scene, which entails changing all values that
are specified by this scene. These may be values associated
with a layout view group or layout resource file which will
now be added to the scene root, or it may be values changed by
an {@link #setEnterAction(Runnable)} enter action}, or a
combination of the these. No transition will be run when the
scene is entered. To get transition behavior in scene changes,
use one of the methods in {@link TransitionManager} instead.
"
      end

      operation 81257911 "setCurrentScene"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "scene" type class_ref 6940215 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the scene that the given view is in. The current scene is set only
on the root view of a scene, not for every view in that hierarchy. This
information is used by Scene to determine whether there is a previous
scene which should be exited before the new scene is entered.

@param view The view on which the current scene is being set
"
      end

      operation 81258039 "getCurrentScene"
	class_operation package return_type class_ref 6940215 // Scene
	nparams 1
	  param inout name "view" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link Scene} set on the given view. A scene is set on a view
only if that view is the scene root.

@return The current Scene set on this view. A value of null indicates that
no Scene is currently set.
"
      end

      operation 81258167 "setEnterAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scenes that are not defined with layout resources or
hierarchies, or which need to perform additional steps
after those hierarchies are changed to, should set an enter
action, and possibly an exit action as well. An enter action
will cause Scene to call back into application code to do
anything else the application needs after transitions have
captured pre-change values and after any other scene changes
have been applied, such as the layout (if any) being added to
the view hierarchy. After this method is called, Transitions will
be played.

@param action The runnable whose {@link Runnable#run() run()} method will
be called when this scene is entered
@see #setExitAction(Runnable)
@see Scene#Scene(ViewGroup, int, Context)
@see Scene#Scene(ViewGroup, ViewGroup)
"
      end

      operation 81258295 "setExitAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scenes that are not defined with layout resources or
hierarchies, or which need to perform additional steps
after those hierarchies are changed to, should set an enter
action, and possibly an exit action as well. An exit action
will cause Scene to call back into application code to do
anything the application needs to do after applicable transitions have
captured pre-change values, but before any other scene changes
have been applied, such as the new layout (if any) being added to
the view hierarchy. After this method is called, the next scene
will be entered, including a call to {@link #setEnterAction(Runnable)}
if an enter action is set.

@see #setEnterAction(Runnable)
@see Scene#Scene(ViewGroup, int, Context)
@see Scene#Scene(ViewGroup, ViewGroup)
"
      end

      operation 81258423 "isCreatedFromLayoutResource"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Scene was created by a layout resource file, determined
by the layoutId passed into
{@link #getSceneForLayout(android.view.ViewGroup, int, android.content.Context)}.
This is called by TransitionManager to determine whether it is safe for views from
this scene to be removed from their parents when the scene is exited, which is
used by {@link Fade} to fade these views out (the views must be removed from
their parent in order to add them to the overlay for fading purposes). If a
Scene is not based on a resource file, then the impact of removing views
arbitrarily is unknown and should be avoided.
"
      end
    end

    class 7000119 "PathMotion"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This base class can be extended to provide motion along a Path to Transitions.

<p>
Transitions such as {@link android.transition.ChangeBounds} move Views, typically
in a straight path between the start and end positions. Applications that desire to
have these motions move in a curve can change how Views interpolate in two dimensions
by extending PathMotion and implementing {@link #getPath(float, float, float, float)}.
</p>
<p>This may be used in XML as an element inside a transition.</p>
<pre>
{@code
<changeBounds>
    <pathMotion class=\"my.app.transition.MyPathMotion\"/>
</changeBounds>
}
</pre>
"
      operation 81228983 "PathMotion"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81229111 "PathMotion"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81229239 "getPath"
	abstract public return_type class_ref 5842743 // Path
	nparams 4
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide a Path to interpolate between two points <code>(startX, startY)</code> and
<code>(endX, endY)</code>. This allows controlled curved motion along two dimensions.

@param startX The x coordinate of the starting point.
@param startY The y coordinate of the starting point.
@param endX   The x coordinate of the ending point.
@param endY   The y coordinate of the ending point.
@return A Path along which the points should be interpolated. The returned Path
must start at point <code>(startX, startY)</code>, typically using
{@link android.graphics.Path#moveTo(float, float)} and end at <code>(endX, endY)</code>.
"
      end
    end

    class 7000247 "TransitionValuesMaps"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 16510391 // viewValues (<unidirectional association>)
	relation 16510391 --->
	  a role_name "viewValues" init_value "
            new ArrayMap<View, TransitionValues>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, TransitionValues> ${name}${value};
"
	    classrelation_ref 16510391 // viewValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 16510519 // idValues (<unidirectional association>)
	relation 16510519 --->
	  a role_name "idValues" init_value " new SparseArray<View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View> ${name}${value};
"
	    classrelation_ref 16510519 // idValues (<unidirectional association>)
	  b parent class_ref 6929975 // SparseArray
      end

      classrelation 16510647 // itemIdValues (<unidirectional association>)
	relation 16510647 --->
	  a role_name "itemIdValues" init_value " new LongSparseArray<View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View> ${name}${value};
"
	    classrelation_ref 16510647 // itemIdValues (<unidirectional association>)
	  b parent class_ref 7001015 // LongSparseArray
      end

      classrelation 16510775 // nameValues (<unidirectional association>)
	relation 16510775 --->
	  a role_name "nameValues" init_value " new ArrayMap<String, View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, View> ${name}${value};
"
	    classrelation_ref 16510775 // nameValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end
    end

    class 7000375 "TransitionSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TransitionSet is a parent of child transitions (including other
TransitionSets). Using TransitionSets enables more complex
choreography of transitions, where some sets play {@link #ORDERING_TOGETHER} and
others play {@link #ORDERING_SEQUENTIAL}. For example, {@link AutoTransition}
uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by
a {@link ChangeBounds}, followed by a Fade(Fade.OUT) transition.

<p>A TransitionSet can be described in a resource file by using the
tag <code>transitionSet</code>, along with the standard
attributes of {@link android.R.styleable#TransitionSet} and
{@link android.R.styleable#Transition}. Child transitions of the
TransitionSet object can be loaded by adding those child tags inside the
enclosing <code>transitionSet</code> tag. For example, the following xml
describes a TransitionSet that plays a Fade and then a ChangeBounds
transition on the affected view targets:</p>
<pre>
    &lt;transitionSet xmlns:android=\"http://schemas.android.com/apk/res/android\"
            android:transitionOrdering=\"sequential\"&gt;
        &lt;fade/&gt;
        &lt;changeBounds/&gt;
    &lt;/transitionSet&gt;
</pre>
"
      classrelation 16492343 // <generalisation>
	relation 16492343 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16492343 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      classrelation 16492471 // mTransitions (<unidirectional association>)
	relation 16492471 --->
	  stereotype "ArrayList"
	  a role_name "mTransitions" init_value " new ArrayList<Transition>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 16492471 // mTransitions (<unidirectional association>)
	  b parent class_ref 183607 // Transition
      end

      attribute 25617207 "mPlayTogether"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25617335 "mCurrentListeners"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25617463 "mStarted"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25617591 "ORDERING_TOGETHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag used to indicate that the child transitions of this set
should all start at the same time.

"
      end

      attribute 25617719 "ORDERING_SEQUENTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag used to indicate that the child transitions of this set should
play in sequence; when one child transition ends, the next child
transition begins. Note that a transition does not end until all
instances of it (which are playing on all applicable targets of the
transition) end.

"
      end

      operation 81230647 "TransitionSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty transition set. Add child transitions to the
set by calling {@link #addTransition(Transition)} )}. By default,
child transitions will play {@link #ORDERING_TOGETHER together}.
"
      end

      operation 81230775 "TransitionSet"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81230903 "setOrdering"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param in name "ordering" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the play order of this set's child transitions.

@param ordering {@link #ORDERING_TOGETHER} to play this set's child
transitions together, {@link #ORDERING_SEQUENTIAL} to play the child
transitions in sequence.
@return This transitionSet object.
"
      end

      operation 81231031 "getOrdering"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ordering of this TransitionSet. By default, the value is
{@link #ORDERING_TOGETHER}.

@return {@link #ORDERING_TOGETHER} if child transitions will play at the same
time, {@link #ORDERING_SEQUENTIAL} if they will play in sequence.

@see #setOrdering(int)
"
      end

      operation 81231159 "addTransition"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds child transition to this set. The order in which this child transition
is added relative to other child transitions that are added, in addition to
the {@link #getOrdering() ordering} property, determines the
order in which the transitions are started.

<p>If this transitionSet has a {@link #getDuration() duration} set on it, the
child transition will inherit that duration. Transitions are assumed to have
a maximum of one transitionSet parent.</p>

@param transition A non-null child transition to be added to this set.
@return This transitionSet object.
"
      end

      operation 81231287 "getTransitionCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of child transitions in the TransitionSet.

@return The number of child transitions in the TransitionSet.
@see #addTransition(Transition)
@see #getTransitionAt(int)
"
      end

      operation 81231415 "getTransitionAt"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the child Transition at the specified position in the TransitionSet.

@param index The position of the Transition to retrieve.
@see #addTransition(Transition)
@see #getTransitionCount()
"
      end

      operation 81231543 "setDuration"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param in name "duration" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Setting a non-negative duration on a TransitionSet causes all of the child
transitions (current and future) to inherit this duration.

@param duration The length of the animation, in milliseconds.
@return This transitionSet object.
"
      end

      operation 81231671 "setStartDelay"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param in name "startDelay" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81231799 "setInterpolator"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "interpolator" type class_ref 6966967 // TimeInterpolator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81231927 "addTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "target" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232055 "addTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232183 "addTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "targetName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232311 "addTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "targetType" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232439 "addListener"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "listener" type class_ref 7000631 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232567 "removeTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232695 "removeTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "target" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232823 "removeTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "target" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81232951 "removeTarget"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "target" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233079 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "target" type class_ref 6937143 // View
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233207 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "targetName" explicit_type "String"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233335 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param in name "targetId" explicit_type "int"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233463 "excludeTarget"
	public return_type class_ref 183607 // Transition
	nparams 2
	  param inout name "type" explicit_type "Class"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233591 "removeListener"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "listener" type class_ref 7000631 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233719 "setPathMotion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pathMotion" type class_ref 7000119 // PathMotion
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81233847 "removeTransition"
	public return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified child transition from this set.

@param transition The transition to be removed.
@return This transitionSet object.
"
      end

      operation 81233975 "setupStartEndListeners"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets up listeners for each of the child transitions. This is used to
determine when this transition set is finished (all child transitions
must finish first).
"
      end

      class 7372727 "TransitionSetListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16492599 // <generalisation>
	  relation 16492599 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16492599 // <generalisation>
	    b parent class_ref 6999991 // TransitionListenerAdapter
	end

	classrelation 16492727 // mTransitionSet (<unidirectional association>)
	  relation 16492727 --->
	    a role_name "mTransitionSet" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16492727 // mTransitionSet (<unidirectional association>)
	    b parent class_ref 7000375 // TransitionSet
	end

	operation 81234103 "TransitionSetListener"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "transitionSet" type class_ref 7000375 // TransitionSet
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81234231 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81234359 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 81234487 "createAnimators"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000247 // TransitionValuesMaps
	  param inout name "endValues" type class_ref 7000247 // TransitionValuesMaps
	  param inout name "startValuesList" explicit_type "ArrayList<TransitionValues>"
	  param inout name "endValuesList" explicit_type "ArrayList<TransitionValues>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide
"
      end

      operation 81234615 "runAnimators"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide
"
      end

      operation 81234743 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81234871 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81234999 "capturePropagationValues"
	package explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81235127 "pause"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 81235255 "resume"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 81235383 "cancel"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 81235511 "setSceneRoot"
	package return_type class_ref 7000375 // TransitionSet
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81235639 "setCanRemoveViews"
	package explicit_return_type "void"
	nparams 1
	  param inout name "canRemoveViews" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81235767 "setPropagation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propagation" type class_ref 7000759 // TransitionPropagation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81235895 "setEpicenterCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "epicenterCallback" type class_ref 7000887 // EpicenterCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81236023 "toString"
	package explicit_return_type "String"
	nparams 1
	  param inout name "indent" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81236151 "clone"
	public return_type class_ref 7000375 // TransitionSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7000503 "TransitionValues"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Data structure which holds cached values for the transition.
The view field is the target which all of the values pertain to.
The values field is a map which holds information for fields
according to names selected by the transitions. These names should
be unique to avoid clobbering values stored by other transitions,
such as the convention project:transition_name:property_name. For
example, the platform might store a property \"alpha\" in a transition
\"Fader\" as \"android:fader:alpha\".

<p>These values are cached during the
{@link Transition#captureStartValues(TransitionValues)}
capture} phases of a scene change, once when the start values are captured
and again when the end values are captured. These start/end values are then
passed into the transitions via the
for {@link Transition#createAnimator(ViewGroup, TransitionValues, TransitionValues)}
method.</p>
"
      classrelation 16510007 // view (<unidirectional association>)
	relation 16510007 --->
	  a role_name "view" public
	    comment "
The View with these values

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16510007 // view (<unidirectional association>)
	  b parent class_ref 6937143 // View
      end

      classrelation 16510263 // targetedTransitions (<unidirectional association>)
	relation 16510263 --->
	  stereotype "ArrayList"
	  a role_name "targetedTransitions" init_value " new ArrayList<Transition>()" const_relation package
	    comment "The Transitions that targeted this view.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 16510263 // targetedTransitions (<unidirectional association>)
	  b parent class_ref 183607 // Transition
      end

      operation 81265591 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81265719 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81265847 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7000759 "TransitionPropagation"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Extend <code>TransitionPropagation</code> to customize start delays for Animators created
in {@link android.transition.Transition#createAnimator(ViewGroup,
TransitionValues, TransitionValues)}. A Transition such as {@link android.transition.Explode}
defaults to using {@link android.transition.CircularPropagation} and Views closer to the
epicenter will move out of the scene later and into the scene sooner than Views farther
from the epicenter, giving the appearance of inertia. With no TransitionPropagation, all
Views will react simultaneously to the start of the transition.

@see Transition#setPropagation(TransitionPropagation)
@see Transition#getEpicenter()
"
      operation 81246135 "getStartDelay"
	abstract public explicit_return_type "long"
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "transition" type class_ref 183607 // Transition
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by Transition to alter the Animator start delay. All start delays will be adjusted
such that the minimum becomes zero.
@param sceneRoot The root of the View hierarchy running the transition.
@param transition The transition that created the Animator
@param startValues The values for a specific target in the start scene.
@param endValues The values for the target in the end scene.
@return A start delay to use with the Animator created by <code>transition</code>. The
delay will be offset by the minimum delay of all <code>TransitionPropagation</code>s
used in the Transition so that the smallest delay will be 0. Returned values may be
negative.
"
      end

      operation 81246263 "captureValues"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Captures the values in the start or end scene for the properties that this
transition propagation monitors. These values are then passed as the startValues
or endValues structure in a later call to
{@link #getStartDelay(ViewGroup, Transition, TransitionValues, TransitionValues)}.
The main concern for an implementation is what the
properties are that the transition cares about and what the values are
for all of those properties. The start and end values will be compared
later during the
{@link #getStartDelay(ViewGroup, Transition, TransitionValues, TransitionValues)}.
method to determine the start delay.

<p>Subclasses must implement this method. The method should only be called by the
transition system; it is not intended to be called from external classes.</p>

@param transitionValues The holder for any values that the Transition
wishes to store. Values are stored in the <code>values</code> field
of this TransitionValues object and are keyed from
a String value. For example, to store a view's rotation value,
a transition might call
<code>transitionValues.values.put(\"appname:transitionname:rotation\",
view.getRotation())</code>. The target view will already be stored in
the transitionValues structure when this method is called.
"
      end

      operation 81246391 "getPropagationProperties"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of property names stored in the {@link TransitionValues}
object passed into {@link #captureValues(TransitionValues)} that
this transition propagation cares about for the purposes of preventing
duplicate capturing of property values.

<p>A <code>TransitionPropagation</code> must override this method to prevent
duplicate capturing of values and must contain at least one </p>

@return An array of property names as described in the class documentation for
{@link TransitionValues}.
"
      end
    end

    class 7372471 "ArcMotion"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PathMotion that generates a curved path along an arc on an imaginary circle containing
the two points. If the horizontal distance between the points is less than the vertical
distance, then the circle's center point will be horizontally aligned with the end point. If the
vertical distance is less than the horizontal distance then the circle's center point
will be vertically aligned with the end point.
<p>
When the two points are near horizontal or vertical, the curve of the motion will be
small as the center of the circle will be far from both points. To force curvature of
the path, {@link #setMinimumHorizontalAngle(float)} and
{@link #setMinimumVerticalAngle(float)} may be used to set the minimum angle of the
arc between two points.
</p>
<p>This may be used in XML as an element inside a transition.</p>
<pre>{@code
<changeBounds>
  <arcMotion android:minimumHorizontalAngle=\"15\"
             android:minimumVerticalAngle=\"0\"
             android:maximumAngle=\"90\"/>
</changeBounds>}
</pre>
"
      classrelation 16492215 // <generalisation>
	relation 16492215 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16492215 // <generalisation>
	  b parent class_ref 7000119 // PathMotion
      end

      attribute 25616055 "DEFAULT_MIN_ANGLE_DEGREES"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616183 "DEFAULT_MAX_ANGLE_DEGREES"
	class_attribute const_attribute private explicit_type "float"
	init_value " 70"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616311 "DEFAULT_MAX_TANGENT"
	class_attribute const_attribute private explicit_type "float"
	init_value " (float)
            Math.tan(Math.toRadians(DEFAULT_MAX_ANGLE_DEGREES/2))"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616439 "mMinimumHorizontalAngle"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616567 "mMinimumVerticalAngle"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616695 "mMaximumAngle"
	private explicit_type "float"
	init_value " DEFAULT_MAX_ANGLE_DEGREES"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616823 "mMinimumHorizontalTangent"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25616951 "mMinimumVerticalTangent"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25617079 "mMaximumTangent"
	private explicit_type "float"
	init_value " DEFAULT_MAX_TANGENT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81229367 "ArcMotion"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81229495 "ArcMotion"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81229623 "setMinimumHorizontalAngle"
	public explicit_return_type "void"
	nparams 1
	  param in name "angleInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum arc along the circle between two points aligned near horizontally.
When start and end points are close to horizontal, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@param angleInDegrees The minimum angle of the arc on a circle describing the Path
                      between two nearly horizontally-separated points.
@attr ref android.R.styleable#ArcMotion_minimumHorizontalAngle
"
      end

      operation 81229751 "getMinimumHorizontalAngle"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum arc along the circle between two points aligned near horizontally.
When start and end points are close to horizontal, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@return  The minimum arc along the circle between two points aligned near horizontally.
@attr ref android.R.styleable#ArcMotion_minimumHorizontalAngle
"
      end

      operation 81229879 "setMinimumVerticalAngle"
	public explicit_return_type "void"
	nparams 1
	  param in name "angleInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum arc along the circle between two points aligned near vertically.
When start and end points are close to vertical, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@param angleInDegrees The minimum angle of the arc on a circle describing the Path
                      between two nearly vertically-separated points.
@attr ref android.R.styleable#ArcMotion_minimumVerticalAngle
"
      end

      operation 81230007 "getMinimumVerticalAngle"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum arc along the circle between two points aligned near vertically.
When start and end points are close to vertical, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@return The minimum angle of the arc on a circle describing the Path
        between two nearly vertically-separated points.
@attr ref android.R.styleable#ArcMotion_minimumVerticalAngle
"
      end

      operation 81230135 "setMaximumAngle"
	public explicit_return_type "void"
	nparams 1
	  param in name "angleInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum arc along the circle between two points. When start and end points
have close to equal x and y differences, the curve between them is large. This forces
the curved path to have an arc of at most the given angle.
<p>The default value is 70 degrees.</p>

@param angleInDegrees The maximum angle of the arc on a circle describing the Path
                      between the start and end points.
@attr ref android.R.styleable#ArcMotion_maximumAngle
"
      end

      operation 81230263 "getMaximumAngle"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum arc along the circle between two points. When start and end points
have close to equal x and y differences, the curve between them is large. This forces
the curved path to have an arc of at most the given angle.
<p>The default value is 70 degrees.</p>

@return The maximum angle of the arc on a circle describing the Path
        between the start and end points.
@attr ref android.R.styleable#ArcMotion_maximumAngle
"
      end

      operation 81230391 "toTangent"
	class_operation private explicit_return_type "float"
	nparams 1
	  param in name "arcInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81230519 "getPath"
	public return_type class_ref 5842743 // Path
	nparams 4
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7372599 "AutoTransition"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for creating a default transition that automatically fades,
moves, and resizes views during a scene change.

<p>An AutoTransition can be described in a resource file by using the
tag <code>autoTransition</code>, along with the other standard
attributes of {@link android.R.styleable#Transition}.</p>
"
      classrelation 16492855 // <generalisation>
	relation 16492855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16492855 // <generalisation>
	  b parent class_ref 7000375 // TransitionSet
      end

      operation 81236279 "AutoTransition"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AutoTransition object, which is a TransitionSet which
first fades out disappearing targets, then moves and resizes existing
targets, and finally fades in appearing targets.

"
      end

      operation 81236407 "AutoTransition"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81236535 "init"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7372855 "ChangeBounds"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures the layout bounds of target views before and after
the scene change and animates those changes during the transition.

<p>A ChangeBounds transition can be described in a resource file by using the
tag <code>changeBounds</code>, using its attributes of
{@link android.R.styleable#ChangeBounds} along with the other standard
attributes of {@link android.R.styleable#Transition}.</p>
"
      classrelation 16492983 // <generalisation>
	relation 16492983 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16492983 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      classrelation 16493879 // DRAWABLE_ORIGIN_PROPERTY (<unidirectional association>)
	relation 16493879 --->
	  a role_name "DRAWABLE_ORIGIN_PROPERTY" init_value "
            new Property<Drawable, PointF>(PointF.class, \"boundsOrigin\") {
                private Rect mBounds = new Rect();

                @Override
                public void set(Drawable object, PointF value) {
                    object.copyBounds(mBounds);
                    mBounds.offsetTo(Math.round(value.x), Math.round(value.y));
                    object.setBounds(mBounds);
                }

                @Override
                public PointF get(Drawable object) {
                    object.copyBounds(mBounds);
                    return new PointF(mBounds.left, mBounds.top);
                }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Drawable, PointF> ${name}${value};
"
	    classrelation_ref 16493879 // DRAWABLE_ORIGIN_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      class 7372983 "ViewBounds"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 25618231 "mLeft"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25618359 "mTop"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25618487 "mRight"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25618615 "mBottom"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25618743 "mIsTopLeftSet"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25618871 "mIsBottomRightSet"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 16494903 // mView (<unidirectional association>)
	  relation 16494903 --->
	    a role_name "mView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16494903 // mView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	operation 81238071 "ViewBounds"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" type class_ref 6937143 // View
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81238199 "setTopLeft"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "topLeft" type class_ref 6018615 // PointF
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81238327 "setBottomRight"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "bottomRight" type class_ref 6018615 // PointF
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81238455 "setLeftTopRightBottom"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 16494007 // TOP_LEFT_PROPERTY (<unidirectional association>)
	relation 16494007 --->
	  a role_name "TOP_LEFT_PROPERTY" init_value "
            new Property<ViewBounds, PointF>(PointF.class, \"topLeft\") {
                @Override
                public void set(ViewBounds viewBounds, PointF topLeft) {
                    viewBounds.setTopLeft(topLeft);
                }

                @Override
                public PointF get(ViewBounds viewBounds) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ViewBounds, PointF> ${name}${value};
"
	    classrelation_ref 16494007 // TOP_LEFT_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      classrelation 16494135 // BOTTOM_RIGHT_PROPERTY (<unidirectional association>)
	relation 16494135 --->
	  a role_name "BOTTOM_RIGHT_PROPERTY" init_value "
            new Property<ViewBounds, PointF>(PointF.class, \"bottomRight\") {
                @Override
                public void set(ViewBounds viewBounds, PointF bottomRight) {
                    viewBounds.setBottomRight(bottomRight);
                }

                @Override
                public PointF get(ViewBounds viewBounds) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ViewBounds, PointF> ${name}${value};
"
	    classrelation_ref 16494135 // BOTTOM_RIGHT_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      classrelation 16494263 // BOTTOM_RIGHT_ONLY_PROPERTY (<unidirectional association>)
	relation 16494263 --->
	  a role_name "BOTTOM_RIGHT_ONLY_PROPERTY" init_value "
            new Property<View, PointF>(PointF.class, \"bottomRight\") {
                @Override
                public void set(View view, PointF bottomRight) {
                    int left = view.getLeft();
                    int top = view.getTop();
                    int right = Math.round(bottomRight.x);
                    int bottom = Math.round(bottomRight.y);
                    view.setLeftTopRightBottom(left, top, right, bottom);
                }

                @Override
                public PointF get(View view) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, PointF> ${name}${value};
"
	    classrelation_ref 16494263 // BOTTOM_RIGHT_ONLY_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      classrelation 16494391 // TOP_LEFT_ONLY_PROPERTY (<unidirectional association>)
	relation 16494391 --->
	  a role_name "TOP_LEFT_ONLY_PROPERTY" init_value "
            new Property<View, PointF>(PointF.class, \"topLeft\") {
                @Override
                public void set(View view, PointF topLeft) {
                    int left = Math.round(topLeft.x);
                    int top = Math.round(topLeft.y);
                    int right = view.getRight();
                    int bottom = view.getBottom();
                    view.setLeftTopRightBottom(left, top, right, bottom);
                }

                @Override
                public PointF get(View view) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, PointF> ${name}${value};
"
	    classrelation_ref 16494391 // TOP_LEFT_ONLY_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      classrelation 16494519 // POSITION_PROPERTY (<unidirectional association>)
	relation 16494519 --->
	  a role_name "POSITION_PROPERTY" init_value "
            new Property<View, PointF>(PointF.class, \"position\") {
                @Override
                public void set(View view, PointF topLeft) {
                    int left = Math.round(topLeft.x);
                    int top = Math.round(topLeft.y);
                    int right = left + view.getWidth();
                    int bottom = top + view.getHeight();
                    view.setLeftTopRightBottom(left, top, right, bottom);
                }

                @Override
                public PointF get(View view) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, PointF> ${name}${value};
"
	    classrelation_ref 16494519 // POSITION_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      attribute 25617847 "tempLocation"
	package explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25617975 "mResizeClip"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25618103 "mReparent"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 16494775 // sRectEvaluator (<unidirectional association>)
	relation 16494775 --->
	  a role_name "sRectEvaluator" init_value " new RectEvaluator()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16494775 // sRectEvaluator (<unidirectional association>)
	  b parent class_ref 6975159 // RectEvaluator
      end

      operation 81236663 "ChangeBounds"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81236791 "ChangeBounds"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81236919 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81237047 "setResizeClip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizeClip" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When <code>resizeClip</code> is true, ChangeBounds resizes the view using the clipBounds
instead of changing the dimensions of the view during the animation. When
<code>resizeClip</code> is false, ChangeBounds resizes the View by changing its dimensions.

<p>When resizeClip is set to true, the clip bounds is modified by ChangeBounds. Therefore,
{@link android.transition.ChangeClipBounds} is not compatible with ChangeBounds
in this mode.</p>

@param resizeClip Used to indicate whether the view bounds should be modified or the
                  clip bounds should be modified by ChangeBounds.
@see android.view.View#setClipBounds(android.graphics.Rect)
@attr ref android.R.styleable#ChangeBounds_resizeClip
"
      end

      operation 81237175 "getResizeClip"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true when the ChangeBounds will resize by changing the clip bounds during the
view animation or false when bounds are changed. The default value is false.

@return true when the ChangeBounds will resize by changing the clip bounds during the
view animation or false when bounds are changed. The default value is false.
@attr ref android.R.styleable#ChangeBounds_resizeClip
"
      end

      operation 81237303 "setReparent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reparent" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Setting this flag tells ChangeBounds to track the before/after parent
of every view using this transition. The flag is not enabled by
default because it requires the parent instances to be the same
in the two scenes or else all parents must use ids to allow
the transition to determine which parents are the same.

@param reparent true if the transition should track the parent
container of target views and animate parent changes.
@deprecated Use {@link android.transition.ChangeTransform} to handle
transitions between different parents.
"
      end

      operation 81237431 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81237559 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81237687 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81237815 "parentMatches"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "startParent" type class_ref 6937143 // View
	  param inout name "endParent" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81237943 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7373111 "ChangeClipBounds"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ChangeClipBounds captures the {@link android.view.View#getClipBounds()} before and after the
scene change and animates those changes during the transition.
"
      classrelation 16495031 // <generalisation>
	relation 16495031 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16495031 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      operation 81238583 "ChangeClipBounds"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81238711 "ChangeClipBounds"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81238839 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81238967 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81239095 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81239223 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81239351 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7373239 "ChangeImageTransform"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This Transition captures an ImageView's matrix before and after the
scene change and animates it during the transition.

<p>In combination with ChangeBounds, ChangeImageTransform allows ImageViews
that change size, shape, or {@link android.widget.ImageView.ScaleType} to animate contents
smoothly.</p>
"
      classrelation 16495671 // <generalisation>
	relation 16495671 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16495671 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      classrelation 16496311 // NULL_MATRIX_EVALUATOR (<unidirectional association>)
	relation 16496311 --->
	  a role_name "NULL_MATRIX_EVALUATOR" init_value " new TypeEvaluator<Matrix>() {
        @Override
        public Matrix evaluate(float fraction, Matrix startValue, Matrix endValue) {
            return null;
        }
    }" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Matrix> ${name}${value};
"
	    classrelation_ref 16496311 // NULL_MATRIX_EVALUATOR (<unidirectional association>)
	  b parent class_ref 6967735 // TypeEvaluator
      end

      classrelation 16496439 // ANIMATED_TRANSFORM_PROPERTY (<unidirectional association>)
	relation 16496439 --->
	  a role_name "ANIMATED_TRANSFORM_PROPERTY" init_value " new Property<ImageView, Matrix>(Matrix.class, \"animatedTransform\") {
        @Override
        public void set(ImageView object, Matrix value) {
            object.animateTransform(value);
        }

        @Override
        public Matrix get(ImageView object) {
            return null;
        }
    }" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ImageView, Matrix> ${name}${value};
"
	    classrelation_ref 16496439 // ANIMATED_TRANSFORM_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      operation 81239479 "ChangeImageTransform"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81239607 "ChangeImageTransform"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81239735 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81239863 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81239991 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81240119 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81240247 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Creates an Animator for ImageViews moving, changing dimensions, and/or changing
{@link android.widget.ImageView.ScaleType}.

@param sceneRoot   The root of the transition hierarchy.
@param startValues The values for a specific target in the start scene.
@param endValues   The values for the target in the end scene.
@return An Animator to move an ImageView or null if the View is not an ImageView,
the Drawable changed, the View is not VISIBLE, or there was no change.
"
      end

      operation 81240375 "createNullAnimator"
	private return_type class_ref 6966071 // ObjectAnimator
	nparams 1
	  param inout name "imageView" type class_ref 6960439 // ImageView
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81240503 "createMatrixAnimator"
	private return_type class_ref 6966071 // ObjectAnimator
	nparams 3
	  param in name "imageView" type class_ref 6960439 // ImageView
	  param inout name "startMatrix" type class_ref 5825079 // Matrix
	  param in name "endMatrix" type class_ref 5825079 // Matrix
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7373367 "ChangeScroll"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures the scroll properties of targets before and after
the scene change and animates any changes.
"
      classrelation 16496567 // <generalisation>
	relation 16496567 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16496567 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      operation 81240631 "ChangeScroll"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81240759 "ChangeScroll"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81240887 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81241015 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81241143 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81241271 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7373495 "ChangeText"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the text in TextView targets. If the text
changes between the start and end scenes, the transition ensures that the
starting text stays until the transition ends, at which point it changes
to the end text.  This is useful in situations where you want to resize a
text view to its new size before displaying the text that goes there.

@hide
"
      classrelation 16496951 // <generalisation>
	relation 16496951 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16496951 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      attribute 25618999 "mChangeBehavior"
	private explicit_type "int"
	init_value " CHANGE_BEHAVIOR_KEEP"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25619127 "CHANGE_BEHAVIOR_KEEP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text in affected/changing TextView targets will keep
their original text during the transition, setting it to the final text when
the transition ends. This is the default behavior.

@see #setChangeBehavior(int)

"
      end

      attribute 25619255 "CHANGE_BEHAVIOR_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text changing animation should first fade
out the original text completely. The new text is set on the target
view at the end of the fade-out animation. This transition is typically
used with a later {@link #CHANGE_BEHAVIOR_IN} transition, allowing more
flexibility than the {@link #CHANGE_BEHAVIOR_OUT_IN} by allowing other
transitions to be run sequentially or in parallel with these fades.

@see #setChangeBehavior(int)

"
      end

      attribute 25619383 "CHANGE_BEHAVIOR_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text changing animation should fade in the
end text into the affected target view(s). This transition is typically
used in conjunction with an earlier {@link #CHANGE_BEHAVIOR_OUT}
transition, possibly with other transitions running as well, such as
a sequence to fade out, then resize the view, then fade in.

@see #setChangeBehavior(int)

"
      end

      attribute 25619511 "CHANGE_BEHAVIOR_OUT_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text changing animation should first fade
out the original text completely and then fade in the
new text.

@see #setChangeBehavior(int)

"
      end

      operation 81241399 "setChangeBehavior"
	public return_type class_ref 7373495 // ChangeText
	nparams 1
	  param in name "changeBehavior" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of changing animation that will be run, one of
{@link #CHANGE_BEHAVIOR_KEEP}, {@link #CHANGE_BEHAVIOR_OUT},
{@link #CHANGE_BEHAVIOR_IN}, and {@link #CHANGE_BEHAVIOR_OUT_IN}.

@param changeBehavior The type of fading animation to use when this
transition is run.
@return this textChange object.
"
      end

      operation 81241527 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81241655 "getChangeBehavior"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of changing animation that will be run.

@return either {@link #CHANGE_BEHAVIOR_KEEP}, {@link #CHANGE_BEHAVIOR_OUT},
{@link #CHANGE_BEHAVIOR_IN}, or {@link #CHANGE_BEHAVIOR_OUT_IN}.
"
      end

      operation 81241783 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81241911 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81242039 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81242167 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81242295 "setSelection"
	private explicit_return_type "void"
	nparams 3
	  param inout name "editText" type class_ref 7207991 // EditText
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7373623 "ChangeTransform"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This Transition captures scale and rotation for Views before and after the
scene change and animates those changes during the transition.

A change in parent is handled as well by capturing the transforms from
the parent before and after the scene change and animating those during the
transition.
"
      classrelation 16497847 // <generalisation>
	relation 16497847 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16497847 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      class 7373751 "PathAnimatorMatrix"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16499895 // mMatrix (<unidirectional association>)
	  relation 16499895 --->
	    a role_name "mMatrix" init_value " new Matrix()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16499895 // mMatrix (<unidirectional association>)
	    b parent class_ref 5825079 // Matrix
	end

	classrelation 16500023 // mView (<unidirectional association>)
	  relation 16500023 --->
	    a role_name "mView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16500023 // mView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	attribute 25620919 "mValues"
	  const_attribute private explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25621047 "mTranslationX"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25621175 "mTranslationY"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 81245495 "PathAnimatorMatrix"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "view" type class_ref 6937143 // View
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81245623 "setValues"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81245751 "setTranslation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "translation" type class_ref 6018615 // PointF
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81245879 "setAnimationMatrix"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81246007 "getMatrix"
	  public return_type class_ref 5825079 // Matrix
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 16498999 // NON_TRANSLATIONS_PROPERTY (<unidirectional association>)
	relation 16498999 --->
	  a role_name "NON_TRANSLATIONS_PROPERTY" init_value "
            new Property<PathAnimatorMatrix, float[]>(float[].class, \"nonTranslations\") {
                @Override
                public float[] get(PathAnimatorMatrix object) {
                    return null;
                }

                @Override
                public void set(PathAnimatorMatrix object, float[] value) {
                    object.setValues(value);
                }
            }" class_relation const_relation private
	    comment "
This property sets the animation matrix properties that are not translations.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PathAnimatorMatrix, float[]> ${name}${value};
"
	    classrelation_ref 16498999 // NON_TRANSLATIONS_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      classrelation 16499127 // TRANSLATIONS_PROPERTY (<unidirectional association>)
	relation 16499127 --->
	  a role_name "TRANSLATIONS_PROPERTY" init_value "
            new Property<PathAnimatorMatrix, PointF>(PointF.class, \"translations\") {
                @Override
                public PointF get(PathAnimatorMatrix object) {
                    return null;
                }

                @Override
                public void set(PathAnimatorMatrix object, PointF value) {
                    object.setTranslation(value);
                }
            }" class_relation const_relation private
	    comment "
This property sets the translation animation matrix properties.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PathAnimatorMatrix, PointF> ${name}${value};
"
	    classrelation_ref 16499127 // TRANSLATIONS_PROPERTY (<unidirectional association>)
	  b parent class_ref 6950455 // Property
      end

      attribute 25619639 "mUseOverlay"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25619767 "mReparent"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 16499255 // mTempMatrix (<unidirectional association>)
	relation 16499255 --->
	  a role_name "mTempMatrix" init_value " new Matrix()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16499255 // mTempMatrix (<unidirectional association>)
	  b parent class_ref 5825079 // Matrix
      end

      operation 81242423 "ChangeTransform"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81242551 "ChangeTransform"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81242679 "getReparentWithOverlay"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether changes to parent should use an overlay or not. When the parent
change doesn't use an overlay, it affects the transforms of the child. The
default value is <code>true</code>.

<p>Note: when Overlays are not used when a parent changes, a view can be clipped when
it moves outside the bounds of its parent. Setting
{@link android.view.ViewGroup#setClipChildren(boolean)} and
{@link android.view.ViewGroup#setClipToPadding(boolean)} can help. Also, when
Overlays are not used and the parent is animating its location, the position of the
child view will be relative to its parent's final position, so it may appear to \"jump\"
at the beginning.</p>

@return <code>true</code> when a changed parent should execute the transition
inside the scene root's overlay or <code>false</code> if a parent change only
affects the transform of the transitioning view.
@attr ref android.R.styleable#ChangeTransform_reparentWithOverlay
"
      end

      operation 81242807 "setReparentWithOverlay"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reparentWithOverlay" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether changes to parent should use an overlay or not. When the parent
change doesn't use an overlay, it affects the transforms of the child. The
default value is <code>true</code>.

<p>Note: when Overlays are not used when a parent changes, a view can be clipped when
it moves outside the bounds of its parent. Setting
{@link android.view.ViewGroup#setClipChildren(boolean)} and
{@link android.view.ViewGroup#setClipToPadding(boolean)} can help. Also, when
Overlays are not used and the parent is animating its location, the position of the
child view will be relative to its parent's final position, so it may appear to \"jump\"
at the beginning.</p>

@return <code>true</code> when a changed parent should execute the transition
inside the scene root's overlay or <code>false</code> if a parent change only
affects the transform of the transitioning view.
@attr ref android.R.styleable#ChangeTransform_reparentWithOverlay
"
      end

      operation 81242935 "getReparent"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether parent changes will be tracked by the ChangeTransform. If parent
changes are tracked, then the transform will adjust to the transforms of the
different parents. If they aren't tracked, only the transforms of the transitioning
view will be tracked. Default is true.

@return whether parent changes will be tracked by the ChangeTransform.
@attr ref android.R.styleable#ChangeTransform_reparent
"
      end

      operation 81243063 "setReparent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reparent" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether parent changes will be tracked by the ChangeTransform. If parent
changes are tracked, then the transform will adjust to the transforms of the
different parents. If they aren't tracked, only the transforms of the transitioning
view will be tracked. Default is true.

@param reparent Set to true to track parent changes or false to only track changes
                of the transitioning view without considering the parent change.
@attr ref android.R.styleable#ChangeTransform_reparent
"
      end

      operation 81243191 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81243319 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81243447 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81243575 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81243703 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81243831 "createTransformAnimator"
	private return_type class_ref 6966071 // ObjectAnimator
	nparams 3
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	  param in name "handleParentChange" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81243959 "parentsMatch"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "startParent" type class_ref 6937399 // ViewGroup
	  param inout name "endParent" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81244087 "createGhostView"
	private explicit_return_type "void"
	nparams 3
	  param in name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81244215 "setMatricesForParent"
	private explicit_return_type "void"
	nparams 2
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81244343 "setIdentityTransforms"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81244471 "setTransforms"
	class_operation private explicit_return_type "void"
	nparams 9
	  param inout name "view" type class_ref 6937143 // View
	  param in name "translationX" explicit_type "float"
	  param in name "translationY" explicit_type "float"
	  param in name "translationZ" explicit_type "float"
	  param in name "scaleX" explicit_type "float"
	  param in name "scaleY" explicit_type "float"
	  param in name "rotationX" explicit_type "float"
	  param in name "rotationY" explicit_type "float"
	  param in name "rotationZ" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7373879 "Transforms"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 25619895 "translationX"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620023 "translationY"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620151 "translationZ"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620279 "scaleX"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620407 "scaleY"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620535 "rotationX"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620663 "rotationY"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25620791 "rotationZ"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 81244599 "Transforms"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" type class_ref 6937143 // View
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81244727 "restore"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" type class_ref 6937143 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81244855 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "that" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7374007 "GhostListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16499383 // <generalisation>
	  relation 16499383 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16499383 // <generalisation>
	    b parent class_ref 6999991 // TransitionListenerAdapter
	end

	classrelation 16499511 // mView (<unidirectional association>)
	  relation 16499511 --->
	    a role_name "mView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16499511 // mView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	classrelation 16499639 // mStartView (<unidirectional association>)
	  relation 16499639 --->
	    a role_name "mStartView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16499639 // mStartView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	classrelation 16499767 // mGhostView (<unidirectional association>)
	  relation 16499767 --->
	    a role_name "mGhostView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16499767 // mGhostView (<unidirectional association>)
	    b parent class_ref 6947895 // GhostView
	end

	operation 81244983 "GhostListener"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "view" type class_ref 6937143 // View
	    param inout name "startView" type class_ref 6937143 // View
	    param inout name "ghostView" type class_ref 6947895 // GhostView
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81245111 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81245239 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81245367 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7374135 "CircularPropagation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A propagation that varies with the distance to the epicenter of the Transition
or center of the scene if no epicenter exists. When a View is visible in the
start of the transition, Views farther from the epicenter will transition
sooner than Views closer to the epicenter. When a View is not in the start
of the transition or is not visible at the start of the transition, it will
transition sooner when closer to the epicenter and later when farther from
the epicenter. This is the default TransitionPropagation used with
{@link android.transition.Explode}.
"
      classrelation 16500663 // <generalisation>
	relation 16500663 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16500663 // <generalisation>
	  b parent class_ref 7374263 // VisibilityPropagation
      end

      attribute 25621303 "mPropagationSpeed"
	private explicit_type "float"
	init_value " 3.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81247287 "setPropagationSpeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "propagationSpeed" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the speed at which transition propagation happens, relative to the duration of the
Transition. A <code>propagationSpeed</code> of 1 means that a View centered farthest from
the epicenter and View centered at the epicenter will have a difference
in start delay of approximately the duration of the Transition. A speed of 2 means the
start delay difference will be approximately half of the duration of the transition. A
value of 0 is illegal, but negative values will invert the propagation.

@param propagationSpeed The speed at which propagation occurs, relative to the duration
                        of the transition. A speed of 4 means it works 4 times as fast
                        as the duration of the transition. May not be 0.
"
      end

      operation 81247415 "getStartDelay"
	public explicit_return_type "long"
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "transition" type class_ref 183607 // Transition
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81247543 "distance"
	class_operation private explicit_return_type "double"
	nparams 4
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7374263 "VisibilityPropagation"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class for <code>TransitionPropagation</code>s that care about
View Visibility and the center position of the View.
"
      classrelation 16500151 // <generalisation>
	relation 16500151 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16500151 // <generalisation>
	  b parent class_ref 7000759 // TransitionPropagation
      end

      operation 81246519 "captureValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81246647 "getPropagationProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81246775 "getViewVisibility"
	public explicit_return_type "int"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@link android.view.View#getVisibility()} for the View at the time the values
were captured.
@param values The TransitionValues captured at the start or end of the Transition.
@return {@link android.view.View#getVisibility()} for the View at the time the values
were captured.
"
      end

      operation 81246903 "getViewX"
	public explicit_return_type "int"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the View's center x coordinate, relative to the screen, at the time the values
were captured.
@param values The TransitionValues captured at the start or end of the Transition.
@return the View's center x coordinate, relative to the screen, at the time the values
were captured.
"
      end

      operation 81247031 "getViewY"
	public explicit_return_type "int"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the View's center y coordinate, relative to the screen, at the time the values
were captured.
@param values The TransitionValues captured at the start or end of the Transition.
@return the View's center y coordinate, relative to the screen, at the time the values
were captured.
"
      end

      operation 81247159 "getViewCoordinate"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "values" type class_ref 7000503 // TransitionValues
	  param in name "coordinateIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7374391 "Crossfade"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures bitmap representations of target views before and
after the scene change and fades between them.

<p>Note: This transition is not compatible with {@link TextureView}
or {@link SurfaceView}.</p>

@hide
"
      classrelation 16500919 // <generalisation>
	relation 16500919 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16500919 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      classrelation 16501559 // sRectEvaluator (<unidirectional association>)
	relation 16501559 --->
	  a role_name "sRectEvaluator" init_value " new RectEvaluator()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16501559 // sRectEvaluator (<unidirectional association>)
	  b parent class_ref 6975159 // RectEvaluator
      end

      attribute 25621431 "mFadeBehavior"
	private explicit_type "int"
	init_value " FADE_BEHAVIOR_REVEAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25621559 "mResizeBehavior"
	private explicit_type "int"
	init_value " RESIZE_BEHAVIOR_SCALE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25621687 "FADE_BEHAVIOR_CROSSFADE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the fading animation should cross-fade
between the old and new representation of all affected target
views. This means that the old representation will fade out
while the new one fades in. This effect may work well on views
without solid backgrounds, such as TextViews.

@see #setFadeBehavior(int)

"
      end

      attribute 25621815 "FADE_BEHAVIOR_REVEAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the fading animation should reveal the
new representation of all affected target views. This means
that the old representation will fade out, gradually
revealing the new representation, which remains opaque
the whole time. This effect may work well on views
with solid backgrounds, such as ImageViews.

@see #setFadeBehavior(int)

"
      end

      attribute 25621943 "FADE_BEHAVIOR_OUT_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the fading animation should first fade
out the original representation completely and then fade in the
new one. This effect may be more suitable than the other
fade behaviors for views with.

@see #setFadeBehavior(int)

"
      end

      attribute 25622071 "RESIZE_BEHAVIOR_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the transition should not animate any
changes in size between the old and new target views.
This means that no scaling will take place as a result of
this transition

@see #setResizeBehavior(int)

"
      end

      attribute 25622199 "RESIZE_BEHAVIOR_SCALE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the transition should animate any
changes in size between the old and new target views.
This means that the animation will scale the start/end
representations of affected views from the starting size
to the ending size over the course of the animation.
This effect may work well on images, but is not recommended
for text.

@see #setResizeBehavior(int)

"
      end

      operation 81247671 "setFadeBehavior"
	public return_type class_ref 7374391 // Crossfade
	nparams 1
	  param in name "fadeBehavior" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TODO: Add fade/resize behaviors to xml resources

Sets the type of fading animation that will be run, one of
{@link #FADE_BEHAVIOR_CROSSFADE} and {@link #FADE_BEHAVIOR_REVEAL}.

@param fadeBehavior The type of fading animation to use when this
transition is run.
"
      end

      operation 81247799 "getFadeBehavior"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fading behavior of the animation.

@return This crossfade object.
@see #setFadeBehavior(int)
"
      end

      operation 81247927 "setResizeBehavior"
	public return_type class_ref 7374391 // Crossfade
	nparams 1
	  param in name "resizeBehavior" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of resizing behavior that will be used during the
transition animation, one of {@link #RESIZE_BEHAVIOR_NONE} and
{@link #RESIZE_BEHAVIOR_SCALE}.

@param resizeBehavior The type of resizing behavior to use when this
transition is run.
"
      end

      operation 81248055 "getResizeBehavior"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resizing behavior of the animation.

@return This crossfade object.
@see #setResizeBehavior(int)
"
      end

      operation 81248183 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81248311 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81248439 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81248567 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7374519 "Explode"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes and moves views in or out from the edges of the
scene. Visibility is determined by both the
{@link View#setVisibility(int)} state of the view as well as whether it
is parented in the current view hierarchy. Disappearing Views are
limited as described in {@link Visibility#onDisappear(android.view.ViewGroup,
TransitionValues, int, TransitionValues, int)}.
<p>Views move away from the focal View or the center of the Scene if
no epicenter was provided.</p>
"
      classrelation 16503223 // <generalisation>
	relation 16503223 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16503223 // <generalisation>
	  b parent class_ref 7374647 // Visibility
      end

      classrelation 16503351 // sDecelerate (<unidirectional association>)
	relation 16503351 --->
	  a role_name "sDecelerate" init_value " new DecelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16503351 // sDecelerate (<unidirectional association>)
	  b parent class_ref 6966967 // TimeInterpolator
      end

      classrelation 16503479 // sAccelerate (<unidirectional association>)
	relation 16503479 --->
	  a role_name "sAccelerate" init_value " new AccelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16503479 // sAccelerate (<unidirectional association>)
	  b parent class_ref 6966967 // TimeInterpolator
      end

      attribute 25623863 "mTempLoc"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81252407 "Explode"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81252535 "Explode"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81252663 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81252791 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81252919 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81253047 "onAppear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81253175 "onDisappear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81253303 "calculateOut"
	private explicit_return_type "void"
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937143 // View
	  param inout name "bounds" type class_ref 5772599 // Rect
	  param inout name "outVector" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81253431 "calculateMaxDistance"
	class_operation private explicit_return_type "double"
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937143 // View
	  param in name "focalX" explicit_type "int"
	  param in name "focalY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7374647 "Visibility"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes. Visibility is determined not just by the
{@link View#setVisibility(int)} state of views, but also whether
views exist in the current view hierarchy. The class is intended to be a
utility for subclasses such as {@link Fade}, which use this visibility
information to determine the specific animations to run when visibility
changes occur. Subclasses should implement one or both of the methods
{@link #onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)},
{@link #onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)} or
{@link #onAppear(ViewGroup, View, TransitionValues, TransitionValues)},
{@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)}.
"
      classrelation 16501687 // <generalisation>
	relation 16501687 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16501687 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      class 7374775 "VisibilityMode"
	visibility package stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag=true, value={MODE_IN, MODE_OUT})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 25622327 "MODE_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mode used in {@link #setMode(int)} to make the transition
operate on targets that are appearing. Maybe be combined with
{@link #MODE_OUT} to target Visibility changes both in and out.

"
      end

      attribute 25622455 "MODE_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mode used in {@link #setMode(int)} to make the transition
operate on targets that are disappearing. Maybe be combined with
{@link #MODE_IN} to target Visibility changes both in and out.

"
      end

      class 7374903 "VisibilityInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 25622583 "visibilityChange"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25622711 "fadeIn"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25622839 "startVisibility"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25622967 "endVisibility"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 16502327 // startParent (<unidirectional association>)
	  relation 16502327 --->
	    a role_name "startParent" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16502327 // startParent (<unidirectional association>)
	    b parent class_ref 6937399 // ViewGroup
	end

	classrelation 16502455 // endParent (<unidirectional association>)
	  relation 16502455 --->
	    a role_name "endParent" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16502455 // endParent (<unidirectional association>)
	    b parent class_ref 6937399 // ViewGroup
	end
      end

      attribute 25623095 "mMode"
	private explicit_type "int"
	init_value " MODE_IN | MODE_OUT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25623223 "mSuppressLayout"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81248695 "Visibility"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81248823 "Visibility"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81248951 "setSuppressLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "suppress" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This tells the Visibility transition to suppress layout during the transition and release
the suppression after the transition.
@hide
"
      end

      operation 81249079 "setMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@VisibilityMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the transition to support appearing and/or disappearing Views, depending
on <code>mode</code>.

@param mode The behavior supported by this transition, a combination of
            {@link #MODE_IN} and {@link #MODE_OUT}.
@attr ref android.R.styleable#VisibilityTransition_transitionVisibilityMode
"
      end

      operation 81249207 "getMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@VisibilityMode
"
	
	
	
	comment "Returns whether appearing and/or disappearing Views are supported.

Returns whether appearing and/or disappearing Views are supported. A combination of
        {@link #MODE_IN} and {@link #MODE_OUT}.
@attr ref android.R.styleable#VisibilityTransition_transitionVisibilityMode
"
      end

      operation 81249335 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81249463 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81249591 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81249719 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81249847 "isVisible"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "values" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the view is 'visible' according to the given values
object. This is determined by testing the same properties in the values
object that are used to determine whether the object is appearing or
disappearing in the {@link
Transition#createAnimator(ViewGroup, TransitionValues, TransitionValues)}
method. This method can be called by, for example, subclasses that want
to know whether the object is visible in the same way that Visibility
determines it for the actual animation.

@param values The TransitionValues object that holds the information by
which visibility is determined.
@return True if the view reference by <code>values</code> is visible,
false otherwise.
"
      end

      operation 81249975 "getVisibilityChangeInfo"
	class_operation private return_type class_ref 7374903 // VisibilityInfo
	nparams 2
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81250103 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81250231 "onAppear"
	public return_type class_ref 6966327 // Animator
	nparams 5
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param in name "startVisibility" explicit_type "int"
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	  param in name "endVisibility" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default implementation of this method calls
{@link #onAppear(ViewGroup, View, TransitionValues, TransitionValues)}.
Subclasses should override this method or
{@link #onAppear(ViewGroup, View, TransitionValues, TransitionValues)}.
if they need to create an Animator when targets appear.
The method should only be called by the Visibility class; it is
not intended to be called from external classes.

@param sceneRoot The root of the transition hierarchy
@param startValues The target values in the start scene
@param startVisibility The target visibility in the start scene
@param endValues The target values in the end scene
@param endVisibility The target visibility in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 81250359 "onAppear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default implementation of this method returns a null Animator. Subclasses should
override this method to make targets appear with the desired transition. The
method should only be called from
{@link #onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)}.

@param sceneRoot The root of the transition hierarchy
@param view The View to make appear. This will be in the target scene's View hierarchy and
            will be VISIBLE.
@param startValues The target values in the start scene
@param endValues The target values in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 81250487 "onDisappear"
	public return_type class_ref 6966327 // Animator
	nparams 5
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param in name "startVisibility" explicit_type "int"
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	  param in name "endVisibility" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses should override this method or
{@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)}
if they need to create an Animator when targets disappear.
The method should only be called by the Visibility class; it is
not intended to be called from external classes.
<p>
The default implementation of this method attempts to find a View to use to call
{@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)},
based on the situation of the View in the View hierarchy. For example,
if a View was simply removed from its parent, then the View will be added
into a {@link android.view.ViewGroupOverlay} and passed as the <code>view</code>
parameter in {@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)}.
If a visible View is changed to be {@link View#GONE} or {@link View#INVISIBLE},
then it can be used as the <code>view</code> and the visibility will be changed
to {@link View#VISIBLE} for the duration of the animation. However, if a View
is in a hierarchy which is also altering its visibility, the situation can be
more complicated. In general, if a view that is no longer in the hierarchy in
the end scene still has a parent (so its parent hierarchy was removed, but it
was not removed from its parent), then it will be left alone to avoid side-effects from
improperly removing it from its parent. The only exception to this is if
the previous {@link Scene} was {@link Scene#getSceneForLayout(ViewGroup, int,
android.content.Context) created from a layout resource file}, then it is considered
safe to un-parent the starting scene view in order to make it disappear.</p>

@param sceneRoot The root of the transition hierarchy
@param startValues The target values in the start scene
@param startVisibility The target visibility in the start scene
@param endValues The target values in the end scene
@param endVisibility The target visibility in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 81250615 "isTransitionRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "newValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81250743 "onDisappear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default implementation of this method returns a null Animator. Subclasses should
override this method to make targets disappear with the desired transition. The
method should only be called from
{@link #onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)}.

@param sceneRoot The root of the transition hierarchy
@param view The View to make disappear. This will be in the target scene's View
            hierarchy or in an {@link android.view.ViewGroupOverlay} and will be
            VISIBLE.
@param startValues The target values in the start scene
@param endValues The target values in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      class 7375031 "DisappearListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16502583 // <generalisation>
	  relation 16502583 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16502583 // <generalisation>
	    b parent class_ref 6999991 // TransitionListenerAdapter
	end

	classrelation 16502711 // <realization>
	  relation 16502711 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16502711 // <realization>
	    b parent class_ref 6966583 // AnimatorListener
	end

	classrelation 16502839 // <realization>
	  relation 16502839 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16502839 // <realization>
	    b parent class_ref 6966711 // AnimatorPauseListener
	end

	classrelation 16502967 // mView (<unidirectional association>)
	  relation 16502967 --->
	    a role_name "mView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16502967 // mView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	attribute 25623351 "mFinalVisibility"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 16503095 // mParent (<unidirectional association>)
	  relation 16503095 --->
	    a role_name "mParent" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16503095 // mParent (<unidirectional association>)
	    b parent class_ref 6937399 // ViewGroup
	end

	attribute 25623479 "mSuppressLayout"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25623607 "mLayoutSuppressed"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25623735 "mCanceled"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 81250871 "DisappearListener"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "view" type class_ref 6937143 // View
	    param in name "finalVisibility" explicit_type "int"
	    param inout name "suppressLayout" explicit_type "boolean"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81250999 "onAnimationPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251127 "onAnimationResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251255 "onAnimationCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251383 "onAnimationRepeat"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251511 "onAnimationStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251639 "onAnimationEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251767 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81251895 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81252023 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81252151 "hideViewWhenNotCanceled"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81252279 "suppressLayout"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "suppress" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 7375159 "Fade"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes and fades views in or out when they become visible
or non-visible. Visibility is determined by both the
{@link View#setVisibility(int)} state of the view as well as whether it
is parented in the current view hierarchy.

<p>The ability of this transition to fade out a particular view, and the
way that that fading operation takes place, is based on
the situation of the view in the view hierarchy. For example, if a view was
simply removed from its parent, then the view will be added into a {@link
android.view.ViewGroupOverlay} while fading. If a visible view is
changed to be {@link View#GONE} or {@link View#INVISIBLE}, then the
visibility will be changed to {@link View#VISIBLE} for the duration of
the animation. However, if a view is in a hierarchy which is also altering
its visibility, the situation can be more complicated. In general, if a
view that is no longer in the hierarchy in the end scene still has a
parent (so its parent hierarchy was removed, but it was not removed from
its parent), then it will be left alone to avoid side-effects from
improperly removing it from its parent. The only exception to this is if
the previous {@link Scene} was
{@link Scene#getSceneForLayout(android.view.ViewGroup, int, android.content.Context)
created from a layout resource file}, then it is considered safe to un-parent
the starting scene view in order to fade it out.</p>

<p>A Fade transition can be described in a resource file by using the
tag <code>fade</code>, along with the standard
attributes of {@link android.R.styleable#Fade} and
{@link android.R.styleable#Transition}.</p>
"
      classrelation 16503863 // <generalisation>
	relation 16503863 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16503863 // <generalisation>
	  b parent class_ref 7374647 // Visibility
      end

      attribute 25623991 "DBG"
	class_attribute private explicit_type "boolean"
	init_value " Transition.DBG && false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25624119 "IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " Visibility.MODE_IN"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Fading mode used in {@link #Fade(int)} to make the transition
operate on targets that are appearing. Maybe be combined with
{@link #OUT} to fade both in and out. Equivalent to
{@link Visibility#MODE_IN}.

"
      end

      attribute 25624247 "OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " Visibility.MODE_OUT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Fading mode used in {@link #Fade(int)} to make the transition
operate on targets that are disappearing. Maybe be combined with
{@link #IN} to fade both in and out. Equivalent to
{@link Visibility#MODE_OUT}.

"
      end

      operation 81253559 "Fade"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Fade transition that will fade targets in and out.
"
      end

      operation 81253687 "Fade"
	public explicit_return_type ""
	nparams 1
	  param in name "fadingMode" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Fade transition that will fade targets in
and/or out, according to the value of fadingMode.

@param fadingMode The behavior of this transition, a combination of
{@link #IN} and {@link #OUT}.
"
      end

      operation 81253815 "Fade"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81253943 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81254071 "createAnimation"
	private return_type class_ref 6966327 // Animator
	nparams 3
	  param in name "view" type class_ref 6937143 // View
	  param in name "startAlpha" explicit_type "float"
	  param in name "endAlpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method to handle creating and running the Animator.
"
      end

      operation 81254199 "onAppear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81254327 "onDisappear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param in name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81254455 "getStartAlpha"
	class_operation private explicit_return_type "float"
	nparams 2
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param in name "fallbackValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7375287 "FadeAnimatorListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16504247 // <generalisation>
	  relation 16504247 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16504247 // <generalisation>
	    b parent class_ref 6968247 // AnimatorListenerAdapter
	end

	classrelation 16504375 // mView (<unidirectional association>)
	  relation 16504375 --->
	    a role_name "mView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16504375 // mView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	attribute 25624375 "mLayerTypeChanged"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 81254583 "FadeAnimatorListener"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" type class_ref 6937143 // View
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81254711 "onAnimationStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81254839 "onAnimationEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7375415 "PatternPathMotion"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PathMotion that takes a Path pattern and applies it to the separation between two points.
The starting point of the Path will be moved to the origin and the end point will be scaled
and rotated so that it matches with the target end point.
<p>This may be used in XML as an element inside a transition.</p>
<pre>{@code
<changeBounds>
    <patternPathMotion android:patternPathData=\"M0 0 L0 100 L100 100\"/>
</changeBounds>}
</pre>
"
      classrelation 16504503 // <generalisation>
	relation 16504503 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16504503 // <generalisation>
	  b parent class_ref 7000119 // PathMotion
      end

      classrelation 16504631 // mOriginalPatternPath (<unidirectional association>)
	relation 16504631 --->
	  a role_name "mOriginalPatternPath" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16504631 // mOriginalPatternPath (<unidirectional association>)
	  b parent class_ref 5842743 // Path
      end

      classrelation 16504759 // mPatternPath (<unidirectional association>)
	relation 16504759 --->
	  a role_name "mPatternPath" init_value " new Path()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16504759 // mPatternPath (<unidirectional association>)
	  b parent class_ref 5842743 // Path
      end

      classrelation 16504887 // mTempMatrix (<unidirectional association>)
	relation 16504887 --->
	  a role_name "mTempMatrix" init_value " new Matrix()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16504887 // mTempMatrix (<unidirectional association>)
	  b parent class_ref 5825079 // Matrix
      end

      operation 81254967 "PatternPathMotion"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PatternPathMotion with a straight-line pattern.
"
      end

      operation 81255095 "PatternPathMotion"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81255223 "PatternPathMotion"
	public explicit_return_type ""
	nparams 1
	  param inout name "patternPath" type class_ref 5842743 // Path
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a PatternPathMotion with the Path defining a pattern of motion between two
coordinates. The pattern will be translated, rotated, and scaled to fit between the start
and end points. The pattern must not be empty and must have the end point differ from the
start point.

@param patternPath A Path to be used as a pattern for two-dimensional motion.
"
      end

      operation 81255351 "getPatternPath"
	public return_type class_ref 5842743 // Path
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Path defining a pattern of motion between two coordinates.
The pattern will be translated, rotated, and scaled to fit between the start and end points.
The pattern must not be empty and must have the end point differ from the start point.

@return the Path defining a pattern of motion between two coordinates.
@attr ref android.R.styleable#PatternPathMotion_patternPathData
"
      end

      operation 81255479 "setPatternPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "patternPath" type class_ref 5842743 // Path
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Path defining a pattern of motion between two coordinates.
The pattern will be translated, rotated, and scaled to fit between the start and end points.
The pattern must not be empty and must have the end point differ from the start point.

@param patternPath A Path to be used as a pattern for two-dimensional motion.
@attr ref android.R.styleable#PatternPathMotion_patternPathData
"
      end

      operation 81255607 "getPath"
	public return_type class_ref 5842743 // Path
	nparams 4
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7375543 "Recolor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes during scene changes to the
{@link View#setBackground(android.graphics.drawable.Drawable) background}
property of its target views (when the background is a
{@link ColorDrawable}, as well as the
{@link TextView#setTextColor(android.content.res.ColorStateList)
color} of the text for target TextViews. If the color changes between
scenes, the color change is animated.

@hide
"
      classrelation 16505015 // <generalisation>
	relation 16505015 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16505015 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      operation 81255735 "Recolor"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81255863 "Recolor"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81255991 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81256119 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81256247 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81256375 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7375671 "Rotate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures the rotation property of targets before and after
the scene change and animates any changes.

@hide
"
      classrelation 16505399 // <generalisation>
	relation 16505399 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16505399 // <generalisation>
	  b parent class_ref 183607 // Transition
      end

      operation 81256503 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81256631 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81256759 "createAnimator"
	public return_type class_ref 6966327 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7375799 "SidePropagation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>TransitionPropagation</code> that propagates based on the distance to the side
and, orthogonally, the distance to epicenter. If the transitioning View is visible in
the start of the transition, then it will transition sooner when closer to the side and
later when farther. If the view is not visible in the start of the transition, then
it will transition later when closer to the side and sooner when farther from the edge.
This is the default TransitionPropagation used with {@link android.transition.Slide}.
"
      classrelation 16506039 // <generalisation>
	relation 16506039 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16506039 // <generalisation>
	  b parent class_ref 7374263 // VisibilityPropagation
      end

      attribute 25624887 "mPropagationSpeed"
	private explicit_type "float"
	init_value " 3.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25625015 "mSide"
	private explicit_type "int"
	init_value " Gravity.BOTTOM"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81258551 "setSide"
	public explicit_return_type "void"
	nparams 1
	  param in name "side" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@GravityFlag ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the side that is used to calculate the transition propagation. If the transitioning
View is visible in the start of the transition, then it will transition sooner when
closer to the side and later when farther. If the view is not visible in the start of
the transition, then it will transition later when closer to the side and sooner when
farther from the edge. The default is {@link Gravity#BOTTOM}.

@param side The side that is used to calculate the transition propagation. Must be one of
            {@link Gravity#LEFT}, {@link Gravity#TOP}, {@link Gravity#RIGHT},
            {@link Gravity#BOTTOM}, {@link Gravity#START}, or {@link Gravity#END}.
"
      end

      operation 81258679 "setPropagationSpeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "propagationSpeed" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the speed at which transition propagation happens, relative to the duration of the
Transition. A <code>propagationSpeed</code> of 1 means that a View centered at the side
set in {@link #setSide(int)} and View centered at the opposite edge will have a difference
in start delay of approximately the duration of the Transition. A speed of 2 means the
start delay difference will be approximately half of the duration of the transition. A
value of 0 is illegal, but negative values will invert the propagation.

@param propagationSpeed The speed at which propagation occurs, relative to the duration
                        of the transition. A speed of 4 means it works 4 times as fast
                        as the duration of the transition. May not be 0.
"
      end

      operation 81258807 "getStartDelay"
	public explicit_return_type "long"
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "transition" type class_ref 183607 // Transition
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81258935 "distance"
	private explicit_return_type "int"
	nparams 9
	  param inout name "sceneRoot" type class_ref 6937143 // View
	  param in name "viewX" explicit_type "int"
	  param in name "viewY" explicit_type "int"
	  param in name "epicenterX" explicit_type "int"
	  param in name "epicenterY" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81259063 "getMaxDistance"
	private explicit_return_type "int"
	nparams 1
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7375927 "Slide"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes and moves views in or out from one of the edges of the
scene. Visibility is determined by both the
{@link View#setVisibility(int)} state of the view as well as whether it
is parented in the current view hierarchy. Disappearing Views are
limited as described in {@link Visibility#onDisappear(android.view.ViewGroup,
TransitionValues, int, TransitionValues, int)}.
"
      classrelation 16506295 // <generalisation>
	relation 16506295 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16506295 // <generalisation>
	  b parent class_ref 7374647 // Visibility
      end

      classrelation 16506551 // sDecelerate (<unidirectional association>)
	relation 16506551 --->
	  a role_name "sDecelerate" init_value " new DecelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16506551 // sDecelerate (<unidirectional association>)
	  b parent class_ref 6966967 // TimeInterpolator
      end

      classrelation 16506679 // sAccelerate (<unidirectional association>)
	relation 16506679 --->
	  a role_name "sAccelerate" init_value " new AccelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16506679 // sAccelerate (<unidirectional association>)
	  b parent class_ref 6966967 // TimeInterpolator
      end

      class 7376055 "CalculateSlide"
	visibility private stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 81259191 "getGoneX"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	    param inout name "view" type class_ref 6937143 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the translation value for view when it goes out of the scene "
	end

	operation 81259319 "getGoneY"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	    param inout name "view" type class_ref 6937143 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the translation value for view when it goes out of the scene "
	end
      end

      classrelation 16506935 // mSlideCalculator (<unidirectional association>)
	relation 16506935 --->
	  a role_name "mSlideCalculator" init_value " sCalculateBottom" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16506935 // mSlideCalculator (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      attribute 25625143 "mSlideEdge"
	private explicit_type "int"
	init_value " Gravity.BOTTOM"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GravityFlag
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25625271 "mSlideFraction"
	private explicit_type "float"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7376183 "GravityFlag"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef({Gravity.LEFT, Gravity.TOP, Gravity.RIGHT, Gravity.BOTTOM, Gravity.START, Gravity.END})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 7376311 "CalculateSlideHorizontal"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16507063 // <realization>
	  relation 16507063 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16507063 // <realization>
	    b parent class_ref 7376055 // CalculateSlide
	end

	operation 81259447 "getGoneY"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	    param inout name "view" type class_ref 6937143 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7376439 "CalculateSlideVertical"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16507191 // <realization>
	  relation 16507191 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16507191 // <realization>
	    b parent class_ref 7376055 // CalculateSlide
	end

	operation 81259575 "getGoneX"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	    param inout name "view" type class_ref 6937143 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 16507319 // sCalculateLeft (<unidirectional association>)
	relation 16507319 --->
	  a role_name "sCalculateLeft" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationX() - sceneRoot.getWidth() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16507319 // sCalculateLeft (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      classrelation 16507447 // sCalculateStart (<unidirectional association>)
	relation 16507447 --->
	  a role_name "sCalculateStart" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            final boolean isRtl = sceneRoot.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;
            final float x;
            if (isRtl) {
                x = view.getTranslationX() + sceneRoot.getWidth() * fraction;
            } else {
                x = view.getTranslationX() - sceneRoot.getWidth() * fraction;
            }
            return x;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16507447 // sCalculateStart (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      classrelation 16507575 // sCalculateTop (<unidirectional association>)
	relation 16507575 --->
	  a role_name "sCalculateTop" init_value " new CalculateSlideVertical() {
        @Override
        public float getGoneY(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationY() - sceneRoot.getHeight() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16507575 // sCalculateTop (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      classrelation 16507703 // sCalculateRight (<unidirectional association>)
	relation 16507703 --->
	  a role_name "sCalculateRight" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationX() + sceneRoot.getWidth() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16507703 // sCalculateRight (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      classrelation 16507831 // sCalculateEnd (<unidirectional association>)
	relation 16507831 --->
	  a role_name "sCalculateEnd" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            final boolean isRtl = sceneRoot.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;
            final float x;
            if (isRtl) {
                x = view.getTranslationX() - sceneRoot.getWidth() * fraction;
            } else {
                x = view.getTranslationX() + sceneRoot.getWidth() * fraction;
            }
            return x;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16507831 // sCalculateEnd (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      classrelation 16507959 // sCalculateBottom (<unidirectional association>)
	relation 16507959 --->
	  a role_name "sCalculateBottom" init_value " new CalculateSlideVertical() {
        @Override
        public float getGoneY(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationY() + sceneRoot.getHeight() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16507959 // sCalculateBottom (<unidirectional association>)
	  b parent class_ref 7376055 // CalculateSlide
      end

      operation 81259703 "Slide"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor using the default {@link Gravity#BOTTOM}
slide edge direction.
"
      end

      operation 81259831 "Slide"
	public explicit_return_type ""
	nparams 1
	  param in name "slideEdge" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor using the provided slide edge direction.
"
      end

      operation 81259959 "Slide"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81260087 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81260215 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81260343 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81260471 "setSlideEdge"
	public explicit_return_type "void"
	nparams 1
	  param in name "slideEdge" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@GravityFlag ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the edge that Views appear and disappear from.

@param slideEdge The edge of the scene to use for Views appearing and disappearing. One of
                 {@link android.view.Gravity#LEFT}, {@link android.view.Gravity#TOP},
                 {@link android.view.Gravity#RIGHT}, {@link android.view.Gravity#BOTTOM},
                 {@link android.view.Gravity#START}, {@link android.view.Gravity#END}.
@attr ref android.R.styleable#Slide_slideEdge
"
      end

      operation 81260599 "getSlideEdge"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@GravityFlag
"
	
	
	
	comment "Returns the edge that Views appear and disappear from.

@return the edge of the scene to use for Views appearing and disappearing. One of
        {@link android.view.Gravity#LEFT}, {@link android.view.Gravity#TOP},
        {@link android.view.Gravity#RIGHT}, {@link android.view.Gravity#BOTTOM},
        {@link android.view.Gravity#START}, {@link android.view.Gravity#END}.
@attr ref android.R.styleable#Slide_slideEdge
"
      end

      operation 81260727 "onAppear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81260855 "onDisappear"
	public return_type class_ref 6966327 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "startValues" type class_ref 7000503 // TransitionValues
	  param inout name "endValues" type class_ref 7000503 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 81260983 "setSlideFraction"
	public explicit_return_type "void"
	nparams 1
	  param in name "slideFraction" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 7376567 "TransitionInflater"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class inflates scenes and transitions from resource files.

Information on XML resource descriptions for transitions can be found for
{@link android.R.styleable#Transition}, {@link android.R.styleable#TransitionSet},
{@link android.R.styleable#TransitionTarget}, {@link android.R.styleable#Fade},
and {@link android.R.styleable#TransitionManager}.
"
      classrelation 16508215 // sConstructors (<unidirectional association>)
	relation 16508215 --->
	  a role_name "sConstructors" init_value "
            new ArrayMap<String, Constructor>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Constructor> ${name}${value};
"
	    classrelation_ref 16508215 // sConstructors (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 16508343 // mContext (<unidirectional association>)
	relation 16508343 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16508343 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 81261111 "TransitionInflater"
	private explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81261239 "from"
	class_operation public return_type class_ref 7376567 // TransitionInflater
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the TransitionInflater from the given context.
"
      end

      operation 81261367 "inflateTransition"
	public return_type class_ref 183607 // Transition
	nparams 1
	  param in name "resource" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@TransitionRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a {@link Transition} object from a resource

@param resource The resource id of the transition to load
@return The loaded Transition object
@throws android.content.res.Resources.NotFoundException when the
transition cannot be loaded
"
      end

      operation 81261495 "inflateTransitionManager"
	public return_type class_ref 6940087 // TransitionManager
	nparams 2
	  param in name "resource" explicit_type "int"
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@TransitionRes ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a {@link TransitionManager} object from a resource

@param resource The resource id of the transition manager to load
@return The loaded TransitionManager object
@throws android.content.res.Resources.NotFoundException when the
transition manager cannot be loaded
"
      end

      operation 81261623 "createTransitionFromXml"
	private return_type class_ref 183607 // Transition
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	  param inout name "parent" type class_ref 183607 // Transition
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Transition loading
"
      end

      operation 81261751 "createCustom"
	private explicit_return_type "Object"
	nparams 3
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	  param inout name "expectedType" explicit_type "Class"
	  param inout name "tag" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81261879 "getTargetIds"
	private explicit_return_type "void"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	  param inout name "transition" type class_ref 183607 // Transition
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81262007 "createTransitionManagerFromXml"
	private return_type class_ref 6940087 // TransitionManager
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TransitionManager loading
"
      end

      operation 81262135 "loadTransition"
	private explicit_return_type "void"
	nparams 3
	  param inout name "attrs" type class_ref 6924983 // AttributeSet
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "transitionManager" type class_ref 6940087 // TransitionManager
	nexceptions 1
	  exception class_ref 6924855 // NotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7376823 "TransitionUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Static utility methods for Transitions.

@hide
"
      attribute 25625527 "MAX_IMAGE_SIZE"
	class_attribute private explicit_type "int"
	init_value " (1024 * 1024)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 81264823 "mergeAnimators"
	class_operation package return_type class_ref 6966327 // Animator
	nparams 2
	  param inout name "animator1" type class_ref 6966327 // Animator
	  param inout name "animator2" type class_ref 6966327 // Animator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81264951 "mergeTransitions"
	class_operation public return_type class_ref 183607 // Transition
	nparams 1
	  param inout name "" explicit_type "Transition...transitions"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 81265079 "copyViewImage"
	class_operation public return_type class_ref 6937143 // View
	nparams 3
	  param inout name "sceneRoot" type class_ref 6937399 // ViewGroup
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "parent" type class_ref 6937143 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a View using the bitmap copy of <code>view</code>. If <code>view</code> is large,
the copy will use a scaled bitmap of the given view.

@param sceneRoot The ViewGroup in which the view copy will be displayed.
@param view The view to create a copy of.
@param parent The parent of view.
"
      end

      operation 81265207 "createDrawableBitmap"
	class_operation public return_type class_ref 5824951 // Bitmap
	nparams 1
	  param inout name "drawable" type class_ref 5787831 // Drawable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a copy of bitmap of given drawable, return null if intrinsic size is zero
"
      end

      operation 81265335 "createViewBitmap"
	class_operation public return_type class_ref 5824951 // Bitmap
	nparams 3
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "matrix" type class_ref 5825079 // Matrix
	  param inout name "bounds" type class_ref 5845431 // RectF
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Bitmap of the given view, using the Matrix matrix to transform to the local
coordinates. <code>matrix</code> will be modified during the bitmap creation.

<p>If the bitmap is large, it will be scaled uniformly down to at most 1MB size.</p>
@param view The view to create a bitmap for.
@param matrix The matrix converting the view local coordinates to the coordinates that
              the bitmap will be displayed in. <code>matrix</code> will be modified before
              returning.
@param bounds The bounds of the bitmap in the destination coordinate system (where the
              view should be presented. Typically, this is matrix.mapRect(viewBounds);
@return A bitmap of the given view or null if bounds has no width or height.
"
      end

      class 7376951 "MatrixEvaluator"
	visibility public 
	nactuals 1
	actual class class_ref 6967735 // TypeEvaluator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16509751 // <realization>
	  relation 16509751 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16509751 // <realization>
	    b parent class_ref 6967735 // TypeEvaluator
	end

	attribute 25625655 "mTempStartValues"
	  package explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[9]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25625783 "mTempEndValues"
	  package explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[9]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 16509879 // mTempMatrix (<unidirectional association>)
	  relation 16509879 --->
	    a role_name "mTempMatrix" init_value " new Matrix()" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16509879 // mTempMatrix (<unidirectional association>)
	    b parent class_ref 5825079 // Matrix
	end

	operation 81265463 "evaluate"
	  public return_type class_ref 5825079 // Matrix
	  nparams 3
	    param in name "fraction" explicit_type "float"
	    param inout name "startValue" type class_ref 5825079 // Matrix
	    param inout name "endValue" type class_ref 5825079 // Matrix
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7377079 "TranslationAnimationCreator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used by Slide and Explode to create an animator that goes from the start
position to the end position. It takes into account the canceled position so that it
will not blink out or shift suddenly when the transition is interrupted.
"
      operation 81265975 "createAnimation"
	class_operation package return_type class_ref 6966327 // Animator
	nparams 10
	  param inout name "view" type class_ref 6937143 // View
	  param inout name "values" type class_ref 7000503 // TransitionValues
	  param in name "viewPosX" explicit_type "int"
	  param in name "viewPosY" explicit_type "int"
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	  param inout name "interpolator" type class_ref 6966967 // TimeInterpolator
	  param inout name "transition" type class_ref 183607 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an animator that can be used for x and/or y translations. When interrupted,
it sets a tag to keep track of the position so that it may be continued from position.

@param view The view being moved. This may be in the overlay for onDisappear.
@param values The values containing the view in the view hierarchy.
@param viewPosX The x screen coordinate of view
@param viewPosY The y screen coordinate of view
@param startX The start translation x of view
@param startY The start translation y of view
@param endX The end translation x of view
@param endY The end translation y of view
@param interpolator The interpolator to use with this animator.
@return An animator that moves from (startX, startY) to (endX, endY) unless there was
a previous interruption, in which case it moves from the current position to (endX, endY).
"
      end

      class 7377207 "TransitionPositionListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 16510903 // <generalisation>
	  relation 16510903 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16510903 // <generalisation>
	    b parent class_ref 6968247 // AnimatorListenerAdapter
	end

	classrelation 16511031 // <realization>
	  relation 16511031 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 16511031 // <realization>
	    b parent class_ref 7000631 // TransitionListener
	end

	classrelation 16511159 // mViewInHierarchy (<unidirectional association>)
	  relation 16511159 --->
	    a role_name "mViewInHierarchy" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16511159 // mViewInHierarchy (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	classrelation 16511287 // mMovingView (<unidirectional association>)
	  relation 16511287 --->
	    a role_name "mMovingView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 16511287 // mMovingView (<unidirectional association>)
	    b parent class_ref 6937143 // View
	end

	attribute 25625911 "mStartX"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25626039 "mStartY"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25626167 "mTransitionPosition"
	  private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25626295 "mPausedX"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25626423 "mPausedY"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25626551 "mTerminalX"
	  const_attribute private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25626679 "mTerminalY"
	  const_attribute private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 81266103 "TransitionPositionListener"
	  private explicit_return_type ""
	  nparams 6
	    param inout name "movingView" type class_ref 6937143 // View
	    param inout name "viewInHierarchy" type class_ref 6937143 // View
	    param in name "startX" explicit_type "int"
	    param in name "startY" explicit_type "int"
	    param in name "terminalX" explicit_type "float"
	    param in name "terminalY" explicit_type "float"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 81266231 "onAnimationCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81266359 "onAnimationEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81266487 "onAnimationPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81266615 "onAnimationResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 6966327 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81266743 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81266871 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81266999 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81267127 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 81267255 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 183607 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end
  end

  deploymentview 132663 "transition"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2173751 "AutoTransitionTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.support.test.runner.AndroidJUnit4;
import android.test.suitebuilder.annotation.SmallTest;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
${definition}"
      associated_classes
	class_ref 5910967 // AutoTransitionTest
      end
    end

    artifact 2173879 "FadeTransitionTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.AnimatorSetActivity;
import android.app.Activity;
import android.test.ActivityInstrumentationTestCase2;
import android.test.suitebuilder.annotation.SmallTest;
import android.transition.Transition.TransitionListener;
import android.transition.Transition.TransitionListenerAdapter;
import android.view.View;
import android.view.ViewGroup;
import com.android.frameworks.coretests.R;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
import static android.support.test.espresso.Espresso.onView;
${definition}"
      associated_classes
	class_ref 5911095 // FadeTransitionTest
      end
    end

    artifact 2174007 "SlideTransitionTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.AnimatorSetActivity;
import android.app.Activity;
import android.test.ActivityInstrumentationTestCase2;
import android.test.suitebuilder.annotation.SmallTest;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import com.android.frameworks.coretests.R;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
${definition}"
      associated_classes
	class_ref 5911479 // SlideTransitionTest
      end
    end

    artifact 2174135 "TransitionTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.AnimatorSetActivity;
import android.app.Activity;
import android.graphics.Rect;
import android.test.ActivityInstrumentationTestCase2;
import android.transition.Transition.EpicenterCallback;
import android.util.ArrayMap;
import android.view.View;
import android.view.animation.AccelerateInterpolator;
import android.widget.TextView;
import com.android.frameworks.coretests.R;
${definition}"
      associated_classes
	class_ref 5911863 // TransitionTest
      end
    end

    artifact 2761783 "Transition"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.TimeInterpolator;
import android.annotation.Nullable;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Path;
import android.graphics.Rect;
import android.util.ArrayMap;
import android.util.AttributeSet;
import android.util.Log;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.util.SparseLongArray;
import android.view.InflateException;
import android.view.SurfaceView;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOverlay;
import android.view.WindowId;
import android.view.animation.AnimationUtils;
import android.widget.ListView;
import android.widget.Spinner;
import com.android.internal.R;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
${definition}"
      associated_classes
	class_ref 183607 // Transition
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933175 "PathMotion"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.graphics.Path;
import android.util.AttributeSet;
${definition}"
      associated_classes
	class_ref 7000119 // PathMotion
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933303 "ArcMotion"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Path;
import android.util.AttributeSet;
import com.android.internal.R;
${definition}"
      associated_classes
	class_ref 7372471 // ArcMotion
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933431 "TransitionSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.animation.TimeInterpolator;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AndroidRuntimeException;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 7000375 // TransitionSet
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933559 "AutoTransition"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.AttributeSet;
${definition}"
      associated_classes
	class_ref 7372599 // AutoTransition
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933687 "ChangeBounds"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.AnimatorSet;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.PointF;
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ObjectAnimator;
import android.animation.PropertyValuesHolder;
import android.animation.RectEvaluator;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.Property;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7372855 // ChangeBounds
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933815 "ChangeClipBounds"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.animation.RectEvaluator;
import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 7373111 // ChangeClipBounds
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2933943 "ChangeImageTransform"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.animation.TypeEvaluator;
import android.content.Context;
import android.graphics.Matrix;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.Property;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7373239 // ChangeImageTransform
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934071 "ChangeScroll"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.content.Context;
import android.transition.Transition;
import android.transition.TransitionValues;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 7373367 // ChangeScroll
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934199 "ChangeText"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ValueAnimator;
import android.graphics.Color;
import android.util.Log;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7373495 // ChangeText
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934327 "ChangeTransform"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.FloatArrayEvaluator;
import android.animation.ObjectAnimator;
import android.animation.PropertyValuesHolder;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Matrix;
import android.graphics.Path;
import android.graphics.PointF;
import android.util.AttributeSet;
import android.util.Property;
import android.view.GhostView;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
${definition}"
      associated_classes
	class_ref 7373623 // ChangeTransform
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934455 "TransitionPropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 7000759 // TransitionPropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934583 "VisibilityPropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.View;
${definition}"
      associated_classes
	class_ref 7374263 // VisibilityPropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934711 "CircularPropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 7374135 // CircularPropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934839 "Crossfade"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.animation.RectEvaluator;
import android.animation.ValueAnimator;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.util.Log;
import android.view.SurfaceView;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOverlay;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7374391 // Crossfade
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2934967 "Visibility"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.Animator.AnimatorListener;
import android.animation.Animator.AnimatorPauseListener;
import android.annotation.IntDef;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_classes
	class_ref 7374647 // Visibility
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935095 "Explode"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.animation.Animator;
import android.animation.TimeInterpolator;
import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.DecelerateInterpolator;
${definition}"
      associated_classes
	class_ref 7374519 // Explode
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935223 "Fade"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ObjectAnimator;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
${definition}"
      associated_classes
	class_ref 7375159 // Fade
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935351 "PatternPathMotion"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Matrix;
import android.graphics.Path;
import android.graphics.PathMeasure;
import android.util.AttributeSet;
import android.util.PathParser;
${definition}"
      associated_classes
	class_ref 7375415 // PatternPathMotion
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935479 "Recolor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.content.Context;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
${definition}"
      associated_classes
	class_ref 7375543 // Recolor
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935607 "Rotate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 7375671 // Rotate
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935735 "Scene"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 6940215 // Scene
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935863 "SidePropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.transition.Slide.GravityFlag;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 7375799 // SidePropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2935991 "Slide"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.TimeInterpolator;
import android.annotation.IntDef;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.DecelerateInterpolator;
import com.android.internal.R;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_classes
	class_ref 7375927 // Slide
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2936119 "TransitionInflater"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.TransitionRes;
import com.android.internal.R;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.util.ArrayMap;
import android.util.AttributeSet;
import android.util.Xml;
import android.view.InflateException;
import android.view.ViewGroup;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
${definition}"
      associated_classes
	class_ref 7376567 // TransitionInflater
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2936247 "TransitionManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.ArrayMap;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 6940087 // TransitionManager
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2936375 "TransitionUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorSet;
import android.animation.TypeEvaluator;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
${definition}"
      associated_classes
	class_ref 7376823 // TransitionUtils
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2936503 "TransitionValues"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.ArrayMap;
import android.view.View;
import android.view.ViewGroup;
import java.util.ArrayList;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7000503 // TransitionValues
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2936631 "TransitionValuesMaps"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.ArrayMap;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.view.View;
${definition}"
      associated_classes
	class_ref 7000247 // TransitionValuesMaps
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2936759 "TranslationAnimationCreator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ObjectAnimator;
import android.animation.TimeInterpolator;
import android.graphics.Path;
import android.transition.Transition.TransitionListener;
import android.view.View;
${definition}"
      associated_classes
	class_ref 7377079 // TranslationAnimationCreator
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
