format 213
"cardemulation" // android::frameworks::base::core::java::android::nfc::cardemulation
  revision 4
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/core/java/android/nfc/cardemulation/"
  java_package "android.nfc.cardemulation"
  classview 147127 "cardemulation"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7237815 "AidGroup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The AidGroup class represents a group of Application Identifiers (AIDs).

<p>The format of AIDs is defined in the ISO/IEC 7816-4 specification. This class
requires the AIDs to be input as a hexadecimal string, with an even amount of
hexadecimal characters, e.g. \"F014811481\".

@hide
"
      classrelation 15911095 // <realization>
	relation 15911095 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15911095 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 25147191 "MAX_NUM_AIDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum number of AIDs that can be present in any one group.

"
      end

      operation 80128439 "AidGroup"
	public explicit_return_type ""
	nparams 2
	  param inout name "aids" explicit_type "List<String>"
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AidGroup object.

@param aids The list of AIDs present in the group
@param category The category of this group, e.g. {@link CardEmulation#CATEGORY_PAYMENT}
"
      end

      operation 80128567 "AidGroup"
	package explicit_return_type ""
	nparams 2
	  param inout name "category" explicit_type "String"
	  param inout name "description" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80128695 "getCategory"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the category of this AID group
"
      end

      operation 80128823 "getAids"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the list of AIDs in this group
"
      end

      operation 80128951 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80129079 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80129207 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15911735 // CREATOR (<unidirectional association>)
	relation 15911735 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AidGroup>() {

        @Override
        public AidGroup createFromParcel(Parcel source) {
            String category = source.readString();
            int listSize = source.readInt();
            ArrayList<String> aidList = new ArrayList<String>();
            if (listSize > 0) {
                source.readStringList(aidList);
            }
            return new AidGroup(aidList, category);
        }

        @Override
        public AidGroup[] newArray(int size) {
            return new AidGroup[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AidGroup> ${name}${value};
"
	    classrelation_ref 15911735 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 80129335 "createFromXml"
	class_operation public return_type class_ref 7237815 // AidGroup
	nparams 1
	  param inout name "parser" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80129463 "writeAsXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80129591 "isValidCategory"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7237943 "ApduServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      classrelation 15911863 // <realization>
	relation 15911863 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15911863 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15912119 // mService (<unidirectional association>)
	relation 15912119 --->
	  a role_name "mService" const_relation package
	    comment "
The service that implements this

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15912119 // mService (<unidirectional association>)
	  b parent class_ref 6933175 // ResolveInfo
      end

      attribute 25147319 "mOnHost"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether this service represents AIDs running on the host CPU

"
      end

      attribute 25147447 "mRequiresDeviceUnlock"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether this service should only be started when the device is unlocked.

"
      end

      attribute 25147575 "mBannerResourceId"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The id of the service banner specified in XML.

"
      end

      attribute 25147703 "mUid"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The uid of the package the service belongs to

"
      end

      operation 80129719 "ApduServiceInfo"
	public explicit_return_type ""
	nparams 9
	  param inout name "info" type class_ref 6933175 // ResolveInfo
	  param inout name "onHost" explicit_type "boolean"
	  param inout name "description" explicit_type "String"
	  param inout name "staticAidGroups" explicit_type "ArrayList<AidGroup>"
	  param inout name "dynamicAidGroups" explicit_type "ArrayList<AidGroup>"
	  param inout name "requiresUnlock" explicit_type "boolean"
	  param in name "bannerResource" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param inout name "settingsActivityName" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80129847 "ApduServiceInfo"
	public explicit_return_type ""
	nparams 3
	  param inout name "pm" type class_ref 6924087 // PackageManager
	  param inout name "info" type class_ref 6933175 // ResolveInfo
	  param inout name "onHost" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80129975 "getComponent"
	public return_type class_ref 6926647 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80130103 "getAids"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a consolidated list of AIDs from the AID groups
registered by this service. Note that if a service has both
a static (manifest-based) AID group for a category and a dynamic
AID group, only the dynamically registered AIDs will be returned
for that category.
@return List of AIDs registered by the service
"
      end

      operation 80130231 "getPrefixAids"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80130359 "getDynamicAidGroupForCategory"
	public return_type class_ref 7237815 // AidGroup
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the registered AID group for this category.
"
      end

      operation 80130487 "removeDynamicAidGroupForCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80130615 "getAidGroups"
	public return_type class_ref 7237815 // AidGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a consolidated list of AID groups
registered by this service. Note that if a service has both
a static (manifest-based) AID group for a category and a dynamic
AID group, only the dynamically registered AID group will be returned
for that category.
@return List of AIDs registered by the service
"
      end

      operation 80130743 "getCategoryForAid"
	public explicit_return_type "String"
	nparams 1
	  param inout name "aid" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the category to which this service has attributed the AID that is passed in,
or null if we don't know this AID.
"
      end

      operation 80130871 "hasCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80130999 "isOnHost"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131127 "requiresUnlock"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131255 "getDescription"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131383 "getUid"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131511 "setOrReplaceDynamicAidGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aidGroup" type class_ref 7237815 // AidGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131639 "loadLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131767 "loadAppLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80131895 "loadIcon"
	public return_type class_ref 5787831 // Drawable
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80132023 "loadBanner"
	public return_type class_ref 5787831 // Drawable
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80132151 "getSettingsActivityName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80132279 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80132407 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80132535 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80132663 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80132791 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15912759 // CREATOR (<unidirectional association>)
	relation 15912759 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<ApduServiceInfo>() {
        @Override
        public ApduServiceInfo createFromParcel(Parcel source) {
            ResolveInfo info = ResolveInfo.CREATOR.createFromParcel(source);
            String description = source.readString();
            boolean onHost = source.readInt() != 0;
            ArrayList<AidGroup> staticAidGroups = new ArrayList<AidGroup>();
            int numStaticGroups = source.readInt();
            if (numStaticGroups > 0) {
                source.readTypedList(staticAidGroups, AidGroup.CREATOR);
            }
            ArrayList<AidGroup> dynamicAidGroups = new ArrayList<AidGroup>();
            int numDynamicGroups = source.readInt();
            if (numDynamicGroups > 0) {
                source.readTypedList(dynamicAidGroups, AidGroup.CREATOR);
            }
            boolean requiresUnlock = source.readInt() != 0;
            int bannerResource = source.readInt();
            int uid = source.readInt();
            String settingsActivityName = source.readString();
            return new ApduServiceInfo(info, onHost, description, staticAidGroups,
                    dynamicAidGroups, requiresUnlock, bannerResource, uid,
                    settingsActivityName);
        }

        @Override
        public ApduServiceInfo[] newArray(int size) {
            return new ApduServiceInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ApduServiceInfo> ${name}${value};
"
	    classrelation_ref 15912759 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 80132919 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7238327 "NfcFServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      classrelation 15916727 // <realization>
	relation 15916727 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15916727 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 15916983 // mService (<unidirectional association>)
	relation 15916983 --->
	  a role_name "mService" const_relation package
	    comment "
The service that implements this

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15916983 // mService (<unidirectional association>)
	  b parent class_ref 6933175 // ResolveInfo
      end

      attribute 25149751 "mUid"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The uid of the package the service belongs to

"
      end

      operation 80138423 "NfcFServiceInfo"
	public explicit_return_type ""
	nparams 7
	  param inout name "info" type class_ref 6933175 // ResolveInfo
	  param inout name "description" explicit_type "String"
	  param inout name "systemCode" explicit_type "String"
	  param inout name "dynamicSystemCode" explicit_type "String"
	  param inout name "nfcid2" explicit_type "String"
	  param inout name "dynamicNfcid2" explicit_type "String"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80138551 "NfcFServiceInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "pm" type class_ref 6924087 // PackageManager
	  param inout name "info" type class_ref 6933175 // ResolveInfo
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80138679 "getComponent"
	public return_type class_ref 6926647 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80138807 "getSystemCode"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80138935 "setOrReplaceDynamicSystemCode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemCode" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139063 "getNfcid2"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139191 "setOrReplaceDynamicNfcid2"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nfcid2" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139319 "getDescription"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139447 "getUid"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139575 "loadLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139703 "loadIcon"
	public return_type class_ref 5787831 // Drawable
	nparams 1
	  param inout name "pm" type class_ref 6924087 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80139831 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80139959 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80140087 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80140215 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80140343 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 15917751 // CREATOR (<unidirectional association>)
	relation 15917751 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<NfcFServiceInfo>() {
        @Override
        public NfcFServiceInfo createFromParcel(Parcel source) {
            ResolveInfo info = ResolveInfo.CREATOR.createFromParcel(source);
            String description = source.readString();
            String systemCode = source.readString();
            String dynamicSystemCode = null;
            if (source.readInt() != 0) {
                dynamicSystemCode = source.readString();
            }
            String nfcid2 = source.readString();
            String dynamicNfcid2 = null;
            if (source.readInt() != 0) {
                dynamicNfcid2 = source.readString();
            }
            int uid = source.readInt();
            NfcFServiceInfo service = new NfcFServiceInfo(info, description,
                    systemCode, dynamicSystemCode, nfcid2, dynamicNfcid2, uid);
            return service;
        }

        @Override
        public NfcFServiceInfo[] newArray(int size) {
            return new NfcFServiceInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NfcFServiceInfo> ${name}${value};
"
	    classrelation_ref 15917751 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 80140471 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7241143 "CardEmulation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class can be used to query the state of
NFC card emulation services.

For a general introduction into NFC card emulation,
please read the <a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">
NFC card emulation developer guide</a>.</p>

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present
on the device.
"
      attribute 25147831 "SELECTION_MODE_PREFER_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Return value for {@link #getSelectionModeForCategory(String)}.

<p>In this mode, the user has set a default service for this
   category.

<p>When using ISO-DEP card emulation with {@link HostApduService}
   or {@link OffHostApduService}, if a remote NFC device selects
   any of the Application IDs (AIDs)
   that the default service has registered in this category,
   that service will automatically be bound to to handle
   the transaction.

"
      end

      attribute 25147959 "SELECTION_MODE_ALWAYS_ASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Return value for {@link #getSelectionModeForCategory(String)}.

<p>In this mode, when using ISO-DEP card emulation with {@link HostApduService}
   or {@link OffHostApduService}, whenever an Application ID (AID) of this category
   is selected, the user is asked which service he wants to use to handle
   the transaction, even if there is only one matching service.

"
      end

      attribute 25148087 "SELECTION_MODE_ASK_IF_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Return value for {@link #getSelectionModeForCategory(String)}.

<p>In this mode, when using ISO-DEP card emulation with {@link HostApduService}
   or {@link OffHostApduService}, the user will only be asked to select a service
   if the Application ID (AID) selected by the reader has been registered by multiple
   services. If there is only one service that has registered for the AID,
   that service will be invoked directly.

"
      end

      attribute 25148215 "sIsInitialized"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15913655 // sCardEmus (<unidirectional association>)
	relation 15913655 --->
	  stereotype "HashMap"
	  a role_name "sCardEmus" init_value " new HashMap<Context, CardEmulation>()" class_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, CardEmulation> ${name}${value};
"
	    classrelation_ref 15913655 // sCardEmus (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      classrelation 15913783 // sService (<unidirectional association>)
	relation 15913783 --->
	  a role_name "sService" class_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15913783 // sService (<unidirectional association>)
	  b parent class_ref 7236535 // INfcCardEmulation
      end

      classrelation 15913911 // mContext (<unidirectional association>)
	relation 15913911 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15913911 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 80133047 "CardEmulation"
	private explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "service" type class_ref 7236535 // INfcCardEmulation
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80133175 "getInstance"
	class_operation public return_type class_ref 7241143 // CardEmulation
	nparams 1
	  param inout name "adapter" type class_ref 7239607 // NfcAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to get an instance of this class.

@param adapter A reference to an NfcAdapter object.
@return
"
      end

      operation 80133303 "isDefaultServiceForCategory"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an application to query whether a service is currently
the default service to handle a card emulation category.

<p>Note that if {@link #getSelectionModeForCategory(String)}
returns {@link #SELECTION_MODE_ALWAYS_ASK} or {@link #SELECTION_MODE_ASK_IF_CONFLICT},
this method will always return false. That is because in these
selection modes a default can't be set at the category level. For categories where
the selection mode is {@link #SELECTION_MODE_ALWAYS_ASK} or
{@link #SELECTION_MODE_ASK_IF_CONFLICT}, use
{@link #isDefaultServiceForAid(ComponentName, String)} to determine whether a service
is the default for a specific AID.

@param service The ComponentName of the service
@param category The category
@return whether service is currently the default service for the category.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.
"
      end

      operation 80133431 "isDefaultServiceForAid"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "aid" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows an application to query whether a service is currently
the default handler for a specified ISO7816-4 Application ID.

@param service The ComponentName of the service
@param aid The ISO7816-4 Application ID
@return whether the service is the default handler for the specified AID

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.
"
      end

      operation 80133559 "categoryAllowsForegroundPreference"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the user has allowed AIDs registered in the
specified category to be handled by a service that is preferred
by the foreground application, instead of by a pre-configured default.

Foreground applications can set such preferences using the
{@link #setPreferredService(Activity, ComponentName)} method.

@param category The category, e.g. {@link #CATEGORY_PAYMENT}
@return whether AIDs in the category can be handled by a service
        specified by the foreground app.
"
      end

      operation 80133687 "getSelectionModeForCategory"
	public explicit_return_type "int"
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service selection mode for the passed in category.
Valid return values are:
<p>{@link #SELECTION_MODE_PREFER_DEFAULT} the user has requested a default
   service for this category, which will be preferred.
<p>{@link #SELECTION_MODE_ALWAYS_ASK} the user has requested to be asked
   every time what service he would like to use in this category.
<p>{@link #SELECTION_MODE_ASK_IF_CONFLICT} the user will only be asked
   to pick a service if there is a conflict.
@param category The category, for example {@link #CATEGORY_PAYMENT}
@return the selection mode for the passed in category
"
      end

      operation 80133815 "registerAidsForService"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "category" explicit_type "String"
	  param inout name "aids" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a list of AIDs for a specific category for the
specified service.

<p>If a list of AIDs for that category was previously
registered for this service (either statically
through the manifest, or dynamically by using this API),
that list of AIDs will be replaced with this one.

<p>Note that you can only register AIDs for a service that
is running under the same UID as the caller of this API. Typically
this means you need to call this from the same
package as the service itself, though UIDs can also
be shared between packages using shared UIDs.

@param service The component name of the service
@param category The category of AIDs to be registered
@param aids A list containing the AIDs to be registered
@return whether the registration was successful.
"
      end

      operation 80133943 "getAidsForService"
	public explicit_return_type "String"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the currently registered AIDs for the specified
category for a service.

<p>Note that this will only return AIDs that were dynamically
registered using {@link #registerAidsForService(ComponentName, String, List)}
method. It will *not* return AIDs that were statically registered
in the manifest.

@param service The component name of the service
@param category The category for which the AIDs were registered,
                e.g. {@link #CATEGORY_PAYMENT}
@return The list of AIDs registered for this category, or null if it couldn't be found.
"
      end

      operation 80134071 "removeAidsForService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a previously registered list of AIDs for the specified category for the
service provided.

<p>Note that this will only remove AIDs that were dynamically
registered using the {@link #registerAidsForService(ComponentName, String, List)}
method. It will *not* remove AIDs that were statically registered in
the manifest. If dynamically registered AIDs are removed using
this method, and a statically registered AID group for the same category
exists in the manifest, the static AID group will become active again.

@param service The component name of the service
@param category The category of the AIDs to be removed, e.g. {@link #CATEGORY_PAYMENT}
@return whether the group was successfully removed.
"
      end

      operation 80134199 "setPreferredService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "activity" type class_ref 6936247 // Activity
	  param inout name "service" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows a foreground application to specify which card emulation service
should be preferred while a specific Activity is in the foreground.

<p>The specified Activity must currently be in resumed state. A good
paradigm is to call this method in your {@link Activity#onResume}, and to call
{@link #unsetPreferredService(Activity)} in your {@link Activity#onPause}.

<p>This method call will fail in two specific scenarios:
<ul>
<li> If the service registers one or more AIDs in the {@link #CATEGORY_PAYMENT}
category, but the user has indicated that foreground apps are not allowed
to override the default payment service.
<li> If the service registers one or more AIDs in the {@link #CATEGORY_OTHER}
category that are also handled by the default payment service, and the
user has indicated that foreground apps are not allowed to override the
default payment service.
</ul>

<p> Use {@link #categoryAllowsForegroundPreference(String)} to determine
whether foreground apps can override the default payment service.

<p>Note that this preference is not persisted by the OS, and hence must be
called every time the Activity is resumed.

@param activity The activity which prefers this service to be invoked
@param service The service to be preferred while this activity is in the foreground
@return whether the registration was successful
"
      end

      operation 80134327 "unsetPreferredService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "activity" type class_ref 6936247 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unsets the preferred service for the specified Activity.

<p>Note that the specified Activity must still be in resumed
state at the time of this call. A good place to call this method
is in your {@link Activity#onPause} implementation.

@param activity The activity which the service was registered for
@return true when successful
"
      end

      operation 80134455 "supportsAidPrefixRegistration"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Some devices may allow an application to register all
AIDs that starts with a certain prefix, e.g.
\"A000000004*\" to register all MasterCard AIDs.

Use this method to determine whether this device
supports registering AID prefixes.

@return whether AID prefix registering is supported on this device.
"
      end

      operation 80134583 "setDefaultServiceForCategory"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80134711 "setDefaultForNextTap"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 6926647 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80134839 "getServices"
	public return_type class_ref 7237943 // ApduServiceInfo
	nparams 1
	  param inout name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80134967 "isValidAid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "aid" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A valid AID according to ISO/IEC 7816-4:
<ul>
<li>Has >= 5 bytes and <=16 bytes (>=10 hex chars and <= 32 hex chars)
<li>Consist of only hex characters
<li>Additionally, we allow an asterisk at the end, to indicate
    a prefix
</ul>

@hide
"
      end

      operation 80135095 "recoverService"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7241271 "HostApduService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>HostApduService is a convenience {@link Service} class that can be
extended to emulate an NFC card inside an Android
service component.

<div class=\"special reference\">
<h3>Developer Guide</h3>
For a general introduction to card emulation, see
<a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">
Host-based Card Emulation</a>.</p>
</div>

<h3>NFC Protocols</h3>
<p>Cards emulated by this class are based on the NFC-Forum ISO-DEP
protocol (based on ISO/IEC 14443-4) and support processing
command Application Protocol Data Units (APDUs) as
defined in the ISO/IEC 7816-4 specification.

<h3>Service selection</h3>
<p>When a remote NFC device wants to talk to your
service, it sends a so-called
\"SELECT AID\" APDU as defined in the ISO/IEC 7816-4 specification.
The AID is an application identifier defined in ISO/IEC 7816-4.

<p>The registration procedure for AIDs is defined in the
ISO/IEC 7816-5 specification. If you don't want to register an
AID, you are free to use AIDs in the proprietary range:
bits 8-5 of the first byte must each be set to '1'. For example,
\"0xF00102030405\" is a proprietary AID. If you do use proprietary
AIDs, it is recommended to choose an AID of at least 6 bytes,
to reduce the risk of collisions with other applications that
might be using proprietary AIDs as well.

<h3>AID groups</h3>
<p>In some cases, a service may need to register multiple AIDs
to implement a certain application, and it needs to be sure
that it is the default handler for all of these AIDs (as opposed
to some AIDs in the group going to another service).

<p>An AID group is a list of AIDs that should be considered as
belonging together by the OS. For all AIDs in an AID group, the
OS will guarantee one of the following:
<ul>
<li>All AIDs in the group are routed to this service
<li>No AIDs in the group are routed to this service
</ul>
In other words, there is no in-between state, where some AIDs
in the group can be routed to this service, and some to another.
<h3>AID groups and categories</h3>
<p>Each AID group can be associated with a category. This allows
the Android OS to classify services, and it allows the user to
set defaults at the category level instead of the AID level.

<p>You can use
{@link CardEmulation#isDefaultServiceForCategory(android.content.ComponentName, String)}
to determine if your service is the default handler for a category.

<p>In this version of the platform, the only known categories
are {@link CardEmulation#CATEGORY_PAYMENT} and {@link CardEmulation#CATEGORY_OTHER}.
AID groups without a category, or with a category that is not recognized
by the current platform version, will automatically be
grouped into the {@link CardEmulation#CATEGORY_OTHER} category.
<h3>Service AID registration</h3>
<p>To tell the platform which AIDs groups
are requested by this service, a {@link #SERVICE_META_DATA}
entry must be included in the declaration of the service. An
example of a HostApduService manifest declaration is shown below:
<pre> &lt;service android:name=\".MyHostApduService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.nfc.cardemulation.action.HOST_APDU_SERVICE\"/&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.nfc.cardemulation.host_apdu_ervice\" android:resource=\"@xml/apduservice\"/&gt;
&lt;/service&gt;</pre>

This meta-data tag points to an apduservice.xml file.
An example of this file with a single AID group declaration is shown below:
<pre>
&lt;host-apdu-service xmlns:android=\"http://schemas.android.com/apk/res/android\"
          android:description=\"@string/servicedesc\" android:requireDeviceUnlock=\"false\"&gt;
      &lt;aid-group android:description=\"@string/aiddescription\" android:category=\"other\">
          &lt;aid-filter android:name=\"F0010203040506\"/&gt;
          &lt;aid-filter android:name=\"F0394148148100\"/&gt;
      &lt;/aid-group&gt;
&lt;/host-apdu-service&gt;
</pre>

<p>The {@link android.R.styleable#HostApduService &lt;host-apdu-service&gt;} is required
to contain a
{@link android.R.styleable#HostApduService_description &lt;android:description&gt;}
attribute that contains a user-friendly description of the service that may be shown in UI.
The
{@link android.R.styleable#HostApduService_requireDeviceUnlock &lt;requireDeviceUnlock&gt;}
attribute can be used to specify that the device must be unlocked before this service
can be invoked to handle APDUs.
<p>The {@link android.R.styleable#HostApduService &lt;host-apdu-service&gt;} must
contain one or more {@link android.R.styleable#AidGroup &lt;aid-group&gt;} tags.
Each {@link android.R.styleable#AidGroup &lt;aid-group&gt;} must contain one or
more {@link android.R.styleable#AidFilter &lt;aid-filter&gt;} tags, each of which
contains a single AID. The AID must be specified in hexadecimal format, and contain
an even number of characters.
<h3>AID conflict resolution</h3>
Multiple HostApduServices may be installed on a single device, and the same AID
can be registered by more than one service. The Android platform resolves AID
conflicts depending on which category an AID belongs to. Each category may
have a different conflict resolution policy. For example, for some categories
the user may be able to select a default service in the Android settings UI.
For other categories, to policy may be to always ask the user which service
is to be invoked in case of conflict.

To query the conflict resolution policy for a certain category, see
{@link CardEmulation#getSelectionModeForCategory(String)}.

<h3>Data exchange</h3>
<p>Once the platform has resolved a \"SELECT AID\" command APDU to a specific
service component, the \"SELECT AID\" command APDU and all subsequent
command APDUs will be sent to that service through
{@link #processCommandApdu(byte[], Bundle)}, until either:
<ul>
<li>The NFC link is broken</li>
<li>A \"SELECT AID\" APDU is received which resolves to another service</li>
</ul>
These two scenarios are indicated by a call to {@link #onDeactivated(int)}.

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present
on the device.

"
      classrelation 15914039 // <generalisation>
	relation 15914039 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15914039 // <generalisation>
	  b parent class_ref 6923447 // Service
      end

      attribute 25148343 "DEACTIVATION_LINK_LOSS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Reason for {@link #onDeactivated(int)}.
Indicates deactivation was due to the NFC link
being lost.

"
      end

      attribute 25148471 "DEACTIVATION_DESELECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Reason for {@link #onDeactivated(int)}.

<p>Indicates deactivation was due to a different AID
being selected (which implicitly deselects the AID
currently active on the logical channel).

<p>Note that this next AID may still be resolved to this
service, in which case {@link #processCommandApdu(byte[], Bundle)}
will be called again.

"
      end

      attribute 25148599 "MSG_COMMAND_APDU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "MSG_COMMAND_APDU is sent by NfcService when
a 7816-4 command APDU has been received.

@hide

"
      end

      attribute 25148727 "MSG_RESPONSE_APDU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "MSG_RESPONSE_APDU is sent to NfcService to send
a response APDU back to the remote device.

@hide

"
      end

      attribute 25148855 "MSG_DEACTIVATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "MSG_DEACTIVATED is sent by NfcService when
the current session is finished; either because
another AID was selected that resolved to
another service, or because the NFC link
was deactivated.

@hide

"
      end

      attribute 25148983 "MSG_UNHANDLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "
@hide

"
      end

      classrelation 15914679 // mNfcService (<unidirectional association>)
	relation 15914679 --->
	  a role_name "mNfcService" init_value " null" package
	    comment "
Messenger interface to NfcService for sending responses.
Only accessed on main thread by the message handler.

@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15914679 // mNfcService (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      classrelation 15914807 // mMessenger (<unidirectional association>)
	relation 15914807 --->
	  a role_name "mMessenger" init_value " new Messenger(new MsgHandler())" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15914807 // mMessenger (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      class 7241399 "MsgHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15914935 // <generalisation>
	  relation 15914935 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15914935 // <generalisation>
	    b parent class_ref 6926391 // Handler
	end

	operation 80135223 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 80135351 "onBind"
	public return_type class_ref 6927031 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80135479 "sendResponseApdu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "responseApdu" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a response APDU back to the remote device.

<p>Note: this method may be called from any thread and will not block.
@param responseApdu A byte-array containing the reponse APDU.
"
      end

      operation 80135607 "notifyUnhandled"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calling this method allows the service to tell the OS
that it won't be able to complete this transaction -
for example, because it requires data connectivity
that is not present at that moment.

The OS may use this indication to give the user a list
of alternative applications that can handle the last
AID that was selected. If the user would select an
application from the list, that action by itself
will not cause the default to be changed; the selected
application will be invoked for the next tap only.

If there are no other applications that can handle
this transaction, the OS will show an error dialog
indicating your service could not complete the
transaction.

<p>Note: this method may be called anywhere between
   the first {@link #processCommandApdu(byte[], Bundle)}
   call and a {@link #onDeactivated(int)} call.
"
      end

      operation 80135735 "processCommandApdu"
	abstract public explicit_return_type "byte"
	nparams 2
	  param inout name "commandApdu" explicit_type "byte"
	multiplicity "[]"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method will be called when a command APDU has been received
from a remote device. A response APDU can be provided directly
by returning a byte-array in this method. Note that in general
response APDUs must be sent as quickly as possible, given the fact
that the user is likely holding his device over an NFC reader
when this method is called.

<p class=\"note\">If there are multiple services that have registered for the same
AIDs in their meta-data entry, you will only get called if the user has
explicitly selected your service, either as a default or just for the next tap.

<p class=\"note\">This method is running on the main thread of your application.
If you cannot return a response APDU immediately, return null
and use the {@link #sendResponseApdu(byte[])} method later.

@param commandApdu The APDU that was received from the remote device
@param extras A bundle containing extra data. May be null.
@return a byte-array containing the response APDU, or null if no
        response APDU can be sent at this point.
"
      end

      operation 80135863 "onDeactivated"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called in two possible scenarios:
<li>The NFC link has been deactivated or lost
<li>A different AID has been selected and was resolved to a different
    service component
@param reason Either {@link #DEACTIVATION_LINK_LOSS} or {@link #DEACTIVATION_DESELECTED}
"
      end
    end

    class 7241527 "HostNfcFService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>HostNfcFService is a convenience {@link Service} class that can be
extended to emulate an NFC-F card inside an Android service component.

<h3>NFC Protocols</h3>
<p>Cards emulated by this class are based on the NFC-Forum NFC-F
protocol (based on the JIS-X 6319-4 specification.)</p>

<h3>System Code and NFCID2 registration</h3>
<p>A {@link HostNfcFService HostNfcFService service} can register
exactly one System Code and one NFCID2. For details about the use of
System Code and NFCID2, see the NFC Forum Digital specification.</p>
<p>To statically register a System Code and NFCID2 with the service, a {@link #SERVICE_META_DATA}
entry must be included in the declaration of the service.

<p>All {@link HostNfcFService HostNfcFService} declarations in the manifest must require the
{@link android.Manifest.permission#BIND_NFC_SERVICE} permission
in their &lt;service&gt; tag, to ensure that only the platform can bind to your service.</p>

<p>An example of a HostNfcFService manifest declaration is shown below:

<pre> &lt;service android:name=\".MyHostNfcFService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.nfc.cardemulation.action.HOST_NFCF_SERVICE\"/&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.nfc.cardemulation.host_nfcf_service\" android:resource=\"@xml/nfcfservice\"/&gt;
&lt;/service&gt;</pre>

This meta-data tag points to an nfcfservice.xml file.
An example of this file with a System Code and NFCID2 declaration is shown below:
<pre>
&lt;host-nfcf-service xmlns:android=\"http://schemas.android.com/apk/res/android\"
          android:description=\"@string/servicedesc\"&gt;
      &lt;system-code-filter android:name=\"4000\"/&gt;
      &lt;nfcid2-filter android:name=\"02FE000000000000\"/&gt;
&lt;/host-nfcf-service&gt;
</pre>

<p>The {@link android.R.styleable#HostNfcFService &lt;host-nfcf-service&gt;} is required
to contain a
{@link android.R.styleable#HostApduService_description &lt;android:description&gt;}
attribute that contains a user-friendly description of the service that may be shown in UI.
<p>The {@link android.R.styleable#HostNfcFService &lt;host-nfcf-service&gt;} must
contain:
<ul>
<li>Exactly one {@link android.R.styleable#SystemCodeFilter &lt;system-code-filter&gt;} tag.</li>
<li>Exactly one {@link android.R.styleable#Nfcid2Filter &lt;nfcid2-filter&gt;} tag.</li>
</ul>
</p>

<p>Alternatively, the System Code and NFCID2 can be dynamically registererd for a service
by using the {@link NfcFCardEmulation#registerSystemCodeForService(ComponentName, String)} and
{@link NfcFCardEmulation#setNfcid2ForService(ComponentName, String)} methods.
</p>

<h3>Service selection</h3>
<p>When a remote NFC devices wants to communicate with your service, it
sends a SENSF_REQ command to the NFC controller, requesting a System Code.
If a {@link NfcFCardEmulation NfcFCardEmulation service} has registered
this system code and has been enabled by the foreground application, the
NFC controller will respond with the NFCID2 that is registered for this service.
The reader can then continue data exchange with this service by using the NFCID2.</p>

<h3>Data exchange</h3>
<p>After service selection, all frames addressed to the NFCID2 of this service will
be sent through {@link #processNfcFPacket(byte[], Bundle)}, until the NFC link is
broken.<p>

<p>When the NFC link is broken, {@link #onDeactivated(int)} will be called.</p>
"
      classrelation 15915063 // <generalisation>
	relation 15915063 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15915063 // <generalisation>
	  b parent class_ref 6923447 // Service
      end

      attribute 25149111 "DEACTIVATION_LINK_LOSS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Reason for {@link #onDeactivated(int)}.
Indicates deactivation was due to the NFC link
being lost.

"
      end

      attribute 25149239 "MSG_COMMAND_PACKET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "MSG_COMMAND_PACKET is sent by NfcService when
a NFC-F command packet has been received.

@hide

"
      end

      attribute 25149367 "MSG_RESPONSE_PACKET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "MSG_RESPONSE_PACKET is sent to NfcService to send
a response packet back to the remote device.

@hide

"
      end

      attribute 25149495 "MSG_DEACTIVATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "MSG_DEACTIVATED is sent by NfcService when
the current session is finished; because
the NFC link was deactivated.

@hide

"
      end

      classrelation 15915831 // mNfcService (<unidirectional association>)
	relation 15915831 --->
	  a role_name "mNfcService" init_value " null" package
	    comment "
Messenger interface to NfcService for sending responses.
Only accessed on main thread by the message handler.

@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15915831 // mNfcService (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      classrelation 15915959 // mMessenger (<unidirectional association>)
	relation 15915959 --->
	  a role_name "mMessenger" init_value " new Messenger(new MsgHandler())" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15915959 // mMessenger (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      class 7241655 "MsgHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 15916087 // <generalisation>
	  relation 15916087 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 15916087 // <generalisation>
	    b parent class_ref 6926391 // Handler
	end

	operation 80135991 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 80136119 "onBind"
	public return_type class_ref 6927031 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 80136247 "sendResponsePacket"
	public explicit_return_type "void"
	nparams 1
	  param inout name "responsePacket" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a response packet back to the remote device.

<p>Note: this method may be called from any thread and will not block.
@param responsePacket A byte-array containing the response packet.
"
      end

      operation 80136375 "processNfcFPacket"
	abstract public explicit_return_type "byte"
	nparams 2
	  param inout name "commandPacket" explicit_type "byte"
	multiplicity "[]"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method will be called when a NFC-F packet has been received
from a remote device. A response packet can be provided directly
by returning a byte-array in this method. Note that in general
response packets must be sent as quickly as possible, given the fact
that the user is likely holding his device over an NFC reader
when this method is called.

<p class=\"note\">This method is running on the main thread of your application.
If you cannot return a response packet immediately, return null
and use the {@link #sendResponsePacket(byte[])} method later.

@param commandPacket The NFC-F packet that was received from the remote device
@param extras A bundle containing extra data. May be null.
@return a byte-array containing the response packet, or null if no
        response packet can be sent at this point.
"
      end

      operation 80136503 "onDeactivated"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called in following possible scenarios:
<li>The NFC link has been lost
@param reason {@link #DEACTIVATION_LINK_LOSS}
"
      end
    end

    class 7241783 "NfcFCardEmulation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class can be used to query the state of
NFC-F card emulation services.

For a general introduction into NFC card emulation,
please read the <a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">
NFC card emulation developer guide</a>.</p>

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION_NFCF}
to be present on the device.
"
      attribute 25149623 "sIsInitialized"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 15916343 // sCardEmus (<unidirectional association>)
	relation 15916343 --->
	  stereotype "HashMap"
	  a role_name "sCardEmus" init_value " new HashMap<Context, NfcFCardEmulation>()" class_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, NfcFCardEmulation> ${name}${value};
"
	    classrelation_ref 15916343 // sCardEmus (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      classrelation 15916471 // sService (<unidirectional association>)
	relation 15916471 --->
	  a role_name "sService" class_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15916471 // sService (<unidirectional association>)
	  b parent class_ref 7236663 // INfcFCardEmulation
      end

      classrelation 15916599 // mContext (<unidirectional association>)
	relation 15916599 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 15916599 // mContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      operation 80136631 "NfcFCardEmulation"
	private explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "service" type class_ref 7236663 // INfcFCardEmulation
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80136759 "getInstance"
	class_operation public return_type class_ref 7241783 // NfcFCardEmulation
	nparams 1
	  param inout name "adapter" type class_ref 7239607 // NfcAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to get an instance of this class.

@param adapter A reference to an NfcAdapter object.
@return
"
      end

      operation 80136887 "getSystemCodeForService"
	public explicit_return_type "String"
	nparams 1
	  param inout name "service" type class_ref 6926647 // ComponentName
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the current System Code for the specified service.

<p>Before calling {@link #registerSystemCodeForService(ComponentName, String)},
the System Code contained in the Manifest file is returned. After calling
{@link #registerSystemCodeForService(ComponentName, String)}, the System Code
registered there is returned. After calling
{@link #unregisterSystemCodeForService(ComponentName)}, \"null\" is returned.

@param service The component name of the service
@return the current System Code
"
      end

      operation 80137015 "registerSystemCodeForService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "systemCode" explicit_type "String"
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a System Code for the specified service.

<p>The System Code must be in range from \"4000\" to \"4FFF\" (excluding \"4*FF\").

<p>If a System Code was previously registered for this service
(either statically through the manifest, or dynamically by using this API),
it will be replaced with this one.

<p>Even if the same System Code is already registered for another service,
this method succeeds in registering the System Code.

<p>Note that you can only register a System Code for a service that
is running under the same UID as the caller of this API. Typically
this means you need to call this from the same
package as the service itself, though UIDs can also
be shared between packages using shared UIDs.

@param service The component name of the service
@param systemCode The System Code to be registered
@return whether the registration was successful.
"
      end

      operation 80137143 "unregisterSystemCodeForService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 6926647 // ComponentName
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a registered System Code for the specified service.

@param service The component name of the service
@return whether the System Code was successfully removed.
"
      end

      operation 80137271 "getNfcid2ForService"
	public explicit_return_type "String"
	nparams 1
	  param inout name "service" type class_ref 6926647 // ComponentName
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the current NFCID2 for the specified service.

<p>Before calling {@link #setNfcid2ForService(ComponentName, String)},
the NFCID2 contained in the Manifest file is returned. If \"random\" is specified
in the Manifest file, a random number assigned by the system at installation time
is returned. After setting an NFCID2
with {@link #setNfcid2ForService(ComponentName, String)}, this NFCID2 is returned.

@param service The component name of the service
@return the current NFCID2
"
      end

      operation 80137399 "setNfcid2ForService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 6926647 // ComponentName
	  param inout name "nfcid2" explicit_type "String"
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a NFCID2 for the specified service.

<p>The NFCID2 must be in range from \"02FE000000000000\" to \"02FEFFFFFFFFFFFF\".

<p>If a NFCID2 was previously set for this service
(either statically through the manifest, or dynamically by using this API),
it will be replaced.

<p>Note that you can only set the NFCID2 for a service that
is running under the same UID as the caller of this API. Typically
this means you need to call this from the same
package as the service itself, though UIDs can also
be shared between packages using shared UIDs.

@param service The component name of the service
@param nfcid2 The NFCID2 to be registered
@return whether the setting was successful.
"
      end

      operation 80137527 "enableService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "activity" type class_ref 6936247 // Activity
	  param inout name "service" type class_ref 6926647 // ComponentName
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows a foreground application to specify which card emulation service
should be enabled while a specific Activity is in the foreground.

<p>The specified HCE-F service is only enabled when the corresponding application is
in the foreground and this method has been called. When the application is moved to
the background, {@link #disableService(Activity)} is called, or
NFCID2 or System Code is replaced, the HCE-F service is disabled.

<p>The specified Activity must currently be in resumed state. A good
paradigm is to call this method in your {@link Activity#onResume}, and to call
{@link #disableService(Activity)} in your {@link Activity#onPause}.

<p>Note that this preference is not persisted by the OS, and hence must be
called every time the Activity is resumed.

@param activity The activity which prefers this service to be invoked
@param service The service to be preferred while this activity is in the foreground
@return whether the registration was successful
"
      end

      operation 80137655 "disableService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "activity" type class_ref 6936247 // Activity
	nexceptions 1
	  explicit_exception "RuntimeException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the service for the specified Activity.

<p>Note that the specified Activity must still be in resumed
state at the time of this call. A good place to call this method
is in your {@link Activity#onPause} implementation.

@param activity The activity which the service was registered for
@return true when successful
"
      end

      operation 80137783 "getNfcFServices"
	public return_type class_ref 7238327 // NfcFServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80137911 "getMaxNumOfRegisterableSystemCodes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80138039 "isValidSystemCode"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "systemCode" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80138167 "isValidNfcid2"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nfcid2" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
"
      end

      operation 80138295 "recoverService"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7241911 "OffHostApduService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>OffHostApduService is a convenience {@link Service} class that can be
extended to describe one or more NFC applications that are residing
off-host, for example on an embedded secure element or a UICC.

<div class=\"special reference\">
<h3>Developer Guide</h3>
For a general introduction into the topic of card emulation,
please read the <a href=\"{@docRoot}guide/topics/nfc/ce.html\">
NFC card emulation developer guide.</a></p>
</div>

<h3>NFC Protocols</h3>
<p>Off-host applications represented by this class are based on the NFC-Forum ISO-DEP
protocol (based on ISO/IEC 14443-4) and support processing
command Application Protocol Data Units (APDUs) as
defined in the ISO/IEC 7816-4 specification.

<h3>Service selection</h3>
<p>When a remote NFC device wants to talk to your
off-host NFC application, it sends a so-called
\"SELECT AID\" APDU as defined in the ISO/IEC 7816-4 specification.
The AID is an application identifier defined in ISO/IEC 7816-4.

<p>The registration procedure for AIDs is defined in the
ISO/IEC 7816-5 specification. If you don't want to register an
AID, you are free to use AIDs in the proprietary range:
bits 8-5 of the first byte must each be set to '1'. For example,
\"0xF00102030405\" is a proprietary AID. If you do use proprietary
AIDs, it is recommended to choose an AID of at least 6 bytes,
to reduce the risk of collisions with other applications that
might be using proprietary AIDs as well.

<h3>AID groups</h3>
<p>In some cases, an off-host environment may need to register multiple AIDs
to implement a certain application, and it needs to be sure
that it is the default handler for all of these AIDs (as opposed
to some AIDs in the group going to another service).

<p>An AID group is a list of AIDs that should be considered as
belonging together by the OS. For all AIDs in an AID group, the
OS will guarantee one of the following:
<ul>
<li>All AIDs in the group are routed to the off-host execution environment
<li>No AIDs in the group are routed to the off-host execution environment
</ul>
In other words, there is no in-between state, where some AIDs
in the group can be routed to this off-host execution environment,
and some to another or a host-based {@link HostApduService}.
<h3>AID groups and categories</h3>
<p>Each AID group can be associated with a category. This allows
the Android OS to classify services, and it allows the user to
set defaults at the category level instead of the AID level.

<p>You can use
{@link CardEmulation#isDefaultServiceForCategory(android.content.ComponentName, String)}
to determine if your off-host service is the default handler for a category.

<p>In this version of the platform, the only known categories
are {@link CardEmulation#CATEGORY_PAYMENT} and {@link CardEmulation#CATEGORY_OTHER}.
AID groups without a category, or with a category that is not recognized
by the current platform version, will automatically be
grouped into the {@link CardEmulation#CATEGORY_OTHER} category.

<h3>Service AID registration</h3>
<p>To tell the platform which AIDs
reside off-host and are managed by this service, a {@link #SERVICE_META_DATA}
entry must be included in the declaration of the service. An
example of a OffHostApduService manifest declaration is shown below:
<pre> &lt;service android:name=\".MyOffHostApduService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.nfc.cardemulation.action.OFF_HOST_APDU_SERVICE\"/&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.nfc.cardemulation.off_host_apdu_ervice\" android:resource=\"@xml/apduservice\"/&gt;
&lt;/service&gt;</pre>

This meta-data tag points to an apduservice.xml file.
An example of this file with a single AID group declaration is shown below:
<pre>
&lt;offhost-apdu-service xmlns:android=\"http://schemas.android.com/apk/res/android\"
          android:description=\"@string/servicedesc\"&gt;
      &lt;aid-group android:description=\"@string/subscription\" android:category=\"other\">
          &lt;aid-filter android:name=\"F0010203040506\"/&gt;
          &lt;aid-filter android:name=\"F0394148148100\"/&gt;
      &lt;/aid-group&gt;
&lt;/offhost-apdu-service&gt;
</pre>

<p>The {@link android.R.styleable#OffHostApduService &lt;offhost-apdu-service&gt;} is required
to contain a
{@link android.R.styleable#OffHostApduService_description &lt;android:description&gt;}
attribute that contains a user-friendly description of the service that may be shown in UI.

<p>The {@link android.R.styleable#OffHostApduService &lt;offhost-apdu-service&gt;} must
contain one or more {@link android.R.styleable#AidGroup &lt;aid-group&gt;} tags.
Each {@link android.R.styleable#AidGroup &lt;aid-group&gt;} must contain one or
more {@link android.R.styleable#AidFilter &lt;aid-filter&gt;} tags, each of which
contains a single AID. The AID must be specified in hexadecimal format, and contain
an even number of characters.

<p>This registration will allow the service to be included
as an option for being the default handler for categories.
The Android OS will take care of correctly
routing the AIDs to the off-host execution environment,
based on which service the user has selected to be the handler for a certain category.

<p>The service may define additional actions outside of the
Android namespace that provide further interaction with
the off-host execution environment.

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present
on the device.
"
      classrelation 15917879 // <generalisation>
	relation 15917879 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 15917879 // <generalisation>
	  b parent class_ref 6923447 // Service
      end

      operation 80140599 "onBind"
	abstract public return_type class_ref 6927031 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The Android platform itself will not bind to this service,
but merely uses its declaration to keep track of what AIDs
the service is interested in. This information is then used
to present the user with a list of applications that can handle
an AID, as well as correctly route those AIDs either to the host (in case
the user preferred a {@link HostApduService}), or to an off-host
execution environment (in case the user preferred a {@link OffHostApduService}.

Implementers may define additional actions outside of the
Android namespace that allow further interactions with
the off-host execution environment. Such implementations
would need to override this method.
"
      end
    end
  end

  deploymentview 138295 "cardemulation"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2872631 "AidGroup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 7237815 // AidGroup
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2872759 "ApduServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.graphics.drawable.Drawable;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.ResultReceiver;
import android.util.AttributeSet;
import android.util.Log;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7237943 // ApduServiceInfo
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2872887 "CardEmulation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Activity;
import android.app.ActivityThread;
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.IPackageManager;
import android.content.pm.PackageManager;
import android.nfc.INfcCardEmulation;
import android.nfc.NfcAdapter;
import android.os.RemoteException;
import android.os.UserHandle;
import android.provider.Settings;
import android.provider.Settings.SettingNotFoundException;
import android.util.Log;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 7241143 // CardEmulation
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2873015 "HostApduService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 7241271 // HostApduService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2873143 "HostNfcFService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.ComponentName;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 7241527 // HostNfcFService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2873271 "NfcFCardEmulation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.ActivityThread;
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.IPackageManager;
import android.content.pm.PackageManager;
import android.nfc.INfcFCardEmulation;
import android.nfc.NfcAdapter;
import android.os.RemoteException;
import android.os.UserHandle;
import android.util.Log;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 7241783 // NfcFCardEmulation
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2873399 "NfcFServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.graphics.drawable.Drawable;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.Log;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 7238327 // NfcFServiceInfo
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2873527 "OffHostApduService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 7241911 // OffHostApduService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
