format 213
"health" // android::frameworks::base::core::java::android::os::health
  revision 4
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/core/java/android/os/health/"
  java_package "android.os.health"
  classview 147639 "health"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7266871 "HealthKeys"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Constants and stuff for the android.os.health package.

@hide
"
      attribute 25304631 "UNKNOWN_KEY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "No valid key will ever be 0.

"
      end

      attribute 25304759 "BASE_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Base key for each of the different classes. There is
nothing intrinsic to the operation of the value of the
keys. It's just segmented for better debugging. The
classes don't mix them anway.

"
      end

      attribute 25304887 "BASE_PID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305015 "BASE_PROCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305143 "BASE_PACKAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305271 "BASE_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 50000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305399 "TYPE_TIMER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The types of values supported by HealthStats.

"
      end

      attribute 25305527 "TYPE_MEASUREMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305655 "TYPE_STATS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305783 "TYPE_TIMERS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25305911 "TYPE_MEASUREMENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25306039 "TYPE_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7266999 "Constant"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.FIELD})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 80467127 "type"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "One of the TYPE_* constants above.
"
	end
      end

      class 7267127 "Constants"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 25306167 "mKeys"
	  const_attribute private explicit_type "int"
	  multiplicity "[][]"
	  init_value " new int[TYPE_COUNT][]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 80467255 "Constants"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "clazz" explicit_type "Class"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pass in a class to gather the public static final int fields that are
tagged with the @Constant annotation.
"
	end

	operation 80467383 "getDataType"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get a string representation of this class. Useful for debugging. It will be the
simple name of the class passed in the constructor.
"
	end

	operation 80467511 "getSize"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return how many keys there are for the given field type.

@see TYPE_TIMER
@see TYPE_MEASUREMENT
@see TYPE_TIMERS
@see TYPE_MEASUREMENTS
@see TYPE_STATS
"
	end

	operation 80467639 "getIndex"
	  public explicit_return_type "int"
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "key" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the index for the given type and key combination in the array of field
keys or values.

@see TYPE_TIMER
@see TYPE_MEASUREMENT
@see TYPE_TIMERS
@see TYPE_MEASUREMENTS
@see TYPE_STATS
"
	end

	operation 80467767 "getKeys"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the array of keys for the given field type.
"
	end
      end

      class 7267255 "SortedIntArray"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 25306295 "mCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 25306423 "mArray"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 80467895 "SortedIntArray"
	  package explicit_return_type ""
	  nparams 1
	    param in name "maxCount" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct with the maximum number of values.
"
	end

	operation 80468023 "addValue"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a value.
"
	end

	operation 80468151 "getArray"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the array of values that have been added, with the values in
numerically increasing order.
"
	end
      end
    end

    class 7267383 "HealthStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A HealthStats object contains system health data about an application.

<p>
<b>Data Types</b><br>
Each of the keys references data in one of five data types:

<p>
A <b>measurement</b> metric contains a sinlge {@code long} value. That value may
be a count, a time, or some other type of value. The unit for a measurement
(COUNT, MS, etc) will always be in the name of the constant for the key to
retrieve it. For example, the
{@link android.os.health.UidHealthStats#MEASUREMENT_WIFI_TX_MS UidHealthStats.MEASUREMENT_WIFI_TX_MS}
value is the number of milliseconds (ms) that were spent transmitting on wifi by an
application.  The
{@link android.os.health.UidHealthStats#MEASUREMENT_MOBILE_RX_PACKETS UidHealthStats.MEASUREMENT_MOBILE_RX_PACKETS}
measurement is the number of packets received on behalf of an application.
The {@link android.os.health.UidHealthStats#MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT
    UidHealthStats.MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT}
measurement is the number of times the user touched the screen, causing the
screen to stay awake.


<p>
A <b>timer</b> metric contains an {@code int} count and a {@code long} time,
measured in milliseconds. Timers track how many times a resource was used, and
the total duration for that usage. For example, the
{@link android.os.health.UidHealthStats#TIMER_FLASHLIGHT}
timer tracks how many times the application turned on the flashlight, and for
how many milliseconds total it kept it on.

<p>
A <b>measurement map</b> metric is a mapping of {@link java.lang.String} names to
{@link java.lang.Long} values.  The names typically are application provided names. For
example, the
{@link android.os.health.PackageHealthStats#MEASUREMENTS_WAKEUP_ALARMS_COUNT
        PackageHealthStats.MEASUREMENTS_WAKEUP_ALARMS_COUNT}
measurement map is a mapping of the tag provided to the
{@link android.app.AlarmManager} when the alarm is scheduled.

<p>
A <b>timer map</b> metric is a mapping of {@link java.lang.String} names to
{@link android.os.health.TimerStat} objects. The names are typically application
provided names.  For example, the
{@link android.os.health.UidHealthStats#TIMERS_WAKELOCKS_PARTIAL UidHealthStats.TIMERS_WAKELOCKS_PARTIAL}
is a mapping of tag provided to the {@link android.os.PowerManager} when the
wakelock is created to the number of times and for how long each wakelock was
active.

<p>
Lastly, a <b>health stats</b> metric is a mapping of {@link java.lang.String}
names to a recursive {@link android.os.health.HealthStats} object containing
more detailed information. For example, the
{@link android.os.health.UidHealthStats#STATS_PACKAGES UidHealthStats.STATS_PACKAGES}
metric is a mapping of the package names for each of the APKs sharing a uid to
the information recorded for that apk.  The returned HealthStats objects will
each be associated with a different set of constants.  For the HealthStats
returned for UidHealthStats.STATS_PACKAGES, the keys come from the
{@link android.os.health.PackageHealthStats}  class.

<p>
The keys that are available are subject to change, depending on what a particular
device or software version is capable of recording. Applications must handle the absence of
data without crashing.
"
      attribute 25306551 "mTimerKeys"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TimerStat fields
"
      end

      attribute 25306679 "mTimerCounts"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25306807 "mTimerTimes"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25306935 "mMeasurementKeys"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Measurement fields
"
      end

      attribute 25307063 "mMeasurementValues"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25307191 "mStatsKeys"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stats fields
"
      end

      classrelation 16008375 // mStatsValues (<unidirectional association>)
	relation 16008375 --->
	  a role_name "mStatsValues" multiplicity "[]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,HealthStats>${multiplicity} ${name}${value};
"
	    classrelation_ref 16008375 // mStatsValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      attribute 25307319 "mTimersKeys"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Timers fields
"
      end

      classrelation 16008503 // mTimersValues (<unidirectional association>)
	relation 16008503 --->
	  a role_name "mTimersValues" multiplicity "[]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,TimerStat>${multiplicity} ${name}${value};
"
	    classrelation_ref 16008503 // mTimersValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      attribute 25307447 "mMeasurementsKeys"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Measurements fields
"
      end

      classrelation 16008631 // mMeasurementsValues (<unidirectional association>)
	relation 16008631 --->
	  a role_name "mMeasurementsValues" multiplicity "[]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Long>${multiplicity} ${name}${value};
"
	    classrelation_ref 16008631 // mMeasurementsValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      operation 80468279 "HealthStats"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "HealthStats empty constructor not implemented because this
class is read-only.
"
      end

      operation 80468407 "HealthStats"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a health stats object from a parcel.

@hide
"
      end

      operation 80468535 "getDataType"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a name representing the contents of this object.

@see UidHealthStats
@see PackageHealthStats
@see PidHealthStats
@see ProcessHealthStats
@see ServiceHealthStats
"
      end

      operation 80468663 "hasTimer"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this object contains a TimerStat for the supplied key.
"
      end

      operation 80468791 "getTimer"
	public return_type class_ref 7267511 // TimerStat
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a TimerStat object for the given key.

This will allocate a new {@link TimerStat} object, which may be wasteful. Instead, use
{@link #getTimerCount} and {@link #getTimerTime}.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasTimer hasTimer(int) To check if a value for the given key is present.
"
      end

      operation 80468919 "getTimerCount"
	public explicit_return_type "int"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the count for the timer for the given key.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasTimer hasTimer(int) To check if a value for the given key is present.
"
      end

      operation 80469047 "getTimerTime"
	public explicit_return_type "long"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the time for the timer for the given key, in milliseconds.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasTimer hasTimer(int) To check if a value for the given key is present.
"
      end

      operation 80469175 "getTimerKeyCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of timer values in this object. Can be used to iterate through
the available timers.

@see #getTimerKeyAt
"
      end

      operation 80469303 "getTimerKeyAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the key for the timer at the given index.  Index must be between 0 and the result
of {@link #getTimerKeyCount getTimerKeyCount()}.

@see #getTimerKeyCount
"
      end

      operation 80469431 "hasMeasurement"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this object contains a measurement for the supplied key.
"
      end

      operation 80469559 "getMeasurement"
	public explicit_return_type "long"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the measurement for the given key.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasMeasurement hasMeasurement(int) To check if a value for the given key is present.
"
      end

      operation 80469687 "getMeasurementKeyCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of measurement values in this object. Can be used to iterate through
the available measurements.

@see #getMeasurementKeyAt
"
      end

      operation 80469815 "getMeasurementKeyAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the key for the measurement at the given index.  Index must be between 0 and the result
of {@link #getMeasurementKeyCount getMeasurementKeyCount()}.

@see #getMeasurementKeyCount
"
      end

      operation 80469943 "hasStats"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this object contains a HealthStats map for the supplied key.
"
      end

      operation 80470071 "getStats"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type},HealthStats> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the HealthStats map for the given key.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasStats hasStats(int) To check if a value for the given key is present.
"
      end

      operation 80470199 "getStatsKeyCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of HealthStat map values in this object. Can be used to iterate through
the available measurements.

@see #getMeasurementKeyAt
"
      end

      operation 80470327 "getStatsKeyAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the key for the timer at the given index.  Index must be between 0 and the result
of {@link #getStatsKeyCount getStatsKeyCount()}.

@see #getStatsKeyCount
"
      end

      operation 80470455 "hasTimers"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this object contains a timers map for the supplied key.
"
      end

      operation 80470583 "getTimers"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type},TimerStat> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the TimerStat map for the given key.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasTimers hasTimers(int) To check if a value for the given key is present.
"
      end

      operation 80470711 "getTimersKeyCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of timer map values in this object. Can be used to iterate through
the available timer maps.

@see #getTimersKeyAt
"
      end

      operation 80470839 "getTimersKeyAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the key for the timer map at the given index.  Index must be between 0 and the result
of {@link #getTimersKeyCount getTimersKeyCount()}.

@see #getTimersKeyCount
"
      end

      operation 80470967 "hasMeasurements"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this object contains a measurements map for the supplied key.
"
      end

      operation 80471095 "getMeasurements"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type},Long> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the measurements map for the given key.

@throws IndexOutOfBoundsException When the key is not present in this object.
@see #hasMeasurements To check if a value for the given key is present.
"
      end

      operation 80471223 "getMeasurementsKeyCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of measurement map values in this object. Can be used to iterate through
the available measurement maps.

@see #getMeasurementsKeyAt
"
      end

      operation 80471351 "getMeasurementsKeyAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the key for the measurement map at the given index.
Index must be between 0 and the result
of {@link #getMeasurementsKeyCount getMeasurementsKeyCount()}.

@see #getMeasurementsKeyCount
"
      end

      operation 80471479 "getIndex"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "keys" explicit_type "int"
	multiplicity "[]"
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the index in keys of key.
"
      end

      operation 80471607 "createHealthStatsMap"
	class_operation private return_type class_ref 6930743 // ArrayMap
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,HealthStats> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an ArrayMap<String,HealthStats> from the given Parcel.
"
      end

      operation 80471735 "createParcelableMap"
	class_operation private return_type class_ref 6930743 // ArrayMap
	nparams 2
	  param inout name "in" type class_ref 6931895 // Parcel
	  param inout name "creator" type class_ref 6932791 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type}<String,T> ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an ArrayMap<String,T extends Parcelable> from the given Parcel using
the given Parcelable.Creator.
"
      end

      operation 80471863 "createLongsMap"
	class_operation private return_type class_ref 6930743 // ArrayMap
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,Long> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an ArrayMap<String,Long> from the given Parcel.
"
      end
    end

    class 7267511 "TimerStat"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TimerStat object stores a count and a time.

@more
When possible, the other APIs in this package avoid requiring a TimerStat
object to be constructed, even internally, but the getTimers method on
{@link android.os.health.HealthStats} does require TimerStat objects.
"
      classrelation 16010423 // <realization>
	relation 16010423 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16010423 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      attribute 25309879 "mCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25310007 "mTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 16010551 // CREATOR (<unidirectional association>)
	relation 16010551 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<TimerStat>() {
        public TimerStat createFromParcel(Parcel in) {
            return new TimerStat(in);
        }

        public TimerStat[] newArray(int size) {
            return new TimerStat[size];
        }
    }" class_relation const_relation public
	    comment "
The CREATOR instance for use by aidl Binder interfaces.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TimerStat> ${name}${value};
"
	    classrelation_ref 16010551 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 80475319 "TimerStat"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty TimerStat object with the count and time set to 0.
"
      end

      operation 80475447 "TimerStat"
	public explicit_return_type ""
	nparams 2
	  param in name "count" explicit_type "int"
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a TimerStat object with the supplied count and time fields.

@param count The count
@param time The time
"
      end

      operation 80475575 "TimerStat"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a TimerStat object reading the values from a {@link android.os.Parcel Parcel}
object.
"
      end

      operation 80475703 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@inheritDoc
"
      end

      operation 80475831 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write this TimerStat object to a parcel.
"
      end

      operation 80475959 "setCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the count for this timer.
"
      end

      operation 80476087 "getCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the count for this timer.
"
      end

      operation 80476215 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the time for this timer in milliseconds.
"
      end

      operation 80476343 "getTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the time for this timer in milliseconds.
"
      end
    end

    class 7267639 "HealthStatsParceler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to allow sending the HealthStats through aidl generated glue.

The alternative would be to send a HealthStats object, which would
require constructing one, and then immediately flattening it. This
saves that step at the cost of doing the extra flattening when
accessed in the same process as the writer.

The HealthStatsWriter passed in the constructor is retained, so don't
reuse them.
@hide
"
      classrelation 16008759 // <realization>
	relation 16008759 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16008759 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      classrelation 16008887 // mWriter (<unidirectional association>)
	relation 16008887 --->
	  a role_name "mWriter" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16008887 // mWriter (<unidirectional association>)
	  b parent class_ref 7267767 // HealthStatsWriter
      end

      classrelation 16009015 // mHealthStats (<unidirectional association>)
	relation 16009015 --->
	  a role_name "mHealthStats" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16009015 // mHealthStats (<unidirectional association>)
	  b parent class_ref 7267383 // HealthStats
      end

      classrelation 16009143 // CREATOR (<unidirectional association>)
	relation 16009143 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<HealthStatsParceler>() {
        public HealthStatsParceler createFromParcel(Parcel in) {
            return new HealthStatsParceler(in);
        }

        public HealthStatsParceler[] newArray(int size) {
            return new HealthStatsParceler[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<HealthStatsParceler> ${name}${value};
"
	    classrelation_ref 16009143 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end

      operation 80471991 "HealthStatsParceler"
	public explicit_return_type ""
	nparams 1
	  param inout name "writer" type class_ref 7267767 // HealthStatsWriter
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80472119 "HealthStatsParceler"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80472247 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80472375 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 80472503 "getHealthStats"
	public return_type class_ref 7267383 // HealthStats
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7267767 "HealthStatsWriter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to write the health stats data into a parcel, so it can then be
retrieved via a {@link HealthStats} object.

There is an attempt to keep this class as low overhead as possible, for
example storing an int[] and a long[] instead of a TimerStat[].

@hide
"
      classrelation 16009271 // mConstants (<unidirectional association>)
	relation 16009271 --->
	  a role_name "mConstants" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16009271 // mConstants (<unidirectional association>)
	  b parent class_ref 7267127 // Constants
      end

      attribute 25307575 "mTimerFields"
	const_attribute private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TimerStat fields
"
      end

      attribute 25307703 "mTimerCounts"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25307831 "mTimerTimes"
	const_attribute private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25307959 "mMeasurementFields"
	const_attribute private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Measurement fields
"
      end

      attribute 25308087 "mMeasurementValues"
	const_attribute private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 16009399 // mStatsValues (<unidirectional association>)
	relation 16009399 --->
	  a role_name "mStatsValues" multiplicity "[]" const_relation private
	    comment " Stats fields
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,HealthStatsWriter>${multiplicity} ${name}${value};
"
	    classrelation_ref 16009399 // mStatsValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 16009527 // mTimersValues (<unidirectional association>)
	relation 16009527 --->
	  a role_name "mTimersValues" multiplicity "[]" const_relation private
	    comment " Timers fields
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,TimerStat>${multiplicity} ${name}${value};
"
	    classrelation_ref 16009527 // mTimersValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      classrelation 16009655 // mMeasurementsValues (<unidirectional association>)
	relation 16009655 --->
	  a role_name "mMeasurementsValues" multiplicity "[]" const_relation private
	    comment " Measurements fields
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Long>${multiplicity} ${name}${value};
"
	    classrelation_ref 16009655 // mMeasurementsValues (<unidirectional association>)
	  b parent class_ref 6930743 // ArrayMap
      end

      operation 80472631 "HealthStatsWriter"
	public explicit_return_type ""
	nparams 1
	  param inout name "constants" type class_ref 7267127 // Constants
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a HealthStatsWriter object with the given constants.

The \"getDataType()\" of the resulting HealthStats object will be the
short name of the java class that the Constants object was initalized
with.
"
      end

      operation 80472759 "addTimer"
	public explicit_return_type "void"
	nparams 3
	  param in name "timerId" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a timer for the given key.
"
      end

      operation 80472887 "addMeasurement"
	public explicit_return_type "void"
	nparams 2
	  param in name "measurementId" explicit_type "int"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a measurement for the given key.
"
      end

      operation 80473015 "addStats"
	public explicit_return_type "void"
	nparams 3
	  param in name "key" explicit_type "int"
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 7267767 // HealthStatsWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a recursive HealthStats object for the given key and string name. The value
is stored as a HealthStatsWriter until this object is written to a parcel, so
don't attempt to reuse the HealthStatsWriter.

The value field should not be null.
"
      end

      operation 80473143 "addTimers"
	public explicit_return_type "void"
	nparams 3
	  param in name "key" explicit_type "int"
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 7267511 // TimerStat
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a TimerStat for the given key and string name.

The value field should not be null.
"
      end

      operation 80473271 "addMeasurements"
	public explicit_return_type "void"
	nparams 3
	  param in name "key" explicit_type "int"
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a measurement for the given key and string name.
"
      end

      operation 80473399 "flattenToParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 6931895 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flattens the data in this HealthStatsWriter to the Parcel format
that can be unparceled into a HealthStat.
@more
(Called flattenToParcel because this HealthStatsWriter itself is
not parcelable and we don't flatten all the business about the
HealthKeys.Constants, only the values that were actually supplied)
"
      end

      operation 80473527 "countBooleanArray"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "fields" explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Count how many of the fields have been set.
"
      end

      operation 80473655 "countObjectArray"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "fields" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object> ${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Count how many of the fields have been set.
"
      end

      operation 80473783 "writeHealthStatsWriterMap"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param inout name "map" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String,HealthStatsWriter> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a map of String to HealthStatsWriter to the Parcel.
"
      end

      operation 80473911 "writeParcelableMap"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param inout name "map" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}, ${t1}<String,T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a map of String to Parcelables to the Parcel.
"
      end

      operation 80474039 "writeLongsMap"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param inout name "map" type class_ref 6930743 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String,Long> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a map of String to Longs to the Parcel.
"
      end
    end

    class 7267895 "PackageHealthStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Keys for {@link HealthStats} returned from
{@link HealthStats#getStats(int) HealthStats.getStats(int)} with the
{@link UidHealthStats#STATS_PACKAGES UidHealthStats.STATS_PACKAGES} key.
"
      operation 80474167 "PackageHealthStats"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 25308215 "STATS_SERVICES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PACKAGE + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_STATS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a HealthStats with {@link ServiceHealthStats} keys for each of the
services defined in this apk.

"
      end

      attribute 25308343 "MEASUREMENTS_WAKEUP_ALARMS_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PACKAGE + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENTS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a map of the number of times that a package's wakeup alarms have fired
while the device was on battery.

@see android.app.AlarmManager

"
      end

      classrelation 16009783 // CONSTANTS (<unidirectional association>)
	relation 16009783 --->
	  a role_name "CONSTANTS" init_value " new HealthKeys.Constants(PackageHealthStats.class)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16009783 // CONSTANTS (<unidirectional association>)
	  b parent class_ref 7267127 // Constants
      end
    end

    class 7268023 "PidHealthStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Keys for {@link HealthStats} returned from
{@link HealthStats#getStats(int) HealthStats.getStats(int)} with the
{@link UidHealthStats#STATS_PIDS UidHealthStats.STATS_PIDS} key.
<p>
The values coming from PidHealthStats are a little bit different from
the other HealthStats values.  These values are not aggregate or historical
values, but instead live values from when the snapshot is taken.  These
tend to be more useful in debugging rogue processes than in gathering
aggregate metrics across the fleet of devices.
"
      operation 80474295 "PidHealthStats"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 25308471 "MEASUREMENT_WAKE_NESTING_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PID + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the current nesting depth of wakelocks for this process.
That is to say, the number of times a nested wakelock has been started but not
stopped.  A high number here indicates an improperly paired wakelock acquire/release
combination.
<p>
More details on the individual wake locks is available
by getting the {@link UidHealthStats#TIMERS_WAKELOCKS_FULL},
{@link UidHealthStats#TIMERS_WAKELOCKS_PARTIAL},
{@link UidHealthStats#TIMERS_WAKELOCKS_WINDOW}
and {@link UidHealthStats#TIMERS_WAKELOCKS_DRAW} keys.

"
      end

      attribute 25308599 "MEASUREMENT_WAKE_SUM_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PID + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the total number of milleseconds that this process
has held a wake lock.
<p>
More details on the individual wake locks is available
by getting the {@link UidHealthStats#TIMERS_WAKELOCKS_FULL},
{@link UidHealthStats#TIMERS_WAKELOCKS_PARTIAL},
{@link UidHealthStats#TIMERS_WAKELOCKS_WINDOW}
and {@link UidHealthStats#TIMERS_WAKELOCKS_DRAW} keys.

"
      end

      attribute 25308727 "MEASUREMENT_WAKE_START_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PID + 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the time in the {@link android.os.SystemClock#elapsedRealtime}
timebase that a wakelock was first acquired in this process.
<p>
More details on the individual wake locks is available
by getting the {@link UidHealthStats#TIMERS_WAKELOCKS_FULL},
{@link UidHealthStats#TIMERS_WAKELOCKS_PARTIAL},
{@link UidHealthStats#TIMERS_WAKELOCKS_WINDOW}
and {@link UidHealthStats#TIMERS_WAKELOCKS_DRAW} keys.

"
      end

      classrelation 16009911 // CONSTANTS (<unidirectional association>)
	relation 16009911 --->
	  a role_name "CONSTANTS" init_value " new HealthKeys.Constants(PidHealthStats.class)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16009911 // CONSTANTS (<unidirectional association>)
	  b parent class_ref 7267127 // Constants
      end
    end

    class 7268151 "ProcessHealthStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Keys for {@link HealthStats} returned from
{@link HealthStats#getStats(int) HealthStats.getStats(int)} with the
{@link UidHealthStats#STATS_PROCESSES UidHealthStats.STATS_PROCESSES} key.
"
      operation 80474423 "ProcessHealthStats"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 25308855 "MEASUREMENT_USER_TIME_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PROCESS + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the CPU spent running in user space
for this process.

"
      end

      attribute 25308983 "MEASUREMENT_SYSTEM_TIME_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PROCESS + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the CPU spent running in kernel space
for this process.

"
      end

      attribute 25309111 "MEASUREMENT_STARTS_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PROCESS + 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of times this process was started for any reason.

"
      end

      attribute 25309239 "MEASUREMENT_CRASHES_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PROCESS + 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of crashes that happened in this process.

"
      end

      attribute 25309367 "MEASUREMENT_ANR_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PROCESS + 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of ANRs that happened in this process.

"
      end

      attribute 25309495 "MEASUREMENT_FOREGROUND_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_PROCESS + 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of milliseconds this process spent with
an activity in the foreground.

"
      end

      classrelation 16010039 // CONSTANTS (<unidirectional association>)
	relation 16010039 --->
	  a role_name "CONSTANTS" init_value " new HealthKeys.Constants(ProcessHealthStats.class)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16010039 // CONSTANTS (<unidirectional association>)
	  b parent class_ref 7267127 // Constants
      end
    end

    class 7268279 "ServiceHealthStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Keys for {@link HealthStats} returned from
{@link HealthStats#getStats(int) HealthStats.getStats(int)} with the
{@link PackageHealthStats#STATS_SERVICES PackageHealthStats.STATS_SERVICES} key.
"
      operation 80474551 "ServiceHealthStats"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 25309623 "MEASUREMENT_START_SERVICE_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_SERVICE + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of times this service was started due to calls to
{@link android.content.Context#startService startService()}, including re-launches
after crashes.

"
      end

      attribute 25309751 "MEASUREMENT_LAUNCH_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_SERVICE + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the total number of times this service was started
due to calls to {@link android.content.Context#startService startService()}
or {@link android.content.Context#bindService bindService()} including re-launches
after crashes.

"
      end

      classrelation 16010167 // CONSTANTS (<unidirectional association>)
	relation 16010167 --->
	  a role_name "CONSTANTS" init_value " new HealthKeys.Constants(ServiceHealthStats.class)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16010167 // CONSTANTS (<unidirectional association>)
	  b parent class_ref 7267127 // Constants
      end
    end

    class 7268407 "SystemHealthManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides access to data about how various system resources are used by applications.
@more
<p>
If you are going to be using this class to log your application's resource usage,
please consider the amount of resources (battery, network, etc) that will be used
by the logging itself.  It can be substantial.
<p>
<b>Battery Usage</b><br>
The statistics related to power (battery) usage are recorded since the device
was last unplugged. It is expected that applications schedule more work to do
while the device is plugged in (e.g. using {@link android.app.job.JobScheduler
JobScheduler}), and while that can affect charging rates, it is still preferable
to actually draining the battery.
"
      operation 80474679 "SystemHealthManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new SystemHealthManager object.
@hide
"
      end

      operation 80474807 "from"
	class_operation public return_type class_ref 7268407 // SystemHealthManager
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a SystemHealthManager object for the supplied context.

@hide
"
      end

      operation 80474935 "takeUidSnapshot"
	public return_type class_ref 7267383 // HealthStats
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link HealthStats} object containing a snapshot of system health
metrics for the given uid (user-id, which in usually corresponds to application).
@more

An application must hold the {@link android.Manifest.permission#BATTERY_STATS
android.permission.BATTERY_STATS} permission in order to retrieve any HealthStats
other than its own.

@param uid User ID for a given application.
@return A {@link HealthStats} object containing the metrics for the requested
application. The keys for this HealthStats object will be from the {@link UidHealthStats}
class.
@see Process#myUid() Process.myUid()
"
      end

      operation 80475063 "takeMyUidSnapshot"
	public return_type class_ref 7267383 // HealthStats
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link HealthStats} object containing a snapshot of system health
metrics for the application calling this API. This method is the same as calling
{@code takeUidSnapshot(Process.myUid())}.

@return A {@link HealthStats} object containing the metrics for this application. The keys
for this HealthStats object will be from the {@link UidHealthStats} class.
"
      end

      operation 80475191 "takeUidSnapshots"
	public return_type class_ref 7267383 // HealthStats
	nparams 1
	  param inout name "uids" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@link HealthStats} object containing a snapshot of system health
metrics for the given uids (user-id, which in usually corresponds to application).
@more

An application must hold the {@link android.Manifest.permission#BATTERY_STATS
android.permission.BATTERY_STATS} permission in order to retrieve any HealthStats
other than its own.

@param uids An array of User IDs to retrieve.
@return An array of {@link HealthStats} objects containing the metrics for each of
the requested uids. The keys for this HealthStats object will be from the
{@link UidHealthStats} class.
"
      end
    end

    class 7268535 "UidHealthStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Keys for {@link HealthStats} returned from
{@link SystemHealthManager#takeUidSnapshot(int) SystemHealthManager.takeUidSnapshot(int)},
{@link SystemHealthManager#takeMyUidSnapshot() SystemHealthManager.takeMyUidSnapshot()}, and
{@link SystemHealthManager#takeUidSnapshots(int[]) SystemHealthManager.takeUidSnapshots(int[])}.
"
      operation 80476471 "UidHealthStats"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 25310135 "MEASUREMENT_REALTIME_BATTERY_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How many milliseconds this statistics report covers in wall-clock time while the
device was on battery including both screen-on and screen-off time.

"
      end

      attribute 25310263 "MEASUREMENT_UPTIME_BATTERY_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How many milliseconds this statistics report covers that the CPU was running while the
device was on battery including both screen-on and screen-off time.

"
      end

      attribute 25310391 "MEASUREMENT_REALTIME_SCREEN_OFF_BATTERY_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How many milliseconds this statistics report covers in wall-clock time while the
device was on battery including both screen-on and screen-off time.

"
      end

      attribute 25310519 "MEASUREMENT_UPTIME_SCREEN_OFF_BATTERY_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How many milliseconds this statistics report covers that the CPU was running while the
device was on battery including both screen-on and screen-off time.

"
      end

      attribute 25310647 "TIMERS_WAKELOCKS_FULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a TimerStat for the times a
{@link android.os.PowerManager#FULL_WAKE_LOCK full wake lock}
was acquired for this uid.

"
      end

      attribute 25310775 "TIMERS_WAKELOCKS_PARTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a TimerStat for the times a
{@link android.os.PowerManager#PARTIAL_WAKE_LOCK full wake lock}
was acquired for this uid.

"
      end

      attribute 25310903 "TIMERS_WAKELOCKS_WINDOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 25311031 "TIMERS_WAKELOCKS_DRAW"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a TimerStat for the times a system-defined wakelock was acquired
to allow the application to draw when it otherwise would not be able to
(e.g. on the lock screen or doze screen).

"
      end

      attribute 25311159 "TIMERS_SYNCS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 9"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a map of Timers for the sync adapter syncs that were done for
this uid.

"
      end

      attribute 25311287 "TIMERS_JOBS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a map of Timers for the {@link android.app.job.JobScheduler} jobs for
this uid.

"
      end

      attribute 25311415 "TIMER_GPS_SENSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 11"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the applications use of the GPS sensor.

"
      end

      attribute 25311543 "TIMERS_SENSORS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 12"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMERS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a map of the sensor usage for this uid. The keys are a
string representation of the handle for the sensor.

"
      end

      attribute 25311671 "STATS_PIDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 13"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_STATS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a HealthStats with {@link PidHealthStats} keys for each of the
currently running processes for this uid.

"
      end

      attribute 25311799 "STATS_PROCESSES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 14"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_STATS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a HealthStats with {@link ProcessHealthStats} keys for each of the
named processes for this uid.

"
      end

      attribute 25311927 "STATS_PACKAGES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 15"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_STATS)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a HealthStats with {@link PackageHealthStats} keys for each of the
APKs that share this uid.

"
      end

      attribute 25312055 "MEASUREMENT_WIFI_IDLE_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 16"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the wifi controller was
idle but turned on on behalf of this uid.

"
      end

      attribute 25312183 "MEASUREMENT_WIFI_RX_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 17"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the wifi transmitter was
receiving data for this uid.

"
      end

      attribute 25312311 "MEASUREMENT_WIFI_TX_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 18"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the wifi transmitter was
transmitting data for this uid.

"
      end

      attribute 25312439 "MEASUREMENT_WIFI_POWER_MAMS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 19"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the estimated number of mA*ms used by this uid
for wifi, that is to say the number of milliseconds of wifi activity
times the mA current during that period.

"
      end

      attribute 25312567 "MEASUREMENT_BLUETOOTH_IDLE_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the bluetooth controller was
idle but turned on on behalf of this uid.

"
      end

      attribute 25312695 "MEASUREMENT_BLUETOOTH_RX_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 21"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the bluetooth transmitter was
receiving data for this uid.

"
      end

      attribute 25312823 "MEASUREMENT_BLUETOOTH_TX_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 22"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the bluetooth transmitter was
transmitting data for this uid.

"
      end

      attribute 25312951 "MEASUREMENT_BLUETOOTH_POWER_MAMS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 23"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the estimated number of mA*ms used by this uid
for bluetooth, that is to say the number of milliseconds of activity
times the mA current during that period.

"
      end

      attribute 25313079 "MEASUREMENT_MOBILE_IDLE_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 24"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the mobile radio controller was
idle but turned on on behalf of this uid.

"
      end

      attribute 25313207 "MEASUREMENT_MOBILE_RX_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 25"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the mobile radio transmitter was
receiving data for this uid.

"
      end

      attribute 25313335 "MEASUREMENT_MOBILE_TX_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 26"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the mobile radio transmitter was
transmitting data for this uid.

"
      end

      attribute 25313463 "MEASUREMENT_MOBILE_POWER_MAMS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 27"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the estimated number of mA*ms used by this uid
for mobile data, that is to say the number of milliseconds of activity
times the mA current during that period.

"
      end

      attribute 25313591 "MEASUREMENT_WIFI_RUNNING_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 28"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds the wifi controller was
active on behalf of this uid.

"
      end

      attribute 25313719 "MEASUREMENT_WIFI_FULL_LOCK_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 29"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds that this uid held a full wifi lock.

"
      end

      attribute 25313847 "TIMER_WIFI_SCAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 30"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of wifi scans done by this uid.

"
      end

      attribute 25313975 "MEASUREMENT_WIFI_MULTICAST_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 31"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of millseconds that this uid was performing
multicast wifi traffic.

"
      end

      attribute 25314103 "TIMER_AUDIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 32"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of audio playback done by this uid.

"
      end

      attribute 25314231 "TIMER_VIDEO"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 33"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of video playback done by this uid.

"
      end

      attribute 25314359 "TIMER_FLASHLIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 34"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration this uid had the flashlight turned on.

"
      end

      attribute 25314487 "TIMER_CAMERA"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 35"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration this uid had the camera turned on.

"
      end

      attribute 25314615 "TIMER_FOREGROUND_ACTIVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 36"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when an activity from this uid
was the foreground activitiy.

"
      end

      attribute 25314743 "TIMER_BLUETOOTH_SCAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 37"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was doing bluetooth scans.

"
      end

      attribute 25314871 "TIMER_PROCESS_STATE_TOP_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 38"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was in the \"top\" process state.

"
      end

      attribute 25314999 "TIMER_PROCESS_STATE_FOREGROUND_SERVICE_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 39"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was in the \"foreground service\"
process state.

"
      end

      attribute 25315127 "TIMER_PROCESS_STATE_TOP_SLEEPING_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 40"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was in the \"top sleeping\"
process state.

"
      end

      attribute 25315255 "TIMER_PROCESS_STATE_FOREGROUND_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 41"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was in the \"foreground\"
process state.

"
      end

      attribute 25315383 "TIMER_PROCESS_STATE_BACKGROUND_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 42"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was in the \"background\"
process state.

"
      end

      attribute 25315511 "TIMER_PROCESS_STATE_CACHED_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 43"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration of when this uid was in the \"cached\" process
state.

"
      end

      attribute 25315639 "TIMER_VIBRATOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 44"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration this uid had the vibrator turned on.

"
      end

      attribute 25315767 "MEASUREMENT_OTHER_USER_ACTIVITY_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 45"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of software-generated user activity events caused
by the UID.  Calls to userActivity() reset the user activity countdown timer and
keep the screen on for the user's preferred screen-on setting.

"
      end

      attribute 25315895 "MEASUREMENT_BUTTON_USER_ACTIVITY_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 46"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of user activity events due to physical button presses caused
by the UID.  Calls to userActivity() reset the user activity countdown timer and
keep the screen on for the user's preferred screen-on setting.

"
      end

      attribute 25316023 "MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 47"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of user activity events due to touch events caused
by the UID.  Calls to userActivity() reset the user activity countdown timer and
keep the screen on for the user's preferred screen-on setting.

"
      end

      attribute 25316151 "MEASUREMENT_MOBILE_RX_BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 48"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of bytes received for this uid by the mobile radio.

"
      end

      attribute 25316279 "MEASUREMENT_MOBILE_TX_BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 49"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of bytes transmitted for this uid by the mobile radio.

"
      end

      attribute 25316407 "MEASUREMENT_WIFI_RX_BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 50"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of bytes received for this uid by the wifi radio.

"
      end

      attribute 25316535 "MEASUREMENT_WIFI_TX_BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 51"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of bytes transmitted for this uid by the wifi radio.

"
      end

      attribute 25316663 "MEASUREMENT_BLUETOOTH_RX_BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 52"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of bytes received for this uid by the bluetooth radio.

"
      end

      attribute 25316791 "MEASUREMENT_BLUETOOTH_TX_BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 53"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of bytes transmitted for this uid by the bluetooth radio.

"
      end

      attribute 25316919 "MEASUREMENT_MOBILE_RX_PACKETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 54"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of packets received for this uid by the mobile radio.

"
      end

      attribute 25317047 "MEASUREMENT_MOBILE_TX_PACKETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 55"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of packets transmitted for this uid by the mobile radio.

"
      end

      attribute 25317175 "MEASUREMENT_WIFI_RX_PACKETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 56"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of packets received for this uid by the wifi radio.

"
      end

      attribute 25317303 "MEASUREMENT_WIFI_TX_PACKETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 57"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of packets transmitted for this uid by the wifi radio.

"
      end

      attribute 25317431 "MEASUREMENT_BLUETOOTH_RX_PACKETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 58"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of packets received for this uid by the bluetooth radio.

"
      end

      attribute 25317559 "MEASUREMENT_BLUETOOTH_TX_PACKETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 59"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of number of packets transmitted for this uid by the bluetooth radio.

"
      end

      attribute 25317687 "TIMER_MOBILE_RADIO_ACTIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 61"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_TIMER)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a timer for the count and duration the mobile radio was turned on for this uid.

"
      end

      attribute 25317815 "MEASUREMENT_USER_CPU_TIME_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 62"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of milliseconds spent by the CPU running user space
code for this uid.

"
      end

      attribute 25317943 "MEASUREMENT_SYSTEM_CPU_TIME_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 63"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key for a measurement of the number of milliseconds spent by the CPU running kernel
code for this uid.

"
      end

      attribute 25318071 "MEASUREMENT_CPU_POWER_MAMS"
	class_attribute const_attribute public explicit_type "int"
	init_value " HealthKeys.BASE_UID + 64"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@HealthKeys.Constant(type=HealthKeys.TYPE_MEASUREMENT)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An estimate of the number of milliamp-microsends used by this uid.

"
      end

      classrelation 16010679 // CONSTANTS (<unidirectional association>)
	relation 16010679 --->
	  a role_name "CONSTANTS" init_value " new HealthKeys.Constants(UidHealthStats.class)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 16010679 // CONSTANTS (<unidirectional association>)
	  b parent class_ref 7267127 // Constants
      end
    end
  end

  deploymentview 138551 "health"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2887479 "HealthKeys"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Field;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 7266871 // HealthKeys
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2887607 "HealthStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.ArrayMap;
import java.util.Arrays;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7267383 // HealthStats
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2887735 "HealthStatsParceler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.ArrayMap;
import java.util.Arrays;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7267639 // HealthStatsParceler
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2887863 "HealthStatsWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.ArrayMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 7267767 // HealthStatsWriter
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2887991 "PackageHealthStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7267895 // PackageHealthStats
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2888119 "PidHealthStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7268023 // PidHealthStats
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2888247 "ProcessHealthStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7268151 // ProcessHealthStats
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2888375 "ServiceHealthStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7268279 // ServiceHealthStats
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2888503 "SystemHealthManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.BatteryStats;
import android.os.Process;
import android.os.RemoteException;
import android.os.ServiceManager;
import com.android.internal.app.IBatteryStats;
${definition}"
      associated_classes
	class_ref 7268407 // SystemHealthManager
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2888631 "TimerStat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7267511 // TimerStat
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 2888759 "UidHealthStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7268535 // UidHealthStats
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
