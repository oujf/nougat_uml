format 213
"scheme" // android::frameworks::base::core::java::org::apache::http::conn::scheme
  revision 3
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/core/java/org/apache/http/conn/scheme/"
  java_package "org.apache.http.conn.scheme"
  classview 159799 "scheme"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7480247 "HostNameResolver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details.
"
      operation 82557239 "resolve"
	public explicit_return_type "InetAddress"
	nparams 1
	  param inout name "hostname" type class_ref 2590391 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7480375 "LayeredSocketFactory"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link SocketFactory SocketFactory} for layered sockets (SSL/TLS).
See there for things to consider when implementing a socket factory.

@author Michael Becke
@author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>
@since 4.0

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details.
"
      classrelation 16825783 // <generalisation>
	relation 16825783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 16825783 // <generalisation>
	  b parent class_ref 7480503 // SocketFactory
      end

      operation 82557751 "createSocket"
	public explicit_return_type "Socket"
	nparams 4
	  param inout name "socket" explicit_type "Socket"
	  param inout name "host" type class_ref 2590391 // String
	  param in name "port" explicit_type "int"
	  param inout name "autoClose" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "UnknownHostException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a socket connected to the given host that is layered over an
existing socket.  Used primarily for creating secure sockets through
proxies.

@param socket the existing socket 
@param host the host name/IP
@param port the port on the host
@param autoClose a flag for closing the underling socket when the created
socket is closed

@return Socket a new socket

@throws IOException if an I/O error occurs while creating the socket
@throws UnknownHostException if the IP address of the host cannot be
determined
"
      end
    end

    class 7480503 "SocketFactory"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A factory for creating and connecting sockets.
The factory encapsulates the logic for establishing a socket connection.
<br/>
Both {@link java.lang.Object#equals(java.lang.Object) Object.equals()}
and {@link java.lang.Object#hashCode() Object.hashCode()}
must be overridden for the correct operation of some connection managers.

@author <a href=\"mailto:rolandw at apache.org\">Roland Weber</a>
@author Michael Becke
@author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details.
"
      operation 82557367 "createSocket"
	public explicit_return_type "Socket"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, unconnected socket.
The socket should subsequently be passed to
{@link #connectSocket connectSocket}.

@return  a new socket

@throws IOException if an I/O error occurs while creating the socket
"
      end

      operation 82557495 "connectSocket"
	public explicit_return_type "Socket"
	nparams 6
	  param inout name "sock" explicit_type "Socket"
	  param inout name "host" type class_ref 2590391 // String
	  param in name "port" explicit_type "int"
	  param inout name "localAddress" explicit_type "InetAddress"
	  param in name "localPort" explicit_type "int"
	  param inout name "params" type class_ref 7480631 // HttpParams
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "UnknownHostException"
	  exception class_ref 7479991 // ConnectTimeoutException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects a socket to the given host.

@param sock      the socket to connect, as obtained from
                 {@link #createSocket createSocket}.
                 <code>null</code> indicates that a new socket
                 should be created and connected.
@param host      the host to connect to
@param port      the port to connect to on the host
@param localAddress the local address to bind the socket to, or
                 <code>null</code> for any
@param localPort the port on the local machine,
                 0 or a negative number for any
@param params    additional {@link HttpParams parameters} for connecting

@return  the connected socket. The returned object may be different
         from the <code>sock</code> argument if this factory supports
         a layered protocol.

@throws IOException if an I/O error occurs
@throws UnknownHostException if the IP address of the target host
         can not be determined
@throws ConnectTimeoutException if the socket cannot be connected
         within the time limit defined in the <code>params</code>
"
      end

      operation 82557623 "isSecure"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "sock" explicit_type "Socket"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a socket provides a secure connection.
The socket must be {@link #connectSocket connected}
by this factory.
The factory will <i>not</i> perform I/O operations
in this method.
<br/>
As a rule of thumb, plain sockets are not secure and
TLS/SSL sockets are secure. However, there may be
application specific deviations. For example, a plain
socket to a host in the same intranet (\"trusted zone\")
could be considered secure. On the other hand, a
TLS/SSL socket could be considered insecure based on
the cypher suite chosen for the connection.

@param sock      the connected socket to check

@return  <code>true</code> if the connection of the socket
         should be considered secure, or
         <code>false</code> if it should not

@throws IllegalArgumentException
 if the argument is invalid, for example because it is
 not a connected socket or was created by a different
 socket factory.
 Note that socket factories are <i>not</i> required to
 check these conditions, they may simply return a default
 value when called with an invalid socket argument.
"
      end
    end
  end

  deploymentview 146871 "scheme"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2991543 "HostNameResolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
${definition}"
      associated_classes
	class_ref 7480247 // HostNameResolver
      end
      comment "$HeadURL:$
$Revision:$
$Date:$

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.

"
    end

    artifact 2991671 "SocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import org.apache.http.conn.ConnectTimeoutException;
import org.apache.http.params.HttpParams;
${definition}"
      associated_classes
	class_ref 7480503 // SocketFactory
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/scheme/SocketFactory.java $
$Revision: 645850 $
$Date: 2008-04-08 04:08:52 -0700 (Tue, 08 Apr 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.

"
    end

    artifact 2991799 "LayeredSocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
${definition}"
      associated_classes
	class_ref 7480375 // LayeredSocketFactory
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/scheme/LayeredSocketFactory.java $
$Revision: 645850 $
$Date: 2008-04-08 04:08:52 -0700 (Tue, 08 Apr 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.

"
    end
  end
end
