class Canvas
!!!68953015.java!!!	getNativeCanvasWrapper() : long
        return mNativeCanvasWrapper;
!!!68953143.java!!!	isRecordingFor(inout o : Object) : boolean
 return false;
!!!68953271.java!!!	Canvas()
        if (!isHardwareAccelerated()) {
            // 0 means no native bitmap
            mNativeCanvasWrapper = initRaster(null);
            mFinalizer = NoImagePreloadHolder.sRegistry.registerNativeAllocation(
                    this, mNativeCanvasWrapper);
        } else {
            mFinalizer = null;
        }
!!!68953399.java!!!	Canvas(inout bitmap : Bitmap)
        if (!bitmap.isMutable()) {
            throw new IllegalStateException("Immutable bitmap passed to Canvas constructor");
        }
        throwIfCannotDraw(bitmap);
        mNativeCanvasWrapper = initRaster(bitmap);
        mFinalizer = NoImagePreloadHolder.sRegistry.registerNativeAllocation(
                this, mNativeCanvasWrapper);
        mBitmap = bitmap;
        mDensity = bitmap.mDensity;
!!!68953527.java!!!	Canvas(in nativeCanvas : long)
        if (nativeCanvas == 0) {
            throw new IllegalStateException();
        }
        mNativeCanvasWrapper = nativeCanvas;
        mFinalizer = NoImagePreloadHolder.sRegistry.registerNativeAllocation(
                this, mNativeCanvasWrapper);
        mDensity = Bitmap.getDefaultDensity();
!!!68953655.java!!!	getGL() : GL
        return null;
!!!68953783.java!!!	isHardwareAccelerated() : boolean
        return false;
!!!68953911.java!!!	setBitmap(inout bitmap : Bitmap) : void
        if (isHardwareAccelerated()) {
            throw new RuntimeException("Can't set a bitmap device on a HW accelerated canvas");
        }

        if (bitmap == null) {
            native_setBitmap(mNativeCanvasWrapper, null);
            mDensity = Bitmap.DENSITY_NONE;
        } else {
            if (!bitmap.isMutable()) {
                throw new IllegalStateException();
            }
            throwIfCannotDraw(bitmap);

            native_setBitmap(mNativeCanvasWrapper, bitmap);
            mDensity = bitmap.mDensity;
        }

        mBitmap = bitmap;
!!!68954039.java!!!	setHighContrastText(inout highContrastText : boolean) : void
        native_setHighContrastText(mNativeCanvasWrapper, highContrastText);
!!!68954423.java!!!	isOpaque() : boolean
        return native_isOpaque(mNativeCanvasWrapper);
!!!68954551.java!!!	getWidth() : int
        return native_getWidth(mNativeCanvasWrapper);
!!!68954679.java!!!	getHeight() : int
        return native_getHeight(mNativeCanvasWrapper);
!!!68954807.java!!!	getDensity() : int
        return mDensity;
!!!68954935.java!!!	setDensity(in density : int) : void
        if (mBitmap != null) {
            mBitmap.setDensity(density);
        }
        mDensity = density;
!!!68955063.java!!!	setScreenDensity(in density : int) : void
        mScreenDensity = density;
!!!68955191.java!!!	getMaximumBitmapWidth() : int
        return MAXMIMUM_BITMAP_SIZE;
!!!68955319.java!!!	getMaximumBitmapHeight() : int
        return MAXMIMUM_BITMAP_SIZE;
!!!68955447.java!!!	save() : int
        return native_save(mNativeCanvasWrapper, MATRIX_SAVE_FLAG | CLIP_SAVE_FLAG);
!!!68955575.java!!!	save(in saveFlags : int) : int
        return native_save(mNativeCanvasWrapper, saveFlags);
!!!68955703.java!!!	saveLayer(inout bounds : RectF, inout paint : Paint, in saveFlags : int) : int
        if (bounds == null) {
            bounds = new RectF(getClipBounds());
        }
        return saveLayer(bounds.left, bounds.top, bounds.right, bounds.bottom, paint, saveFlags);
!!!68955831.java!!!	saveLayer(inout bounds : RectF, inout paint : Paint) : int
        return saveLayer(bounds, paint, ALL_SAVE_FLAG);
!!!68955959.java!!!	saveLayer(in left : float, in top : float, in right : float, in bottom : float, inout paint : Paint, in saveFlags : int) : int
        return native_saveLayer(mNativeCanvasWrapper, left, top, right, bottom,
                paint != null ? paint.getNativeInstance() : 0,
                saveFlags);
!!!68956087.java!!!	saveLayer(in left : float, in top : float, in right : float, in bottom : float, inout paint : Paint) : int
        return saveLayer(left, top, right, bottom, paint, ALL_SAVE_FLAG);
!!!68956215.java!!!	saveLayerAlpha(inout bounds : RectF, in alpha : int, in saveFlags : int) : int
        if (bounds == null) {
            bounds = new RectF(getClipBounds());
        }
        return saveLayerAlpha(bounds.left, bounds.top, bounds.right, bounds.bottom, alpha, saveFlags);
!!!68956343.java!!!	saveLayerAlpha(inout bounds : RectF, in alpha : int) : int
        return saveLayerAlpha(bounds, alpha, ALL_SAVE_FLAG);
!!!68956471.java!!!	saveLayerAlpha(in left : float, in top : float, in right : float, in bottom : float, in alpha : int, in saveFlags : int) : int
        alpha = Math.min(255, Math.max(0, alpha));
        return native_saveLayerAlpha(mNativeCanvasWrapper, left, top, right, bottom,
                                     alpha, saveFlags);
!!!68956599.java!!!	saveLayerAlpha(in left : float, in top : float, in right : float, in bottom : float, in alpha : int) : int
        return saveLayerAlpha(left, top, right, bottom, alpha, ALL_SAVE_FLAG);
!!!68956727.java!!!	restore() : void
        boolean throwOnUnderflow = !sCompatibilityRestore || !isHardwareAccelerated();
        native_restore(mNativeCanvasWrapper, throwOnUnderflow);
!!!68956855.java!!!	getSaveCount() : int
        return native_getSaveCount(mNativeCanvasWrapper);
!!!68956983.java!!!	restoreToCount(in saveCount : int) : void
        boolean throwOnUnderflow = !sCompatibilityRestore || !isHardwareAccelerated();
        native_restoreToCount(mNativeCanvasWrapper, saveCount, throwOnUnderflow);
!!!68957111.java!!!	translate(in dx : float, in dy : float) : void
        native_translate(mNativeCanvasWrapper, dx, dy);
!!!68957239.java!!!	scale(in sx : float, in sy : float) : void
        native_scale(mNativeCanvasWrapper, sx, sy);
!!!68957367.java!!!	scale(in sx : float, in sy : float, in px : float, in py : float) : void
        translate(px, py);
        scale(sx, sy);
        translate(-px, -py);
!!!68957495.java!!!	rotate(in degrees : float) : void
        native_rotate(mNativeCanvasWrapper, degrees);
!!!68957623.java!!!	rotate(in degrees : float, in px : float, in py : float) : void
        translate(px, py);
        rotate(degrees);
        translate(-px, -py);
!!!68957751.java!!!	skew(in sx : float, in sy : float) : void
        native_skew(mNativeCanvasWrapper, sx, sy);
!!!68957879.java!!!	concat(inout matrix : Matrix) : void
        if (matrix != null) native_concat(mNativeCanvasWrapper, matrix.native_instance);
!!!68958007.java!!!	setMatrix(inout matrix : Matrix) : void
        native_setMatrix(mNativeCanvasWrapper,
                         matrix == null ? 0 : matrix.native_instance);
!!!68958135.java!!!	getMatrix(inout ctm : Matrix) : void
        native_getCTM(mNativeCanvasWrapper, ctm.native_instance);
!!!68958263.java!!!	getMatrix() : Matrix
        Matrix m = new Matrix();
        //noinspection deprecation
        getMatrix(m);
        return m;
!!!68958391.java!!!	clipRect(inout rect : RectF, inout op : Region::Op) : boolean
        return native_clipRect(mNativeCanvasWrapper, rect.left, rect.top, rect.right, rect.bottom,
                op.nativeInt);
!!!68958519.java!!!	clipRect(inout rect : Rect, inout op : Region::Op) : boolean
        return native_clipRect(mNativeCanvasWrapper, rect.left, rect.top, rect.right, rect.bottom,
                op.nativeInt);
!!!68958647.java!!!	clipRect(inout rect : RectF) : boolean
        return native_clipRect(mNativeCanvasWrapper, rect.left, rect.top, rect.right, rect.bottom,
                Region.Op.INTERSECT.nativeInt);
!!!68958775.java!!!	clipRect(inout rect : Rect) : boolean
        return native_clipRect(mNativeCanvasWrapper, rect.left, rect.top, rect.right, rect.bottom,
                Region.Op.INTERSECT.nativeInt);
!!!68958903.java!!!	clipRect(in left : float, in top : float, in right : float, in bottom : float, inout op : Region::Op) : boolean
        return native_clipRect(mNativeCanvasWrapper, left, top, right, bottom, op.nativeInt);
!!!68959031.java!!!	clipRect(in left : float, in top : float, in right : float, in bottom : float) : boolean
        return native_clipRect(mNativeCanvasWrapper, left, top, right, bottom,
                Region.Op.INTERSECT.nativeInt);
!!!68959159.java!!!	clipRect(in left : int, in top : int, in right : int, in bottom : int) : boolean
        return native_clipRect(mNativeCanvasWrapper, left, top, right, bottom,
                Region.Op.INTERSECT.nativeInt);
!!!68959287.java!!!	clipPath(inout path : Path, inout op : Region::Op) : boolean
        return native_clipPath(mNativeCanvasWrapper, path.ni(), op.nativeInt);
!!!68959415.java!!!	clipPath(inout path : Path) : boolean
        return clipPath(path, Region.Op.INTERSECT);
!!!68959543.java!!!	clipRegion(inout region : Region, inout op : Region::Op) : boolean
        return native_clipRegion(mNativeCanvasWrapper, region.ni(), op.nativeInt);
!!!68959671.java!!!	clipRegion(inout region : Region) : boolean
        return clipRegion(region, Region.Op.INTERSECT);
!!!68959799.java!!!	getDrawFilter() : DrawFilter
        return mDrawFilter;
!!!68959927.java!!!	setDrawFilter(inout filter : DrawFilter) : void
        long nativeFilter = 0;
        if (filter != null) {
            nativeFilter = filter.mNativeInt;
        }
        mDrawFilter = filter;
        nativeSetDrawFilter(mNativeCanvasWrapper, nativeFilter);
!!!68960183.java!!!	quickReject(inout rect : RectF, inout type : Canvas::EdgeType) : boolean
        return native_quickReject(mNativeCanvasWrapper,
                rect.left, rect.top, rect.right, rect.bottom);
!!!68960311.java!!!	quickReject(inout path : Path, inout type : Canvas::EdgeType) : boolean
        return native_quickReject(mNativeCanvasWrapper, path.ni());
!!!68960439.java!!!	quickReject(in left : float, in top : float, in right : float, in bottom : float, inout type : Canvas::EdgeType) : boolean
        return native_quickReject(mNativeCanvasWrapper, left, top, right, bottom);
!!!68960567.java!!!	getClipBounds(inout bounds : Rect) : boolean
        return native_getClipBounds(mNativeCanvasWrapper, bounds);
!!!68960695.java!!!	getClipBounds() : Rect
        Rect r = new Rect();
        getClipBounds(r);
        return r;
!!!68960823.java!!!	drawRGB(in r : int, in g : int, in b : int) : void
        drawColor(Color.rgb(r, g, b));
!!!68960951.java!!!	drawARGB(in a : int, in r : int, in g : int, in b : int) : void
        drawColor(Color.argb(a, r, g, b));
!!!68961079.java!!!	drawColor(in color : int) : void
        native_drawColor(mNativeCanvasWrapper, color, PorterDuff.Mode.SRC_OVER.nativeInt);
!!!68961207.java!!!	drawColor(in color : int, inout mode : PorterDuff::Mode) : void
        native_drawColor(mNativeCanvasWrapper, color, mode.nativeInt);
!!!68961335.java!!!	drawPaint(inout paint : Paint) : void
        native_drawPaint(mNativeCanvasWrapper, paint.getNativeInstance());
!!!68961463.java!!!	drawPoints(inout pts : float [[]], in offset : int, in count : int, inout paint : Paint) : void
        native_drawPoints(mNativeCanvasWrapper, pts, offset, count, paint.getNativeInstance());
!!!68961591.java!!!	drawPoints(inout pts : float [[]], inout paint : Paint) : void
        drawPoints(pts, 0, pts.length, paint);
!!!68961719.java!!!	drawPoint(in x : float, in y : float, inout paint : Paint) : void
        native_drawPoint(mNativeCanvasWrapper, x, y, paint.getNativeInstance());
!!!68961847.java!!!	drawLine(in startX : float, in startY : float, in stopX : float, in stopY : float, inout paint : Paint) : void
        native_drawLine(mNativeCanvasWrapper, startX, startY, stopX, stopY, paint.getNativeInstance());
!!!68961975.java!!!	drawLines(inout pts : float [[]], in offset : int, in count : int, inout paint : Paint) : void
        native_drawLines(mNativeCanvasWrapper, pts, offset, count, paint.getNativeInstance());
!!!68962103.java!!!	drawLines(inout pts : float [[]], inout paint : Paint) : void
        drawLines(pts, 0, pts.length, paint);
!!!68962231.java!!!	drawRect(inout rect : RectF, inout paint : Paint) : void
        native_drawRect(mNativeCanvasWrapper,
                rect.left, rect.top, rect.right, rect.bottom, paint.getNativeInstance());
!!!68962359.java!!!	drawRect(inout r : Rect, inout paint : Paint) : void
        drawRect(r.left, r.top, r.right, r.bottom, paint);
!!!68962487.java!!!	drawRect(in left : float, in top : float, in right : float, in bottom : float, inout paint : Paint) : void
        native_drawRect(mNativeCanvasWrapper, left, top, right, bottom, paint.getNativeInstance());
!!!68962615.java!!!	drawOval(inout oval : RectF, inout paint : Paint) : void
        if (oval == null) {
            throw new NullPointerException();
        }
        drawOval(oval.left, oval.top, oval.right, oval.bottom, paint);
!!!68962743.java!!!	drawOval(in left : float, in top : float, in right : float, in bottom : float, inout paint : Paint) : void
        native_drawOval(mNativeCanvasWrapper, left, top, right, bottom, paint.getNativeInstance());
!!!68962871.java!!!	drawCircle(in cx : float, in cy : float, in radius : float, inout paint : Paint) : void
        native_drawCircle(mNativeCanvasWrapper, cx, cy, radius, paint.getNativeInstance());
!!!68962999.java!!!	drawArc(inout oval : RectF, in startAngle : float, in sweepAngle : float, inout useCenter : boolean, inout paint : Paint) : void
        drawArc(oval.left, oval.top, oval.right, oval.bottom, startAngle, sweepAngle, useCenter,
                paint);
!!!68963127.java!!!	drawArc(in left : float, in top : float, in right : float, in bottom : float, in startAngle : float, in sweepAngle : float, inout useCenter : boolean, inout paint : Paint) : void
        native_drawArc(mNativeCanvasWrapper, left, top, right, bottom, startAngle, sweepAngle,
                useCenter, paint.getNativeInstance());
!!!68963255.java!!!	drawRoundRect(inout rect : RectF, in rx : float, in ry : float, inout paint : Paint) : void
        drawRoundRect(rect.left, rect.top, rect.right, rect.bottom, rx, ry, paint);
!!!68963383.java!!!	drawRoundRect(in left : float, in top : float, in right : float, in bottom : float, in rx : float, in ry : float, inout paint : Paint) : void
        native_drawRoundRect(mNativeCanvasWrapper, left, top, right, bottom, rx, ry, paint.getNativeInstance());
!!!68963511.java!!!	drawPath(inout path : Path, inout paint : Paint) : void
        if (path.isSimplePath && path.rects != null) {
            native_drawRegion(mNativeCanvasWrapper, path.rects.mNativeRegion, paint.getNativeInstance());
        } else {
            native_drawPath(mNativeCanvasWrapper, path.ni(), paint.getNativeInstance());
        }
!!!68963639.java!!!	throwIfCannotDraw(inout bitmap : Bitmap) : void
        if (bitmap.isRecycled()) {
            throw new RuntimeException("Canvas: trying to use a recycled bitmap " + bitmap);
        }
        if (!bitmap.isPremultiplied() && bitmap.getConfig() == Bitmap.Config.ARGB_8888 &&
                bitmap.hasAlpha()) {
            throw new RuntimeException("Canvas: trying to use a non-premultiplied bitmap "
                    + bitmap);
        }
!!!68963767.java!!!	drawPatch(inout patch : NinePatch, inout dst : Rect, inout paint : Paint) : void
        Bitmap bitmap = patch.getBitmap();
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();
        native_drawNinePatch(mNativeCanvasWrapper, bitmap.getNativeInstance(), patch.mNativeChunk,
                dst.left, dst.top, dst.right, dst.bottom, nativePaint,
                mDensity, patch.getDensity());
!!!68963895.java!!!	drawPatch(inout patch : NinePatch, inout dst : RectF, inout paint : Paint) : void
        Bitmap bitmap = patch.getBitmap();
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();
        native_drawNinePatch(mNativeCanvasWrapper, bitmap.getNativeInstance(), patch.mNativeChunk,
                dst.left, dst.top, dst.right, dst.bottom, nativePaint,
                mDensity, patch.getDensity());
!!!68964023.java!!!	drawBitmap(inout bitmap : Bitmap, in left : float, in top : float, inout paint : Paint) : void
        throwIfCannotDraw(bitmap);
        native_drawBitmap(mNativeCanvasWrapper, bitmap, left, top,
                paint != null ? paint.getNativeInstance() : 0, mDensity, mScreenDensity, bitmap.mDensity);
!!!68964151.java!!!	drawBitmap(inout bitmap : Bitmap, inout src : Rect, inout dst : RectF, inout paint : Paint) : void
      if (dst == null) {
          throw new NullPointerException();
      }
      throwIfCannotDraw(bitmap);
      final long nativePaint = paint == null ? 0 : paint.getNativeInstance();

      float left, top, right, bottom;
      if (src == null) {
          left = top = 0;
          right = bitmap.getWidth();
          bottom = bitmap.getHeight();
      } else {
          left = src.left;
          right = src.right;
          top = src.top;
          bottom = src.bottom;
      }

      native_drawBitmap(mNativeCanvasWrapper, bitmap, left, top, right, bottom,
              dst.left, dst.top, dst.right, dst.bottom, nativePaint, mScreenDensity,
              bitmap.mDensity);
!!!68964279.java!!!	drawBitmap(inout bitmap : Bitmap, inout src : Rect, inout dst : Rect, inout paint : Paint) : void
        if (dst == null) {
            throw new NullPointerException();
        }
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();

        int left, top, right, bottom;
        if (src == null) {
            left = top = 0;
            right = bitmap.getWidth();
            bottom = bitmap.getHeight();
        } else {
            left = src.left;
            right = src.right;
            top = src.top;
            bottom = src.bottom;
        }

        native_drawBitmap(mNativeCanvasWrapper, bitmap, left, top, right, bottom,
            dst.left, dst.top, dst.right, dst.bottom, nativePaint, mScreenDensity,
            bitmap.mDensity);
!!!68964407.java!!!	drawBitmap(inout colors : int [[]], in offset : int, in stride : int, in x : float, in y : float, in width : int, in height : int, inout hasAlpha : boolean, inout paint : Paint) : void
        // check for valid input
        if (width < 0) {
            throw new IllegalArgumentException("width must be >= 0");
        }
        if (height < 0) {
            throw new IllegalArgumentException("height must be >= 0");
        }
        if (Math.abs(stride) < width) {
            throw new IllegalArgumentException("abs(stride) must be >= width");
        }
        int lastScanline = offset + (height - 1) * stride;
        int length = colors.length;
        if (offset < 0 || (offset + width > length) || lastScanline < 0
                || (lastScanline + width > length)) {
            throw new ArrayIndexOutOfBoundsException();
        }
        // quick escape if there's nothing to draw
        if (width == 0 || height == 0) {
            return;
        }
        // punch down to native for the actual draw
        native_drawBitmap(mNativeCanvasWrapper, colors, offset, stride, x, y, width, height, hasAlpha,
                paint != null ? paint.getNativeInstance() : 0);
!!!68964535.java!!!	drawBitmap(inout colors : int [[]], in offset : int, in stride : int, in x : int, in y : int, in width : int, in height : int, inout hasAlpha : boolean, inout paint : Paint) : void
        // call through to the common float version
        drawBitmap(colors, offset, stride, (float)x, (float)y, width, height,
                   hasAlpha, paint);
!!!68964663.java!!!	drawBitmap(inout bitmap : Bitmap, inout matrix : Matrix, inout paint : Paint) : void
        nativeDrawBitmapMatrix(mNativeCanvasWrapper, bitmap, matrix.ni(),
                paint != null ? paint.getNativeInstance() : 0);
!!!68964791.java!!!	checkRange(in length : int, in offset : int, in count : int) : void
        if ((offset | count) < 0 || offset + count > length) {
            throw new ArrayIndexOutOfBoundsException();
        }
!!!68964919.java!!!	drawBitmapMesh(inout bitmap : Bitmap, in meshWidth : int, in meshHeight : int, inout verts : float [[]], in vertOffset : int, inout colors : int [[]], in colorOffset : int, inout paint : Paint) : void
        if ((meshWidth | meshHeight | vertOffset | colorOffset) < 0) {
            throw new ArrayIndexOutOfBoundsException();
        }
        if (meshWidth == 0 || meshHeight == 0) {
            return;
        }
        int count = (meshWidth + 1) * (meshHeight + 1);
        // we mul by 2 since we need two floats per vertex
        checkRange(verts.length, vertOffset, count * 2);
        if (colors != null) {
            // no mul by 2, since we need only 1 color per vertex
            checkRange(colors.length, colorOffset, count);
        }
        nativeDrawBitmapMesh(mNativeCanvasWrapper, bitmap, meshWidth, meshHeight,
                verts, vertOffset, colors, colorOffset,
                paint != null ? paint.getNativeInstance() : 0);
!!!68965175.java!!!	drawVertices(inout mode : Canvas::VertexMode, in vertexCount : int, inout verts : float [[]], in vertOffset : int, inout texs : float [[]], in texOffset : int, inout colors : int [[]], in colorOffset : int, inout indices : short [[]], in indexOffset : int, in indexCount : int, inout paint : Paint) : void
        checkRange(verts.length, vertOffset, vertexCount);
        if (isHardwareAccelerated()) {
            return;
        }
        if (texs != null) {
            checkRange(texs.length, texOffset, vertexCount);
        }
        if (colors != null) {
            checkRange(colors.length, colorOffset, vertexCount / 2);
        }
        if (indices != null) {
            checkRange(indices.length, indexOffset, indexCount);
        }
        nativeDrawVertices(mNativeCanvasWrapper, mode.nativeInt, vertexCount, verts,
                vertOffset, texs, texOffset, colors, colorOffset,
                indices, indexOffset, indexCount, paint.getNativeInstance());
!!!68965303.java!!!	drawText(inout text : char [[]], in index : int, in count : int, in x : float, in y : float, inout paint : Paint) : void
        if ((index | count | (index + count) |
            (text.length - index - count)) < 0) {
            throw new IndexOutOfBoundsException();
        }
        native_drawText(mNativeCanvasWrapper, text, index, count, x, y, paint.mBidiFlags,
                paint.getNativeInstance(), paint.mNativeTypeface);
!!!68965431.java!!!	drawText(inout text : String, in x : float, in y : float, inout paint : Paint) : void
        native_drawText(mNativeCanvasWrapper, text, 0, text.length(), x, y, paint.mBidiFlags,
                paint.getNativeInstance(), paint.mNativeTypeface);
!!!68965559.java!!!	drawText(inout text : String, in start : int, in end : int, in x : float, in y : float, inout paint : Paint) : void
        if ((start | end | (end - start) | (text.length() - end)) < 0) {
            throw new IndexOutOfBoundsException();
        }
        native_drawText(mNativeCanvasWrapper, text, start, end, x, y, paint.mBidiFlags,
                paint.getNativeInstance(), paint.mNativeTypeface);
!!!68965687.java!!!	drawText(inout text : CharSequence, in start : int, in end : int, in x : float, in y : float, inout paint : Paint) : void
        if ((start | end | (end - start) | (text.length() - end)) < 0) {
            throw new IndexOutOfBoundsException();
        }
        if (text instanceof String || text instanceof SpannedString ||
            text instanceof SpannableString) {
            native_drawText(mNativeCanvasWrapper, text.toString(), start, end, x, y,
                    paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
        } else if (text instanceof GraphicsOperations) {
            ((GraphicsOperations) text).drawText(this, start, end, x, y,
                    paint);
        } else {
            char[] buf = TemporaryBuffer.obtain(end - start);
            TextUtils.getChars(text, start, end, buf, 0);
            native_drawText(mNativeCanvasWrapper, buf, 0, end - start, x, y,
                    paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
            TemporaryBuffer.recycle(buf);
        }
!!!68965815.java!!!	drawTextRun(inout text : char [[]], in index : int, in count : int, in contextIndex : int, in contextCount : int, in x : float, in y : float, inout isRtl : boolean, inout paint : Paint) : void

        if (text == null) {
            throw new NullPointerException("text is null");
        }
        if (paint == null) {
            throw new NullPointerException("paint is null");
        }
        if ((index | count | contextIndex | contextCount | index - contextIndex
                | (contextIndex + contextCount) - (index + count)
                | text.length - (contextIndex + contextCount)) < 0) {
            throw new IndexOutOfBoundsException();
        }

        native_drawTextRun(mNativeCanvasWrapper, text, index, count, contextIndex, contextCount,
                x, y, isRtl, paint.getNativeInstance(), paint.mNativeTypeface);
!!!68965943.java!!!	drawTextRun(inout text : CharSequence, in start : int, in end : int, in contextStart : int, in contextEnd : int, in x : float, in y : float, inout isRtl : boolean, inout paint : Paint) : void

        if (text == null) {
            throw new NullPointerException("text is null");
        }
        if (paint == null) {
            throw new NullPointerException("paint is null");
        }
        if ((start | end | contextStart | contextEnd | start - contextStart | end - start
                | contextEnd - end | text.length() - contextEnd) < 0) {
            throw new IndexOutOfBoundsException();
        }

        if (text instanceof String || text instanceof SpannedString ||
                text instanceof SpannableString) {
            native_drawTextRun(mNativeCanvasWrapper, text.toString(), start, end, contextStart,
                    contextEnd, x, y, isRtl, paint.getNativeInstance(), paint.mNativeTypeface);
        } else if (text instanceof GraphicsOperations) {
            ((GraphicsOperations) text).drawTextRun(this, start, end,
                    contextStart, contextEnd, x, y, isRtl, paint);
        } else {
            int contextLen = contextEnd - contextStart;
            int len = end - start;
            char[] buf = TemporaryBuffer.obtain(contextLen);
            TextUtils.getChars(text, contextStart, contextEnd, buf, 0);
            native_drawTextRun(mNativeCanvasWrapper, buf, start - contextStart, len,
                    0, contextLen, x, y, isRtl, paint.getNativeInstance(), paint.mNativeTypeface);
            TemporaryBuffer.recycle(buf);
        }
!!!68966071.java!!!	drawPosText(inout text : char [[]], in index : int, in count : int, inout pos : float [[]], inout paint : Paint) : void
        if (index < 0 || index + count > text.length || count*2 > pos.length) {
            throw new IndexOutOfBoundsException();
        }
        for (int i = 0; i < count; i++) {
            drawText(text, index + i, 1, pos[i * 2], pos[i * 2 + 1], paint);
        }
!!!68966199.java!!!	drawPosText(inout text : String, inout pos : float [[]], inout paint : Paint) : void
        drawPosText(text.toCharArray(), 0, text.length(), pos, paint);
!!!68966327.java!!!	drawTextOnPath(inout text : char [[]], in index : int, in count : int, inout path : Path, in hOffset : float, in vOffset : float, inout paint : Paint) : void
        if (index < 0 || index + count > text.length) {
            throw new ArrayIndexOutOfBoundsException();
        }
        native_drawTextOnPath(mNativeCanvasWrapper, text, index, count,
                path.ni(), hOffset, vOffset,
                paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
!!!68966455.java!!!	drawTextOnPath(inout text : String, inout path : Path, in hOffset : float, in vOffset : float, inout paint : Paint) : void
        if (text.length() > 0) {
            native_drawTextOnPath(mNativeCanvasWrapper, text, path.ni(), hOffset, vOffset,
                    paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
        }
!!!68966583.java!!!	drawPicture(inout picture : Picture) : void
        picture.endRecording();
        int restoreCount = save();
        picture.draw(this);
        restoreToCount(restoreCount);
!!!68966711.java!!!	drawPicture(inout picture : Picture, inout dst : RectF) : void
        save();
        translate(dst.left, dst.top);
        if (picture.getWidth() > 0 && picture.getHeight() > 0) {
            scale(dst.width() / picture.getWidth(), dst.height() / picture.getHeight());
        }
        drawPicture(picture);
        restore();
!!!68966839.java!!!	drawPicture(inout picture : Picture, inout dst : Rect) : void
        save();
        translate(dst.left, dst.top);
        if (picture.getWidth() > 0 && picture.getHeight() > 0) {
            scale((float) dst.width() / picture.getWidth(),
                    (float) dst.height() / picture.getHeight());
        }
        drawPicture(picture);
        restore();
!!!68966967.java!!!	release() : void
        mNativeCanvasWrapper = 0;
        if (mFinalizer != null) {
            mFinalizer.run();
            mFinalizer = null;
        }
