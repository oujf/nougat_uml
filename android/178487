format 213
"effect" // android::frameworks::base::core::java::android::media::effect
  revision 4
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/base/media/mca/effect/java/android/media/effect/"
  java_package "android.media.effect"
  classview 173367 "effect"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 6130487 "Effect"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Effects are high-performance transformations that can be applied to image frames. These are
passed in the form of OpenGL ES 2.0 texture names. Typical frames could be images loaded from
disk, or frames from the camera or other video streams.</p>

<p>To create an Effect you must first create an EffectContext. You can obtain an instance of the
context's EffectFactory by calling
{@link android.media.effect.EffectContext#getFactory() getFactory()}. The EffectFactory allows
you to instantiate specific Effects.</p>

<p>The application is responsible for creating an EGL context, and making it current before
applying an effect. An effect is bound to a single EffectContext, which in turn is bound to a
single EGL context. If your EGL context is destroyed, the EffectContext becomes invalid and any
effects bound to this context can no longer be used.</p>

"
      operation 70019127 "getName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the effect name.

Returns the unique name of the effect, which matches the name used for instantiating this
effect by the EffectFactory.

@return The name of the effect.
"
      end

      operation 70019255 "apply"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply an effect to GL textures.

<p>Apply the Effect on the specified input GL texture, and write the result into the
output GL texture. The texture names passed must be valid in the current GL context.</p>

<p>The input texture must be a valid texture name with the given width and height and must be
bound to a GL_TEXTURE_2D texture image (usually done by calling the glTexImage2D() function).
Multiple mipmap levels may be provided.</p>

<p>If the output texture has not been bound to a texture image, it will be automatically
bound by the effect as a GL_TEXTURE_2D. It will contain one mipmap level (0), which will have
the same size as the input. No other mipmap levels are defined. If the output texture was
bound already, and its size does not match the input texture size, the result may be clipped
or only partially fill the texture.</p>

<p>Note, that regardless of whether a texture image was originally provided or not, both the
input and output textures are owned by the caller. That is, the caller is responsible for
calling glDeleteTextures() to deallocate the input and output textures.</p>

@param inputTexId The GL texture name of a valid and bound input texture.
@param width The width of the input texture in pixels.
@param height The height of the input texture in pixels.
@param outputTexId The GL texture name of the output texture.
"
      end

      operation 70019383 "setParameter"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "parameterKey" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a filter parameter.

Consult the effect documentation for a list of supported parameter keys for each effect.

@param parameterKey The name of the parameter to adjust.
@param value The new value to set the parameter to.
@throws InvalidArgumentException if parameterName is not a recognized name, or the value is
        not a valid value for this parameter.
"
      end

      operation 70019511 "setUpdateListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 6130615 // EffectUpdateListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an effect listener.

Some effects may report state changes back to the host, if a listener is set. Consult the
individual effect documentation for more details.

@param listener The listener to receive update callbacks on.
"
      end

      operation 70019639 "release"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release an effect.

<p>Releases the effect and any resources associated with it. You may call this if you need to
make sure acquired resources are no longer held by the effect. Releasing an effect makes it
invalid for reuse.</p>

<p>Note that this method must be called with the EffectContext and EGL context current, as
the effect may release internal GL resources.</p>
"
      end
    end

    class 6130615 "EffectUpdateListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Some effects may issue callbacks to inform the host of changes to the effect state. This is the
listener interface for receiving those callbacks.
"
      operation 70021431 "onEffectUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "effect" type class_ref 6130487 // Effect
	  param inout name "info" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the effect state is updated.

@param effect The effect that has been updated.
@param info A value that gives more information about the update. See the effect's
            documentation for more details on what this object is.
"
      end
    end

    class 6130743 "EffectContext"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An EffectContext keeps all necessary state information to run Effects within a Open GL ES 2.0
context.</p>

<p>Every EffectContext is bound to one GL context. The application is responsible for creating
this EGL context, and making it current before applying any effect. If your EGL context is
destroyed, the EffectContext becomes invalid and any effects bound to this context can no longer
be used. If you switch to another EGL context, you must create a new EffectContext. Each Effect
is bound to a single EffectContext, and can only be executed in that context.</p>
"
      attribute 20677303 "GL_STATE_FBO"
	const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 20677431 "GL_STATE_PROGRAM"
	const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 20677559 "GL_STATE_ARRAYBUFFER"
	const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 20677687 "GL_STATE_COUNT"
	const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 12050231 // mFilterContext (<unidirectional association>)
	relation 12050231 --->
	  a role_name "mFilterContext" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12050231 // mFilterContext (<unidirectional association>)
	  b parent class_ref 6130871 // FilterContext
      end

      classrelation 12050359 // mFactory (<unidirectional association>)
	relation 12050359 --->
	  a role_name "mFactory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12050359 // mFactory (<unidirectional association>)
	  b parent class_ref 6130999 // EffectFactory
      end

      attribute 20677815 "mOldState"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[GL_STATE_COUNT]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 70019767 "createWithCurrentGlContext"
	class_operation public return_type class_ref 6130743 // EffectContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a context within the current GL context.

<p>Binds the EffectContext to the current OpenGL context. All subsequent calls to the
EffectContext must be made in the GL context that was active during creation.
When you have finished using a context, you must call {@link #release()}. to dispose of all
resources associated with this context.</p>
"
      end

      operation 70019895 "getFactory"
	public return_type class_ref 6130999 // EffectFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the EffectFactory for this context.

<p>The EffectFactory returned from this method allows instantiating new effects within this
context.</p>

@return The EffectFactory instance for this context.
"
      end

      operation 70020023 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the context.

<p>Releases all the resources and effects associated with the EffectContext. This renders the
context and all the effects bound to this context invalid. You must no longer use the context
or any of its bound effects after calling release().</p>

<p>Note that this method must be called with the proper EGL context made current, as the
EffectContext and its effects may release internal GL resources.</p>
"
      end

      operation 70020151 "EffectContext"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70020279 "initInCurrentGlContext"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70020407 "assertValidGLState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70020535 "saveGLState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70020663 "restoreGLState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6130999 "EffectFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>The EffectFactory class defines the list of available Effects, and provides functionality to
inspect and instantiate them. Some effects may not be available on all platforms, so before
creating a certain effect, the application should confirm that the effect is supported on this
platform by calling {@link #isEffectSupported(String)}.</p>
"
      classrelation 12050487 // mEffectContext (<unidirectional association>)
	relation 12050487 --->
	  a role_name "mEffectContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12050487 // mEffectContext (<unidirectional association>)
	  b parent class_ref 6130743 // EffectContext
      end

      operation 70020791 "EffectFactory"
	package explicit_return_type ""
	nparams 1
	  param inout name "effectContext" type class_ref 6130743 // EffectContext
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70020919 "createEffect"
	public return_type class_ref 6130487 // Effect
	nparams 1
	  param inout name "effectName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new effect with the given effect name.

<p>The effect's parameters will be set to their default values.</p>

<p>Note that the EGL context associated with the current EffectContext need not be made
current when creating an effect. This allows the host application to instantiate effects
before any EGL context has become current.</p>

@param effectName The name of the effect to create.
@return A new Effect instance.
@throws IllegalArgumentException if the effect with the specified name is not supported or
        not known.
"
      end

      operation 70021047 "isEffectSupported"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "effectName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if an effect is supported on this platform.

<p>Some effects may only be available on certain platforms. Use this method before
instantiating an effect to make sure it is supported.</p>

@param effectName The name of the effect.
@return true, if the effect is supported on this platform.
@throws IllegalArgumentException if the effect name is not known.
"
      end

      operation 70021175 "getEffectClassByName"
	class_operation private explicit_return_type "Class"
	nparams 1
	  param inout name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70021303 "instantiateEffect"
	private return_type class_ref 6130487 // Effect
	nparams 2
	  param inout name "effectClass" explicit_type "Class"
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 6131127 "FilterEffect"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The FilterEffect class is the base class for all Effects based on Filters from the Mobile
Filter Framework (MFF).
@hide
"
      classrelation 12054327 // <generalisation>
	relation 12054327 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 12054327 // <generalisation>
	  b parent class_ref 6130487 // Effect
      end

      classrelation 12054455 // mEffectContext (<unidirectional association>)
	relation 12054455 --->
	  a role_name "mEffectContext" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12054455 // mEffectContext (<unidirectional association>)
	  b parent class_ref 6130743 // EffectContext
      end

      operation 70021559 "FilterEffect"
	protected explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 6130743 // EffectContext
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Protected constructor as FilterEffects should be created by Factory.
"
      end

      operation 70021687 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Get the effect name.

Returns the unique name of the effect, which matches the name used for instantiating this
effect by the EffectFactory.

@return The name of the effect.
"
      end

      operation 70021815 "beginGLEffect"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper Methods for subclasses ///////////////////////////////////////////////////////////////

Call this before manipulating the GL context. Will assert that the GL environment is in a
valid state, and save it.
"
      end

      operation 70021943 "endGLEffect"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call this after manipulating the GL context. Restores the previous GL state.
"
      end

      operation 70022071 "getFilterContext"
	protected return_type class_ref 6130871 // FilterContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the active filter context for this effect.
"
      end

      operation 70022199 "frameFromTexture"
	protected return_type class_ref 6131255 // Frame
	nparams 3
	  param in name "texId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a texture into a Frame.
"
      end
    end

    class 6131383 "FilterGraphEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Effect subclass for effects based on a single Filter. Subclasses need only invoke the
constructor with the correct arguments to obtain an Effect implementation.

@hide
"
      classrelation 12054711 // <generalisation>
	relation 12054711 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 12054711 // <generalisation>
	  b parent class_ref 6131127 // FilterEffect
      end

      classrelation 12055223 // mRunner (<unidirectional association>)
	relation 12055223 --->
	  a role_name "mRunner" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12055223 // mRunner (<unidirectional association>)
	  b parent class_ref 6131511 // GraphRunner
      end

      classrelation 12055351 // mGraph (<unidirectional association>)
	relation 12055351 --->
	  a role_name "mGraph" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12055351 // mGraph (<unidirectional association>)
	  b parent class_ref 6131639 // FilterGraph
      end

      operation 70022327 "FilterGraphEffect"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 6130743 // EffectContext
	  param inout name "name" explicit_type "String"
	  param inout name "graphString" explicit_type "String"
	  param inout name "inputName" explicit_type "String"
	  param inout name "outputName" explicit_type "String"
	  param inout name "scheduler" explicit_type "Class"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new FilterGraphEffect.

@param name The name of this effect (used to create it in the EffectFactory).
@param graphString The graph string to create the graph.
@param inputName The name of the input GLTextureSource filter.
@param outputName The name of the output GLTextureSource filter.
"
      end

      operation 70022455 "createGraph"
	private explicit_return_type "void"
	nparams 1
	  param inout name "graphString" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70022583 "apply"
	public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 70022711 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parameterKey" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 70022839 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 6131767 "SingleFilterEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Effect subclass for effects based on a single Filter. Subclasses need only invoke the
constructor with the correct arguments to obtain an Effect implementation.

@hide
"
      classrelation 12055607 // <generalisation>
	relation 12055607 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 12055607 // <generalisation>
	  b parent class_ref 6131127 // FilterEffect
      end

      classrelation 12055735 // mFunction (<unidirectional association>)
	relation 12055735 --->
	  a role_name "mFunction" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12055735 // mFunction (<unidirectional association>)
	  b parent class_ref 6131895 // FilterFunction
      end

      operation 70022967 "SingleFilterEffect"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 6130743 // EffectContext
	  param inout name "name" explicit_type "String"
	  param inout name "filterClass" explicit_type "Class"
	  param inout name "inputName" explicit_type "String"
	  param inout name "outputName" explicit_type "String"
	  param inout name "" explicit_type "Object...finalParameters"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new FilterFunctionEffect.

@param name The name of this effect (used to create it in the EffectFactory).
@param filterClass The class of the filter to wrap.
@param inputName The name of the input image port.
@param outputName The name of the output image port.
@param finalParameters Key-value pairs of final input port assignments.
"
      end

      operation 70023095 "apply"
	public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 70023223 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parameterKey" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 70023351 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 6132023 "SizeChangeEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Effect subclass for effects based on a single Filter with output size differnet
from input.  Subclasses need only invoke the constructor with the correct arguments
to obtain an Effect implementation.

@hide
"
      classrelation 12056119 // <generalisation>
	relation 12056119 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 12056119 // <generalisation>
	  b parent class_ref 6131767 // SingleFilterEffect
      end

      operation 70023479 "SizeChangeEffect"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 6130743 // EffectContext
	  param inout name "name" explicit_type "String"
	  param inout name "filterClass" explicit_type "Class"
	  param inout name "inputName" explicit_type "String"
	  param inout name "outputName" explicit_type "String"
	  param inout name "" explicit_type "Object...finalParameters"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 70023607 "apply"
	public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 157879 "effect"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 2304695 "Effect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 6130487 // Effect
      end
    end

    artifact 2304823 "EffectContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.CachedFrameManager;
import android.filterfw.core.FilterContext;
import android.filterfw.core.GLEnvironment;
import android.opengl.GLES20;
${definition}"
      associated_classes
	class_ref 6130743 // EffectContext
      end
    end

    artifact 2304951 "EffectFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Constructor;
${definition}"
      associated_classes
	class_ref 6130999 // EffectFactory
      end
    end

    artifact 2305079 "EffectUpdateListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 6130615 // EffectUpdateListener
      end
    end

    artifact 2305207 "FilterEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.FilterContext;
import android.filterfw.core.GLFrame;
import android.filterfw.core.Frame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.FrameManager;
import android.filterfw.format.ImageFormat;
${definition}"
      associated_classes
	class_ref 6131127 // FilterEffect
      end
    end

    artifact 2305335 "FilterGraphEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterGraph;
import android.filterfw.core.GraphRunner;
import android.filterfw.core.SyncRunner;
import android.media.effect.FilterEffect;
import android.media.effect.EffectContext;
import android.filterfw.io.GraphIOException;
import android.filterfw.io.GraphReader;
import android.filterfw.io.TextGraphReader;
${definition}"
      associated_classes
	class_ref 6131383 // FilterGraphEffect
      end
    end

    artifact 2305463 "SingleFilterEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterFactory;
import android.filterfw.core.FilterFunction;
import android.filterfw.core.Frame;
import android.media.effect.EffectContext;
${definition}"
      associated_classes
	class_ref 6131767 // SingleFilterEffect
      end
    end

    artifact 2305591 "SizeChangeEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Frame;
import android.media.effect.EffectContext;
${definition}"
      associated_classes
	class_ref 6132023 // SizeChangeEffect
      end
    end
  end

  package_ref 178871 // effects
end
