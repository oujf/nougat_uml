format 213
"widget" // android::frameworks::base::core::java::android::support::v7::widget
  revision 3
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks/support/v7/recyclerview/src/android/support/v7/widget/"
  java_package "android.support.v7.widget"
  classview 180407 "widget"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1068983 "RecyclerView"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A flexible view for providing a limited window into a large data set.

<h3>Glossary of terms:</h3>

<ul>
    <li><em>Adapter:</em> A subclass of {@link Adapter} responsible for providing views
    that represent items in a data set.</li>
    <li><em>Position:</em> The position of a data item within an <em>Adapter</em>.</li>
    <li><em>Index:</em> The index of an attached child view as used in a call to
    {@link ViewGroup#getChildAt}. Contrast with <em>Position.</em></li>
    <li><em>Binding:</em> The process of preparing a child view to display data corresponding
    to a <em>position</em> within the adapter.</li>
    <li><em>Recycle (view):</em> A view previously used to display data for a specific adapter
    position may be placed in a cache for later reuse to display the same type of data again
    later. This can drastically improve performance by skipping initial layout inflation
    or construction.</li>
    <li><em>Scrap (view):</em> A child view that has entered into a temporarily detached
    state during layout. Scrap views may be reused without becoming fully detached
    from the parent RecyclerView, either unmodified if no rebinding is required or modified
    by the adapter if the view was considered <em>dirty</em>.</li>
    <li><em>Dirty (view):</em> A child view that must be rebound by the adapter before
    being displayed.</li>
</ul>

<h4>Positions in RecyclerView:</h4>
<p>
RecyclerView introduces an additional level of abstraction between the {@link Adapter} and
{@link LayoutManager} to be able to detect data set changes in batches during a layout
calculation. This saves LayoutManager from tracking adapter changes to calculate animations.
It also helps with performance because all view bindings happen at the same time and unnecessary
bindings are avoided.
<p>
For this reason, there are two types of <code>position</code> related methods in RecyclerView:
<ul>
    <li>layout position: Position of an item in the latest layout calculation. This is the
    position from the LayoutManager's perspective.</li>
    <li>adapter position: Position of an item in the adapter. This is the position from
    the Adapter's perspective.</li>
</ul>
<p>
These two positions are the same except the time between dispatching <code>adapter.notify*
</code> events and calculating the updated layout.
<p>
Methods that return or receive <code>*LayoutPosition*</code> use position as of the latest
layout calculation (e.g. {@link ViewHolder#getLayoutPosition()},
{@link #findViewHolderForLayoutPosition(int)}). These positions include all changes until the
last layout calculation. You can rely on these positions to be consistent with what user is
currently seeing on the screen. For example, if you have a list of items on the screen and user
asks for the 5<sup>th</sup> element, you should use these methods as they'll match what user
is seeing.
<p>
The other set of position related methods are in the form of
<code>*AdapterPosition*</code>. (e.g. {@link ViewHolder#getAdapterPosition()},
{@link #findViewHolderForAdapterPosition(int)}) You should use these methods when you need to
work with up-to-date adapter positions even if they may not have been reflected to layout yet.
For example, if you want to access the item in the adapter on a ViewHolder click, you should use
{@link ViewHolder#getAdapterPosition()}. Beware that these methods may not be able to calculate
adapter positions if {@link Adapter#notifyDataSetChanged()} has been called and new layout has
not yet been calculated. For this reasons, you should carefully handle {@link #NO_POSITION} or
<code>null</code> results from these methods.
<p>
When writing a {@link LayoutManager} you almost always want to use layout positions whereas when
writing an {@link Adapter}, you probably want to use adapter positions.

@attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_layoutManager
"
      class 1073463 "OnItemTouchListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 28901815 "onInterceptTouchEvent"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "rv" type class_ref 1068983 // RecyclerView
	    param inout name "e" explicit_type "MotionEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Silently observe and/or take over touch events sent to the RecyclerView
before they are handled by either the RecyclerView itself or its child views.

<p>The onInterceptTouchEvent methods of each attached OnItemTouchListener will be run
in the order in which each listener was added, before any other touch processing
by the RecyclerView itself or child views occurs.</p>

@param e MotionEvent describing the touch event. All coordinates are in
         the RecyclerView's coordinate system.
@return true if this OnItemTouchListener wishes to begin intercepting touch events, false
        to continue with the current behavior and continue observing future events in
        the gesture.
"
	end

	operation 28901943 "onTouchEvent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "rv" type class_ref 1068983 // RecyclerView
	    param inout name "e" explicit_type "MotionEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Process a touch event as part of a gesture that was claimed by returning true from
a previous call to {@link #onInterceptTouchEvent}.

@param e MotionEvent describing the touch event. All coordinates are in
         the RecyclerView's coordinate system.
"
	end

	operation 28902071 "onRequestDisallowInterceptTouchEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "disallowIntercept" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a child of RecyclerView does not want RecyclerView and its ancestors to
intercept touch events with
{@link ViewGroup#onInterceptTouchEvent(MotionEvent)}.

@param disallowIntercept True if the child does not want the parent to
           intercept touch events.
@see ViewParent#requestDisallowInterceptTouchEvent(boolean)
"
	end
      end

      class 1073975 "ViewHolder"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4909751 "mPosition"
	  package explicit_type "int"
	  init_value " NO_POSITION"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4909879 "mOldPosition"
	  package explicit_type "int"
	  init_value " NO_POSITION"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4910007 "mItemId"
	  package explicit_type "long"
	  init_value " NO_ID"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4910135 "mItemViewType"
	  package explicit_type "int"
	  init_value " INVALID_TYPE"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4910263 "mPreLayoutPosition"
	  package explicit_type "int"
	  init_value " NO_POSITION"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1930551 // mShadowedHolder (<unidirectional association>)
	  relation 1930551 --->
	    a role_name "mShadowedHolder" init_value " null" package
	      comment " The item that this holder is shadowing during an item change event/animation
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1930551 // mShadowedHolder (<unidirectional association>)
	    b parent class_ref 1073975 // ViewHolder
	end

	classrelation 1930679 // mShadowingHolder (<unidirectional association>)
	  relation 1930679 --->
	    a role_name "mShadowingHolder" init_value " null" package
	      comment " The item that is shadowing this holder during an item change event/animation
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1930679 // mShadowingHolder (<unidirectional association>)
	    b parent class_ref 1073975 // ViewHolder
	end

	attribute 4910391 "FLAG_BOUND"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This ViewHolder has been bound to a position; mPosition, mItemId and mItemViewType
are all valid.

"
	end

	attribute 4910519 "FLAG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The data this ViewHolder's view reflects is stale and needs to be rebound
by the adapter. mPosition and mItemId are consistent.

"
	end

	attribute 4910647 "FLAG_INVALID"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This ViewHolder's data is invalid. The identity implied by mPosition and mItemId
are not to be trusted and may no longer match the item view type.
This ViewHolder must be fully rebound to different data.

"
	end

	attribute 4910775 "FLAG_REMOVED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 3"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This ViewHolder points at data that represents an item previously removed from the
data set. Its view may still be used for things like outgoing animations.

"
	end

	attribute 4910903 "FLAG_NOT_RECYCLABLE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 4"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This ViewHolder should not be recycled. This flag is set via setIsRecyclable()
and is intended to keep views around during animations.

"
	end

	attribute 4911031 "FLAG_RETURNED_FROM_SCRAP"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 5"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This ViewHolder is returned from scrap which means we are expecting an addView call
for this itemView. When returned from scrap, ViewHolder stays in the scrap list until
the end of the layout pass and then recycled by RecyclerView if it is not added back to
the RecyclerView.

"
	end

	attribute 4911159 "FLAG_IGNORE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 7"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "This ViewHolder is fully managed by the LayoutManager. We do not scrap, recycle or remove
it unless LayoutManager is replaced.
It is still fully visible to the LayoutManager.

"
	end

	attribute 4911287 "FLAG_TMP_DETACHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 8"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "When the View is detached form the parent, we set this flag so that we can take correct
action when we need to remove it or add it back.

"
	end

	attribute 4911415 "FLAG_ADAPTER_POSITION_UNKNOWN"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 9"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Set when we can no longer determine the adapter position of this ViewHolder until it is
rebound to a new position. It is different than FLAG_INVALID because FLAG_INVALID is
set even when the type does not match. Also, FLAG_ADAPTER_POSITION_UNKNOWN is set as soon
as adapter notification arrives vs FLAG_INVALID is set lazily before layout is
re-calculated.

"
	end

	attribute 4911543 "FLAG_ADAPTER_FULLUPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 10"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Set when a addChangePayload(null) is called

"
	end

	attribute 4911671 "FLAG_MOVED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 11"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Used by ItemAnimator when a ViewHolder's position changes

"
	end

	attribute 4911799 "FLAG_APPEARED_IN_PRE_LAYOUT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 12"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Used by ItemAnimator when a ViewHolder appears in pre-layout

"
	end

	attribute 4911927 "FLAG_BOUNCED_FROM_HIDDEN_LIST"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 13"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Used when a ViewHolder starts the layout pass as a hidden ViewHolder but is re-used from
hidden list (as if it was scrap) without being recycled in between.

When a ViewHolder is hidden, there are 2 paths it can be re-used:
  a) Animation ends, view is recycled and used from the recycle pool.
  b) LayoutManager asks for the View for that position while the ViewHolder is hidden.

This flag is used to represent \"case b\" where the ViewHolder is reused without being
recycled (thus \"bounced\" from the hidden list). This state requires special handling
because the ViewHolder must be added to pre layout maps for animations as if it was
already there.

"
	end

	attribute 4912055 "mFlags"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4912183 "FULLUPDATE_PAYLOADS"
	  class_attribute const_attribute private explicit_type "Object"
	  init_value " Collections.EMPTY_LIST"
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4912311 "mPayloads"
	  package explicit_type "Object"
	  init_value " null"
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4912439 "mUnmodifiedPayloads"
	  package explicit_type "Object"
	  init_value " null"
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4912567 "mIsRecyclableCount"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1930807 // mScrapContainer (<unidirectional association>)
	  relation 1930807 --->
	    a role_name "mScrapContainer" init_value " null" private
	      comment " If non-null, view is currently considered scrap and may be reused for other data by the
 scrap container.
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1930807 // mScrapContainer (<unidirectional association>)
	    b parent class_ref 1074487 // Recycler
	end

	attribute 4912695 "mInChangeScrap"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Keeps whether this ViewHolder lives in Change scrap or Attached scrap
"
	end

	attribute 4912823 "mWasImportantForAccessibilityBeforeHidden"
	  private explicit_type "int"
	  init_value "
                ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_AUTO"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Saves isImportantForAccessibility value for the view item while it's in hidden state and
 marked as unimportant for accessibility.
"
	end

	classrelation 1930935 // mOwnerRecyclerView (<unidirectional association>)
	  relation 1930935 --->
	    a role_name "mOwnerRecyclerView" package
	      comment "
Is set when VH is bound from the adapter and cleaned right before it is sent to
{@link RecycledViewPool}.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1930935 // mOwnerRecyclerView (<unidirectional association>)
	    b parent class_ref 1068983 // RecyclerView
	end

	operation 28903223 "ViewHolder"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "itemView" explicit_type "View"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28903351 "flagRemovedAndOffsetPosition"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "mNewPosition" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param inout name "applyToPreLayout" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28903479 "offsetPosition"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "offset" explicit_type "int"
	    param inout name "applyToPreLayout" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28903607 "clearOldPosition"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28903735 "saveOldPosition"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28903863 "shouldIgnore"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28903991 "getPosition"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "@deprecated This method is deprecated because its meaning is ambiguous due to the async
handling of adapter updates. Please use {@link #getLayoutPosition()} or
{@link #getAdapterPosition()} depending on your use case.

@see #getLayoutPosition()
@see #getAdapterPosition()
"
	end

	operation 28904119 "getLayoutPosition"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the position of the ViewHolder in terms of the latest layout pass.
<p>
This position is mostly used by RecyclerView components to be consistent while
RecyclerView lazily processes adapter updates.
<p>
For performance and animation reasons, RecyclerView batches all adapter updates until the
next layout pass. This may cause mismatches between the Adapter position of the item and
the position it had in the latest layout calculations.
<p>
LayoutManagers should always call this method while doing calculations based on item
positions. All methods in {@link RecyclerView.LayoutManager}, {@link RecyclerView.State},
{@link RecyclerView.Recycler} that receive a position expect it to be the layout position
of the item.
<p>
If LayoutManager needs to call an external method that requires the adapter position of
the item, it can use {@link #getAdapterPosition()} or
{@link RecyclerView.Recycler#convertPreLayoutPositionToPostLayout(int)}.

@return Returns the adapter position of the ViewHolder in the latest layout pass.
@see #getAdapterPosition()
"
	end

	operation 28904247 "getAdapterPosition"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the Adapter position of the item represented by this ViewHolder.
<p>
Note that this might be different than the {@link #getLayoutPosition()} if there are
pending adapter updates but a new layout pass has not happened yet.
<p>
RecyclerView does not handle any adapter updates until the next layout traversal. This
may create temporary inconsistencies between what user sees on the screen and what
adapter contents have. This inconsistency is not important since it will be less than
16ms but it might be a problem if you want to use ViewHolder position to access the
adapter. Sometimes, you may need to get the exact adapter position to do
some actions in response to user events. In that case, you should use this method which
will calculate the Adapter position of the ViewHolder.
<p>
Note that if you've called {@link RecyclerView.Adapter#notifyDataSetChanged()}, until the
next layout pass, the return value of this method will be {@link #NO_POSITION}.

@return The adapter position of the item if it still exists in the adapter.
{@link RecyclerView#NO_POSITION} if item has been removed from the adapter,
{@link RecyclerView.Adapter#notifyDataSetChanged()} has been called after the last
layout pass or the ViewHolder has already been recycled.
"
	end

	operation 28904375 "getOldPosition"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "When LayoutManager supports animations, RecyclerView tracks 3 positions for ViewHolders
to perform animations.
<p>
If a ViewHolder was laid out in the previous onLayout call, old position will keep its
adapter index in the previous layout.

@return The previous adapter index of the Item represented by this ViewHolder or
{@link #NO_POSITION} if old position does not exists or cleared (pre-layout is
complete).
"
	end

	operation 28904503 "getItemId"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns The itemId represented by this ViewHolder.

@return The the item's id if adapter has stable ids, {@link RecyclerView#NO_ID}
otherwise
"
	end

	operation 28904631 "getItemViewType"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return The view type of this ViewHolder.
"
	end

	operation 28904759 "isScrap"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28904887 "unScrap"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905015 "wasReturnedFromScrap"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905143 "clearReturnedFromScrapFlag"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905271 "clearTmpDetachFlag"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905399 "stopIgnoring"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905527 "setScrapContainer"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "isChangeScrap" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905655 "isInvalid"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905783 "needsUpdate"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28905911 "isBound"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906039 "isRemoved"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906167 "hasAnyOfTheFlags"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906295 "isTmpDetached"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906423 "isAdapterPositionUnknown"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906551 "setFlags"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "flags" explicit_type "int"
	    param in name "mask" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906679 "addFlags"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906807 "addChangePayload"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "payload" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28906935 "createPayloadsIfNeeded"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28907063 "clearPayload"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28907191 "getUnmodifiedPayloads"
	  package explicit_return_type "List<Object>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28907319 "resetInternal"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28907447 "onEnteredHiddenState"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the child view enters the hidden state
"
	end

	operation 28907575 "onLeftHiddenState"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the child view leaves the hidden state
"
	end

	operation 28907703 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28907831 "setIsRecyclable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "recyclable" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Informs the recycler whether this item can be recycled. Views which are not
recyclable will not be reused for other items until setIsRecyclable() is
later set to true. Calls to setIsRecyclable() should always be paired (one
call to setIsRecyclabe(false) should always be matched with a later call to
setIsRecyclable(true)). Pairs of calls may be nested, as the state is internally
reference-counted.

@param recyclable Whether this item is available to be recycled. Default value
is true.
"
	end

	operation 28907959 "isRecyclable"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see {@link #setIsRecyclable(boolean)}

@return true if this item is available to be recycled, false otherwise.
"
	end

	operation 28908087 "shouldBeKeptAsChild"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether we have animations referring to this view holder or not.
This is similar to isRecyclable flag but does not check transient state.
"
	end

	operation 28908215 "doesTransientStatePreventRecycling"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return True if ViewHolder is not refenrenced by RecyclerView animations but has
transient state which will prevent it from being recycled.
"
	end

	operation 28908343 "isUpdated"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 4899511 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RecyclerView\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4899639 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4899767 "NESTED_SCROLLING_ATTRS"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {16843830 /* android.R.attr.nestedScrollingEnabled */}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4899895 "CLIP_TO_PADDING_ATTR"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {android.R.attr.clipToPadding}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4900023 "FORCE_INVALIDATE_DISPLAY_LIST"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Build.VERSION.SDK_INT == 18
            || Build.VERSION.SDK_INT == 19 || Build.VERSION.SDK_INT == 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "On Kitkat and JB MR2, there is a bug which prevents DisplayList from being invalidated if
a View is two levels deep(wrt to ViewHolder.itemView). DisplayList can be invalidated by
setting View's visibility to INVISIBLE when View is detached. On Kitkat and JB MR2, Recycler
recursively traverses itemView and invalidates display list for each ViewGroup that matches
this criteria.

"
      end

      attribute 4900151 "ALLOW_SIZE_IN_UNSPECIFIED_SPEC"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " Build.VERSION.SDK_INT >= 23"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "On M+, an unspecified measure spec may include a hint which we can use. On older platforms,
this value might be garbage. To save LayoutManagers from it, RecyclerView sets the size to
0 when mode is unspecified.

"
      end

      attribute 4900279 "DISPATCH_TEMP_DETACH"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4900407 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4900535 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4900663 "NO_POSITION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4900791 "NO_ID"
	class_attribute const_attribute public explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4900919 "INVALID_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4901047 "TOUCH_SLOP_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant for use with {@link #setScrollingTouchSlop(int)}. Indicates
that the RecyclerView should use the standard touch slop for smooth,
continuous scrolling.

"
      end

      attribute 4901175 "TOUCH_SLOP_PAGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant for use with {@link #setScrollingTouchSlop(int)}. Indicates
that the RecyclerView should use the standard touch slop for scrolling
widgets that snap to a page or other coarse-grained barrier.

"
      end

      attribute 4901303 "MAX_SCROLL_DURATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4901431 "TRACE_SCROLL_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RV Scroll\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "RecyclerView is calculating a scroll.
If there are too many of these in Systrace, some Views inside RecyclerView might be causing
it. Try to avoid using EditText, focusable views or handle them with care.

"
      end

      attribute 4901559 "TRACE_ON_LAYOUT_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RV OnLayout\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "OnLayout has been called by the View system.
If this shows up too many times in Systrace, make sure the children of RecyclerView do not
update themselves directly. This will cause a full re-layout but when it happens via the
Adapter notifyItemChanged, RecyclerView can avoid full layout calculation.

"
      end

      attribute 4901687 "TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RV FullInvalidate\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "NotifyDataSetChanged or equal has been called.
If this is taking a long time, try sending granular notify adapter changes instead of just
calling notifyDataSetChanged or setAdapter / swapAdapter. Adding stable ids to your adapter
might help.

"
      end

      attribute 4901815 "TRACE_HANDLE_ADAPTER_UPDATES_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RV PartialInvalidate\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "RecyclerView is doing a layout for partial adapter updates (we know what has changed)
If this is taking a long time, you may have dispatched too many Adapter updates causing too
many Views being rebind. Make sure all are necessary and also prefer using notify*Range
methods.

"
      end

      attribute 4901943 "TRACE_BIND_VIEW_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RV OnBindView\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "RecyclerView is rebinding a View.
If this is taking a lot of time, consider optimizing your layout or make sure you are not
doing extra operations in onBindViewHolder call.

"
      end

      attribute 4902071 "TRACE_CREATE_VIEW_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"RV CreateView\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "RecyclerView is creating a new View.
If too many of these present in Systrace:
- There might be a problem in Recycling (e.g. custom Animations that set transient state and
prevent recycling or ItemAnimator not implementing the contract properly. ({@link
> Adapter#onFailedToRecycleView(ViewHolder)})

- There might be too many item view types.
> Try merging them

- There might be too many itemChange animations and not enough space in RecyclerPool.
>Try increasing your pool size and item cache size.

"
      end

      attribute 4902199 "LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE"
	class_attribute const_attribute private explicit_type "?"
	multiplicity "[]"
	init_value "
            new Class[]{Context.class, AttributeSet.class, int.class, int.class}"
	stereotype "Class"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}>${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1074359 "RecyclerViewDataObserver"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1928631 // <generalisation>
	  relation 1928631 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1928631 // <generalisation>
	    b parent class_ref 1077431 // AdapterDataObserver
	end

	operation 28870071 "onChanged"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28870199 "onItemRangeChanged"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	    param inout name "payload" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28870327 "onItemRangeInserted"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28870455 "onItemRangeRemoved"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28870583 "onItemRangeMoved"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "fromPosition" explicit_type "int"
	    param in name "toPosition" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28870711 "triggerUpdateProcessor"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1924023 // mObserver (<unidirectional association>)
	relation 1924023 --->
	  a role_name "mObserver" init_value " new RecyclerViewDataObserver()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1924023 // mObserver (<unidirectional association>)
	  b parent class_ref 1074359 // RecyclerViewDataObserver
      end

      class 1074487 "Recycler"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1929015 // mAttachedScrap (<unidirectional association>)
	  relation 1929015 --->
	    stereotype "ArrayList"
	    a role_name "mAttachedScrap" init_value " new ArrayList<>()" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1929015 // mAttachedScrap (<unidirectional association>)
	    b parent class_ref 1073975 // ViewHolder
	end

	classrelation 1929143 // mChangedScrap (<unidirectional association>)
	  relation 1929143 --->
	    stereotype "ArrayList"
	    a role_name "mChangedScrap" init_value " null" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1929143 // mChangedScrap (<unidirectional association>)
	    b parent class_ref 1073975 // ViewHolder
	end

	classrelation 1929271 // mCachedViews (<unidirectional association>)
	  relation 1929271 --->
	    stereotype "ArrayList"
	    a role_name "mCachedViews" init_value " new ArrayList<ViewHolder>()" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1929271 // mCachedViews (<unidirectional association>)
	    b parent class_ref 1073975 // ViewHolder
	end

	classrelation 1929399 // mUnmodifiableAttachedScrap (<unidirectional association>)
	  relation 1929399 --->
	    stereotype "List"
	    a role_name "mUnmodifiableAttachedScrap" init_value " Collections.unmodifiableList(mAttachedScrap)" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1929399 // mUnmodifiableAttachedScrap (<unidirectional association>)
	    b parent class_ref 1073975 // ViewHolder
	end

	attribute 4907831 "mViewCacheMax"
	  private explicit_type "int"
	  init_value " DEFAULT_CACHE_SIZE"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1929527 // mRecyclerPool (<unidirectional association>)
	  relation 1929527 --->
	    a role_name "mRecyclerPool" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1929527 // mRecyclerPool (<unidirectional association>)
	    b parent class_ref 1077047 // RecycledViewPool
	end

	classrelation 1929655 // mViewCacheExtension (<unidirectional association>)
	  relation 1929655 --->
	    a role_name "mViewCacheExtension" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1929655 // mViewCacheExtension (<unidirectional association>)
	    b parent class_ref 1077175 // ViewCacheExtension
	end

	attribute 4907959 "DEFAULT_CACHE_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 28871991 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clear scrap views out of this recycler. Detached views contained within a
recycled view pool will remain.
"
	end

	operation 28872119 "setViewCacheSize"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "viewCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the maximum number of detached, valid views we should retain for later use.

@param viewCount Number of views to keep before sending views to the shared pool
"
	end

	operation 28872247 "getScrapList"
	  public return_type class_ref 1073975 // ViewHolder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an unmodifiable list of ViewHolders that are currently in the scrap list.

@return List of ViewHolders in the scrap list.
"
	end

	operation 28872375 "validateViewHolderForOffsetPosition"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Helper method for getViewForPosition.
<p>
Checks whether a given view holder can be used for the provided position.

@param holder ViewHolder
@return true if ViewHolder matches the provided position, false otherwise
"
	end

	operation 28872503 "bindViewToPosition"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "view" explicit_type "View"
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Binds the given View to the position. The View can be a View previously retrieved via
{@link #getViewForPosition(int)} or created by
{@link Adapter#onCreateViewHolder(ViewGroup, int)}.
<p>
Generally, a LayoutManager should acquire its views via {@link #getViewForPosition(int)}
and let the RecyclerView handle caching. This is a helper method for LayoutManager who
wants to handle its own recycling logic.
<p>
Note that, {@link #getViewForPosition(int)} already binds the View to the position so
you don't need to call this method unless you want to bind this View to another position.

@param view The view to update.
@param position The position of the item to bind to this View.
"
	end

	operation 28872631 "convertPreLayoutPositionToPostLayout"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "RecyclerView provides artificial position range (item count) in pre-layout state and
automatically maps these positions to {@link Adapter} positions when
{@link #getViewForPosition(int)} or {@link #bindViewToPosition(View, int)} is called.
<p>
Usually, LayoutManager does not need to worry about this. However, in some cases, your
LayoutManager may need to call some custom component with item positions in which
case you need the actual adapter position instead of the pre layout position. You
can use this method to convert a pre-layout position to adapter (post layout) position.
<p>
Note that if the provided position belongs to a deleted ViewHolder, this method will
return -1.
<p>
Calling this method in post-layout state returns the same value back.

@param position The pre-layout position to convert. Must be greater or equal to 0 and
                less than {@link State#getItemCount()}.
"
	end

	operation 28872759 "getViewForPosition"
	  public explicit_return_type "View"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Obtain a view initialized for the given position.

This method should be used by {@link LayoutManager} implementations to obtain
views to represent data from an {@link Adapter}.
<p>
The Recycler may reuse a scrap or detached view from a shared pool if one is
available for the correct view type. If the adapter has not indicated that the
data at the given position has changed, the Recycler will attempt to hand back
a scrap view that was previously initialized for that data without rebinding.

@param position Position to obtain a view for
@return A view representing the data at <code>position</code> from <code>adapter</code>
"
	end

	operation 28872887 "getViewForPosition"
	  package explicit_return_type "View"
	  nparams 2
	    param in name "position" explicit_type "int"
	    param inout name "dryRun" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28873015 "attachAccessibilityDelegate"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "itemView" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28873143 "invalidateDisplayListInt"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28873271 "invalidateDisplayListInt"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "viewGroup" explicit_type "ViewGroup"
	    param inout name "invalidateThis" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28873399 "recycleView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycle a detached view. The specified view will be added to a pool of views
for later rebinding and reuse.

<p>A view must be fully detached (removed from parent) before it may be recycled. If the
View is scrapped, it will be removed from scrap list.</p>

@param view Removed view for recycling
@see LayoutManager#removeAndRecycleView(View, Recycler)
"
	end

	operation 28873527 "recycleViewInternal"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Internally, use this method instead of {@link #recycleView(android.view.View)} to
catch potential bugs.
@param view
"
	end

	operation 28873655 "recycleAndClearCachedViews"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28873783 "recycleCachedViewAt"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "cachedViewIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles a cached view and removes the view from the list. Views are added to cache
if and only if they are recyclable, so this method does not check it again.
<p>
A small exception to this rule is when the view does not have an animator reference
but transient state is true (due to animations created outside ItemAnimator). In that
case, adapter may choose to recycle it. From RecyclerView's perspective, the view is
still recyclable since Adapter wants to do so.

@param cachedViewIndex The index of the view in cached views list
"
	end

	operation 28873911 "recycleViewHolderInternal"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "internal implementation checks if view is scrapped or attached and throws an exception
if so.
Public version un-scraps before calling recycle.
"
	end

	operation 28874039 "addViewHolderToRecycledViewPool"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28874167 "quickRecycleScrapView"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Used as a fast path for unscrapping and recycling a view during a bulk operation.
The caller must call {@link #clearScrap()} when it's done to update the recycler's
internal bookkeeping.
"
	end

	operation 28874295 "scrapView"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Mark an attached view as scrap.

<p>\"Scrap\" views are still attached to their parent RecyclerView but are eligible
for rebinding and reuse. Requests for a view for a given position may return a
reused or rebound scrap view instance.</p>

@param view View to scrap
"
	end

	operation 28874423 "unscrapView"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a previously scrapped view from the pool of eligible scrap.

<p>This view will no longer be eligible for reuse until re-scrapped or
until it is explicitly removed and recycled.</p>
"
	end

	operation 28874551 "getScrapCount"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28874679 "getScrapViewAt"
	  package explicit_return_type "View"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28874807 "clearScrap"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28874935 "getChangedScrapViewForPosition"
	  package return_type class_ref 1073975 // ViewHolder
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28875063 "getScrapViewForPosition"
	  package return_type class_ref 1073975 // ViewHolder
	  nparams 3
	    param in name "position" explicit_type "int"
	    param in name "type" explicit_type "int"
	    param inout name "dryRun" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a scrap view for the position. If type is not INVALID_TYPE, it also checks if
ViewHolder's type matches the provided type.

@param position Item position
@param type View type
@param dryRun  Does a dry run, finds the ViewHolder but does not remove
@return a ViewHolder that can be re-used for this position.
"
	end

	operation 28875191 "getScrapViewForId"
	  package return_type class_ref 1073975 // ViewHolder
	  nparams 3
	    param in name "id" explicit_type "long"
	    param in name "type" explicit_type "int"
	    param inout name "dryRun" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28875319 "dispatchViewRecycled"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28875447 "onAdapterChanged"
	  package explicit_return_type "void"
	  nparams 3
	    param inout name "oldAdapter" type class_ref 1075127 // Adapter
	    param inout name "newAdapter" type class_ref 1075127 // Adapter
	    param inout name "compatibleWithPrevious" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28875575 "offsetPositionRecordsForMove"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "from" explicit_type "int"
	    param in name "to" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28875703 "offsetPositionRecordsForInsert"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "insertedAt" explicit_type "int"
	    param in name "count" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28875831 "offsetPositionRecordsForRemove"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "removedFrom" explicit_type "int"
	    param in name "count" explicit_type "int"
	    param inout name "applyToPreLayout" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param removedFrom Remove start index
@param count Remove count
@param applyToPreLayout If true, changes will affect ViewHolder's pre-layout position, if
                        false, they'll be applied before the second layout pass
"
	end

	operation 28875959 "setViewCacheExtension"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "extension" type class_ref 1077175 // ViewCacheExtension
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876087 "setRecycledViewPool"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "pool" type class_ref 1077047 // RecycledViewPool
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876215 "getRecycledViewPool"
	  package return_type class_ref 1077047 // RecycledViewPool
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876343 "viewRangeUpdate"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876471 "setAdapterPositionsAsUnknown"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876599 "markKnownViewsInvalid"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876727 "clearOldPositions"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28876855 "markItemDecorInsetsDirty"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1924151 // mRecycler (<unidirectional association>)
	relation 1924151 --->
	  a role_name "mRecycler" init_value " new Recycler()" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1924151 // mRecycler (<unidirectional association>)
	  b parent class_ref 1074487 // Recycler
      end

      class 1074615 "SavedState"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 1924279 // mPendingSavedState (<unidirectional association>)
	relation 1924279 --->
	  a role_name "mPendingSavedState" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1924279 // mPendingSavedState (<unidirectional association>)
	  b parent class_ref 1074615 // SavedState
      end

      classrelation 1924407 // mAdapterHelper (<unidirectional association>)
	relation 1924407 --->
	  a role_name "mAdapterHelper" package
	    comment "
Handles adapter updates

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1924407 // mAdapterHelper (<unidirectional association>)
	  b parent class_ref 1074743 // AdapterHelper
      end

      attribute 4902327 "mClipToPadding"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Prior to L, there is no way to query this variable which is why we override the setter and
track it here.

"
      end

      attribute 4902455 "mUpdateChildViewsRunnable"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        public void run() {
            if (!mFirstLayoutComplete || isLayoutRequested()) {
                // a layout request will happen, we should not do layout here.
                return;
            }
            if (!mIsAttached) {
                requestLayout();
                // if we are not attached yet, mark us as requiring layout and skip
                return;
            }
            if (mLayoutFrozen) {
                mLayoutRequestEaten = true;
                return; //we'll process updates when ice age ends.
            }
            consumePendingUpdateOperations();
        }
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Note: this Runnable is only ever posted if:
1) We've been through first layout
2) We know we have a fixed size (mHasFixedSize)
3) We're attached

"
      end

      class 1075127 "Adapter"
	abstract visibility public 
	nformals 1
	formal name "VH" type "" explicit_default_value ""
	  extends class_ref 1073975 // ViewHolder
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1929783 // mObservable (<unidirectional association>)
	  relation 1929783 --->
	    a role_name "mObservable" init_value " new AdapterDataObservable()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1929783 // mObservable (<unidirectional association>)
	    b parent class_ref 1077559 // AdapterDataObservable
	end

	attribute 4908087 "mHasStableIds"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 28877111 "onCreateViewHolder"
	  abstract cpp_inline public explicit_return_type "VH"
	  nparams 2
	    param inout name "parent" explicit_type "ViewGroup"
	    param in name "viewType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when RecyclerView needs a new {@link ViewHolder} of the given type to represent
an item.
<p>
This new ViewHolder should be constructed with a new View that can represent the items
of the given type. You can either create a new View manually or inflate it from an XML
layout file.
<p>
The new ViewHolder will be used to display items of the adapter using
{@link #onBindViewHolder(ViewHolder, int, List)}. Since it will be re-used to display
different items in the data set, it is a good idea to cache references to sub views of
the View to avoid unnecessary {@link View#findViewById(int)} calls.

@param parent The ViewGroup into which the new View will be added after it is bound to
              an adapter position.
@param viewType The view type of the new View.

@return A new ViewHolder that holds a View of the given view type.
@see #getItemViewType(int)
@see #onBindViewHolder(ViewHolder, int)
"
	end

	operation 28877239 "onBindViewHolder"
	  abstract cpp_inline public explicit_return_type "void"
	  nparams 2
	    param inout name "holder" explicit_type "VH"
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by RecyclerView to display the data at the specified position. This method should
update the contents of the {@link ViewHolder#itemView} to reflect the item at the given
position.
<p>
Note that unlike {@link android.widget.ListView}, RecyclerView will not call this method
again if the position of the item changes in the data set unless the item itself is
invalidated or the new position cannot be determined. For this reason, you should only
use the <code>position</code> parameter while acquiring the related data item inside
this method and should not keep a copy of it. If you need the position of an item later
on (e.g. in a click listener), use {@link ViewHolder#getAdapterPosition()} which will
have the updated adapter position.

Override {@link #onBindViewHolder(ViewHolder, int, List)} instead if Adapter can
handle effcient partial bind.

@param holder The ViewHolder which should be updated to represent the contents of the
       item at the given position in the data set.
@param position The position of the item within the adapter's data set.
"
	end

	operation 28877367 "onBindViewHolder"
	  cpp_inline public explicit_return_type "void"
	  nparams 3
	    param inout name "holder" explicit_type "VH"
	    param in name "position" explicit_type "int"
	    param inout name "payloads" explicit_type "List<Object>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by RecyclerView to display the data at the specified position. This method
should update the contents of the {@link ViewHolder#itemView} to reflect the item at
the given position.
<p>
Note that unlike {@link android.widget.ListView}, RecyclerView will not call this method
again if the position of the item changes in the data set unless the item itself is
invalidated or the new position cannot be determined. For this reason, you should only
use the <code>position</code> parameter while acquiring the related data item inside
this method and should not keep a copy of it. If you need the position of an item later
on (e.g. in a click listener), use {@link ViewHolder#getAdapterPosition()} which will
have the updated adapter position.
<p>
Partial bind vs full bind:
<p>
The payloads parameter is a merge list from {@link #notifyItemChanged(int, Object)} or
{@link #notifyItemRangeChanged(int, int, Object)}.  If the payloads list is not empty,
the ViewHolder is currently bound to old data and Adapter may run an efficient partial
update using the payload info.  If the payload is empty,  Adapter must run a full bind.
Adapter should not assume that the payload passed in notify methods will be received by
onBindViewHolder().  For example when the view is not attached to the screen, the
payload in notifyItemChange() will be simply dropped.

@param holder The ViewHolder which should be updated to represent the contents of the
              item at the given position in the data set.
@param position The position of the item within the adapter's data set.
@param payloads A non-null list of merged payloads. Can be empty list if requires full
                update.
"
	end

	operation 28877495 "createViewHolder"
	  cpp_inline public explicit_return_type "VH"
	  nparams 2
	    param inout name "parent" explicit_type "ViewGroup"
	    param in name "viewType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method calls {@link #onCreateViewHolder(ViewGroup, int)} to create a new
{@link ViewHolder} and initializes some private fields to be used by RecyclerView.

@see #onCreateViewHolder(ViewGroup, int)
"
	end

	operation 28877623 "bindViewHolder"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param inout name "holder" explicit_type "VH"
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method internally calls {@link #onBindViewHolder(ViewHolder, int)} to update the
{@link ViewHolder} contents with the item at the given position and also sets up some
private fields to be used by RecyclerView.

@see #onBindViewHolder(ViewHolder, int)
"
	end

	operation 28877751 "getItemViewType"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the view type of the item at <code>position</code> for the purposes
of view recycling.

<p>The default implementation of this method returns 0, making the assumption of
a single view type for the adapter. Unlike ListView adapters, types need not
be contiguous. Consider using id resources to uniquely identify item view types.

@param position position to query
@return integer value identifying the type of the view needed to represent the item at
                <code>position</code>. Type codes need not be contiguous.
"
	end

	operation 28877879 "setHasStableIds"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "hasStableIds" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Indicates whether each item in the data set can be represented with a unique identifier
of type {@link java.lang.Long}.

@param hasStableIds Whether items in data set have unique identifiers or not.
@see #hasStableIds()
@see #getItemId(int)
"
	end

	operation 28878007 "getItemId"
	  cpp_inline public explicit_return_type "long"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the stable ID for the item at <code>position</code>. If {@link #hasStableIds()}
would return false this method should return {@link #NO_ID}. The default implementation
of this method returns {@link #NO_ID}.

@param position Adapter position to query
@return the stable ID of the item at position
"
	end

	operation 28878135 "getItemCount"
	  abstract cpp_inline public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total number of items in the data set hold by the adapter.

@return The total number of items in this adapter.
"
	end

	operation 28878263 "hasStableIds"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if this adapter publishes a unique <code>long</code> value that can
act as a key for the item at a given position in the data set. If that item is relocated
in the data set, the ID returned for that item should be the same.

@return true if this adapter's items have stable IDs
"
	end

	operation 28878391 "onViewRecycled"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "holder" explicit_type "VH"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a view created by this adapter has been recycled.

<p>A view is recycled when a {@link LayoutManager} decides that it no longer
needs to be attached to its parent {@link RecyclerView}. This can be because it has
fallen out of visibility or a set of cached views represented by views still
attached to the parent RecyclerView. If an item view has large or expensive data
bound to it such as large bitmaps, this may be a good place to release those
resources.</p>
<p>
RecyclerView calls this method right before clearing ViewHolder's internal data and
sending it to RecycledViewPool. This way, if ViewHolder was holding valid information
before being recycled, you can call {@link ViewHolder#getAdapterPosition()} to get
its adapter position.

@param holder The ViewHolder for the view being recycled
"
	end

	operation 28878519 "onFailedToRecycleView"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "holder" explicit_type "VH"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by the RecyclerView if a ViewHolder created by this Adapter cannot be recycled
due to its transient state. Upon receiving this callback, Adapter can clear the
animation(s) that effect the View's transient state and return <code>true</code> so that
the View can be recycled. Keep in mind that the View in question is already removed from
the RecyclerView.
<p>
In some cases, it is acceptable to recycle a View although it has transient state. Most
of the time, this is a case where the transient state will be cleared in
{@link #onBindViewHolder(ViewHolder, int)} call when View is rebound to a new position.
For this reason, RecyclerView leaves the decision to the Adapter and uses the return
value of this method to decide whether the View should be recycled or not.
<p>
Note that when all animations are created by {@link RecyclerView.ItemAnimator}, you
should never receive this callback because RecyclerView keeps those Views as children
until their animations are complete. This callback is useful when children of the item
views create animations which may not be easy to implement using an {@link ItemAnimator}.
<p>
You should <em>never</em> fix this issue by calling
<code>holder.itemView.setHasTransientState(false);</code> unless you've previously called
<code>holder.itemView.setHasTransientState(true);</code>. Each
<code>View.setHasTransientState(true)</code> call must be matched by a
<code>View.setHasTransientState(false)</code> call, otherwise, the state of the View
may become inconsistent. You should always prefer to end or cancel animations that are
triggering the transient state instead of handling it manually.

@param holder The ViewHolder containing the View that could not be recycled due to its
              transient state.
@return True if the View should be recycled, false otherwise. Note that if this method
returns <code>true</code>, RecyclerView <em>will ignore</em> the transient state of
the View and recycle it regardless. If this method returns <code>false</code>,
RecyclerView will check the View's transient state again before giving a final decision.
Default implementation returns false.
"
	end

	operation 28878647 "onViewAttachedToWindow"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "holder" explicit_type "VH"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a view created by this adapter has been attached to a window.

<p>This can be used as a reasonable signal that the view is about to be seen
by the user. If the adapter previously freed any resources in
{@link #onViewDetachedFromWindow(RecyclerView.ViewHolder) onViewDetachedFromWindow}
those resources should be restored here.</p>

@param holder Holder of the view being attached
"
	end

	operation 28878775 "onViewDetachedFromWindow"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "holder" explicit_type "VH"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a view created by this adapter has been detached from its window.

<p>Becoming detached from the window is not necessarily a permanent condition;
the consumer of an Adapter's views may choose to cache views offscreen while they
are not visible, attaching an detaching them as appropriate.</p>

@param holder Holder of the view being detached
"
	end

	operation 28878903 "hasObservers"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if one or more observers are attached to this adapter.

@return true if this adapter has observers
"
	end

	operation 28879031 "registerAdapterDataObserver"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "observer" type class_ref 1077431 // AdapterDataObserver
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Register a new observer to listen for data changes.

<p>The adapter may publish a variety of events describing specific changes.
Not all adapters may support all change types and some may fall back to a generic
{@link android.support.v7.widget.RecyclerView.AdapterDataObserver#onChanged()
\"something changed\"} event if more specific data is not available.</p>

<p>Components registering observers with an adapter are responsible for
{@link #unregisterAdapterDataObserver(RecyclerView.AdapterDataObserver)
unregistering} those observers when finished.</p>

@param observer Observer to register

@see #unregisterAdapterDataObserver(RecyclerView.AdapterDataObserver)
"
	end

	operation 28879159 "unregisterAdapterDataObserver"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "observer" type class_ref 1077431 // AdapterDataObserver
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Unregister an observer currently listening for data changes.

<p>The unregistered observer will no longer receive events about changes
to the adapter.</p>

@param observer Observer to unregister

@see #registerAdapterDataObserver(RecyclerView.AdapterDataObserver)
"
	end

	operation 28879287 "onAttachedToRecyclerView"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by RecyclerView when it starts observing this Adapter.
<p>
Keep in mind that same adapter may be observed by multiple RecyclerViews.

@param recyclerView The RecyclerView instance which started observing this adapter.
@see #onDetachedFromRecyclerView(RecyclerView)
"
	end

	operation 28879415 "onDetachedFromRecyclerView"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by RecyclerView when it stops observing this Adapter.

@param recyclerView The RecyclerView instance which stopped observing this adapter.
@see #onAttachedToRecyclerView(RecyclerView)
"
	end

	operation 28879543 "notifyDataSetChanged"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the data set has changed.

<p>There are two different classes of data change events, item changes and structural
changes. Item changes are when a single item has its data updated but no positional
changes have occurred. Structural changes are when items are inserted, removed or moved
within the data set.</p>

<p>This event does not specify what about the data set has changed, forcing
any observers to assume that all existing items and structure may no longer be valid.
LayoutManagers will be forced to fully rebind and relayout all visible views.</p>

<p><code>RecyclerView</code> will attempt to synthesize visible structural change events
for adapters that report that they have {@link #hasStableIds() stable IDs} when
this method is used. This can help for the purposes of animation and visual
object persistence but individual item views will still need to be rebound
and relaid out.</p>

<p>If you are writing an adapter it will always be more efficient to use the more
specific change events if you can. Rely on <code>notifyDataSetChanged()</code>
as a last resort.</p>

@see #notifyItemChanged(int)
@see #notifyItemInserted(int)
@see #notifyItemRemoved(int)
@see #notifyItemRangeChanged(int, int)
@see #notifyItemRangeInserted(int, int)
@see #notifyItemRangeRemoved(int, int)
"
	end

	operation 28879671 "notifyItemChanged"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the item at <code>position</code> has changed.
Equivalent to calling <code>notifyItemChanged(position, null);</code>.

<p>This is an item change event, not a structural change event. It indicates that any
reflection of the data at <code>position</code> is out of date and should be updated.
The item at <code>position</code> retains the same identity.</p>

@param position Position of the item that has changed

@see #notifyItemRangeChanged(int, int)
"
	end

	operation 28879799 "notifyItemChanged"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "position" explicit_type "int"
	    param inout name "payload" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the item at <code>position</code> has changed with an
optional payload object.

<p>This is an item change event, not a structural change event. It indicates that any
reflection of the data at <code>position</code> is out of date and should be updated.
The item at <code>position</code> retains the same identity.
</p>

<p>
Client can optionally pass a payload for partial change. These payloads will be merged
and may be passed to adapter's {@link #onBindViewHolder(ViewHolder, int, List)} if the
item is already represented by a ViewHolder and it will be rebound to the same
ViewHolder. A notifyItemRangeChanged() with null payload will clear all existing
payloads on that item and prevent future payload until
{@link #onBindViewHolder(ViewHolder, int, List)} is called. Adapter should not assume
that the payload will always be passed to onBindViewHolder(), e.g. when the view is not
attached, the payload will be simply dropped.

@param position Position of the item that has changed
@param payload Optional parameter, use null to identify a \"full\" update

@see #notifyItemRangeChanged(int, int)
"
	end

	operation 28879927 "notifyItemRangeChanged"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the <code>itemCount</code> items starting at
position <code>positionStart</code> have changed.
Equivalent to calling <code>notifyItemRangeChanged(position, itemCount, null);</code>.

<p>This is an item change event, not a structural change event. It indicates that
any reflection of the data in the given position range is out of date and should
be updated. The items in the given range retain the same identity.</p>

@param positionStart Position of the first item that has changed
@param itemCount Number of items that have changed

@see #notifyItemChanged(int)
"
	end

	operation 28880055 "notifyItemRangeChanged"
	  cpp_inline public explicit_return_type "void"
	  nparams 3
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	    param inout name "payload" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the <code>itemCount</code> items starting at
position<code>positionStart</code> have changed. An optional payload can be
passed to each changed item.

<p>This is an item change event, not a structural change event. It indicates that any
reflection of the data in the given position range is out of date and should be updated.
The items in the given range retain the same identity.
</p>

<p>
Client can optionally pass a payload for partial change. These payloads will be merged
and may be passed to adapter's {@link #onBindViewHolder(ViewHolder, int, List)} if the
item is already represented by a ViewHolder and it will be rebound to the same
ViewHolder. A notifyItemRangeChanged() with null payload will clear all existing
payloads on that item and prevent future payload until
{@link #onBindViewHolder(ViewHolder, int, List)} is called. Adapter should not assume
that the payload will always be passed to onBindViewHolder(), e.g. when the view is not
attached, the payload will be simply dropped.

@param positionStart Position of the first item that has changed
@param itemCount Number of items that have changed
@param payload  Optional parameter, use null to identify a \"full\" update

@see #notifyItemChanged(int)
"
	end

	operation 28880183 "notifyItemInserted"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the item reflected at <code>position</code>
has been newly inserted. The item previously at <code>position</code> is now at
position <code>position + 1</code>.

<p>This is a structural change event. Representations of other existing items in the
data set are still considered up to date and will not be rebound, though their
positions may be altered.</p>

@param position Position of the newly inserted item in the data set

@see #notifyItemRangeInserted(int, int)
"
	end

	operation 28880311 "notifyItemMoved"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "fromPosition" explicit_type "int"
	    param in name "toPosition" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the item reflected at <code>fromPosition</code>
has been moved to <code>toPosition</code>.

<p>This is a structural change event. Representations of other existing items in the
data set are still considered up to date and will not be rebound, though their
positions may be altered.</p>

@param fromPosition Previous position of the item.
@param toPosition New position of the item.
"
	end

	operation 28880439 "notifyItemRangeInserted"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the currently reflected <code>itemCount</code>
items starting at <code>positionStart</code> have been newly inserted. The items
previously located at <code>positionStart</code> and beyond can now be found starting
at position <code>positionStart + itemCount</code>.

<p>This is a structural change event. Representations of other existing items in the
data set are still considered up to date and will not be rebound, though their positions
may be altered.</p>

@param positionStart Position of the first item that was inserted
@param itemCount Number of items inserted

@see #notifyItemInserted(int)
"
	end

	operation 28880567 "notifyItemRemoved"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the item previously located at <code>position</code>
has been removed from the data set. The items previously located at and after
<code>position</code> may now be found at <code>oldPosition - 1</code>.

<p>This is a structural change event. Representations of other existing items in the
data set are still considered up to date and will not be rebound, though their positions
may be altered.</p>

@param position Position of the item that has now been removed

@see #notifyItemRangeRemoved(int, int)
"
	end

	operation 28880695 "notifyItemRangeRemoved"
	  cpp_inline public explicit_return_type "void"
	  nparams 2
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify any registered observers that the <code>itemCount</code> items previously
located at <code>positionStart</code> have been removed from the data set. The items
previously located at and after <code>positionStart + itemCount</code> may now be found
at <code>oldPosition - itemCount</code>.

<p>This is a structural change event. Representations of other existing items in the data
set are still considered up to date and will not be rebound, though their positions
may be altered.</p>

@param positionStart Previous position of the first item that was removed
@param itemCount Number of items removed from the data set
"
	end
      end

      classrelation 1925175 // mAdapter (<unidirectional association>)
	relation 1925175 --->
	  a role_name "mAdapter" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1925175 // mAdapter (<unidirectional association>)
	  b parent class_ref 1075127 // Adapter
      end

      class 1075255 "LayoutManager"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1930039 // mRecyclerView (<unidirectional association>)
	  relation 1930039 --->
	    a role_name "mRecyclerView" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1930039 // mRecyclerView (<unidirectional association>)
	    b parent class_ref 1068983 // RecyclerView
	end

	classrelation 1930167 // mSmoothScroller (<unidirectional association>)
	  relation 1930167 --->
	    a role_name "mSmoothScroller" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      java_annotation "@Nullable
"
	      classrelation_ref 1930167 // mSmoothScroller (<unidirectional association>)
	    b parent class_ref 1077687 // SmoothScroller
	end

	attribute 4908215 "mRequestedSimpleAnimations"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4908343 "mIsAttachedToWindow"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4908471 "mAutoMeasure"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4908599 "mMeasurementCacheEnabled"
	  private explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "LayoutManager has its own more strict measurement cache to avoid re-measuring a child
if the space that will be given to it is already larger than what it has measured before.

"
	end

	attribute 4908727 "mWidthMode"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "These measure specs might be the measure specs that were passed into RecyclerView's
onMeasure method OR fake measure specs created by the RecyclerView.
For example, when a layout is run, RecyclerView always sets these specs to be
EXACTLY because a LayoutManager cannot resize RecyclerView during a layout pass.
<p>
Also, to be able to use the hint in unspecified measure specs, RecyclerView checks the
API level and sets the size to 0 pre-M to avoid any issue that might be caused by
corrupt values. Older platforms have no responsibility to provide a size if they set
mode to unspecified.

"
	end

	attribute 4908855 "mHeightMode"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "These measure specs might be the measure specs that were passed into RecyclerView's
onMeasure method OR fake measure specs created by the RecyclerView.
For example, when a layout is run, RecyclerView always sets these specs to be
EXACTLY because a LayoutManager cannot resize RecyclerView during a layout pass.
<p>
Also, to be able to use the hint in unspecified measure specs, RecyclerView checks the
API level and sets the size to 0 pre-M to avoid any issue that might be caused by
corrupt values. Older platforms have no responsibility to provide a size if they set
mode to unspecified.

"
	end

	attribute 4908983 "mWidth"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4909111 "mHeight"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 28881079 "setRecyclerView"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28881207 "setMeasureSpecs"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "wSpec" explicit_type "int"
	    param in name "hSpec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28881335 "setMeasuredDimensionFromChildren"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "widthSpec" explicit_type "int"
	    param in name "heightSpec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called after a layout is calculated during a measure pass when using auto-measure.
<p>
It simply traverses all children to calculate a bounding box then calls
{@link #setMeasuredDimension(Rect, int, int)}. LayoutManagers can override that method
if they need to handle the bounding box differently.
<p>
For example, GridLayoutManager override that method to ensure that even if a column is
empty, the GridLayoutManager still measures wide enough to include it.

@param widthSpec The widthSpec that was passing into RecyclerView's onMeasure
@param heightSpec The heightSpec that was passing into RecyclerView's onMeasure
"
	end

	operation 28881463 "setMeasuredDimension"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "childrenBounds" explicit_type "Rect"
	    param in name "wSpec" explicit_type "int"
	    param in name "hSpec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the measured dimensions from the given bounding box of the children and the
measurement specs that were passed into {@link RecyclerView#onMeasure(int, int)}. It is
called after the RecyclerView calls
{@link LayoutManager#onLayoutChildren(Recycler, State)} during a measurement pass.
<p>
This method should call {@link #setMeasuredDimension(int, int)}.
<p>
The default implementation adds the RecyclerView's padding to the given bounding box
then caps the value to be within the given measurement specs.
<p>
This method is only called if the LayoutManager opted into the auto measurement API.

@param childrenBounds The bounding box of all children
@param wSpec The widthMeasureSpec that was passed into the RecyclerView.
@param hSpec The heightMeasureSpec that was passed into the RecyclerView.

@see #setAutoMeasureEnabled(boolean)
"
	end

	operation 28881591 "requestLayout"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calls {@code RecyclerView#requestLayout} on the underlying RecyclerView
"
	end

	operation 28881719 "assertInLayoutOrScroll"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "message" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks if RecyclerView is in the middle of a layout or scroll and throws an
{@link IllegalStateException} if it <b>is not</b>.

@param message The message for the exception. Can be null.
@see #assertNotInLayoutOrScroll(String)
"
	end

	operation 28881847 "chooseSize"
	  class_operation public explicit_return_type "int"
	  nparams 3
	    param in name "spec" explicit_type "int"
	    param in name "desired" explicit_type "int"
	    param in name "min" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Chooses a size from the given specs and parameters that is closest to the desired size
and also complies with the spec.

@param spec The measureSpec
@param desired The preferred measurement
@param min The minimum value

@return A size that fits to the given specs
"
	end

	operation 28881975 "assertNotInLayoutOrScroll"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "message" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks if RecyclerView is in the middle of a layout or scroll and throws an
{@link IllegalStateException} if it <b>is</b>.

@param message The message for the exception. Can be null.
@see #assertInLayoutOrScroll(String)
"
	end

	operation 28882103 "setAutoMeasureEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Defines whether the layout should be measured by the RecyclerView or the LayoutManager
wants to handle the layout measurements itself.
<p>
This method is usually called by the LayoutManager with value {@code true} if it wants
to support WRAP_CONTENT. If you are using a public LayoutManager but want to customize
the measurement logic, you can call this method with {@code false} and override
{@link LayoutManager#onMeasure(int, int)} to implement your custom measurement logic.
<p>
AutoMeasure is a convenience mechanism for LayoutManagers to easily wrap their content or
handle various specs provided by the RecyclerView's parent.
It works by calling {@link LayoutManager#onLayoutChildren(Recycler, State)} during an
{@link RecyclerView#onMeasure(int, int)} call, then calculating desired dimensions based
on children's positions. It does this while supporting all existing animation
capabilities of the RecyclerView.
<p>
AutoMeasure works as follows:
<ol>
<li>LayoutManager should call {@code setAutoMeasureEnabled(true)} to enable it. All of
the framework LayoutManagers use {@code auto-measure}.</li>
<li>When {@link RecyclerView#onMeasure(int, int)} is called, if the provided specs are
exact, RecyclerView will only call LayoutManager's {@code onMeasure} and return without
doing any layout calculation.</li>
<li>If one of the layout specs is not {@code EXACT}, the RecyclerView will start the
layout process in {@code onMeasure} call. It will process all pending Adapter updates and
decide whether to run a predictive layout or not. If it decides to do so, it will first
call {@link #onLayoutChildren(Recycler, State)} with {@link State#isPreLayout()} set to
{@code true}. At this stage, {@link #getWidth()} and {@link #getHeight()} will still
return the width and height of the RecyclerView as of the last layout calculation.
<p>
After handling the predictive case, RecyclerView will call
{@link #onLayoutChildren(Recycler, State)} with {@link State#isMeasuring()} set to
{@code true} and {@link State#isPreLayout()} set to {@code false}. The LayoutManager can
access the measurement specs via {@link #getHeight()}, {@link #getHeightMode()},
{@link #getWidth()} and {@link #getWidthMode()}.</li>
<li>After the layout calculation, RecyclerView sets the measured width & height by
calculating the bounding box for the children (+ RecyclerView's padding). The
LayoutManagers can override {@link #setMeasuredDimension(Rect, int, int)} to choose
different values. For instance, GridLayoutManager overrides this value to handle the case
where if it is vertical and has 3 columns but only 2 items, it should still measure its
width to fit 3 items, not 2.</li>
<li>Any following on measure call to the RecyclerView will run
{@link #onLayoutChildren(Recycler, State)} with {@link State#isMeasuring()} set to
{@code true} and {@link State#isPreLayout()} set to {@code false}. RecyclerView will
take care of which views are actually added / removed / moved / changed for animations so
that the LayoutManager should not worry about them and handle each
{@link #onLayoutChildren(Recycler, State)} call as if it is the last one.
</li>
<li>When measure is complete and RecyclerView's
{@link #onLayout(boolean, int, int, int, int)} method is called, RecyclerView checks
whether it already did layout calculations during the measure pass and if so, it re-uses
that information. It may still decide to call {@link #onLayoutChildren(Recycler, State)}
if the last measure spec was different from the final dimensions or adapter contents
have changed between the measure call and the layout call.</li>
<li>Finally, animations are calculated and run as usual.</li>
</ol>

@param enabled <code>True</code> if the Layout should be measured by the
                            RecyclerView, <code>false</code> if the LayoutManager wants
                            to measure itself.

@see #setMeasuredDimension(Rect, int, int)
@see #isAutoMeasureEnabled()
"
	end

	operation 28882231 "isAutoMeasureEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether the LayoutManager uses the automatic measurement API or not.

@return <code>True</code> if the LayoutManager is measured by the RecyclerView or
<code>false</code> if it measures itself.

@see #setAutoMeasureEnabled(boolean)
"
	end

	operation 28882359 "supportsPredictiveItemAnimations"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether this LayoutManager supports automatic item animations.
A LayoutManager wishing to support item animations should obey certain
rules as outlined in {@link #onLayoutChildren(Recycler, State)}.
The default return value is <code>false</code>, so subclasses of LayoutManager
will not get predictive item animations by default.

<p>Whether item animations are enabled in a RecyclerView is determined both
by the return value from this method and the
{@link RecyclerView#setItemAnimator(ItemAnimator) ItemAnimator} set on the
RecyclerView itself. If the RecyclerView has a non-null ItemAnimator but this
method returns false, then simple item animations will be enabled, in which
views that are moving onto or off of the screen are simply faded in/out. If
the RecyclerView has a non-null ItemAnimator and this method returns true,
then there will be two calls to {@link #onLayoutChildren(Recycler, State)} to
setup up the information needed to more intelligently predict where appearing
and disappearing views should be animated from/to.</p>

@return true if predictive item animations should be enabled, false otherwise
"
	end

	operation 28882487 "dispatchAttachedToWindow"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "view" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28882615 "dispatchDetachedFromWindow"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "view" type class_ref 1068983 // RecyclerView
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28882743 "isAttachedToWindow"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether LayoutManager is currently attached to a RecyclerView which is attached
to a window.

@return True if this LayoutManager is controlling a RecyclerView and the RecyclerView
is attached to window.
"
	end

	operation 28882871 "postOnAnimation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "action" explicit_type "Runnable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Causes the Runnable to execute on the next animation time step.
The runnable will be run on the user interface thread.
<p>
Calling this method when LayoutManager is not attached to a RecyclerView has no effect.

@param action The Runnable that will be executed.

@see #removeCallbacks
"
	end

	operation 28882999 "removeCallbacks"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "action" explicit_type "Runnable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the specified Runnable from the message queue.
<p>
Calling this method when LayoutManager is not attached to a RecyclerView has no effect.

@param action The Runnable to remove from the message handling queue

@return true if RecyclerView could ask the Handler to remove the Runnable,
        false otherwise. When the returned value is true, the Runnable
        may or may not have been actually removed from the message queue
        (for instance, if the Runnable was not in the queue already.)

@see #postOnAnimation
"
	end

	operation 28883127 "onAttachedToWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@CallSuper
"
	  
	  
	  
	  comment "Called when this LayoutManager is both attached to a RecyclerView and that RecyclerView
is attached to a window.
<p>
If the RecyclerView is re-attached with the same LayoutManager and Adapter, it may not
call {@link #onLayoutChildren(Recycler, State)} if nothing has changed and a layout was
not requested on the RecyclerView while it was detached.
<p>
Subclass implementations should always call through to the superclass implementation.

@param view The RecyclerView this LayoutManager is bound to

@see #onDetachedFromWindow(RecyclerView, Recycler)
"
	end

	operation 28883255 "onDetachedFromWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "@deprecated
override {@link #onDetachedFromWindow(RecyclerView, Recycler)}
"
	end

	operation 28883383 "onDetachedFromWindow"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "view" type class_ref 1068983 // RecyclerView
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@CallSuper
"
	  
	  
	  
	  comment "Called when this LayoutManager is detached from its parent RecyclerView or when
its parent RecyclerView is detached from its window.
<p>
LayoutManager should clear all of its View references as another LayoutManager might be
assigned to the RecyclerView.
<p>
If the RecyclerView is re-attached with the same LayoutManager and Adapter, it may not
call {@link #onLayoutChildren(Recycler, State)} if nothing has changed and a layout was
not requested on the RecyclerView while it was detached.
<p>
If your LayoutManager has View references that it cleans in on-detach, it should also
call {@link RecyclerView#requestLayout()} to ensure that it is re-laid out when
RecyclerView is re-attached.
<p>
Subclass implementations should always call through to the superclass implementation.

@param view The RecyclerView this LayoutManager is bound to
@param recycler The recycler to use if you prefer to recycle your children instead of
                keeping them around.

@see #onAttachedToWindow(RecyclerView)
"
	end

	operation 28883511 "getClipToPadding"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Check if the RecyclerView is configured to clip child views to its padding.

@return true if this RecyclerView clips children to its padding, false otherwise
"
	end

	operation 28883639 "onLayoutChildren"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Lay out all relevant child views from the given adapter.

The LayoutManager is in charge of the behavior of item animations. By default,
RecyclerView has a non-null {@link #getItemAnimator() ItemAnimator}, and simple
item animations are enabled. This means that add/remove operations on the
adapter will result in animations to add new or appearing items, removed or
disappearing items, and moved items. If a LayoutManager returns false from
{@link #supportsPredictiveItemAnimations()}, which is the default, and runs a
normal layout operation during {@link #onLayoutChildren(Recycler, State)}, the
RecyclerView will have enough information to run those animations in a simple
way. For example, the default ItemAnimator, {@link DefaultItemAnimator}, will
simply fade views in and out, whether they are actually added/removed or whether
they are moved on or off the screen due to other add/remove operations.

<p>A LayoutManager wanting a better item animation experience, where items can be
animated onto and off of the screen according to where the items exist when they
are not on screen, then the LayoutManager should return true from
{@link #supportsPredictiveItemAnimations()} and add additional logic to
{@link #onLayoutChildren(Recycler, State)}. Supporting predictive animations
means that {@link #onLayoutChildren(Recycler, State)} will be called twice;
once as a \"pre\" layout step to determine where items would have been prior to
a real layout, and again to do the \"real\" layout. In the pre-layout phase,
items will remember their pre-layout positions to allow them to be laid out
appropriately. Also, {@link LayoutParams#isItemRemoved() removed} items will
be returned from the scrap to help determine correct placement of other items.
These removed items should not be added to the child list, but should be used
to help calculate correct positioning of other views, including views that
were not previously onscreen (referred to as APPEARING views), but whose
pre-layout offscreen position can be determined given the extra
information about the pre-layout removed views.</p>

<p>The second layout pass is the real layout in which only non-removed views
will be used. The only additional requirement during this pass is, if
{@link #supportsPredictiveItemAnimations()} returns true, to note which
views exist in the child list prior to layout and which are not there after
layout (referred to as DISAPPEARING views), and to position/layout those views
appropriately, without regard to the actual bounds of the RecyclerView. This allows
the animation system to know the location to which to animate these disappearing
views.</p>

<p>The default LayoutManager implementations for RecyclerView handle all of these
requirements for animations already. Clients of RecyclerView can either use one
of these layout managers directly or look at their implementations of
onLayoutChildren() to see how they account for the APPEARING and
DISAPPEARING views.</p>

@param recycler         Recycler to use for fetching potentially cached views for a
                        position
@param state            Transient state of RecyclerView
"
	end

	operation 28883767 "onLayoutCompleted"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called after a full layout calculation is finished. The layout calculation may include
multiple {@link #onLayoutChildren(Recycler, State)} calls due to animations or
layout measurement but it will include only one {@link #onLayoutCompleted(State)} call.
This method will be called at the end of {@link View#layout(int, int, int, int)} call.
<p>
This is a good place for the LayoutManager to do some cleanup like pending scroll
position, saved state etc.

@param state Transient state of RecyclerView
"
	end

	operation 28883895 "generateDefaultLayoutParams"
	  abstract public explicit_return_type "LayoutParams"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a default <code>LayoutParams</code> object for a child of the RecyclerView.

<p>LayoutManagers will often want to use a custom <code>LayoutParams</code> type
to store extra information specific to the layout. Client code should subclass
{@link RecyclerView.LayoutParams} for this purpose.</p>

<p><em>Important:</em> if you use your own custom <code>LayoutParams</code> type
you must also override
{@link #checkLayoutParams(LayoutParams)},
{@link #generateLayoutParams(android.view.ViewGroup.LayoutParams)} and
{@link #generateLayoutParams(android.content.Context, android.util.AttributeSet)}.</p>

@return A new LayoutParams for a child view
"
	end

	operation 28884023 "checkLayoutParams"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "lp" explicit_type "LayoutParams"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines the validity of the supplied LayoutParams object.

<p>This should check to make sure that the object is of the correct type
and all values are within acceptable ranges. The default implementation
returns <code>true</code> for non-null params.</p>

@param lp LayoutParams object to check
@return true if this LayoutParams object is valid, false otherwise
"
	end

	operation 28884151 "generateLayoutParams"
	  public explicit_return_type "LayoutParams"
	  nparams 1
	    param inout name "lp" explicit_type "LayoutParams"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a LayoutParams object suitable for this LayoutManager, copying relevant
values from the supplied LayoutParams object if possible.

<p><em>Important:</em> if you use your own custom <code>LayoutParams</code> type
you must also override
{@link #checkLayoutParams(LayoutParams)},
{@link #generateLayoutParams(android.view.ViewGroup.LayoutParams)} and
{@link #generateLayoutParams(android.content.Context, android.util.AttributeSet)}.</p>

@param lp Source LayoutParams object to copy values from
@return a new LayoutParams object
"
	end

	operation 28884279 "generateLayoutParams"
	  public explicit_return_type "LayoutParams"
	  nparams 2
	    param inout name "c" explicit_type "Context"
	    param inout name "attrs" explicit_type "AttributeSet"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a LayoutParams object suitable for this LayoutManager from
an inflated layout resource.

<p><em>Important:</em> if you use your own custom <code>LayoutParams</code> type
you must also override
{@link #checkLayoutParams(LayoutParams)},
{@link #generateLayoutParams(android.view.ViewGroup.LayoutParams)} and
{@link #generateLayoutParams(android.content.Context, android.util.AttributeSet)}.</p>

@param c Context for obtaining styled attributes
@param attrs AttributeSet describing the supplied arguments
@return a new LayoutParams object
"
	end

	operation 28884407 "scrollHorizontallyBy"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "dx" explicit_type "int"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Scroll horizontally by dx pixels in screen coordinates and return the distance traveled.
The default implementation does nothing and returns 0.

@param dx            distance to scroll by in pixels. X increases as scroll position
                     approaches the right.
@param recycler      Recycler to use for fetching potentially cached views for a
                     position
@param state         Transient state of RecyclerView
@return The actual distance scrolled. The return value will be negative if dx was
negative and scrolling proceeeded in that direction.
<code>Math.abs(result)</code> may be less than dx if a boundary was reached.
"
	end

	operation 28884535 "scrollVerticallyBy"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "dy" explicit_type "int"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Scroll vertically by dy pixels in screen coordinates and return the distance traveled.
The default implementation does nothing and returns 0.

@param dy            distance to scroll in pixels. Y increases as scroll position
                     approaches the bottom.
@param recycler      Recycler to use for fetching potentially cached views for a
                     position
@param state         Transient state of RecyclerView
@return The actual distance scrolled. The return value will be negative if dy was
negative and scrolling proceeeded in that direction.
<code>Math.abs(result)</code> may be less than dy if a boundary was reached.
"
	end

	operation 28884663 "canScrollHorizontally"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Query if horizontal scrolling is currently supported. The default implementation
returns false.

@return True if this LayoutManager can scroll the current contents horizontally
"
	end

	operation 28884791 "canScrollVertically"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Query if vertical scrolling is currently supported. The default implementation
returns false.

@return True if this LayoutManager can scroll the current contents vertically
"
	end

	operation 28884919 "scrollToPosition"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Scroll to the specified adapter position.

Actual position of the item on the screen depends on the LayoutManager implementation.
@param position Scroll to this adapter position.
"
	end

	operation 28885047 "smoothScrollToPosition"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param inout name "state" type class_ref 1076151 // State
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Smooth scroll to the specified adapter position.</p>
<p>To support smooth scrolling, override this method, create your {@link SmoothScroller}
instance and call {@link #startSmoothScroll(SmoothScroller)}.
</p>
@param recyclerView The RecyclerView to which this layout manager is attached
@param state    Current State of RecyclerView
@param position Scroll to this adapter position.
"
	end

	operation 28885175 "startSmoothScroll"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "smoothScroller" type class_ref 1077687 // SmoothScroller
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Starts a smooth scroll using the provided SmoothScroller.</p>
<p>Calling this method will cancel any previous smooth scroll request.</p>
@param smoothScroller Unstance which defines how smooth scroll should be animated
"
	end

	operation 28885303 "isSmoothScrolling"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return true if RecycylerView is currently in the state of smooth scrolling.
"
	end

	operation 28885431 "getLayoutDirection"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the resolved layout direction for this RecyclerView.

@return {@link android.support.v4.view.ViewCompat#LAYOUT_DIRECTION_RTL} if the layout
direction is RTL or returns
{@link android.support.v4.view.ViewCompat#LAYOUT_DIRECTION_LTR} if the layout direction
is not RTL.
"
	end

	operation 28885559 "endAnimation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Ends all animations on the view created by the {@link ItemAnimator}.

@param view The View for which the animations should be ended.
@see RecyclerView.ItemAnimator#endAnimations()
"
	end

	operation 28885687 "addDisappearingView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "To be called only during {@link #onLayoutChildren(Recycler, State)} to add a view
to the layout that is known to be going away, either because it has been
{@link Adapter#notifyItemRemoved(int) removed} or because it is actually not in the
visible portion of the container but is being laid out in order to inform RecyclerView
in how to animate the item out of view.
<p>
Views added via this method are going to be invisible to LayoutManager after the
dispatchLayout pass is complete. They cannot be retrieved via {@link #getChildAt(int)}
or won't be included in {@link #getChildCount()} method.

@param child View to add and then remove with animation.
"
	end

	operation 28885815 "addDisappearingView"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "child" explicit_type "View"
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "To be called only during {@link #onLayoutChildren(Recycler, State)} to add a view
to the layout that is known to be going away, either because it has been
{@link Adapter#notifyItemRemoved(int) removed} or because it is actually not in the
visible portion of the container but is being laid out in order to inform RecyclerView
in how to animate the item out of view.
<p>
Views added via this method are going to be invisible to LayoutManager after the
dispatchLayout pass is complete. They cannot be retrieved via {@link #getChildAt(int)}
or won't be included in {@link #getChildCount()} method.

@param child View to add and then remove with animation.
@param index Index of the view.
"
	end

	operation 28885943 "addView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a view to the currently attached RecyclerView if needed. LayoutManagers should
use this method to add views obtained from a {@link Recycler} using
{@link Recycler#getViewForPosition(int)}.

@param child View to add
"
	end

	operation 28886071 "addView"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "child" explicit_type "View"
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a view to the currently attached RecyclerView if needed. LayoutManagers should
use this method to add views obtained from a {@link Recycler} using
{@link Recycler#getViewForPosition(int)}.

@param child View to add
@param index Index to add child at
"
	end

	operation 28886199 "addViewInt"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "child" explicit_type "View"
	    param in name "index" explicit_type "int"
	    param inout name "disappearing" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28886327 "removeView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a view from the currently attached RecyclerView if needed. LayoutManagers should
use this method to completely remove a child view that is no longer needed.
LayoutManagers should strongly consider recycling removed views using
{@link Recycler#recycleView(android.view.View)}.

@param child View to remove
"
	end

	operation 28886455 "removeViewAt"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a view from the currently attached RecyclerView if needed. LayoutManagers should
use this method to completely remove a child view that is no longer needed.
LayoutManagers should strongly consider recycling removed views using
{@link Recycler#recycleView(android.view.View)}.

@param index Index of the child view to remove
"
	end

	operation 28886583 "removeAllViews"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove all views from the currently attached RecyclerView. This will not recycle
any of the affected views; the LayoutManager is responsible for doing so if desired.
"
	end

	operation 28886711 "getBaseline"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns offset of the RecyclerView's text baseline from the its top boundary.

@return The offset of the RecyclerView's text baseline from the its top boundary; -1 if
there is no baseline.
"
	end

	operation 28886839 "getPosition"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the adapter position of the item represented by the given View. This does not
contain any adapter changes that might have happened after the last layout.

@param view The view to query
@return The adapter position of the item which is rendered by this View.
"
	end

	operation 28886967 "getItemViewType"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the View type defined by the adapter.

@param view The view to query
@return The type of the view assigned by the adapter.
"
	end

	operation 28887095 "findContainingItemView"
	  public explicit_return_type "View"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Nullable
"
	  
	  
	  
	  comment "Traverses the ancestors of the given view and returns the item view that contains it
and also a direct child of the LayoutManager.
<p>
Note that this method may return null if the view is a child of the RecyclerView but
not a child of the LayoutManager (e.g. running a disappear animation).

@param view The view that is a descendant of the LayoutManager.

@return The direct child of the LayoutManager which contains the given view or null if
the provided view is not a descendant of this LayoutManager.

@see RecyclerView#getChildViewHolder(View)
@see RecyclerView#findContainingViewHolder(View)
"
	end

	operation 28887223 "findViewByPosition"
	  public explicit_return_type "View"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Finds the view which represents the given adapter position.
<p>
This method traverses each child since it has no information about child order.
Override this method to improve performance if your LayoutManager keeps data about
child views.
<p>
If a view is ignored via {@link #ignoreView(View)}, it is also ignored by this method.

@param position Position of the item in adapter
@return The child view that represents the given position or null if the position is not
laid out
"
	end

	operation 28887351 "detachView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Temporarily detach a child view.

<p>LayoutManagers may want to perform a lightweight detach operation to rearrange
views currently attached to the RecyclerView. Generally LayoutManager implementations
will want to use {@link #detachAndScrapView(android.view.View, RecyclerView.Recycler)}
so that the detached view may be rebound and reused.</p>

<p>If a LayoutManager uses this method to detach a view, it <em>must</em>
{@link #attachView(android.view.View, int, RecyclerView.LayoutParams) reattach}
or {@link #removeDetachedView(android.view.View) fully remove} the detached view
before the LayoutManager entry point method called by RecyclerView returns.</p>

@param child Child to detach
"
	end

	operation 28887479 "detachViewAt"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Temporarily detach a child view.

<p>LayoutManagers may want to perform a lightweight detach operation to rearrange
views currently attached to the RecyclerView. Generally LayoutManager implementations
will want to use {@link #detachAndScrapView(android.view.View, RecyclerView.Recycler)}
so that the detached view may be rebound and reused.</p>

<p>If a LayoutManager uses this method to detach a view, it <em>must</em>
{@link #attachView(android.view.View, int, RecyclerView.LayoutParams) reattach}
or {@link #removeDetachedView(android.view.View) fully remove} the detached view
before the LayoutManager entry point method called by RecyclerView returns.</p>

@param index Index of the child to detach
"
	end

	operation 28887607 "detachViewInternal"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28887735 "attachView"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "child" explicit_type "View"
	    param in name "index" explicit_type "int"
	    param inout name "lp" explicit_type "LayoutParams"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Reattach a previously {@link #detachView(android.view.View) detached} view.
This method should not be used to reattach views that were previously
{@link #detachAndScrapView(android.view.View, RecyclerView.Recycler)}  scrapped}.

@param child Child to reattach
@param index Intended child index for child
@param lp LayoutParams for child
"
	end

	operation 28887863 "attachView"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "child" explicit_type "View"
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Reattach a previously {@link #detachView(android.view.View) detached} view.
This method should not be used to reattach views that were previously
{@link #detachAndScrapView(android.view.View, RecyclerView.Recycler)}  scrapped}.

@param child Child to reattach
@param index Intended child index for child
"
	end

	operation 28887991 "attachView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Reattach a previously {@link #detachView(android.view.View) detached} view.
This method should not be used to reattach views that were previously
{@link #detachAndScrapView(android.view.View, RecyclerView.Recycler)}  scrapped}.

@param child Child to reattach
"
	end

	operation 28888119 "removeDetachedView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Finish removing a view that was previously temporarily
{@link #detachView(android.view.View) detached}.

@param child Detached child to remove
"
	end

	operation 28888247 "moveView"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Moves a View from one position to another.

@param fromIndex The View's initial index
@param toIndex The View's target index
"
	end

	operation 28888375 "detachAndScrapView"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "child" explicit_type "View"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Detach a child view and add it to a {@link Recycler Recycler's} scrap heap.

<p>Scrapping a view allows it to be rebound and reused to show updated or
different data.</p>

@param child Child to detach and scrap
@param recycler Recycler to deposit the new scrap view into
"
	end

	operation 28888503 "detachAndScrapViewAt"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Detach a child view and add it to a {@link Recycler Recycler's} scrap heap.

<p>Scrapping a view allows it to be rebound and reused to show updated or
different data.</p>

@param index Index of child to detach and scrap
@param recycler Recycler to deposit the new scrap view into
"
	end

	operation 28888631 "removeAndRecycleView"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "child" explicit_type "View"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a child view and recycle it using the given Recycler.

@param child Child to remove and recycle
@param recycler Recycler to use to recycle child
"
	end

	operation 28888759 "removeAndRecycleViewAt"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a child view and recycle it using the given Recycler.

@param index Index of child to remove and recycle
@param recycler Recycler to use to recycle child
"
	end

	operation 28888887 "getChildCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the current number of child views attached to the parent RecyclerView.
This does not include child views that were temporarily detached and/or scrapped.

@return Number of attached children
"
	end

	operation 28889015 "getChildAt"
	  public explicit_return_type "View"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the child view at the given index
@param index Index of child to return
@return Child view at index
"
	end

	operation 28889143 "getWidthMode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the width measurement spec mode of the RecyclerView.
<p>
This value is set only if the LayoutManager opts into the auto measure api via
{@link #setAutoMeasureEnabled(boolean)}.
<p>
When RecyclerView is running a layout, this value is always set to
{@link View.MeasureSpec#EXACTLY} even if it was measured with a different spec mode.

@return Width measure spec mode.

@see View.MeasureSpec#getMode(int)
@see View#onMeasure(int, int)
"
	end

	operation 28889271 "getHeightMode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the height measurement spec mode of the RecyclerView.
<p>
This value is set only if the LayoutManager opts into the auto measure api via
{@link #setAutoMeasureEnabled(boolean)}.
<p>
When RecyclerView is running a layout, this value is always set to
{@link View.MeasureSpec#EXACTLY} even if it was measured with a different spec mode.

@return Height measure spec mode.

@see View.MeasureSpec#getMode(int)
@see View#onMeasure(int, int)
"
	end

	operation 28889399 "getWidth"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the width of the parent RecyclerView

@return Width in pixels
"
	end

	operation 28889527 "getHeight"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the height of the parent RecyclerView

@return Height in pixels
"
	end

	operation 28889655 "getPaddingLeft"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the left padding of the parent RecyclerView

@return Padding in pixels
"
	end

	operation 28889783 "getPaddingTop"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the top padding of the parent RecyclerView

@return Padding in pixels
"
	end

	operation 28889911 "getPaddingRight"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the right padding of the parent RecyclerView

@return Padding in pixels
"
	end

	operation 28890039 "getPaddingBottom"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the bottom padding of the parent RecyclerView

@return Padding in pixels
"
	end

	operation 28890167 "getPaddingStart"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the start padding of the parent RecyclerView

@return Padding in pixels
"
	end

	operation 28890295 "getPaddingEnd"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the end padding of the parent RecyclerView

@return Padding in pixels
"
	end

	operation 28890423 "isFocused"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the RecyclerView this LayoutManager is bound to has focus.

@return True if the RecyclerView has focus, false otherwise.
@see View#isFocused()
"
	end

	operation 28890551 "hasFocus"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the RecyclerView this LayoutManager is bound to has or contains focus.

@return true if the RecyclerView has or contains focus
@see View#hasFocus()
"
	end

	operation 28890679 "getFocusedChild"
	  public explicit_return_type "View"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the item View which has or contains focus.

@return A direct child of RecyclerView which has focus or contains the focused child.
"
	end

	operation 28890807 "getItemCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of items in the adapter bound to the parent RecyclerView.
<p>
Note that this number is not necessarily equal to {@link State#getItemCount()}. In
methods where State is available, you should use {@link State#getItemCount()} instead.
For more details, check the documentation for {@link State#getItemCount()}.

@return The number of items in the bound adapter
@see State#getItemCount()
"
	end

	operation 28890935 "offsetChildrenHorizontal"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "dx" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Offset all child views attached to the parent RecyclerView by dx pixels along
the horizontal axis.

@param dx Pixels to offset by
"
	end

	operation 28891063 "offsetChildrenVertical"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "dy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Offset all child views attached to the parent RecyclerView by dy pixels along
the vertical axis.

@param dy Pixels to offset by
"
	end

	operation 28891191 "ignoreView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Flags a view so that it will not be scrapped or recycled.
<p>
Scope of ignoring a child is strictly restricted to position tracking, scrapping and
recyling. Methods like {@link #removeAndRecycleAllViews(Recycler)} will ignore the child
whereas {@link #removeAllViews()} or {@link #offsetChildrenHorizontal(int)} will not
ignore the child.
<p>
Before this child can be recycled again, you have to call
{@link #stopIgnoringView(View)}.
<p>
You can call this method only if your LayoutManger is in onLayout or onScroll callback.

@param view View to ignore.
@see #stopIgnoringView(View)
"
	end

	operation 28891319 "stopIgnoringView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "View can be scrapped and recycled again.
<p>
Note that calling this method removes all information in the view holder.
<p>
You can call this method only if your LayoutManger is in onLayout or onScroll callback.

@param view View to ignore.
"
	end

	operation 28891447 "detachAndScrapAttachedViews"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Temporarily detach and scrap all currently attached child views. Views will be scrapped
into the given Recycler. The Recycler may prefer to reuse scrap views before
other views that were previously recycled.

@param recycler Recycler to scrap views into
"
	end

	operation 28891575 "scrapOrRecycleView"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param in name "index" explicit_type "int"
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28891703 "removeAndRecycleScrapInt"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles the scrapped views.
<p>
When a view is detached and removed, it does not trigger a ViewGroup invalidate. This is
the expected behavior if scrapped views are used for animations. Otherwise, we need to
call remove and invalidate RecyclerView to ensure UI update.

@param recycler Recycler
"
	end

	operation 28891831 "measureChild"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "child" explicit_type "View"
	    param in name "widthUsed" explicit_type "int"
	    param in name "heightUsed" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Measure a child view using standard measurement policy, taking the padding
of the parent RecyclerView and any added item decorations into account.

<p>If the RecyclerView can be scrolled in either dimension the caller may
pass 0 as the widthUsed or heightUsed parameters as they will be irrelevant.</p>

@param child Child view to measure
@param widthUsed Width in pixels currently consumed by other views, if relevant
@param heightUsed Height in pixels currently consumed by other views, if relevant
"
	end

	operation 28891959 "shouldReMeasureChild"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "child" explicit_type "View"
	    param in name "widthSpec" explicit_type "int"
	    param in name "heightSpec" explicit_type "int"
	    param inout name "lp" explicit_type "LayoutParams"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "RecyclerView internally does its own View measurement caching which should help with
WRAP_CONTENT.
<p>
Use this method if the View is already measured once in this layout pass.
"
	end

	operation 28892087 "shouldMeasureChild"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "child" explicit_type "View"
	    param in name "widthSpec" explicit_type "int"
	    param in name "heightSpec" explicit_type "int"
	    param inout name "lp" explicit_type "LayoutParams"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " we may consider making this public

RecyclerView internally does its own View measurement caching which should help with
WRAP_CONTENT.
<p>
Use this method if the View is not yet measured and you need to decide whether to
measure this View or not.
"
	end

	operation 28892215 "isMeasurementCacheEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "In addition to the View Framework's measurement cache, RecyclerView uses its own
additional measurement cache for its children to avoid re-measuring them when not
necessary. It is on by default but it can be turned off via
{@link #setMeasurementCacheEnabled(boolean)}.

@return True if measurement cache is enabled, false otherwise.

@see #setMeasurementCacheEnabled(boolean)
"
	end

	operation 28892343 "setMeasurementCacheEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "measurementCacheEnabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets whether RecyclerView should use its own measurement cache for the children. This is
a more aggressive cache than the framework uses.

@param measurementCacheEnabled True to enable the measurement cache, false otherwise.

@see #isMeasurementCacheEnabled()
"
	end

	operation 28892471 "isMeasurementUpToDate"
	  class_operation private explicit_return_type "boolean"
	  nparams 3
	    param in name "childSize" explicit_type "int"
	    param in name "spec" explicit_type "int"
	    param in name "dimension" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28892599 "measureChildWithMargins"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "child" explicit_type "View"
	    param in name "widthUsed" explicit_type "int"
	    param in name "heightUsed" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Measure a child view using standard measurement policy, taking the padding
of the parent RecyclerView, any added item decorations and the child margins
into account.

<p>If the RecyclerView can be scrolled in either dimension the caller may
pass 0 as the widthUsed or heightUsed parameters as they will be irrelevant.</p>

@param child Child view to measure
@param widthUsed Width in pixels currently consumed by other views, if relevant
@param heightUsed Height in pixels currently consumed by other views, if relevant
"
	end

	operation 28892727 "getChildMeasureSpec"
	  class_operation public explicit_return_type "int"
	  nparams 4
	    param in name "parentSize" explicit_type "int"
	    param in name "padding" explicit_type "int"
	    param in name "childDimension" explicit_type "int"
	    param inout name "canScroll" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "Calculate a MeasureSpec value for measuring a child view in one dimension.

@param parentSize Size of the parent view where the child will be placed
@param padding Total space currently consumed by other elements of the parent
@param childDimension Desired size of the child view, or FILL_PARENT/WRAP_CONTENT.
                      Generally obtained from the child view's LayoutParams
@param canScroll true if the parent RecyclerView can scroll in this dimension

@return a MeasureSpec value for the child view
@deprecated use {@link #getChildMeasureSpec(int, int, int, int, boolean)}
"
	end

	operation 28892855 "getChildMeasureSpec"
	  class_operation public explicit_return_type "int"
	  nparams 5
	    param in name "parentSize" explicit_type "int"
	    param in name "parentMode" explicit_type "int"
	    param in name "padding" explicit_type "int"
	    param in name "childDimension" explicit_type "int"
	    param inout name "canScroll" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculate a MeasureSpec value for measuring a child view in one dimension.

@param parentSize Size of the parent view where the child will be placed
@param parentMode The measurement spec mode of the parent
@param padding Total space currently consumed by other elements of parent
@param childDimension Desired size of the child view, or FILL_PARENT/WRAP_CONTENT.
                      Generally obtained from the child view's LayoutParams
@param canScroll true if the parent RecyclerView can scroll in this dimension

@return a MeasureSpec value for the child view
"
	end

	operation 28892983 "getDecoratedMeasuredWidth"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the measured width of the given child, plus the additional size of
any insets applied by {@link ItemDecoration ItemDecorations}.

@param child Child view to query
@return child's measured width plus <code>ItemDecoration</code> insets

@see View#getMeasuredWidth()
"
	end

	operation 28893111 "getDecoratedMeasuredHeight"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the measured height of the given child, plus the additional size of
any insets applied by {@link ItemDecoration ItemDecorations}.

@param child Child view to query
@return child's measured height plus <code>ItemDecoration</code> insets

@see View#getMeasuredHeight()
"
	end

	operation 28893239 "layoutDecorated"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "child" explicit_type "View"
	    param in name "left" explicit_type "int"
	    param in name "top" explicit_type "int"
	    param in name "right" explicit_type "int"
	    param in name "bottom" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Lay out the given child view within the RecyclerView using coordinates that
include any current {@link ItemDecoration ItemDecorations}.

<p>LayoutManagers should prefer working in sizes and coordinates that include
item decoration insets whenever possible. This allows the LayoutManager to effectively
ignore decoration insets within measurement and layout code. See the following
methods:</p>
<ul>
    <li>{@link #layoutDecoratedWithMargins(View, int, int, int, int)}</li>
    <li>{@link #getDecoratedBoundsWithMargins(View, Rect)}</li>
    <li>{@link #measureChild(View, int, int)}</li>
    <li>{@link #measureChildWithMargins(View, int, int)}</li>
    <li>{@link #getDecoratedLeft(View)}</li>
    <li>{@link #getDecoratedTop(View)}</li>
    <li>{@link #getDecoratedRight(View)}</li>
    <li>{@link #getDecoratedBottom(View)}</li>
    <li>{@link #getDecoratedMeasuredWidth(View)}</li>
    <li>{@link #getDecoratedMeasuredHeight(View)}</li>
</ul>

@param child Child to lay out
@param left Left edge, with item decoration insets included
@param top Top edge, with item decoration insets included
@param right Right edge, with item decoration insets included
@param bottom Bottom edge, with item decoration insets included

@see View#layout(int, int, int, int)
@see #layoutDecoratedWithMargins(View, int, int, int, int)
"
	end

	operation 28893367 "layoutDecoratedWithMargins"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "child" explicit_type "View"
	    param in name "left" explicit_type "int"
	    param in name "top" explicit_type "int"
	    param in name "right" explicit_type "int"
	    param in name "bottom" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Lay out the given child view within the RecyclerView using coordinates that
include any current {@link ItemDecoration ItemDecorations} and margins.

<p>LayoutManagers should prefer working in sizes and coordinates that include
item decoration insets whenever possible. This allows the LayoutManager to effectively
ignore decoration insets within measurement and layout code. See the following
methods:</p>
<ul>
    <li>{@link #layoutDecorated(View, int, int, int, int)}</li>
    <li>{@link #measureChild(View, int, int)}</li>
    <li>{@link #measureChildWithMargins(View, int, int)}</li>
    <li>{@link #getDecoratedLeft(View)}</li>
    <li>{@link #getDecoratedTop(View)}</li>
    <li>{@link #getDecoratedRight(View)}</li>
    <li>{@link #getDecoratedBottom(View)}</li>
    <li>{@link #getDecoratedMeasuredWidth(View)}</li>
    <li>{@link #getDecoratedMeasuredHeight(View)}</li>
</ul>

@param child Child to lay out
@param left Left edge, with item decoration insets and left margin included
@param top Top edge, with item decoration insets and top margin included
@param right Right edge, with item decoration insets and right margin included
@param bottom Bottom edge, with item decoration insets and bottom margin included

@see View#layout(int, int, int, int)
@see #layoutDecorated(View, int, int, int, int)
"
	end

	operation 28893495 "getTransformedBoundingBox"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "child" explicit_type "View"
	    param inout name "includeDecorInsets" explicit_type "boolean"
	    param inout name "out" explicit_type "Rect"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculates the bounding box of the View while taking into account its matrix changes
(translation, scale etc) with respect to the RecyclerView.
<p>
If {@code includeDecorInsets} is {@code true}, they are applied first before applying
the View's matrix so that the decor offsets also go through the same transformation.

@param child The ItemView whose bounding box should be calculated.
@param includeDecorInsets True if the decor insets should be included in the bounding box
@param out The rectangle into which the output will be written.
"
	end

	operation 28893623 "getDecoratedBoundsWithMargins"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "view" explicit_type "View"
	    param inout name "outBounds" explicit_type "Rect"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the bounds of the view including its decoration and margins.

@param view The view element to check
@param outBounds A rect that will receive the bounds of the element including its
                 decoration and margins.
"
	end

	operation 28893751 "getDecoratedLeft"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the left edge of the given child view within its parent, offset by any applied
{@link ItemDecoration ItemDecorations}.

@param child Child to query
@return Child left edge with offsets applied
@see #getLeftDecorationWidth(View)
"
	end

	operation 28893879 "getDecoratedTop"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the top edge of the given child view within its parent, offset by any applied
{@link ItemDecoration ItemDecorations}.

@param child Child to query
@return Child top edge with offsets applied
@see #getTopDecorationHeight(View)
"
	end

	operation 28894007 "getDecoratedRight"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the right edge of the given child view within its parent, offset by any applied
{@link ItemDecoration ItemDecorations}.

@param child Child to query
@return Child right edge with offsets applied
@see #getRightDecorationWidth(View)
"
	end

	operation 28894135 "getDecoratedBottom"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the bottom edge of the given child view within its parent, offset by any applied
{@link ItemDecoration ItemDecorations}.

@param child Child to query
@return Child bottom edge with offsets applied
@see #getBottomDecorationHeight(View)
"
	end

	operation 28894263 "calculateItemDecorationsForChild"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "child" explicit_type "View"
	    param inout name "outRect" explicit_type "Rect"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculates the item decor insets applied to the given child and updates the provided
Rect instance with the inset values.
<ul>
    <li>The Rect's left is set to the total width of left decorations.</li>
    <li>The Rect's top is set to the total height of top decorations.</li>
    <li>The Rect's right is set to the total width of right decorations.</li>
    <li>The Rect's bottom is set to total height of bottom decorations.</li>
</ul>
<p>
Note that item decorations are automatically calculated when one of the LayoutManager's
measure child methods is called. If you need to measure the child with custom specs via
{@link View#measure(int, int)}, you can use this method to get decorations.

@param child The child view whose decorations should be calculated
@param outRect The Rect to hold result values
"
	end

	operation 28894391 "getTopDecorationHeight"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total height of item decorations applied to child's top.
<p>
Note that this value is not updated until the View is measured or
{@link #calculateItemDecorationsForChild(View, Rect)} is called.

@param child Child to query
@return The total height of item decorations applied to the child's top.
@see #getDecoratedTop(View)
@see #calculateItemDecorationsForChild(View, Rect)
"
	end

	operation 28894519 "getBottomDecorationHeight"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total height of item decorations applied to child's bottom.
<p>
Note that this value is not updated until the View is measured or
{@link #calculateItemDecorationsForChild(View, Rect)} is called.

@param child Child to query
@return The total height of item decorations applied to the child's bottom.
@see #getDecoratedBottom(View)
@see #calculateItemDecorationsForChild(View, Rect)
"
	end

	operation 28894647 "getLeftDecorationWidth"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total width of item decorations applied to child's left.
<p>
Note that this value is not updated until the View is measured or
{@link #calculateItemDecorationsForChild(View, Rect)} is called.

@param child Child to query
@return The total width of item decorations applied to the child's left.
@see #getDecoratedLeft(View)
@see #calculateItemDecorationsForChild(View, Rect)
"
	end

	operation 28894775 "getRightDecorationWidth"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "child" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total width of item decorations applied to child's right.
<p>
Note that this value is not updated until the View is measured or
{@link #calculateItemDecorationsForChild(View, Rect)} is called.

@param child Child to query
@return The total width of item decorations applied to the child's right.
@see #getDecoratedRight(View)
@see #calculateItemDecorationsForChild(View, Rect)
"
	end

	operation 28894903 "onFocusSearchFailed"
	  public explicit_return_type "View"
	  nparams 4
	    param inout name "focused" explicit_type "View"
	    param in name "direction" explicit_type "int"
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Nullable
"
	  
	  
	  
	  comment "Called when searching for a focusable view in the given direction has failed
for the current content of the RecyclerView.

<p>This is the LayoutManager's opportunity to populate views in the given direction
to fulfill the request if it can. The LayoutManager should attach and return
the view to be focused. The default implementation returns null.</p>

@param focused   The currently focused view
@param direction One of {@link View#FOCUS_UP}, {@link View#FOCUS_DOWN},
                 {@link View#FOCUS_LEFT}, {@link View#FOCUS_RIGHT},
                 {@link View#FOCUS_BACKWARD}, {@link View#FOCUS_FORWARD}
                 or 0 for not applicable
@param recycler  The recycler to use for obtaining views for currently offscreen items
@param state     Transient state of RecyclerView
@return The chosen view to be focused
"
	end

	operation 28895031 "onInterceptFocusSearch"
	  public explicit_return_type "View"
	  nparams 2
	    param inout name "focused" explicit_type "View"
	    param in name "direction" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method gives a LayoutManager an opportunity to intercept the initial focus search
before the default behavior of {@link FocusFinder} is used. If this method returns
null FocusFinder will attempt to find a focusable child view. If it fails
then {@link #onFocusSearchFailed(View, int, RecyclerView.Recycler, RecyclerView.State)}
will be called to give the LayoutManager an opportunity to add new views for items
that did not have attached views representing them. The LayoutManager should not add
or remove views from this method.

@param focused The currently focused view
@param direction One of {@link View#FOCUS_UP}, {@link View#FOCUS_DOWN},
                 {@link View#FOCUS_LEFT}, {@link View#FOCUS_RIGHT},
                 {@link View#FOCUS_BACKWARD}, {@link View#FOCUS_FORWARD}
@return A descendant view to focus or null to fall back to default behavior.
        The default implementation returns null.
"
	end

	operation 28895159 "requestChildRectangleOnScreen"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	    param inout name "child" explicit_type "View"
	    param inout name "rect" explicit_type "Rect"
	    param inout name "immediate" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a child of the RecyclerView wants a particular rectangle to be positioned
onto the screen. See {@link ViewParent#requestChildRectangleOnScreen(android.view.View,
android.graphics.Rect, boolean)} for more details.

<p>The base implementation will attempt to perform a standard programmatic scroll
to bring the given rect into view, within the padded area of the RecyclerView.</p>

@param child The direct child making the request.
@param rect  The rectangle in the child's coordinates the child
             wishes to be on the screen.
@param immediate True to forbid animated or delayed scrolling,
                 false otherwise
@return Whether the group scrolled to handle the operation
"
	end

	operation 28895287 "onRequestChildFocus"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	    param inout name "child" explicit_type "View"
	    param inout name "focused" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "@deprecated Use {@link #onRequestChildFocus(RecyclerView, State, View, View)}
"
	end

	operation 28895415 "onRequestChildFocus"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	    param inout name "state" type class_ref 1076151 // State
	    param inout name "child" explicit_type "View"
	    param inout name "focused" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a descendant view of the RecyclerView requests focus.

<p>A LayoutManager wishing to keep focused views aligned in a specific
portion of the view may implement that behavior in an override of this method.</p>

<p>If the LayoutManager executes different behavior that should override the default
behavior of scrolling the focused child on screen instead of running alongside it,
this method should return true.</p>

@param parent  The RecyclerView hosting this LayoutManager
@param state   Current state of RecyclerView
@param child   Direct child of the RecyclerView containing the newly focused view
@param focused The newly focused view. This may be the same view as child or it may be
               null
@return true if the default scroll behavior should be suppressed
"
	end

	operation 28895543 "onAdapterChanged"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "oldAdapter" type class_ref 1075127 // Adapter
	    param inout name "newAdapter" type class_ref 1075127 // Adapter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called if the RecyclerView this LayoutManager is bound to has a different adapter set.
The LayoutManager may use this opportunity to clear caches and configure state such
that it can relayout appropriately with the new data and potentially new view types.

<p>The default implementation removes all currently attached views.</p>

@param oldAdapter The previous adapter instance. Will be null if there was previously no
                  adapter.
@param newAdapter The new adapter instance. Might be null if
                  {@link #setAdapter(RecyclerView.Adapter)} is called with {@code null}.
"
	end

	operation 28895671 "onAddFocusables"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param inout name "views" explicit_type "ArrayList<View>"
	    param in name "direction" explicit_type "int"
	    param in name "focusableMode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called to populate focusable views within the RecyclerView.

<p>The LayoutManager implementation should return <code>true</code> if the default
behavior of {@link ViewGroup#addFocusables(java.util.ArrayList, int)} should be
suppressed.</p>

<p>The default implementation returns <code>false</code> to trigger RecyclerView
to fall back to the default ViewGroup behavior.</p>

@param recyclerView The RecyclerView hosting this LayoutManager
@param views List of output views. This method should add valid focusable views
             to this list.
@param direction One of {@link View#FOCUS_UP}, {@link View#FOCUS_DOWN},
                 {@link View#FOCUS_LEFT}, {@link View#FOCUS_RIGHT},
                 {@link View#FOCUS_BACKWARD}, {@link View#FOCUS_FORWARD}
@param focusableMode The type of focusables to be added.

@return true to suppress the default behavior, false to add default focusables after
        this method returns.

@see #FOCUSABLES_ALL
@see #FOCUSABLES_TOUCH_MODE
"
	end

	operation 28895799 "onItemsChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when {@link Adapter#notifyDataSetChanged()} is triggered instead of giving
detailed information on what has actually changed.

@param recyclerView
"
	end

	operation 28895927 "onItemsAdded"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when items have been added to the adapter. The LayoutManager may choose to
requestLayout if the inserted items would require refreshing the currently visible set
of child views. (e.g. currently empty space would be filled by appended items, etc.)

@param recyclerView
@param positionStart
@param itemCount
"
	end

	operation 28896055 "onItemsRemoved"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when items have been removed from the adapter.

@param recyclerView
@param positionStart
@param itemCount
"
	end

	operation 28896183 "onItemsUpdated"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when items have been changed in the adapter.
To receive payload,  override {@link #onItemsUpdated(RecyclerView, int, int, Object)}
instead, then this callback will not be invoked.

@param recyclerView
@param positionStart
@param itemCount
"
	end

	operation 28896311 "onItemsUpdated"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	    param inout name "payload" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when items have been changed in the adapter and with optional payload.
Default implementation calls {@link #onItemsUpdated(RecyclerView, int, int)}.

@param recyclerView
@param positionStart
@param itemCount
@param payload
"
	end

	operation 28896439 "onItemsMoved"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "from" explicit_type "int"
	    param in name "to" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when an item is moved withing the adapter.
<p>
Note that, an item may also change position in response to another ADD/REMOVE/MOVE
operation. This callback is only called if and only if {@link Adapter#notifyItemMoved}
is called.

@param recyclerView
@param from
@param to
@param itemCount
"
	end

	operation 28896567 "computeHorizontalScrollExtent"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Override this method if you want to support scroll bars.</p>

<p>Read {@link RecyclerView#computeHorizontalScrollExtent()} for details.</p>

<p>Default implementation returns 0.</p>

@param state Current state of RecyclerView
@return The horizontal extent of the scrollbar's thumb
@see RecyclerView#computeHorizontalScrollExtent()
"
	end

	operation 28896695 "computeHorizontalScrollOffset"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Override this method if you want to support scroll bars.</p>

<p>Read {@link RecyclerView#computeHorizontalScrollOffset()} for details.</p>

<p>Default implementation returns 0.</p>

@param state Current State of RecyclerView where you can find total item count
@return The horizontal offset of the scrollbar's thumb
@see RecyclerView#computeHorizontalScrollOffset()
"
	end

	operation 28896823 "computeHorizontalScrollRange"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Override this method if you want to support scroll bars.</p>

<p>Read {@link RecyclerView#computeHorizontalScrollRange()} for details.</p>

<p>Default implementation returns 0.</p>

@param state Current State of RecyclerView where you can find total item count
@return The total horizontal range represented by the vertical scrollbar
@see RecyclerView#computeHorizontalScrollRange()
"
	end

	operation 28896951 "computeVerticalScrollExtent"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Override this method if you want to support scroll bars.</p>

<p>Read {@link RecyclerView#computeVerticalScrollExtent()} for details.</p>

<p>Default implementation returns 0.</p>

@param state Current state of RecyclerView
@return The vertical extent of the scrollbar's thumb
@see RecyclerView#computeVerticalScrollExtent()
"
	end

	operation 28897079 "computeVerticalScrollOffset"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Override this method if you want to support scroll bars.</p>

<p>Read {@link RecyclerView#computeVerticalScrollOffset()} for details.</p>

<p>Default implementation returns 0.</p>

@param state Current State of RecyclerView where you can find total item count
@return The vertical offset of the scrollbar's thumb
@see RecyclerView#computeVerticalScrollOffset()
"
	end

	operation 28897207 "computeVerticalScrollRange"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Override this method if you want to support scroll bars.</p>

<p>Read {@link RecyclerView#computeVerticalScrollRange()} for details.</p>

<p>Default implementation returns 0.</p>

@param state Current State of RecyclerView where you can find total item count
@return The total vertical range represented by the vertical scrollbar
@see RecyclerView#computeVerticalScrollRange()
"
	end

	operation 28897335 "onMeasure"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	    param in name "widthSpec" explicit_type "int"
	    param in name "heightSpec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Measure the attached RecyclerView. Implementations must call
{@link #setMeasuredDimension(int, int)} before returning.

<p>The default implementation will handle EXACTLY measurements and respect
the minimum width and height properties of the host RecyclerView if measured
as UNSPECIFIED. AT_MOST measurements will be treated as EXACTLY and the RecyclerView
will consume all available space.</p>

@param recycler Recycler
@param state Transient state of RecyclerView
@param widthSpec Width {@link android.view.View.MeasureSpec}
@param heightSpec Height {@link android.view.View.MeasureSpec}
"
	end

	operation 28897463 "setMeasuredDimension"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "widthSize" explicit_type "int"
	    param in name "heightSize" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@link View#setMeasuredDimension(int, int) Set the measured dimensions} of the
host RecyclerView.

@param widthSize Measured width
@param heightSize Measured height
"
	end

	operation 28897591 "getMinimumWidth"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return The host RecyclerView's {@link View#getMinimumWidth()}
"
	end

	operation 28897719 "getMinimumHeight"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return The host RecyclerView's {@link View#getMinimumHeight()}
"
	end

	operation 28897847 "onSaveInstanceState"
	  public explicit_return_type "Parcelable"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Called when the LayoutManager should save its state. This is a good time to save your
scroll position, configuration and anything else that may be required to restore the same
layout state if the LayoutManager is recreated.</p>
<p>RecyclerView does NOT verify if the LayoutManager has changed between state save and
restore. This will let you share information between your LayoutManagers but it is also
your responsibility to make sure they use the same parcelable class.</p>

@return Necessary information for LayoutManager to be able to restore its state
"
	end

	operation 28897975 "onRestoreInstanceState"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "state" explicit_type "Parcelable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28898103 "stopSmoothScroller"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28898231 "onSmoothScrollerStopped"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "smoothScroller" type class_ref 1077687 // SmoothScroller
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28898359 "onScrollStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "state" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "RecyclerView calls this method to notify LayoutManager that scroll state has changed.

@param state The new scroll state for RecyclerView
"
	end

	operation 28898487 "removeAndRecycleAllViews"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "recycler" type class_ref 1074487 // Recycler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes all views and recycles them using the given recycler.
<p>
If you want to clean cached views as well, you should call {@link Recycler#clear()} too.
<p>
If a View is marked as \"ignored\", it is not removed nor recycled.

@param recycler Recycler to use to recycle children
@see #removeAndRecycleView(View, Recycler)
@see #removeAndRecycleViewAt(int, Recycler)
@see #ignoreView(View)
"
	end

	operation 28898615 "onInitializeAccessibilityNodeInfo"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "info" explicit_type "AccessibilityNodeInfoCompat"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " called by accessibility delegate"
	end

	operation 28898743 "onInitializeAccessibilityNodeInfo"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	    param inout name "info" explicit_type "AccessibilityNodeInfoCompat"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by the AccessibilityDelegate when the information about the current layout should
be populated.
<p>
Default implementation adds a {@link
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat}.
<p>
You should override
{@link #getRowCountForAccessibility(RecyclerView.Recycler, RecyclerView.State)},
{@link #getColumnCountForAccessibility(RecyclerView.Recycler, RecyclerView.State)},
{@link #isLayoutHierarchical(RecyclerView.Recycler, RecyclerView.State)} and
{@link #getSelectionModeForAccessibility(RecyclerView.Recycler, RecyclerView.State)} for
more accurate accessibility information.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@param info     The info that should be filled by the LayoutManager
@see View#onInitializeAccessibilityNodeInfo(
android.view.accessibility.AccessibilityNodeInfo)
@see #getRowCountForAccessibility(RecyclerView.Recycler, RecyclerView.State)
@see #getColumnCountForAccessibility(RecyclerView.Recycler, RecyclerView.State)
@see #isLayoutHierarchical(RecyclerView.Recycler, RecyclerView.State)
@see #getSelectionModeForAccessibility(RecyclerView.Recycler, RecyclerView.State)
"
	end

	operation 28898871 "onInitializeAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" explicit_type "AccessibilityEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " called by accessibility delegate"
	end

	operation 28898999 "onInitializeAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	    param inout name "event" explicit_type "AccessibilityEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by the accessibility delegate to initialize an accessibility event.
<p>
Default implementation adds item count and scroll information to the event.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@param event    The event instance to initialize
@see View#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
"
	end

	operation 28899127 "onInitializeAccessibilityNodeInfoForItem"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "host" explicit_type "View"
	    param inout name "info" explicit_type "AccessibilityNodeInfoCompat"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " called by accessibility delegate"
	end

	operation 28899255 "onInitializeAccessibilityNodeInfoForItem"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	    param inout name "host" explicit_type "View"
	    param inout name "info" explicit_type "AccessibilityNodeInfoCompat"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by the AccessibilityDelegate when the accessibility information for a specific
item should be populated.
<p>
Default implementation adds basic positioning information about the item.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@param host     The child for which accessibility node info should be populated
@param info     The info to fill out about the item
@see android.widget.AbsListView#onInitializeAccessibilityNodeInfoForItem(View, int,
android.view.accessibility.AccessibilityNodeInfo)
"
	end

	operation 28899383 "requestSimpleAnimationsInNextLayout"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "A LayoutManager can call this method to force RecyclerView to run simple animations in
the next layout pass, even if there is not any trigger to do so. (e.g. adapter data
change).
<p>
Note that, calling this method will not guarantee that RecyclerView will run animations
at all. For example, if there is not any {@link ItemAnimator} set, RecyclerView will
not run any animations but will still clear this flag after the layout is complete.

"
	end

	operation 28899511 "getSelectionModeForAccessibility"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the selection mode for accessibility. Should be
{@link AccessibilityNodeInfoCompat.CollectionInfoCompat#SELECTION_MODE_NONE},
{@link AccessibilityNodeInfoCompat.CollectionInfoCompat#SELECTION_MODE_SINGLE} or
{@link AccessibilityNodeInfoCompat.CollectionInfoCompat#SELECTION_MODE_MULTIPLE}.
<p>
Default implementation returns
{@link AccessibilityNodeInfoCompat.CollectionInfoCompat#SELECTION_MODE_NONE}.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@return Selection mode for accessibility. Default implementation returns
{@link AccessibilityNodeInfoCompat.CollectionInfoCompat#SELECTION_MODE_NONE}.
"
	end

	operation 28899639 "getRowCountForAccessibility"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of rows for accessibility.
<p>
Default implementation returns the number of items in the adapter if LayoutManager
supports vertical scrolling or 1 if LayoutManager does not support vertical
scrolling.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@return The number of rows in LayoutManager for accessibility.
"
	end

	operation 28899767 "getColumnCountForAccessibility"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of columns for accessibility.
<p>
Default implementation returns the number of items in the adapter if LayoutManager
supports horizontal scrolling or 1 if LayoutManager does not support horizontal
scrolling.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@return The number of rows in LayoutManager for accessibility.
"
	end

	operation 28899895 "isLayoutHierarchical"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether layout is hierarchical or not to be used for accessibility.
<p>
Default implementation returns false.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@return True if layout is hierarchical.
"
	end

	operation 28900023 "performAccessibilityAction"
	  package explicit_return_type "boolean"
	  nparams 2
	    param in name "action" explicit_type "int"
	    param inout name "args" explicit_type "Bundle"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " called by accessibility delegate"
	end

	operation 28900151 "performAccessibilityAction"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	    param in name "action" explicit_type "int"
	    param inout name "args" explicit_type "Bundle"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by AccessibilityDelegate when an action is requested from the RecyclerView.

@param recycler  The Recycler that can be used to convert view positions into adapter
                 positions
@param state     The current state of RecyclerView
@param action    The action to perform
@param args      Optional action arguments
@see View#performAccessibilityAction(int, android.os.Bundle)
"
	end

	operation 28900279 "performAccessibilityActionForItem"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "view" explicit_type "View"
	    param in name "action" explicit_type "int"
	    param inout name "args" explicit_type "Bundle"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " called by accessibility delegate"
	end

	operation 28900407 "performAccessibilityActionForItem"
	  public explicit_return_type "boolean"
	  nparams 5
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param inout name "state" type class_ref 1076151 // State
	    param inout name "view" explicit_type "View"
	    param in name "action" explicit_type "int"
	    param inout name "args" explicit_type "Bundle"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by AccessibilityDelegate when an accessibility action is requested on one of the
children of LayoutManager.
<p>
Default implementation does not do anything.

@param recycler The Recycler that can be used to convert view positions into adapter
                positions
@param state    The current state of RecyclerView
@param view     The child view on which the action is performed
@param action   The action to perform
@param args     Optional action arguments
@return true if action is handled
@see View#performAccessibilityAction(int, android.os.Bundle)
"
	end

	class 1077943 "Properties"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 4909239 "orientation"
	    public explicit_type "int"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_android_orientation 
"
	  end

	  attribute 4909367 "spanCount"
	    public explicit_type "int"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_spanCount 
"
	  end

	  attribute 4909495 "reverseLayout"
	    public explicit_type "boolean"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_reverseLayout 
"
	  end

	  attribute 4909623 "stackFromEnd"
	    public explicit_type "boolean"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_stackFromEnd 
"
	  end
	end

	operation 28900535 "getProperties"
	  class_operation public return_type class_ref 1077943 // Properties
	  nparams 4
	    param inout name "context" explicit_type "Context"
	    param inout name "attrs" explicit_type "AttributeSet"
	    param in name "defStyleAttr" explicit_type "int"
	    param in name "defStyleRes" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parse the xml attributes to get the most common properties used by layout managers.

@attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_android_orientation
@attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_spanCount
@attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_reverseLayout
@attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_stackFromEnd

@return an object containing the properties as specified in the attrs.
"
	end

	operation 28900663 "setExactMeasureSpecsFrom"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28900791 "shouldMeasureTwice"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Internal API to allow LayoutManagers to be measured twice.
<p>
This is not public because LayoutManagers should be able to handle their layouts in one
pass but it is very convenient to make existing LayoutManagers support wrapping content
when both orientations are undefined.
<p>
This API will be removed after default LayoutManagers properly implement wrap content in
non-scroll orientation.
"
	end

	operation 28900919 "hasFlexibleChildInBothOrientations"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1925303 // mLayout (<unidirectional association>)
	relation 1925303 --->
	  a role_name "mLayout" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@VisibleForTesting
"
	    classrelation_ref 1925303 // mLayout (<unidirectional association>)
	  b parent class_ref 1075255 // LayoutManager
      end

      class 1075383 "RecyclerListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 28902839 "onViewRecycled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "holder" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method is called whenever the view in the ViewHolder is recycled.

RecyclerView calls this method right before clearing ViewHolder's internal data and
sending it to RecycledViewPool. This way, if ViewHolder was holding valid information
before being recycled, you can call {@link ViewHolder#getAdapterPosition()} to get
its adapter position.

@param holder The ViewHolder containing the view that was recycled
"
	end
      end

      classrelation 1925431 // mRecyclerListener (<unidirectional association>)
	relation 1925431 --->
	  a role_name "mRecyclerListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1925431 // mRecyclerListener (<unidirectional association>)
	  b parent class_ref 1075383 // RecyclerListener
      end

      class 1075511 "ItemDecoration"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 28901047 "onDraw"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "c" type class_ref 165175 // Canvas
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Draw any appropriate decorations into the Canvas supplied to the RecyclerView.
Any content drawn by this method will be drawn before the item views are drawn,
and will thus appear underneath the views.

@param c Canvas to draw into
@param parent RecyclerView this ItemDecoration is drawing into
@param state The current state of RecyclerView
"
	end

	operation 28901175 "onDraw"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "c" type class_ref 165175 // Canvas
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "@deprecated
Override {@link #onDraw(Canvas, RecyclerView, RecyclerView.State)}
"
	end

	operation 28901303 "onDrawOver"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "c" type class_ref 165175 // Canvas
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Draw any appropriate decorations into the Canvas supplied to the RecyclerView.
Any content drawn by this method will be drawn after the item views are drawn
and will thus appear over the views.

@param c Canvas to draw into
@param parent RecyclerView this ItemDecoration is drawing into
@param state The current state of RecyclerView.
"
	end

	operation 28901431 "onDrawOver"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "c" type class_ref 165175 // Canvas
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "@deprecated
Override {@link #onDrawOver(Canvas, RecyclerView, RecyclerView.State)}
"
	end

	operation 28901559 "getItemOffsets"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "outRect" explicit_type "Rect"
	    param in name "itemPosition" explicit_type "int"
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "@deprecated
Use {@link #getItemOffsets(Rect, View, RecyclerView, State)}
"
	end

	operation 28901687 "getItemOffsets"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "outRect" explicit_type "Rect"
	    param inout name "view" explicit_type "View"
	    param inout name "parent" type class_ref 1068983 // RecyclerView
	    param inout name "state" type class_ref 1076151 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve any offsets for the given item. Each field of <code>outRect</code> specifies
the number of pixels that the item view should be inset by, similar to padding or margin.
The default implementation sets the bounds of outRect to 0 and returns.

<p>
If this ItemDecoration does not affect the positioning of item views, it should set
all four fields of <code>outRect</code> (left, top, right, bottom) to zero
before returning.

<p>
If you need to access Adapter for additional data, you can call
{@link RecyclerView#getChildAdapterPosition(View)} to get the adapter position of the
View.

@param outRect Rect to receive the output.
@param view    The child view to decorate
@param parent  RecyclerView this ItemDecoration is decorating
@param state   The current state of RecyclerView.
"
	end
      end

      classrelation 1925559 // mItemDecorations (<unidirectional association>)
	relation 1925559 --->
	  stereotype "ArrayList"
	  a role_name "mItemDecorations" init_value " new ArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1925559 // mItemDecorations (<unidirectional association>)
	  b parent class_ref 1075511 // ItemDecoration
      end

      classrelation 1925687 // mOnItemTouchListeners (<unidirectional association>)
	relation 1925687 --->
	  stereotype "ArrayList"
	  a role_name "mOnItemTouchListeners" init_value "
            new ArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1925687 // mOnItemTouchListeners (<unidirectional association>)
	  b parent class_ref 1073463 // OnItemTouchListener
      end

      classrelation 1925815 // mActiveOnItemTouchListener (<unidirectional association>)
	relation 1925815 --->
	  a role_name "mActiveOnItemTouchListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1925815 // mActiveOnItemTouchListener (<unidirectional association>)
	  b parent class_ref 1073463 // OnItemTouchListener
      end

      attribute 4902583 "mIsAttached"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4902711 "mHasFixedSize"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4902839 "mFirstLayoutComplete"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@VisibleForTesting
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4902967 "mEatRequestLayout"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Counting lock to control whether we should ignore requestLayout calls from children or not.
"
      end

      attribute 4903095 "mLayoutRequestEaten"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4903223 "mLayoutFrozen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4903351 "mIgnoreMotionEventTillDown"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4903479 "mEatenAccessibilityChangeFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " binary OR of change events that were eaten during a layout or scroll.
"
      end

      attribute 4903607 "mAdapterUpdateDuringMeasure"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4903735 "mPostUpdatesOnAnimation"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1075639 "OnChildAttachStateChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 28902967 "onChildViewAttachedToWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a view is attached to the RecyclerView.

@param view The View which is attached to the RecyclerView
"
	end

	operation 28903095 "onChildViewDetachedFromWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" explicit_type "View"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a view is detached from RecyclerView.

@param view The View which is being detached from the RecyclerView
"
	end
      end

      classrelation 1926071 // mOnChildAttachStateListeners (<unidirectional association>)
	relation 1926071 --->
	  stereotype "List"
	  a role_name "mOnChildAttachStateListeners" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1926071 // mOnChildAttachStateListeners (<unidirectional association>)
	  b parent class_ref 1075639 // OnChildAttachStateChangeListener
      end

      attribute 4903863 "mDataSetHasChangedAfterLayout"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set to true when an adapter data set changed notification is received.
In that case, we cannot run any animations since we don't know what happened.

"
      end

      attribute 4903991 "mLayoutOrScrollCounter"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This variable is incremented during a dispatchLayout and/or scroll.
Some methods should not be called during these periods (e.g. adapter data change).
Doing so will create hard to find bugs so we better check it and throw an exception.

@see #assertInLayoutOrScroll(String)
@see #assertNotInLayoutOrScroll(String)

"
      end

      class 1075895 "ItemAnimator"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 1076407 "ItemAnimatorListener"
	  visibility package stereotype "interface"
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	end

	class 1077303 "ItemHolderInfo"
	  visibility package 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	end
      end

      classrelation 1926711 // mItemAnimator (<unidirectional association>)
	relation 1926711 --->
	  a role_name "mItemAnimator" init_value " new DefaultItemAnimator()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1926711 // mItemAnimator (<unidirectional association>)
	  b parent class_ref 1075895 // ItemAnimator
      end

      attribute 4904119 "INVALID_POINTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4904247 "SCROLL_STATE_IDLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The RecyclerView is not currently scrolling.
@see #getScrollState()

"
      end

      attribute 4904375 "SCROLL_STATE_DRAGGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The RecyclerView is currently being dragged by outside input such as user touch input.
@see #getScrollState()

"
      end

      attribute 4904503 "SCROLL_STATE_SETTLING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The RecyclerView is currently animating to a final position while not under
outside control.
@see #getScrollState()

"
      end

      attribute 4904631 "mScrollState"
	private explicit_type "int"
	init_value " SCROLL_STATE_IDLE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Touch/scrolling handling
"
      end

      attribute 4904759 "mScrollPointerId"
	private explicit_type "int"
	init_value " INVALID_POINTER"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4904887 "mInitialTouchX"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905015 "mInitialTouchY"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905143 "mLastTouchX"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905271 "mLastTouchY"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905399 "mTouchSlop"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905527 "mMinFlingVelocity"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905655 "mMaxFlingVelocity"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4905783 "mScrollFactor"
	private explicit_type "float"
	init_value " Float.MIN_VALUE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This value is used when handling generic motion events.
"
      end

      attribute 4905911 "mPreserveFocusAfterLayout"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1076023 "ViewFlinger"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4907063 "mLastFlingX"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4907191 "mLastFlingY"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4907319 "mEatRunOnAnimationRequest"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " When set to true, postOnAnimation callbacks are delayed until the run method completes
"
	end

	attribute 4907447 "mReSchedulePostAnimationCallback"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Tracks if postAnimationCallback should be re-attached when it is done
"
	end

	operation 28868279 "ViewFlinger"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28868407 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28868535 "disableRunOnAnimationRequests"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28868663 "enableRunOnAnimationRequests"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28868791 "postOnAnimation"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28868919 "fling"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "velocityX" explicit_type "int"
	    param in name "velocityY" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869047 "smoothScrollBy"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "dx" explicit_type "int"
	    param in name "dy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869175 "smoothScrollBy"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "dx" explicit_type "int"
	    param in name "dy" explicit_type "int"
	    param in name "vx" explicit_type "int"
	    param in name "vy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869303 "distanceInfluenceForSnapDuration"
	  private explicit_return_type "float"
	  nparams 1
	    param in name "f" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869431 "computeScrollDuration"
	  private explicit_return_type "int"
	  nparams 4
	    param in name "dx" explicit_type "int"
	    param in name "dy" explicit_type "int"
	    param in name "vx" explicit_type "int"
	    param in name "vy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869559 "smoothScrollBy"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "dx" explicit_type "int"
	    param in name "dy" explicit_type "int"
	    param in name "duration" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869687 "smoothScrollBy"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "dx" explicit_type "int"
	    param in name "dy" explicit_type "int"
	    param in name "duration" explicit_type "int"
	    param inout name "interpolator" explicit_type "Interpolator"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28869815 "stop"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1926967 // mViewFlinger (<unidirectional association>)
	relation 1926967 --->
	  a role_name "mViewFlinger" init_value " new ViewFlinger()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1926967 // mViewFlinger (<unidirectional association>)
	  b parent class_ref 1076023 // ViewFlinger
      end

      class 1076151 "State"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 1927095 // mState (<unidirectional association>)
	relation 1927095 --->
	  a role_name "mState" init_value " new State()" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1927095 // mState (<unidirectional association>)
	  b parent class_ref 1076151 // State
      end

      class 1076279 "OnScrollListener"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 28902583 "onScrollStateChanged"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "newState" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback method to be invoked when RecyclerView's scroll state changes.

@param recyclerView The RecyclerView whose scroll state has changed.
@param newState     The updated scroll state. One of {@link #SCROLL_STATE_IDLE},
                    {@link #SCROLL_STATE_DRAGGING} or {@link #SCROLL_STATE_SETTLING}.
"
	end

	operation 28902711 "onScrolled"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "recyclerView" type class_ref 1068983 // RecyclerView
	    param in name "dx" explicit_type "int"
	    param in name "dy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback method to be invoked when the RecyclerView has been scrolled. This will be
called after the scroll has completed.
<p>
This callback will also be called if visible item range changes after a layout
calculation. In that case, dx and dy will be 0.

@param recyclerView The RecyclerView which scrolled.
@param dx The amount of horizontal scroll.
@param dy The amount of vertical scroll.
"
	end
      end

      classrelation 1927223 // mScrollListener (<unidirectional association>)
	relation 1927223 --->
	  a role_name "mScrollListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1927223 // mScrollListener (<unidirectional association>)
	  b parent class_ref 1076279 // OnScrollListener
      end

      classrelation 1927351 // mScrollListeners (<unidirectional association>)
	relation 1927351 --->
	  stereotype "List"
	  a role_name "mScrollListeners" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1927351 // mScrollListeners (<unidirectional association>)
	  b parent class_ref 1076279 // OnScrollListener
      end

      attribute 4906039 "mItemsAddedOrRemoved"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " For use in item animations
"
      end

      attribute 4906167 "mItemsChanged"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1927479 // mItemAnimatorListener (<unidirectional association>)
	relation 1927479 --->
	  a role_name "mItemAnimatorListener" init_value "
            new ItemAnimatorRestoreListener()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1927479 // mItemAnimatorListener (<unidirectional association>)
	  b parent class_ref 1076407 // ItemAnimatorListener
      end

      attribute 4906295 "mPostedAnimatorRunner"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1076663 "ChildDrawingOrderCallback"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 1927735 // mChildDrawingOrderCallback (<unidirectional association>)
	relation 1927735 --->
	  a role_name "mChildDrawingOrderCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1927735 // mChildDrawingOrderCallback (<unidirectional association>)
	  b parent class_ref 1076663 // ChildDrawingOrderCallback
      end

      attribute 4906423 "mMinMaxLayoutPositions"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " simple array to keep min and max child position during a layout calculation
 preserved not to create a new one in each layout pass
"
      end

      attribute 4906551 "mScrollOffset"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4906679 "mScrollConsumed"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4906807 "mNestedOffsets"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 4906935 "mItemAnimatorRunner"
	private explicit_type "Runnable"
	init_value " new Runnable() {
        @Override
        public void run() {
            if (mItemAnimator != null) {
                mItemAnimator.runPendingAnimations();
            }
            mPostedAnimatorRunner = false;
        }
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 28845239 "RecyclerView"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28845367 "RecyclerView"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28845495 "RecyclerView"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	  param in name "defStyle" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28845623 "getCompatAccessibilityDelegate"
	public explicit_return_type "RecyclerViewAccessibilityDelegate"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the accessibility delegate compatibility implementation used by the RecyclerView.
@return An instance of AccessibilityDelegateCompat used by RecyclerView
"
      end

      operation 28845751 "setAccessibilityDelegateCompat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "accessibilityDelegate" explicit_type "RecyclerViewAccessibilityDelegate"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the accessibility delegate compatibility implementation used by RecyclerView.
@param accessibilityDelegate The accessibility delegate to be used by RecyclerView.
"
      end

      operation 28845879 "createLayoutManager"
	private explicit_return_type "void"
	nparams 5
	  param inout name "context" explicit_type "Context"
	  param in name "className" explicit_type "String"
	  param inout name "attrs" explicit_type "AttributeSet"
	  param in name "defStyleAttr" explicit_type "int"
	  param in name "defStyleRes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate and set a LayoutManager, if specified in the attributes.
"
      end

      operation 28846007 "getFullClassName"
	private explicit_return_type "String"
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28846135 "initChildrenHelper"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28846263 "initAdapterManager"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28846391 "setHasFixedSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hasFixedSize" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "RecyclerView can perform several optimizations if it can know in advance that RecyclerView's
size is not affected by the adapter contents. RecyclerView can still change its size based
on other factors (e.g. its parent's size) but this size calculation cannot depend on the
size of its children or contents of its adapter (except the number of items in the adapter).
<p>
If your use of RecyclerView falls into this category, set this to {@code true}. It will allow
RecyclerView to avoid invalidating the whole layout when its adapter contents change.

@param hasFixedSize true if adapter changes cannot affect the size of the RecyclerView.
"
      end

      operation 28846519 "hasFixedSize"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the app has specified that changes in adapter content cannot change
the size of the RecyclerView itself.
"
      end

      operation 28846647 "setClipToPadding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clipToPadding" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28846775 "setScrollingTouchSlop"
	public explicit_return_type "void"
	nparams 1
	  param in name "slopConstant" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Configure the scrolling touch slop for a specific use case.

Set up the RecyclerView's scrolling motion threshold based on common usages.
Valid arguments are {@link #TOUCH_SLOP_DEFAULT} and {@link #TOUCH_SLOP_PAGING}.

@param slopConstant One of the <code>TOUCH_SLOP_</code> constants representing
                    the intended usage of this RecyclerView
"
      end

      operation 28846903 "swapAdapter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "adapter" type class_ref 1075127 // Adapter
	  param inout name "removeAndRecycleExistingViews" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Swaps the current adapter with the provided one. It is similar to
{@link #setAdapter(Adapter)} but assumes existing adapter and the new adapter uses the same
{@link ViewHolder} and does not clear the RecycledViewPool.
<p>
Note that it still calls onAdapterChanged callbacks.

@param adapter The new adapter to set, or null to set no adapter.
@param removeAndRecycleExistingViews If set to true, RecyclerView will recycle all existing
                                     Views. If adapters have stable ids and/or you want to
                                     animate the disappearing views, you may prefer to set
                                     this to false.
@see #setAdapter(Adapter)
"
      end

      operation 28847031 "setAdapter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "adapter" type class_ref 1075127 // Adapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a new adapter to provide child views on demand.
<p>
When adapter is changed, all existing views are recycled back to the pool. If the pool has
only one adapter, it will be cleared.

@param adapter The new adapter to set, or null to set no adapter.
@see #swapAdapter(Adapter, boolean)
"
      end

      operation 28847159 "setAdapterInternal"
	private explicit_return_type "void"
	nparams 3
	  param inout name "adapter" type class_ref 1075127 // Adapter
	  param inout name "compatibleWithPrevious" explicit_type "boolean"
	  param inout name "removeAndRecycleViews" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the current adapter with the new one and triggers listeners.
@param adapter The new adapter
@param compatibleWithPrevious If true, the new adapter is using the same View Holders and
                              item types with the current adapter (helps us avoid cache
                              invalidation).
@param removeAndRecycleViews  If true, we'll remove and recycle all existing views. If
                              compatibleWithPrevious is false, this parameter is ignored.
"
      end

      operation 28847287 "getAdapter"
	public return_type class_ref 1075127 // Adapter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the previously set adapter or null if no adapter is set.

@return The previously set adapter
@see #setAdapter(Adapter)
"
      end

      operation 28847415 "setRecyclerListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1075383 // RecyclerListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a listener that will be notified whenever a child view is recycled.

<p>This listener will be called when a LayoutManager or the RecyclerView decides
that a child view is no longer needed. If an application associates expensive
or heavyweight data with item views, this may be a good place to release
or free those resources.</p>

@param listener Listener to register, or null to clear
"
      end

      operation 28847543 "getBaseline"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Return the offset of the RecyclerView's text baseline from the its top
boundary. If the LayoutManager of this RecyclerView does not support baseline alignment,
this method returns -1.</p>

@return the offset of the baseline within the RecyclerView's bounds or -1
        if baseline alignment is not supported
"
      end

      operation 28847671 "addOnChildAttachStateChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1075639 // OnChildAttachStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a listener that will be notified whenever a child view is attached to or detached
from RecyclerView.

<p>This listener will be called when a LayoutManager or the RecyclerView decides
that a child view is no longer needed. If an application associates expensive
or heavyweight data with item views, this may be a good place to release
or free those resources.</p>

@param listener Listener to register
"
      end

      operation 28847799 "removeOnChildAttachStateChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1075639 // OnChildAttachStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the provided listener from child attached state listeners list.

@param listener Listener to unregister
"
      end

      operation 28847927 "clearOnChildAttachStateChangeListeners"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all listeners that were added via
{@link #addOnChildAttachStateChangeListener(OnChildAttachStateChangeListener)}.
"
      end

      operation 28848055 "setLayoutManager"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layout" type class_ref 1075255 // LayoutManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@link LayoutManager} that this RecyclerView will use.

<p>In contrast to other adapter-backed views such as {@link android.widget.ListView}
or {@link android.widget.GridView}, RecyclerView allows client code to provide custom
layout arrangements for child views. These arrangements are controlled by the
{@link LayoutManager}. A LayoutManager must be provided for RecyclerView to function.</p>

<p>Several default strategies are provided for common uses such as lists and grids.</p>

@param layout LayoutManager to use
"
      end

      operation 28848183 "onSaveInstanceState"
	protected explicit_return_type "Parcelable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28848311 "onRestoreInstanceState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "Parcelable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28848439 "dispatchSaveInstanceState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "container" explicit_type "SparseArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Parcelable> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Override to prevent freezing of any views created by the adapter.
"
      end

      operation 28848567 "dispatchRestoreInstanceState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "container" explicit_type "SparseArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Parcelable> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Override to prevent thawing of any views created by the adapter.
"
      end

      operation 28848695 "addAnimatingView"
	private explicit_return_type "void"
	nparams 1
	  param inout name "viewHolder" type class_ref 1073975 // ViewHolder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a view to the animatingViews list.
mAnimatingViews holds the child views that are currently being kept around
purely for the purpose of being animated out of view. They are drawn as a regular
part of the child list of the RecyclerView, but they are invisible to the LayoutManager
as they are managed separately from the regular child views.
@param viewHolder The ViewHolder to be removed
"
      end

      operation 28848823 "removeAnimatingView"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "view" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a view from the animatingViews list.
@param view The view to be removed
@see #addAnimatingView(RecyclerView.ViewHolder)
@return true if an animating view is removed
"
      end

      operation 28848951 "getLayoutManager"
	public return_type class_ref 1075255 // LayoutManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link LayoutManager} currently responsible for
layout policy for this RecyclerView.

@return The currently bound LayoutManager
"
      end

      class 1077047 "RecycledViewPool"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4907575 "mAttachCount"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4907703 "DEFAULT_MAX_SCRAP"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 28870839 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28870967 "setMaxRecycledViews"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "viewType" explicit_type "int"
	    param in name "max" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28871095 "getRecycledView"
	  public return_type class_ref 1073975 // ViewHolder
	  nparams 1
	    param in name "viewType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28871223 "size"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28871351 "putRecycledView"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "scrap" type class_ref 1073975 // ViewHolder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28871479 "attach"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "adapter" type class_ref 1075127 // Adapter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28871607 "detach"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28871735 "onAdapterChanged"
	  package explicit_return_type "void"
	  nparams 3
	    param inout name "oldAdapter" type class_ref 1075127 // Adapter
	    param inout name "newAdapter" type class_ref 1075127 // Adapter
	    param inout name "compatibleWithPrevious" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Detaches the old adapter and attaches the new one.
<p>
RecycledViewPool will clear its cache if it has only one adapter attached and the new
adapter uses a different ViewHolder than the oldAdapter.

@param oldAdapter The previous adapter instance. Will be detached.
@param newAdapter The new adapter instance. Will be attached.
@param compatibleWithPrevious True if both oldAdapter and newAdapter are using the same
                              ViewHolder and view types.
"
	end

	operation 28871863 "getScrapHeapForType"
	  private return_type class_ref 1073975 // ViewHolder
	  nparams 1
	    param in name "viewType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 28849079 "getRecycledViewPool"
	public return_type class_ref 1077047 // RecycledViewPool
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve this RecyclerView's {@link RecycledViewPool}. This method will never return null;
if no pool is set for this view a new one will be created. See
{@link #setRecycledViewPool(RecycledViewPool) setRecycledViewPool} for more information.

@return The pool used to store recycled item views for reuse.
@see #setRecycledViewPool(RecycledViewPool)
"
      end

      operation 28849207 "setRecycledViewPool"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pool" type class_ref 1077047 // RecycledViewPool
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recycled view pools allow multiple RecyclerViews to share a common pool of scrap views.
This can be useful if you have multiple RecyclerViews with adapters that use the same
view types, for example if you have several data sets with the same kinds of item views
displayed by a {@link android.support.v4.view.ViewPager ViewPager}.

@param pool Pool to set. If this parameter is null a new pool will be created and used.
"
      end

      operation 28849335 "setViewCacheExtension"
	public explicit_return_type "void"
	nparams 1
	  param inout name "extension" type class_ref 1077175 // ViewCacheExtension
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a new {@link ViewCacheExtension} to be used by the Recycler.

@param extension ViewCacheExtension to be used or null if you want to clear the existing one.

@see {@link ViewCacheExtension#getViewForPositionAndType(Recycler, int, int)}
"
      end

      class 1077175 "ViewCacheExtension"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 28876983 "getViewForPositionAndType"
	  abstract public explicit_return_type "View"
	  nparams 3
	    param inout name "recycler" type class_ref 1074487 // Recycler
	    param in name "position" explicit_type "int"
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a View that can be binded to the given Adapter position.
<p>
This method should <b>not</b> create a new View. Instead, it is expected to return
an already created View that can be re-used for the given type and position.
If the View is marked as ignored, it should first call
{@link LayoutManager#stopIgnoringView(View)} before returning the View.
<p>
RecyclerView will re-bind the returned View to the position if necessary.

@param recycler The Recycler that can be used to bind the View
@param position The adapter position
@param type     The type of the View, defined by adapter
@return A View that is bound to the given position or NULL if there is no View to re-use
@see LayoutManager#ignoreView(View)
"
	end
      end

      operation 28849463 "setItemViewCacheSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the number of offscreen views to retain before adding them to the potentially shared
{@link #getRecycledViewPool() recycled view pool}.

<p>The offscreen view cache stays aware of changes in the attached adapter, allowing
a LayoutManager to reuse those views unmodified without needing to return to the adapter
to rebind them.</p>

@param size Number of views to cache offscreen before returning them to the general
            recycled view pool
"
      end

      operation 28849591 "getScrollState"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current scrolling state of the RecyclerView.

@return {@link #SCROLL_STATE_IDLE}, {@link #SCROLL_STATE_DRAGGING} or
{@link #SCROLL_STATE_SETTLING}
"
      end

      operation 28849719 "setScrollState"
	private explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28849847 "addItemDecoration"
	public explicit_return_type "void"
	nparams 2
	  param inout name "decor" type class_ref 1075511 // ItemDecoration
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an {@link ItemDecoration} to this RecyclerView. Item decorations can
affect both measurement and drawing of individual item views.

<p>Item decorations are ordered. Decorations placed earlier in the list will
be run/queried/drawn first for their effects on item views. Padding added to views
will be nested; a padding added by an earlier decoration will mean further
item decorations in the list will be asked to draw/pad within the previous decoration's
given area.</p>

@param decor Decoration to add
@param index Position in the decoration chain to insert this decoration at. If this value
             is negative the decoration will be added at the end.
"
      end

      operation 28849975 "addItemDecoration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "decor" type class_ref 1075511 // ItemDecoration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an {@link ItemDecoration} to this RecyclerView. Item decorations can
affect both measurement and drawing of individual item views.

<p>Item decorations are ordered. Decorations placed earlier in the list will
be run/queried/drawn first for their effects on item views. Padding added to views
will be nested; a padding added by an earlier decoration will mean further
item decorations in the list will be asked to draw/pad within the previous decoration's
given area.</p>

@param decor Decoration to add
"
      end

      operation 28850103 "removeItemDecoration"
	public explicit_return_type "void"
	nparams 1
	  param inout name "decor" type class_ref 1075511 // ItemDecoration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove an {@link ItemDecoration} from this RecyclerView.

<p>The given decoration will no longer impact the measurement and drawing of
item views.</p>

@param decor Decoration to remove
@see #addItemDecoration(ItemDecoration)
"
      end

      operation 28850231 "setChildDrawingOrderCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "childDrawingOrderCallback" type class_ref 1076663 // ChildDrawingOrderCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link ChildDrawingOrderCallback} to be used for drawing children.
<p>
See {@link ViewGroup#getChildDrawingOrder(int, int)} for details. Calling this method will
always call {@link ViewGroup#setChildrenDrawingOrderEnabled(boolean)}. The parameter will be
true if childDrawingOrderCallback is not null, false otherwise.
<p>
Note that child drawing order may be overridden by View's elevation.

@param childDrawingOrderCallback The ChildDrawingOrderCallback to be used by the drawing
                                 system.
"
      end

      operation 28850359 "setOnScrollListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1076279 // OnScrollListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Set a listener that will be notified of any changes in scroll state or position.

@param listener Listener to set or null to clear

@deprecated Use {@link #addOnScrollListener(OnScrollListener)} and
            {@link #removeOnScrollListener(OnScrollListener)}
"
      end

      operation 28850487 "addOnScrollListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1076279 // OnScrollListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a listener that will be notified of any changes in scroll state or position.

<p>Components that add a listener should take care to remove it when finished.
Other components that take ownership of a view may call {@link #clearOnScrollListeners()}
to remove all attached listeners.</p>

@param listener listener to set or null to clear
"
      end

      operation 28850615 "removeOnScrollListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1076279 // OnScrollListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener that was notified of any changes in scroll state or position.

@param listener listener to set or null to clear
"
      end

      operation 28850743 "clearOnScrollListeners"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all secondary listener that were notified of any changes in scroll state or position.
"
      end

      operation 28850871 "scrollToPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to scroll to a certain position.

RecyclerView does not implement scrolling logic, rather forwards the call to
{@link android.support.v7.widget.RecyclerView.LayoutManager#scrollToPosition(int)}
@param position Scroll to this adapter position
@see android.support.v7.widget.RecyclerView.LayoutManager#scrollToPosition(int)
"
      end

      operation 28850999 "jumpToPositionForSmoothScroller"
	private explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28851127 "smoothScrollToPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a smooth scroll to an adapter position.
<p>
To support smooth scrolling, you must override
{@link LayoutManager#smoothScrollToPosition(RecyclerView, State, int)} and create a
{@link SmoothScroller}.
<p>
{@link LayoutManager} is responsible for creating the actual scroll action. If you want to
provide a custom smooth scroll logic, override
{@link LayoutManager#smoothScrollToPosition(RecyclerView, State, int)} in your
LayoutManager.

@param position The adapter position to scroll to
@see LayoutManager#smoothScrollToPosition(RecyclerView, State, int)
"
      end

      operation 28851255 "scrollTo"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28851383 "scrollBy"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28851511 "consumePendingUpdateOperations"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method reflect data changes to the state.
<p>
Adapter changes during a scroll may trigger a crash because scroll assumes no data change
but data actually changed.
<p>
This method consumes all deferred changes to avoid that case.
"
      end

      operation 28851639 "hasUpdatedView"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if an existing view holder needs to be updated
"
      end

      operation 28851767 "scrollByInternal"
	package explicit_return_type "boolean"
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "ev" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does not perform bounds checking. Used by internal methods that have already validated input.
<p>
It also reports any unused scroll request to the related EdgeEffect.

@param x The amount of horizontal scroll request
@param y The amount of vertical scroll request
@param ev The originating MotionEvent, or null if not from a touch event.

@return Whether any scroll was consumed in either direction.
"
      end

      operation 28851895 "computeHorizontalScrollOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Compute the horizontal offset of the horizontal scrollbar's thumb within the horizontal
range. This value is used to compute the length of the thumb within the scrollbar's track.
</p>

<p>The range is expressed in arbitrary units that must be the same as the units used by
{@link #computeHorizontalScrollRange()} and {@link #computeHorizontalScrollExtent()}.</p>

<p>Default implementation returns 0.</p>

<p>If you want to support scroll bars, override
{@link RecyclerView.LayoutManager#computeHorizontalScrollOffset(RecyclerView.State)} in your
LayoutManager. </p>

@return The horizontal offset of the scrollbar's thumb
@see android.support.v7.widget.RecyclerView.LayoutManager#computeHorizontalScrollOffset
(RecyclerView.State)
"
      end

      operation 28852023 "computeHorizontalScrollExtent"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Compute the horizontal extent of the horizontal scrollbar's thumb within the
horizontal range. This value is used to compute the length of the thumb within the
scrollbar's track.</p>

<p>The range is expressed in arbitrary units that must be the same as the units used by
{@link #computeHorizontalScrollRange()} and {@link #computeHorizontalScrollOffset()}.</p>

<p>Default implementation returns 0.</p>

<p>If you want to support scroll bars, override
{@link RecyclerView.LayoutManager#computeHorizontalScrollExtent(RecyclerView.State)} in your
LayoutManager.</p>

@return The horizontal extent of the scrollbar's thumb
@see RecyclerView.LayoutManager#computeHorizontalScrollExtent(RecyclerView.State)
"
      end

      operation 28852151 "computeHorizontalScrollRange"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Compute the horizontal range that the horizontal scrollbar represents.</p>

<p>The range is expressed in arbitrary units that must be the same as the units used by
{@link #computeHorizontalScrollExtent()} and {@link #computeHorizontalScrollOffset()}.</p>

<p>Default implementation returns 0.</p>

<p>If you want to support scroll bars, override
{@link RecyclerView.LayoutManager#computeHorizontalScrollRange(RecyclerView.State)} in your
LayoutManager.</p>

@return The total horizontal range represented by the vertical scrollbar
@see RecyclerView.LayoutManager#computeHorizontalScrollRange(RecyclerView.State)
"
      end

      operation 28852279 "computeVerticalScrollOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Compute the vertical offset of the vertical scrollbar's thumb within the vertical range.
This value is used to compute the length of the thumb within the scrollbar's track. </p>

<p>The range is expressed in arbitrary units that must be the same as the units used by
{@link #computeVerticalScrollRange()} and {@link #computeVerticalScrollExtent()}.</p>

<p>Default implementation returns 0.</p>

<p>If you want to support scroll bars, override
{@link RecyclerView.LayoutManager#computeVerticalScrollOffset(RecyclerView.State)} in your
LayoutManager.</p>

@return The vertical offset of the scrollbar's thumb
@see android.support.v7.widget.RecyclerView.LayoutManager#computeVerticalScrollOffset
(RecyclerView.State)
"
      end

      operation 28852407 "computeVerticalScrollExtent"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Compute the vertical extent of the vertical scrollbar's thumb within the vertical range.
This value is used to compute the length of the thumb within the scrollbar's track.</p>

<p>The range is expressed in arbitrary units that must be the same as the units used by
{@link #computeVerticalScrollRange()} and {@link #computeVerticalScrollOffset()}.</p>

<p>Default implementation returns 0.</p>

<p>If you want to support scroll bars, override
{@link RecyclerView.LayoutManager#computeVerticalScrollExtent(RecyclerView.State)} in your
LayoutManager.</p>

@return The vertical extent of the scrollbar's thumb
@see RecyclerView.LayoutManager#computeVerticalScrollExtent(RecyclerView.State)
"
      end

      operation 28852535 "computeVerticalScrollRange"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Compute the vertical range that the vertical scrollbar represents.</p>

<p>The range is expressed in arbitrary units that must be the same as the units used by
{@link #computeVerticalScrollExtent()} and {@link #computeVerticalScrollOffset()}.</p>

<p>Default implementation returns 0.</p>

<p>If you want to support scroll bars, override
{@link RecyclerView.LayoutManager#computeVerticalScrollRange(RecyclerView.State)} in your
LayoutManager.</p>

@return The total vertical range represented by the vertical scrollbar
@see RecyclerView.LayoutManager#computeVerticalScrollRange(RecyclerView.State)
"
      end

      operation 28852663 "eatRequestLayout"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28852791 "resumeRequestLayout"
	package explicit_return_type "void"
	nparams 1
	  param inout name "performLayoutChildren" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28852919 "setLayoutFrozen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "frozen" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable or disable layout and scroll.  After <code>setLayoutFrozen(true)</code> is called,
Layout requests will be postponed until <code>setLayoutFrozen(false)</code> is called;
child views are not updated when RecyclerView is frozen, {@link #smoothScrollBy(int, int)},
{@link #scrollBy(int, int)}, {@link #scrollToPosition(int)} and
{@link #smoothScrollToPosition(int)} are dropped; TouchEvents and GenericMotionEvents are
dropped; {@link LayoutManager#onFocusSearchFailed(View, int, Recycler, State)} will not be
called.

<p>
<code>setLayoutFrozen(true)</code> does not prevent app from directly calling {@link
LayoutManager#scrollToPosition(int)}, {@link LayoutManager#smoothScrollToPosition(
RecyclerView, State, int)}.
<p>
{@link #setAdapter(Adapter)} and {@link #swapAdapter(Adapter, boolean)} will automatically
stop frozen.
<p>
Note: Running ItemAnimator is not stopped automatically,  it's caller's
responsibility to call ItemAnimator.end().

@param frozen   true to freeze layout and scroll, false to re-enable.
"
      end

      operation 28853047 "isLayoutFrozen"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if layout and scroll are frozen.

@return true if layout and scroll are frozen
@see #setLayoutFrozen(boolean)
"
      end

      operation 28853175 "smoothScrollBy"
	public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Animate a scroll by the given amount of pixels along either axis.

@param dx Pixels to scroll horizontally
@param dy Pixels to scroll vertically
"
      end

      operation 28853303 "fling"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "velocityX" explicit_type "int"
	  param in name "velocityY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin a standard fling with an initial velocity along each axis in pixels per second.
If the velocity given is below the system-defined minimum this method will return false
and no fling will occur.

@param velocityX Initial horizontal velocity in pixels per second
@param velocityY Initial vertical velocity in pixels per second
@return true if the fling was started, false if the velocity was too low to fling or
LayoutManager does not support scrolling in the axis fling is issued.

@see LayoutManager#canScrollVertically()
@see LayoutManager#canScrollHorizontally()
"
      end

      operation 28853431 "stopScroll"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stop any current scroll in progress, such as one started by
{@link #smoothScrollBy(int, int)}, {@link #fling(int, int)} or a touch-initiated fling.
"
      end

      operation 28853559 "stopScrollersInternal"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similar to {@link #stopScroll()} but does not set the state.
"
      end

      operation 28853687 "getMinFlingVelocity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum velocity to start a fling.

@return The minimum velocity to start a fling
"
      end

      operation 28853815 "getMaxFlingVelocity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum fling velocity used by this RecyclerView.

@return The maximum fling velocity used by this RecyclerView.
"
      end

      operation 28853943 "pullGlows"
	private explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "float"
	  param in name "overscrollX" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "overscrollY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply a pull to relevant overscroll glow effects
"
      end

      operation 28854071 "releaseGlows"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854199 "considerReleasingGlowsOnScroll"
	private explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854327 "absorbGlows"
	package explicit_return_type "void"
	nparams 2
	  param in name "velocityX" explicit_type "int"
	  param in name "velocityY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854455 "ensureLeftGlow"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854583 "ensureRightGlow"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854711 "ensureTopGlow"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854839 "ensureBottomGlow"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28854967 "invalidateGlows"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28855095 "focusSearch"
	public explicit_return_type "View"
	nparams 2
	  param inout name "focused" explicit_type "View"
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Since RecyclerView is a collection ViewGroup that includes virtual children (items that are
in the Adapter but not visible in the UI), it employs a more involved focus search strategy
that differs from other ViewGroups.
<p>
It first does a focus search within the RecyclerView. If this search finds a View that is in
the focus direction with respect to the currently focused View, RecyclerView returns that
child as the next focus target. When it cannot find such child, it calls
{@link LayoutManager#onFocusSearchFailed(View, int, Recycler, State)} to layout more Views
in the focus search direction. If LayoutManager adds a View that matches the
focus search criteria, it will be returned as the focus search result. Otherwise,
RecyclerView will call parent to handle the focus search like a regular ViewGroup.
<p>
When the direction is {@link View#FOCUS_FORWARD} or {@link View#FOCUS_BACKWARD}, a View that
is not in the focus direction is still valid focus target which may not be the desired
behavior if the Adapter has more children in the focus direction. To handle this case,
RecyclerView converts the focus direction to an absolute direction and makes a preliminary
focus search in that direction. If there are no Views to gain focus, it will call
{@link LayoutManager#onFocusSearchFailed(View, int, Recycler, State)} before running a
focus search with the original (relative) direction. This allows RecyclerView to provide
better candidates to the focus search while still allowing the view system to take focus from
the RecyclerView and give it to a more suitable child if such child exists.

@param focused The view that currently has focus
@param direction One of {@link View#FOCUS_UP}, {@link View#FOCUS_DOWN},
{@link View#FOCUS_LEFT}, {@link View#FOCUS_RIGHT}, {@link View#FOCUS_FORWARD},
{@link View#FOCUS_BACKWARD} or 0 for not applicable.

@return A new View that can be the next focus after the focused View
"
      end

      operation 28855223 "isPreferredNextFocus"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "focused" explicit_type "View"
	  param inout name "next" explicit_type "View"
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the new focus candidate is a good enough candidate such that RecyclerView will
assign it as the next focus View instead of letting view hierarchy decide.
A good candidate means a View that is aligned in the focus direction wrt the focused View
and is not the RecyclerView itself.
When this method returns false, RecyclerView will let the parent make the decision so the
same View may still get the focus as a result of that search.
"
      end

      operation 28855351 "isPreferredNextFocusAbsolute"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "focused" explicit_type "View"
	  param inout name "next" explicit_type "View"
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logic taken from FocusSarch#isCandidate
"
      end

      operation 28855479 "requestChildFocus"
	public explicit_return_type "void"
	nparams 2
	  param inout name "child" explicit_type "View"
	  param inout name "focused" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28855607 "requestChildRectangleOnScreen"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "child" explicit_type "View"
	  param inout name "rect" explicit_type "Rect"
	  param inout name "immediate" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28855735 "addFocusables"
	public explicit_return_type "void"
	nparams 3
	  param inout name "views" explicit_type "ArrayList<View>"
	  param in name "direction" explicit_type "int"
	  param in name "focusableMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28855863 "onRequestFocusInDescendants"
	protected explicit_return_type "boolean"
	nparams 2
	  param in name "direction" explicit_type "int"
	  param inout name "previouslyFocusedRect" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28855991 "onAttachedToWindow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28856119 "onDetachedFromWindow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28856247 "isAttachedToWindow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if RecyclerView is attached to window.

 @override"
      end

      operation 28856375 "assertInLayoutOrScroll"
	package explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if RecyclerView is in the middle of a layout or scroll and throws an
{@link IllegalStateException} if it <b>is not</b>.

@param message The message for the exception. Can be null.
@see #assertNotInLayoutOrScroll(String)
"
      end

      operation 28856503 "assertNotInLayoutOrScroll"
	package explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if RecyclerView is in the middle of a layout or scroll and throws an
{@link IllegalStateException} if it <b>is</b>.

@param message The message for the exception. Can be null.
@see #assertInLayoutOrScroll(String)
"
      end

      operation 28856631 "addOnItemTouchListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1073463 // OnItemTouchListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an {@link OnItemTouchListener} to intercept touch events before they are dispatched
to child views or this view's standard scrolling behavior.

<p>Client code may use listeners to implement item manipulation behavior. Once a listener
returns true from
{@link OnItemTouchListener#onInterceptTouchEvent(RecyclerView, MotionEvent)} its
{@link OnItemTouchListener#onTouchEvent(RecyclerView, MotionEvent)} method will be called
for each incoming MotionEvent until the end of the gesture.</p>

@param listener Listener to add
@see SimpleOnItemTouchListener
"
      end

      operation 28856759 "removeOnItemTouchListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1073463 // OnItemTouchListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove an {@link OnItemTouchListener}. It will no longer be able to intercept touch events.

@param listener Listener to remove
"
      end

      operation 28856887 "dispatchOnItemTouchIntercept"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28857015 "dispatchOnItemTouch"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28857143 "onInterceptTouchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28857271 "requestDisallowInterceptTouchEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "disallowIntercept" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28857399 "onTouchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28857527 "resetTouch"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28857655 "cancelTouch"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28857783 "onPointerUp"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28857911 "onGenericMotionEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @Override"
      end

      operation 28858039 "getScrollFactor"
	private explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ported from View.getVerticalScrollFactor.
"
      end

      operation 28858167 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthSpec" explicit_type "int"
	  param in name "heightSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28858295 "defaultOnMeasure"
	package explicit_return_type "void"
	nparams 2
	  param in name "widthSpec" explicit_type "int"
	  param in name "heightSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used when onMeasure is called before layout manager is set
"
      end

      operation 28858423 "onSizeChanged"
	protected explicit_return_type "void"
	nparams 4
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "oldw" explicit_type "int"
	  param in name "oldh" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28858551 "setItemAnimator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "animator" type class_ref 1075895 // ItemAnimator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link ItemAnimator} that will handle animations involving changes
to the items in this RecyclerView. By default, RecyclerView instantiates and
uses an instance of {@link DefaultItemAnimator}. Whether item animations are
enabled for the RecyclerView depends on the ItemAnimator and whether
the LayoutManager {@link LayoutManager#supportsPredictiveItemAnimations()
supports item animations}.

@param animator The ItemAnimator being set. If null, no animations will occur
when changes occur to the items in this RecyclerView.
"
      end

      operation 28858679 "onEnterLayoutOrScroll"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28858807 "onExitLayoutOrScroll"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28858935 "isAccessibilityEnabled"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28859063 "dispatchContentChangedIfNecessary"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28859191 "isComputingLayout"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether RecyclerView is currently computing a layout.
<p>
If this method returns true, it means that RecyclerView is in a lockdown state and any
attempt to update adapter contents will result in an exception because adapter contents
cannot be changed while RecyclerView is trying to compute the layout.
<p>
It is very unlikely that your code will be running during this state as it is
called by the framework when a layout traversal happens or RecyclerView starts to scroll
in response to system events (touch, accessibility etc).
<p>
This case may happen if you have some custom logic to change adapter contents in
response to a View callback (e.g. focus change callback) which might be triggered during a
layout calculation. In these cases, you should just postpone the change using a Handler or a
similar mechanism.

@return <code>true</code> if RecyclerView is currently computing a layout, <code>false</code>
        otherwise
"
      end

      operation 28859319 "shouldDeferAccessibilityEvent"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "event" explicit_type "AccessibilityEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if an accessibility event should not be dispatched now. This happens when an
accessibility request arrives while RecyclerView does not have a stable state which is very
hard to handle for a LayoutManager. Instead, this method records necessary information about
the event and dispatches a window change event after the critical section is finished.

@return True if the accessibility event should be postponed.
"
      end

      operation 28859447 "sendAccessibilityEventUnchecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" explicit_type "AccessibilityEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28859575 "getItemAnimator"
	public return_type class_ref 1075895 // ItemAnimator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current ItemAnimator for this RecyclerView. A null return value
indicates that there is no animator and that item changes will happen without
any animations. By default, RecyclerView instantiates and
uses an instance of {@link DefaultItemAnimator}.

@return ItemAnimator The current ItemAnimator. If null, no animations will occur
when changes occur to the items in this RecyclerView.
"
      end

      operation 28859703 "postAnimationRunner"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Post a runnable to the next frame to run pending item animations. Only the first such
request will be posted, governed by the mPostedAnimatorRunner flag.
"
      end

      operation 28859831 "predictiveItemAnimationsEnabled"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28859959 "processAdapterUpdatesAndSetAnimationFlags"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consumes adapter updates and calculates which type of animations we want to run.
Called in onMeasure and dispatchLayout.
<p>
This method may process only the pre-layout state of updates or all of them.
"
      end

      operation 28860087 "dispatchLayout"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wrapper around layoutChildren() that handles animating changes caused by layout.
Animations work on the assumption that there are five different kinds of items
in play:
PERSISTENT: items are visible before and after layout
REMOVED: items were visible before layout and were removed by the app
ADDED: items did not exist before layout and were added by the app
DISAPPEARING: items exist in the data set before/after, but changed from
visible to non-visible in the process of layout (they were moved off
screen as a side-effect of other changes)
APPEARING: items exist in the data set before/after, but changed from
non-visible to visible in the process of layout (they were moved on
screen as a side-effect of other changes)
The overall approach figures out what items exist before/after layout and
infers one of the five above states for each of the items. Then the animations
are set up accordingly:
PERSISTENT views are animated via
{@link ItemAnimator#animatePersistence(ViewHolder, ItemHolderInfo, ItemHolderInfo)}
DISAPPEARING views are animated via
{@link ItemAnimator#animateDisappearance(ViewHolder, ItemHolderInfo, ItemHolderInfo)}
APPEARING views are animated via
{@link ItemAnimator#animateAppearance(ViewHolder, ItemHolderInfo, ItemHolderInfo)}
and changed views are animated via
{@link ItemAnimator#animateChange(ViewHolder, ViewHolder, ItemHolderInfo, ItemHolderInfo)}.
"
      end

      operation 28860215 "saveFocusInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28860343 "resetFocusInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28860471 "recoverFocusFromState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28860599 "getDeepestFocusedViewWithId"
	private explicit_return_type "int"
	nparams 1
	  param inout name "view" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28860727 "dispatchLayoutStep1"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The first step of a layout where we;
- process adapter updates
- decide which animation should run
- save information about current views
- If necessary, run predictive layout and save its information
"
      end

      operation 28860855 "dispatchLayoutStep2"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The second layout step where we do the actual layout of the views for the final state.
This step might be run multiple times if necessary (e.g. measure).
"
      end

      operation 28860983 "dispatchLayoutStep3"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The final step of the layout where we save the information about views for animations,
trigger animations and do any necessary cleanup.
"
      end

      operation 28861111 "handleMissingPreInfoForChangeError"
	private explicit_return_type "void"
	nparams 3
	  param in name "key" explicit_type "long"
	  param inout name "holder" type class_ref 1073975 // ViewHolder
	  param inout name "oldChangeViewHolder" type class_ref 1073975 // ViewHolder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This handles the case where there is an unexpected VH missing in the pre-layout map.
<p>
We might be able to detect the error in the application which will help the developer to
resolve the issue.
<p>
If it is not an expected error, we at least print an error to notify the developer and ignore
the animation.

https://code.google.com/p/android/issues/detail?id=193958

@param key The change key
@param holder Current ViewHolder
@param oldChangeViewHolder Changed ViewHolder
"
      end

      operation 28861239 "recordAnimationInfoIfBouncedHiddenView"
	private explicit_return_type "void"
	nparams 2
	  param inout name "viewHolder" type class_ref 1073975 // ViewHolder
	  param inout name "animationInfo" type class_ref 1077303 // ItemHolderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the animation information for a view holder that was bounced from hidden list. It
also clears the bounce back flag.
"
      end

      operation 28861367 "findMinMaxChildLayoutPositions"
	private explicit_return_type "void"
	nparams 1
	  param inout name "into" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28861495 "didChildRangeChange"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "minPositionPreLayout" explicit_type "int"
	  param in name "maxPositionPreLayout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28861623 "removeDetachedView"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "child" explicit_type "View"
	  param inout name "animate" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28861751 "getChangedHolderKey"
	package explicit_return_type "long"
	nparams 1
	  param inout name "holder" type class_ref 1073975 // ViewHolder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a unique key to be used while handling change animations.
It might be child's position or stable id depending on the adapter type.
"
      end

      operation 28861879 "animateAppearance"
	private explicit_return_type "void"
	nparams 3
	  param inout name "itemHolder" type class_ref 1073975 // ViewHolder
	  param inout name "preLayoutInfo" type class_ref 1077303 // ItemHolderInfo
	  param inout name "postLayoutInfo" type class_ref 1077303 // ItemHolderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28862007 "animateDisappearance"
	private explicit_return_type "void"
	nparams 3
	  param inout name "holder" type class_ref 1073975 // ViewHolder
	  param inout name "preLayoutInfo" type class_ref 1077303 // ItemHolderInfo
	  param inout name "postLayoutInfo" type class_ref 1077303 // ItemHolderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28862135 "animateChange"
	private explicit_return_type "void"
	nparams 6
	  param inout name "oldHolder" type class_ref 1073975 // ViewHolder
	  param inout name "newHolder" type class_ref 1073975 // ViewHolder
	  param inout name "preInfo" type class_ref 1077303 // ItemHolderInfo
	  param inout name "postInfo" type class_ref 1077303 // ItemHolderInfo
	  param inout name "oldHolderDisappearing" explicit_type "boolean"
	  param inout name "newHolderDisappearing" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}, @NonNull ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28862263 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "l" explicit_type "int"
	  param in name "t" explicit_type "int"
	  param in name "r" explicit_type "int"
	  param in name "b" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28862391 "requestLayout"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28862519 "markItemDecorInsetsDirty"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28862647 "draw"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 165175 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28862775 "onDraw"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 165175 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28862903 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28863031 "generateDefaultLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28863159 "generateLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28863287 "generateLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28863415 "isAnimating"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if RecyclerView is currently running some animations.
<p>
If you want to be notified when animations are finished, use
{@link ItemAnimator#isRunning(ItemAnimator.ItemAnimatorFinishedListener)}.

@return True if there are some item animations currently running or waiting to be started.
"
      end

      operation 28863543 "saveOldPositions"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28863671 "clearOldPositions"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28863799 "offsetPositionRecordsForMove"
	package explicit_return_type "void"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28863927 "offsetPositionRecordsForInsert"
	package explicit_return_type "void"
	nparams 2
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28864055 "offsetPositionRecordsForRemove"
	package explicit_return_type "void"
	nparams 3
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	  param inout name "applyToPreLayout" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28864183 "viewRangeUpdate"
	package explicit_return_type "void"
	nparams 3
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	  param inout name "payload" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rebind existing views for the given range, or create as needed.

@param positionStart Adapter position to start at
@param itemCount Number of views that must explicitly be rebound
"
      end

      operation 28864311 "canReuseUpdatedViewHolder"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "viewHolder" type class_ref 1073975 // ViewHolder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28864439 "setDataSetChangedAfterLayout"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28864567 "markKnownViewsInvalid"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark all known views as invalid. Used in response to a, \"the whole world might have changed\"
data change event.
"
      end

      operation 28864695 "invalidateItemDecorations"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates all ItemDecorations. If RecyclerView has item decorations, calling this method
will trigger a {@link #requestLayout()} call.
"
      end

      operation 28864823 "getPreserveFocusAfterLayout"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the RecyclerView should attempt to preserve currently focused Adapter Item's
focus even if the View representing the Item is replaced during a layout calculation.
<p>
By default, this value is {@code true}.

@return True if the RecyclerView will try to preserve focused Item after a layout if it loses
focus.

@see #setPreserveFocusAfterLayout(boolean)
"
      end

      operation 28864951 "setPreserveFocusAfterLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preserveFocusAfterLayout" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether the RecyclerView should try to keep the same Item focused after a layout
calculation or not.
<p>
Usually, LayoutManagers keep focused views visible before and after layout but sometimes,
views may lose focus during a layout calculation as their state changes or they are replaced
with another view due to type change or animation. In these cases, RecyclerView can request
focus on the new view automatically.

@param preserveFocusAfterLayout Whether RecyclerView should preserve focused Item during a
                                layout calculations. Defaults to true.

@see #getPreserveFocusAfterLayout()
"
      end

      operation 28865079 "getChildViewHolder"
	public return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the {@link ViewHolder} for the given child view.

@param child Child of this RecyclerView to query for its ViewHolder
@return The child view's ViewHolder
"
      end

      operation 28865207 "findContainingItemView"
	public explicit_return_type "View"
	nparams 1
	  param inout name "view" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Traverses the ancestors of the given view and returns the item view that contains it and
also a direct child of the RecyclerView. This returned view can be used to get the
ViewHolder by calling {@link #getChildViewHolder(View)}.

@param view The view that is a descendant of the RecyclerView.

@return The direct child of the RecyclerView which contains the given view or null if the
provided view is not a descendant of this RecyclerView.

@see #getChildViewHolder(View)
@see #findContainingViewHolder(View)
"
      end

      operation 28865335 "findContainingViewHolder"
	public return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param inout name "view" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the ViewHolder that contains the given view.

@param view The view that is a descendant of the RecyclerView.

@return The ViewHolder that contains the given view or null if the provided view is not a
descendant of this RecyclerView.
"
      end

      operation 28865463 "getChildViewHolderInt"
	class_operation package return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28865591 "getChildPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated use {@link #getChildAdapterPosition(View)} or
{@link #getChildLayoutPosition(View)}.
"
      end

      operation 28865719 "getChildAdapterPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the adapter position that the given child view corresponds to.

@param child Child View to query
@return Adapter position corresponding to the given view or {@link #NO_POSITION}
"
      end

      operation 28865847 "getChildLayoutPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the adapter position of the given child view as of the latest completed layout pass.
<p>
This position may not be equal to Item's adapter position if there are pending changes
in the adapter which have not been reflected to the layout yet.

@param child Child View to query
@return Adapter position of the given View as of last layout pass or {@link #NO_POSITION} if
the View is representing a removed item.
"
      end

      operation 28865975 "getChildItemId"
	public explicit_return_type "long"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the stable item id that the given child view corresponds to.

@param child Child View to query
@return Item id corresponding to the given view or {@link #NO_ID}
"
      end

      operation 28866103 "findViewHolderForPosition"
	public return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated use {@link #findViewHolderForLayoutPosition(int)} or
{@link #findViewHolderForAdapterPosition(int)}
"
      end

      operation 28866231 "findViewHolderForLayoutPosition"
	public return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ViewHolder for the item in the given position of the data set as of the latest
layout pass.
<p>
This method checks only the children of RecyclerView. If the item at the given
<code>position</code> is not laid out, it <em>will not</em> create a new one.
<p>
Note that when Adapter contents change, ViewHolder positions are not updated until the
next layout calculation. If there are pending adapter updates, the return value of this
method may not match your adapter contents. You can use
#{@link ViewHolder#getAdapterPosition()} to get the current adapter position of a ViewHolder.
<p>
When the ItemAnimator is running a change animation, there might be 2 ViewHolders
with the same layout position representing the same Item. In this case, the updated
ViewHolder will be returned.

@param position The position of the item in the data set of the adapter
@return The ViewHolder at <code>position</code> or null if there is no such item
"
      end

      operation 28866359 "findViewHolderForAdapterPosition"
	public return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ViewHolder for the item in the given position of the data set. Unlike
{@link #findViewHolderForLayoutPosition(int)} this method takes into account any pending
adapter changes that may not be reflected to the layout yet. On the other hand, if
{@link Adapter#notifyDataSetChanged()} has been called but the new layout has not been
calculated yet, this method will return <code>null</code> since the new positions of views
are unknown until the layout is calculated.
<p>
This method checks only the children of RecyclerView. If the item at the given
<code>position</code> is not laid out, it <em>will not</em> create a new one.
<p>
When the ItemAnimator is running a change animation, there might be 2 ViewHolders
representing the same Item. In this case, the updated ViewHolder will be returned.

@param position The position of the item in the data set of the adapter
@return The ViewHolder at <code>position</code> or null if there is no such item
"
      end

      operation 28866487 "findViewHolderForPosition"
	package return_type class_ref 1073975 // ViewHolder
	nparams 2
	  param in name "position" explicit_type "int"
	  param inout name "checkNewPosition" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28866615 "findViewHolderForItemId"
	public return_type class_ref 1073975 // ViewHolder
	nparams 1
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ViewHolder for the item with the given id. The RecyclerView must
use an Adapter with {@link Adapter#setHasStableIds(boolean) stableIds} to
return a non-null value.
<p>
This method checks only the children of RecyclerView. If the item with the given
<code>id</code> is not laid out, it <em>will not</em> create a new one.

When the ItemAnimator is running a change animation, there might be 2 ViewHolders with the
same id. In this case, the updated ViewHolder will be returned.

@param id The id for the requested item
@return The ViewHolder with the given <code>id</code> or null if there is no such item
"
      end

      operation 28866743 "findChildViewUnder"
	public explicit_return_type "View"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the topmost view under the given point.

@param x Horizontal position in pixels to search
@param y Vertical position in pixels to search
@return The child view under (x, y) or null if no matching child is found
"
      end

      operation 28866871 "drawChild"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "canvas" type class_ref 165175 // Canvas
	  param inout name "child" explicit_type "View"
	  param in name "drawingTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28866999 "offsetChildrenVertical"
	public explicit_return_type "void"
	nparams 1
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offset the bounds of all child views by <code>dy</code> pixels.
Useful for implementing simple scrolling in {@link LayoutManager LayoutManagers}.

@param dy Vertical pixel offset to apply to the bounds of all child views
"
      end

      operation 28867127 "onChildAttachedToWindow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an item view is attached to this RecyclerView.

<p>Subclasses of RecyclerView may want to perform extra bookkeeping or modifications
of child views as they become attached. This will be called before a
{@link LayoutManager} measures or lays out the view and is a good time to perform these
changes.</p>

@param child Child view that is now attached to this RecyclerView and its associated window
"
      end

      operation 28867255 "onChildDetachedFromWindow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an item view is detached from this RecyclerView.

<p>Subclasses of RecyclerView may want to perform extra bookkeeping or modifications
of child views as they become detached. This will be called as a
{@link LayoutManager} fully detaches the child view from the parent and its window.</p>

@param child Child view that is now detached from this RecyclerView and its associated window
"
      end

      operation 28867383 "offsetChildrenHorizontal"
	public explicit_return_type "void"
	nparams 1
	  param in name "dx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offset the bounds of all child views by <code>dx</code> pixels.
Useful for implementing simple scrolling in {@link LayoutManager LayoutManagers}.

@param dx Horizontal pixel offset to apply to the bounds of all child views
"
      end

      operation 28867511 "getItemDecorInsetsForChild"
	package explicit_return_type "Rect"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28867639 "onScrolled"
	public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the scroll position of this RecyclerView changes. Subclasses should use
this method to respond to scrolling within the adapter's data set instead of an explicit
listener.

<p>This method will always be invoked before listeners. If a subclass needs to perform
any additional upkeep or bookkeeping after scrolling but before listeners run,
this is a good place to do so.</p>

<p>This differs from {@link View#onScrollChanged(int, int, int, int)} in that it receives
the distance scrolled in either direction within the adapter's data set instead of absolute
scroll coordinates. Since RecyclerView cannot compute the absolute scroll position from
any arbitrary point in the data set, <code>onScrollChanged</code> will always receive
the current {@link View#getScrollX()} and {@link View#getScrollY()} values which
do not correspond to the data set scroll position. However, some subclasses may choose
to use these fields as special offsets.</p>

@param dx horizontal distance scrolled in pixels
@param dy vertical distance scrolled in pixels
"
      end

      operation 28867767 "dispatchOnScrolled"
	package explicit_return_type "void"
	nparams 2
	  param in name "hresult" explicit_type "int"
	  param in name "vresult" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28867895 "onScrollStateChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the scroll state of this RecyclerView changes. Subclasses should use this
method to respond to state changes instead of an explicit listener.

<p>This method will always be invoked before listeners, but after the LayoutManager
responds to the scroll state change.</p>

@param state the new scroll state, one of {@link #SCROLL_STATE_IDLE},
             {@link #SCROLL_STATE_DRAGGING} or {@link #SCROLL_STATE_SETTLING}
"
      end

      operation 28868023 "dispatchOnScrollStateChanged"
	package explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28868151 "hasPendingAdapterUpdates"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether there are pending adapter updates which are not yet applied to the layout.
<p>
If this method returns <code>true</code>, it means that what user is currently seeing may not
reflect them adapter contents (depending on what has changed).
You may use this information to defer or cancel some operations.
<p>
This method returns true if RecyclerView has not yet calculated the first layout after it is
attached to the Window or the Adapter has been replaced.

@return True if there are some adapter updates which are not yet reflected to layout or false
if layout is up to date.
"
      end

      operation 28869943 "repositionShadowingViews"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1077431 "AdapterDataObserver"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 1077559 "AdapterDataObservable"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 28880823 "dispatchChildDetached"
	private explicit_return_type "void"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28880951 "dispatchChildAttached"
	private explicit_return_type "void"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1077687 "SmoothScroller"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 1078071 "SimpleOnItemTouchListener"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1930295 // <realization>
	  relation 1930295 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1930295 // <realization>
	    b parent class_ref 1073463 // OnItemTouchListener
	end

	operation 28902199 "onInterceptTouchEvent"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "rv" type class_ref 1068983 // RecyclerView
	    param inout name "e" explicit_type "MotionEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28902327 "onTouchEvent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "rv" type class_ref 1068983 // RecyclerView
	    param inout name "e" explicit_type "MotionEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28902455 "onRequestDisallowInterceptTouchEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "disallowIntercept" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 28908471 "getAdapterPositionFor"
	private explicit_return_type "int"
	nparams 1
	  param inout name "viewHolder" type class_ref 1073975 // ViewHolder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28908599 "setNestedScrollingEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " NestedScrollingChild"
      end

      operation 28908727 "isNestedScrollingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28908855 "startNestedScroll"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "axes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28908983 "stopNestedScroll"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28909111 "hasNestedScrollingParent"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28909239 "dispatchNestedScroll"
	public explicit_return_type "boolean"
	nparams 5
	  param in name "dxConsumed" explicit_type "int"
	  param in name "dyConsumed" explicit_type "int"
	  param in name "dxUnconsumed" explicit_type "int"
	  param in name "dyUnconsumed" explicit_type "int"
	  param inout name "offsetInWindow" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28909367 "dispatchNestedPreScroll"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param inout name "consumed" explicit_type "int"
	multiplicity "[]"
	  param inout name "offsetInWindow" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28909495 "dispatchNestedFling"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	  param inout name "consumed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28909623 "dispatchNestedPreFling"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 2241207 "LayoutParams"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end
    end

    class 1074743 "AdapterHelper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class that can enqueue and process adapter update operations.
<p>
To support animations, RecyclerView presents an older version the Adapter to best represent
previous state of the layout. Sometimes, this is not trivial when items are removed that were
not laid out, in which case, RecyclerView has no way of providing that item's view for
animations.
<p>
AdapterHelper creates an UpdateOp for each adapter data change then pre-processes them. During
pre processing, AdapterHelper finds out which UpdateOps can be deferred to second layout pass
and which cannot. For the UpdateOps that cannot be deferred, AdapterHelper will change them
according to previously deferred operation and dispatch them before the first layout pass. It
also takes care of updating deferred UpdateOps since order of operations is changed by this
process.
<p>
Although operations may be forwarded to LayoutManager in different orders, resulting data set
is guaranteed to be the consistent.
"
      class 2437175 "UpdateOp"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 10260663 "ADD"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10260791 "REMOVE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10260919 "UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10261047 "MOVE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 3"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10261175 "POOL_SIZE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 30"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10261303 "cmd"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10261431 "positionStart"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10261559 "payload"
	  package explicit_type "Object"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10261687 "itemCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " holds the target position if this is a MOVE
"
	end

	operation 40248247 "UpdateOp"
	  package explicit_return_type ""
	  nparams 4
	    param in name "cmd" explicit_type "int"
	    param in name "positionStart" explicit_type "int"
	    param in name "itemCount" explicit_type "int"
	    param inout name "payload" explicit_type "Object"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40248375 "cmdToString"
	  package explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40248503 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 40248631 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 40248759 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      attribute 10259767 "POSITION_TYPE_INVISIBLE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10259895 "POSITION_TYPE_NEW_OR_LAID_OUT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10260023 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10260151 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AHT\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 5007287 // mPendingUpdates (<unidirectional association>)
	relation 5007287 --->
	  stereotype "ArrayList"
	  a role_name "mPendingUpdates" init_value " new ArrayList<UpdateOp>()" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 5007287 // mPendingUpdates (<unidirectional association>)
	  b parent class_ref 2437175 // UpdateOp
      end

      classrelation 5007415 // mPostponedList (<unidirectional association>)
	relation 5007415 --->
	  stereotype "ArrayList"
	  a role_name "mPostponedList" init_value " new ArrayList<UpdateOp>()" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 5007415 // mPostponedList (<unidirectional association>)
	  b parent class_ref 2437175 // UpdateOp
      end

      attribute 10260279 "mOnItemProcessedCallback"
	package explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10260407 "mDisableRecycler"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10260535 "mExistingUpdateTypes"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 40244919 "AdapterHelper"
	package explicit_return_type ""
	nparams 1
	  param inout name "callback" explicit_type "Callback"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245047 "AdapterHelper"
	package explicit_return_type ""
	nparams 2
	  param inout name "callback" explicit_type "Callback"
	  param inout name "disableRecycler" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245175 "addUpdateOp"
	package return_type class_ref 1074743 // AdapterHelper
	nparams 1
	  param inout name "" explicit_type "UpdateOp...ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245303 "reset"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245431 "preProcess"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245559 "consumePostponedUpdates"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245687 "applyMove"
	private explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245815 "applyRemove"
	private explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40245943 "applyUpdate"
	private explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246071 "dispatchAndUpdateViewHolders"
	private explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246199 "dispatchFirstPassAndUpdateViewHolders"
	package explicit_return_type "void"
	nparams 2
	  param inout name "op" type class_ref 2437175 // UpdateOp
	  param in name "offsetStart" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246327 "updatePositionWithPostponed"
	private explicit_return_type "int"
	nparams 2
	  param in name "pos" explicit_type "int"
	  param in name "cmd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246455 "canFindInPreLayout"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246583 "applyAdd"
	private explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246711 "postponeAndUpdateViewHolders"
	private explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246839 "hasPendingUpdates"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40246967 "hasAnyUpdateTypes"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "updateTypes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40247095 "findPositionOffset"
	package explicit_return_type "int"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40247223 "findPositionOffset"
	package explicit_return_type "int"
	nparams 2
	  param in name "position" explicit_type "int"
	  param in name "firstPostponedItem" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40247351 "onItemRangeChanged"
	package explicit_return_type "boolean"
	nparams 3
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	  param inout name "payload" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if updates should be processed.
"
      end

      operation 40247479 "onItemRangeInserted"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if updates should be processed.
"
      end

      operation 40247607 "onItemRangeRemoved"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if updates should be processed.
"
      end

      operation 40247735 "onItemRangeMoved"
	package explicit_return_type "boolean"
	nparams 3
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if updates should be processed.
"
      end

      operation 40247863 "consumeUpdatesInOnePass"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips pre-processing and applies all updates in one pass.
"
      end

      operation 40247991 "applyPendingUpdatesToPosition"
	public explicit_return_type "int"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40248119 "hasUpdates"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40248887 "obtainUpdateOp"
	public return_type class_ref 2437175 // UpdateOp
	nparams 4
	  param in name "cmd" explicit_type "int"
	  param in name "positionStart" explicit_type "int"
	  param in name "itemCount" explicit_type "int"
	  param inout name "payload" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40249015 "recycleUpdateOp"
	public explicit_return_type "void"
	nparams 1
	  param inout name "op" type class_ref 2437175 // UpdateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40249143 "recycleUpdateOpsAndClearList"
	package explicit_return_type "void"
	nparams 1
	  param inout name "ops" explicit_type "List<UpdateOp>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1698487 "Toolbar"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A standard toolbar for use within application content.

<p>A Toolbar is a generalization of {@link ActionBar action bars} for use
within application layouts. While an action bar is traditionally part of an
{@link android.app.Activity Activity's} opaque window decor controlled by the framework,
a Toolbar may be placed at any arbitrary level of nesting within a view hierarchy.
An application may choose to designate a Toolbar as the action bar for an Activity
using the {@link android.support.v7.app.AppCompatActivity#setSupportActionBar(Toolbar)
setSupportActionBar()} method.</p>

<p>Toolbar supports a more focused feature set than ActionBar. From start to end, a toolbar
may contain a combination of the following optional elements:

<ul>
    <li><em>A navigation button.</em> This may be an Up arrow, navigation menu toggle, close,
    collapse, done or another glyph of the app's choosing. This button should always be used
    to access other navigational destinations within the container of the Toolbar and
    its signified content or otherwise leave the current context signified by the Toolbar.
    The navigation button is vertically aligned within the Toolbar's minimum height,
    if set.</li>
    <li><em>A branded logo image.</em> This may extend to the height of the bar and can be
    arbitrarily wide.</li>
    <li><em>A title and subtitle.</em> The title should be a signpost for the Toolbar's current
    position in the navigation hierarchy and the content contained there. The subtitle,
    if present should indicate any extended information about the current content.
    If an app uses a logo image it should strongly consider omitting a title and subtitle.</li>
    <li><em>One or more custom views.</em> The application may add arbitrary child views
    to the Toolbar. They will appear at this position within the layout. If a child view's
    {@link LayoutParams} indicates a {@link Gravity} value of
    {@link Gravity#CENTER_HORIZONTAL CENTER_HORIZONTAL} the view will attempt to center
    within the available space remaining in the Toolbar after all other elements have been
    measured.</li>
    <li><em>An {@link ActionMenuView action menu}.</em> The menu of actions will pin to the
    end of the Toolbar offering a few
    <a href=\"http://developer.android.com/design/patterns/actionbar.html#ActionButtons\">
    frequent, important or typical</a> actions along with an optional overflow menu for
    additional actions. Action buttons are vertically aligned within the Toolbar's
    minimum height, if set.</li>
</ul>
</p>

<p>In modern Android UIs developers should lean more on a visually distinct color scheme for
toolbars than on their application icon. The use of application icon plus title as a standard
layout is discouraged on API 21 devices and newer.</p>

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_buttonGravity
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_collapseContentDescription
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_collapseIcon
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetEnd
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetLeft
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetRight
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetStart
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetStartWithNavigation
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetEndWithActions
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_android_gravity
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_logo
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_logoDescription
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_maxButtonHeight
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationContentDescription
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationIcon
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_popupTheme
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_subtitle
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_subtitleTextAppearance
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_subtitleTextColor
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_title
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMargin
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginBottom
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginEnd
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginStart
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginTop
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleTextAppearance
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleTextColor
"
      class 2383415 "OnMenuItemClickListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 39959351 "onMenuItemClick"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "item" explicit_type "MenuItem"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when a menu item is clicked if the item itself did
not already handle the event.

@param item {@link MenuItem} that was clicked
@return <code>true</code> if the event was handled, <code>false</code> otherwise.
"
	end
      end

      attribute 10173623 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Toolbar\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4930999 // mMenuView (<unidirectional association>)
	relation 4930999 --->
	  a role_name "mMenuView" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4930999 // mMenuView (<unidirectional association>)
	  b parent class_ref 2387383 // ActionMenuView
      end

      attribute 10173751 "mCollapseDescription"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10173879 "mPopupTheme"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Theme resource against which to inflate popup menus. 
"
      end

      attribute 10174007 "mTitleTextAppearance"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174135 "mSubtitleTextAppearance"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174263 "mButtonGravity"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174391 "mMaxButtonHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174519 "mTitleMarginStart"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174647 "mTitleMarginEnd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174775 "mTitleMarginTop"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10174903 "mTitleMarginBottom"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175031 "mContentInsetStartWithNavigation"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175159 "mContentInsetEndWithActions"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175287 "mGravity"
	private explicit_type "int"
	init_value " GravityCompat.START | Gravity.CENTER_VERTICAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175415 "mTitleText"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175543 "mSubtitleText"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175671 "mTitleTextColor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175799 "mSubtitleTextColor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10175927 "mEatingTouch"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10176055 "mEatingHover"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10176183 "mTempMargins"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4932535 // mOnMenuItemClickListener (<unidirectional association>)
	relation 4932535 --->
	  a role_name "mOnMenuItemClickListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4932535 // mOnMenuItemClickListener (<unidirectional association>)
	  b parent class_ref 2383415 // OnMenuItemClickListener
      end

      classrelation 4932663 // mMenuViewItemClickListener (<unidirectional association>)
	relation 4932663 --->
	  a role_name "mMenuViewItemClickListener" init_value "
            new ActionMenuView.OnMenuItemClickListener() {
                @Override
                public boolean onMenuItemClick(MenuItem item) {
                    if (mOnMenuItemClickListener != null) {
                        return mOnMenuItemClickListener.onMenuItemClick(item);
                    }
                    return false;
                }
            }" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4932663 // mMenuViewItemClickListener (<unidirectional association>)
	  b parent class_ref 2387767 // OnMenuItemClickListener
      end

      class 2404535 "ExpandedActionViewMenuPresenter"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 4933047 // mExpandedMenuPresenter (<unidirectional association>)
	relation 4933047 --->
	  a role_name "mExpandedMenuPresenter" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4933047 // mExpandedMenuPresenter (<unidirectional association>)
	  b parent class_ref 2404535 // ExpandedActionViewMenuPresenter
      end

      attribute 10176311 "mCollapsible"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10176439 "mShowOverflowMenuRunnable"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        @Override public void run() {
            showOverflowMenu();
        }
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 39945783 "Toolbar"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39945911 "Toolbar"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39946039 "Toolbar"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	  param in name "defStyleAttr" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39946167 "setPopupTheme"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StyleRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the theme to use when inflating popup menus. By default, uses
the same theme as the toolbar itself.

@param resId theme used to inflate popup menus
@see #getPopupTheme()
"
      end

      operation 39946295 "getPopupTheme"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return resource identifier of the theme used to inflate popup menus, or
        0 if menus are inflated against the toolbar theme
@see #setPopupTheme(int)
"
      end

      operation 39946423 "setTitleMargin"
	public explicit_return_type "void"
	nparams 4
	  param in name "start" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the title margin.

@param start the starting title margin in pixels
@param top the top title margin in pixels
@param end the ending title margin in pixels
@param bottom the bottom title margin in pixels
@see #getTitleMarginStart()
@see #getTitleMarginTop()
@see #getTitleMarginEnd()
@see #getTitleMarginBottom()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMargin
"
      end

      operation 39946551 "getTitleMarginStart"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the starting title margin in pixels
@see #setTitleMarginStart(int)
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginStart
"
      end

      operation 39946679 "setTitleMarginStart"
	public explicit_return_type "void"
	nparams 1
	  param in name "margin" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the starting title margin in pixels.

@param margin the starting title margin in pixels
@see #getTitleMarginStart()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginStart
"
      end

      operation 39946807 "getTitleMarginTop"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the top title margin in pixels
@see #setTitleMarginTop(int)
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginTop
"
      end

      operation 39946935 "setTitleMarginTop"
	public explicit_return_type "void"
	nparams 1
	  param in name "margin" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the top title margin in pixels.

@param margin the top title margin in pixels
@see #getTitleMarginTop()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginTop
"
      end

      operation 39947063 "getTitleMarginEnd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the ending title margin in pixels
@see #setTitleMarginEnd(int)
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginEnd
"
      end

      operation 39947191 "setTitleMarginEnd"
	public explicit_return_type "void"
	nparams 1
	  param in name "margin" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ending title margin in pixels.

@param margin the ending title margin in pixels
@see #getTitleMarginEnd()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginEnd
"
      end

      operation 39947319 "getTitleMarginBottom"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the bottom title margin in pixels
@see #setTitleMarginBottom(int)
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginBottom
"
      end

      operation 39947447 "setTitleMarginBottom"
	public explicit_return_type "void"
	nparams 1
	  param in name "margin" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bottom title margin in pixels.

@param margin the bottom title margin in pixels
@see #getTitleMarginBottom()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_titleMarginBottom
"
      end

      operation 39947575 "onRtlPropertiesChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "layoutDirection" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39947703 "setLogo"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@DrawableRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a logo drawable from a resource id.

<p>This drawable should generally take the place of title text. The logo cannot be
clicked. Apps using a logo should also supply a description using
{@link #setLogoDescription(int)}.</p>

@param resId ID of a drawable resource
"
      end

      operation 39947831 "canShowOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39947959 "isOverflowMenuShowing"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the overflow menu is currently showing. This may not reflect
a pending show operation in progress.

@return true if the overflow menu is currently showing
"
      end

      operation 39948087 "isOverflowMenuShowPending"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39948215 "showOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Show the overflow items from the associated menu.

@return true if the menu was able to be shown, false otherwise
"
      end

      operation 39948343 "hideOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide the overflow items from the associated menu.

@return true if the menu was able to be hidden, false otherwise
"
      end

      operation 39948471 "setMenu"
	public explicit_return_type "void"
	nparams 2
	  param inout name "menu" explicit_type "MenuBuilder"
	  param inout name "outerPresenter" explicit_type "ActionMenuPresenter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39948599 "dismissPopupMenus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dismiss all currently showing popup menus, including overflow or submenus.
"
      end

      operation 39948727 "isTitleTruncated"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39948855 "setLogo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "drawable" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a logo drawable.

<p>This drawable should generally take the place of title text. The logo cannot be
clicked. Apps using a logo should also supply a description using
{@link #setLogoDescription(int)}.</p>

@param drawable Drawable to use as a logo
"
      end

      operation 39948983 "getLogo"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current logo drawable.

@return The current logo drawable
@see #setLogo(int)
@see #setLogo(android.graphics.drawable.Drawable)
"
      end

      operation 39949111 "setLogoDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a description of the toolbar's logo.

<p>This description will be used for accessibility or other similar descriptions
of the UI.</p>

@param resId String resource id
"
      end

      operation 39949239 "setLogoDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a description of the toolbar's logo.

<p>This description will be used for accessibility or other similar descriptions
of the UI.</p>

@param description Description to set
"
      end

      operation 39949367 "getLogoDescription"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the description of the toolbar's logo.

@return A description of the logo
"
      end

      operation 39949495 "ensureLogoView"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39949623 "hasExpandedActionView"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether this Toolbar is currently hosting an expanded action view.

<p>An action view may be expanded either directly from the
{@link android.view.MenuItem MenuItem} it belongs to or by user action. If the Toolbar
has an expanded action view it can be collapsed using the {@link #collapseActionView()}
method.</p>

@return true if the Toolbar has an expanded action view
"
      end

      operation 39949751 "collapseActionView"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Collapse a currently expanded action view. If this Toolbar does not have an
expanded action view this method has no effect.

<p>An action view may be expanded either directly from the
{@link android.view.MenuItem MenuItem} it belongs to or by user action.</p>

@see #hasExpandedActionView()
"
      end

      operation 39949879 "getTitle"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the title of this toolbar.

@return The current title.
"
      end

      operation 39950007 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the title of this toolbar.

<p>A title should be used as the anchor for a section of content. It should
describe or name the content being viewed.</p>

@param resId Resource ID of a string to set as the title
"
      end

      operation 39950135 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the title of this toolbar.

<p>A title should be used as the anchor for a section of content. It should
describe or name the content being viewed.</p>

@param title Title to set
"
      end

      operation 39950263 "getSubtitle"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the subtitle of this toolbar.

@return The current subtitle
"
      end

      operation 39950391 "setSubtitle"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the subtitle of this toolbar.

<p>Subtitles should express extended information about the current content.</p>

@param resId String resource ID
"
      end

      operation 39950519 "setSubtitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "subtitle" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the subtitle of this toolbar.

<p>Subtitles should express extended information about the current content.</p>

@param subtitle Subtitle to set
"
      end

      operation 39950647 "setTitleTextAppearance"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @StyleRes ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text color, size, style, hint color, and highlight color
from the specified TextAppearance resource.
"
      end

      operation 39950775 "setSubtitleTextAppearance"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @StyleRes ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text color, size, style, hint color, and highlight color
from the specified TextAppearance resource.
"
      end

      operation 39950903 "setTitleTextColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text color of the title, if present.

@param color The new text color in 0xAARRGGBB format
"
      end

      operation 39951031 "setSubtitleTextColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text color of the subtitle, if present.

@param color The new text color in 0xAARRGGBB format
"
      end

      operation 39951159 "getNavigationContentDescription"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Retrieve the currently configured content description for the navigation button view.
This will be used to describe the navigation action to users through mechanisms such
as screen readers or tooltips.

@return The navigation button's content description

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationContentDescription
"
      end

      operation 39951287 "setNavigationContentDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a content description for the navigation button if one is present. The content
description will be read via screen readers or other accessibility systems to explain
the action of the navigation button.

@param resId Resource ID of a content description string to set, or 0 to
             clear the description

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationContentDescription
"
      end

      operation 39951415 "setNavigationContentDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a content description for the navigation button if one is present. The content
description will be read via screen readers or other accessibility systems to explain
the action of the navigation button.

@param description Content description to set, or <code>null</code> to
                   clear the content description

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationContentDescription
"
      end

      operation 39951543 "setNavigationIcon"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@DrawableRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the icon to use for the toolbar's navigation button.

<p>The navigation button appears at the start of the toolbar if present. Setting an icon
will make the navigation button visible.</p>

<p>If you use a navigation icon you should also set a description for its action using
{@link #setNavigationContentDescription(int)}. This is used for accessibility and
tooltips.</p>

@param resId Resource ID of a drawable to set

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationIcon
"
      end

      operation 39951671 "setNavigationIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icon" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the icon to use for the toolbar's navigation button.

<p>The navigation button appears at the start of the toolbar if present. Setting an icon
will make the navigation button visible.</p>

<p>If you use a navigation icon you should also set a description for its action using
{@link #setNavigationContentDescription(int)}. This is used for accessibility and
tooltips.</p>

@param icon Drawable to set, may be null to clear the icon

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationIcon
"
      end

      operation 39951799 "getNavigationIcon"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the current drawable used as the navigation icon.

@return The navigation icon drawable

@attr ref android.support.v7.appcompat.R.styleable#Toolbar_navigationIcon
"
      end

      operation 39951927 "setNavigationOnClickListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" explicit_type "OnClickListener"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a listener to respond to navigation events.

<p>This listener will be called whenever the user clicks the navigation button
at the start of the toolbar. An icon must be set for the navigation button to appear.</p>

@param listener Listener to set
@see #setNavigationIcon(android.graphics.drawable.Drawable)
"
      end

      operation 39952055 "getMenu"
	public explicit_return_type "Menu"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Menu shown in the toolbar.

<p>Applications that wish to populate the toolbar's menu can do so from here. To use
an XML menu resource, use {@link #inflateMenu(int)}.</p>

@return The toolbar's Menu
"
      end

      operation 39952183 "setOverflowIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icon" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the icon to use for the overflow button.

@param icon Drawable to set, may be null to clear the icon
"
      end

      operation 39952311 "getOverflowIcon"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the current drawable used as the overflow icon.

@return The overflow icon drawable
"
      end

      operation 39952439 "ensureMenu"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39952567 "ensureMenuView"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39952695 "getMenuInflater"
	private explicit_return_type "MenuInflater"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39952823 "inflateMenu"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@MenuRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inflate a menu resource into this toolbar.

<p>Inflate an XML menu resource into this toolbar. Existing items in the menu will not
be modified or removed.</p>

@param resId ID of a menu resource to inflate
"
      end

      operation 39952951 "setOnMenuItemClickListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 2383415 // OnMenuItemClickListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a listener to respond to menu item click events.

<p>This listener will be invoked whenever a user selects a menu item from
the action buttons presented at the end of the toolbar or the associated overflow.</p>

@param listener Listener to set
"
      end

      operation 39953079 "setContentInsetsRelative"
	public explicit_return_type "void"
	nparams 2
	  param in name "contentInsetStart" explicit_type "int"
	  param in name "contentInsetEnd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content insets for this toolbar relative to layout direction.

<p>The content inset affects the valid area for Toolbar content other than
the navigation button and menu. Insets define the minimum margin for these components
and can be used to effectively align Toolbar content along well-known gridlines.</p>

@param contentInsetStart Content inset for the toolbar starting edge
@param contentInsetEnd Content inset for the toolbar ending edge

@see #setContentInsetsAbsolute(int, int)
@see #getContentInsetStart()
@see #getContentInsetEnd()
@see #getContentInsetLeft()
@see #getContentInsetRight()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetEnd
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetStart
"
      end

      operation 39953207 "getContentInsetStart"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the starting content inset for this toolbar.

<p>The content inset affects the valid area for Toolbar content other than
the navigation button and menu. Insets define the minimum margin for these components
and can be used to effectively align Toolbar content along well-known gridlines.</p>

@return The starting content inset for this toolbar

@see #setContentInsetsRelative(int, int)
@see #setContentInsetsAbsolute(int, int)
@see #getContentInsetEnd()
@see #getContentInsetLeft()
@see #getContentInsetRight()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetStart
"
      end

      operation 39953335 "getContentInsetEnd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ending content inset for this toolbar.

<p>The content inset affects the valid area for Toolbar content other than
the navigation button and menu. Insets define the minimum margin for these components
and can be used to effectively align Toolbar content along well-known gridlines.</p>

@return The ending content inset for this toolbar

@see #setContentInsetsRelative(int, int)
@see #setContentInsetsAbsolute(int, int)
@see #getContentInsetStart()
@see #getContentInsetLeft()
@see #getContentInsetRight()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetEnd
"
      end

      operation 39953463 "setContentInsetsAbsolute"
	public explicit_return_type "void"
	nparams 2
	  param in name "contentInsetLeft" explicit_type "int"
	  param in name "contentInsetRight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content insets for this toolbar.

<p>The content inset affects the valid area for Toolbar content other than
the navigation button and menu. Insets define the minimum margin for these components
and can be used to effectively align Toolbar content along well-known gridlines.</p>

@param contentInsetLeft Content inset for the toolbar's left edge
@param contentInsetRight Content inset for the toolbar's right edge

@see #setContentInsetsAbsolute(int, int)
@see #getContentInsetStart()
@see #getContentInsetEnd()
@see #getContentInsetLeft()
@see #getContentInsetRight()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetLeft
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetRight
"
      end

      operation 39953591 "getContentInsetLeft"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the left content inset for this toolbar.

<p>The content inset affects the valid area for Toolbar content other than
the navigation button and menu. Insets define the minimum margin for these components
and can be used to effectively align Toolbar content along well-known gridlines.</p>

@return The left content inset for this toolbar

@see #setContentInsetsRelative(int, int)
@see #setContentInsetsAbsolute(int, int)
@see #getContentInsetStart()
@see #getContentInsetEnd()
@see #getContentInsetRight()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetLeft
"
      end

      operation 39953719 "getContentInsetRight"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the right content inset for this toolbar.

<p>The content inset affects the valid area for Toolbar content other than
the navigation button and menu. Insets define the minimum margin for these components
and can be used to effectively align Toolbar content along well-known gridlines.</p>

@return The right content inset for this toolbar

@see #setContentInsetsRelative(int, int)
@see #setContentInsetsAbsolute(int, int)
@see #getContentInsetStart()
@see #getContentInsetEnd()
@see #getContentInsetLeft()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetRight
"
      end

      operation 39953847 "getContentInsetStartWithNavigation"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the start content inset to use when a navigation button is present.

<p>Different content insets are often called for when additional buttons are present
in the toolbar, as well as at different toolbar sizes. The larger value of
{@link #getContentInsetStart()} and this value will be used during layout.</p>

@return the start content inset used when a navigation icon has been set in pixels

@see #setContentInsetStartWithNavigation(int)
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetStartWithNavigation
"
      end

      operation 39953975 "setContentInsetStartWithNavigation"
	public explicit_return_type "void"
	nparams 1
	  param in name "insetStartWithNavigation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the start content inset to use when a navigation button is present.

<p>Different content insets are often called for when additional buttons are present
in the toolbar, as well as at different toolbar sizes. The larger value of
{@link #getContentInsetStart()} and this value will be used during layout.</p>

@param insetStartWithNavigation the inset to use when a navigation icon has been set
                                in pixels

@see #getContentInsetStartWithNavigation()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetStartWithNavigation
"
      end

      operation 39954103 "getContentInsetEndWithActions"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the end content inset to use when action buttons are present.

<p>Different content insets are often called for when additional buttons are present
in the toolbar, as well as at different toolbar sizes. The larger value of
{@link #getContentInsetEnd()} and this value will be used during layout.</p>

@return the end content inset used when a menu has been set in pixels

@see #setContentInsetEndWithActions(int)
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetEndWithActions
"
      end

      operation 39954231 "setContentInsetEndWithActions"
	public explicit_return_type "void"
	nparams 1
	  param in name "insetEndWithActions" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the start content inset to use when action buttons are present.

<p>Different content insets are often called for when additional buttons are present
in the toolbar, as well as at different toolbar sizes. The larger value of
{@link #getContentInsetEnd()} and this value will be used during layout.</p>

@param insetEndWithActions the inset to use when a menu has been set in pixels

@see #getContentInsetEndWithActions()
@attr ref android.support.v7.appcompat.R.styleable#Toolbar_contentInsetEndWithActions
"
      end

      operation 39954359 "getCurrentContentInsetStart"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the content inset that will be used on the starting side of the bar in the current
toolbar configuration.

@return the current content inset start in pixels

@see #getContentInsetStartWithNavigation()
"
      end

      operation 39954487 "getCurrentContentInsetEnd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the content inset that will be used on the ending side of the bar in the current
toolbar configuration.

@return the current content inset end in pixels

@see #getContentInsetEndWithActions()
"
      end

      operation 39954615 "getCurrentContentInsetLeft"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the content inset that will be used on the left side of the bar in the current
toolbar configuration.

@return the current content inset left in pixels

@see #getContentInsetStartWithNavigation()
@see #getContentInsetEndWithActions()
"
      end

      operation 39954743 "getCurrentContentInsetRight"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the content inset that will be used on the right side of the bar in the current
toolbar configuration.

@return the current content inset right in pixels

@see #getContentInsetStartWithNavigation()
@see #getContentInsetEndWithActions()
"
      end

      operation 39954871 "ensureNavButtonView"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39954999 "ensureCollapseButtonView"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39955127 "addSystemView"
	private explicit_return_type "void"
	nparams 2
	  param inout name "v" explicit_type "View"
	  param inout name "allowHide" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39955255 "onSaveInstanceState"
	protected explicit_return_type "Parcelable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39955383 "onRestoreInstanceState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "Parcelable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39955511 "postShowOverflowMenu"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39955639 "onDetachedFromWindow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39955767 "onTouchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ev" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39955895 "onHoverEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ev" explicit_type "MotionEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39956023 "measureChildConstrained"
	private explicit_return_type "void"
	nparams 6
	  param inout name "child" explicit_type "View"
	  param in name "parentWidthSpec" explicit_type "int"
	  param in name "widthUsed" explicit_type "int"
	  param in name "parentHeightSpec" explicit_type "int"
	  param in name "heightUsed" explicit_type "int"
	  param in name "heightConstraint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39956151 "measureChildCollapseMargins"
	private explicit_return_type "int"
	nparams 6
	  param inout name "child" explicit_type "View"
	  param in name "parentWidthMeasureSpec" explicit_type "int"
	  param in name "widthUsed" explicit_type "int"
	  param in name "parentHeightMeasureSpec" explicit_type "int"
	  param in name "heightUsed" explicit_type "int"
	  param inout name "collapsingMargins" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width + uncollapsed margins
"
      end

      operation 39956279 "shouldCollapse"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the Toolbar is collapsible and has no child views with a measured size > 0.
"
      end

      operation 39956407 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39956535 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "l" explicit_type "int"
	  param in name "t" explicit_type "int"
	  param in name "r" explicit_type "int"
	  param in name "b" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39956663 "getViewListMeasuredWidth"
	private explicit_return_type "int"
	nparams 2
	  param inout name "views" explicit_type "List<View>"
	  param inout name "collapsingMargins" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39956791 "layoutChildLeft"
	private explicit_return_type "int"
	nparams 4
	  param inout name "child" explicit_type "View"
	  param in name "left" explicit_type "int"
	  param inout name "collapsingMargins" explicit_type "int"
	multiplicity "[]"
	  param in name "alignmentHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39956919 "layoutChildRight"
	private explicit_return_type "int"
	nparams 4
	  param inout name "child" explicit_type "View"
	  param in name "right" explicit_type "int"
	  param inout name "collapsingMargins" explicit_type "int"
	multiplicity "[]"
	  param in name "alignmentHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957047 "getChildTop"
	private explicit_return_type "int"
	nparams 2
	  param inout name "child" explicit_type "View"
	  param in name "alignmentHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957175 "getChildVerticalGravity"
	private explicit_return_type "int"
	nparams 1
	  param in name "gravity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957303 "addCustomViewsWithGravity"
	private explicit_return_type "void"
	nparams 2
	  param inout name "views" explicit_type "List<View>"
	  param in name "gravity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare a list of non-SYSTEM child views. If the layout direction is RTL
this will be in reverse child order.

@param views List to populate. It will be cleared before use.
@param gravity Horizontal gravity to match against
"
      end

      operation 39957431 "getChildHorizontalGravity"
	private explicit_return_type "int"
	nparams 1
	  param in name "gravity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957559 "shouldLayout"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "view" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957687 "getHorizontalMargins"
	private explicit_return_type "int"
	nparams 1
	  param inout name "v" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957815 "getVerticalMargins"
	private explicit_return_type "int"
	nparams 1
	  param inout name "v" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39957943 "generateLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39958071 "generateLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39958199 "generateDefaultLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39958327 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39958455 "isCustomView"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39958583 "getWrapper"
	public explicit_return_type "DecorToolbar"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39958711 "removeChildrenForExpandedActionView"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39958839 "addChildrenForExpandedActionView"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39958967 "isChildOrHidden"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39959095 "setCollapsible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "collapsible" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Force the toolbar to collapse to zero-height during measurement if
it could be considered \"empty\" (no visible elements with nonzero measured size)
@hide
"
      end

      operation 39959223 "setMenuCallbacks"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pcb" explicit_type "Callback"
	  param inout name "mcb" explicit_type "Callback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must be called before the menu is accessed
@hide
"
      end
    end

    class 2167479 "LinearLayoutCompat"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Layout that arranges its children in a single column or a single row. The direction of
the row can be set by calling {@link #setOrientation(int) setOrientation()}.
You can also specify gravity, which specifies the alignment of all the child elements by
calling {@link #setGravity(int) setGravity()} or specify that specific children
grow to fill up any remaining space in the layout by setting the <em>weight</em> member of
{@link LinearLayoutCompat.LayoutParams LinearLayoutCompat.LayoutParams}.
The default orientation is horizontal.

<p>See the <a href=\"{@docRoot}guide/topics/ui/layout/linear.html\">Linear Layout</a>
guide.</p>

<p>
Also see {@link LinearLayoutCompat.LayoutParams} for layout attributes </p>
"
      class 2167607 "OrientationMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef({HORIZONTAL, VERTICAL})
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 9665591 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9665719 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 2167735 "DividerMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef(flag = true,
            value = {
                    SHOW_DIVIDER_NONE,
                    SHOW_DIVIDER_BEGINNING,
                    SHOW_DIVIDER_MIDDLE,
                    SHOW_DIVIDER_END
            })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 9665847 "SHOW_DIVIDER_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Don't show any dividers.

"
      end

      attribute 9665975 "SHOW_DIVIDER_BEGINNING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Show a divider at the beginning of the group.

"
      end

      attribute 9666103 "SHOW_DIVIDER_MIDDLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Show dividers between each item in the group.

"
      end

      attribute 9666231 "SHOW_DIVIDER_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Show a divider at the end of the group.

"
      end

      attribute 9666359 "mBaselineAligned"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether the children of this layout are baseline aligned.  Only applicable
if {@link #mOrientation} is horizontal.

"
      end

      attribute 9666487 "mBaselineAlignedChildIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If this layout is part of another layout that is baseline aligned,
use the child at this index as the baseline.

Note: this is orthogonal to {@link #mBaselineAligned}, which is concerned
with whether the children of this layout are baseline aligned.

"
      end

      attribute 9666615 "mBaselineChildTop"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The additional offset to the child's baseline.
We'll calculate the baseline of this layout as we measure vertically; for
horizontal linear layouts, the offset of 0 is appropriate.

"
      end

      attribute 9666743 "mOrientation"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9666871 "mGravity"
	private explicit_type "int"
	init_value " GravityCompat.START | Gravity.TOP"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9666999 "mTotalLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667127 "mWeightSum"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667255 "mUseLargestChild"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667383 "mMaxAscent"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667511 "mMaxDescent"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667639 "VERTICAL_GRAVITY_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667767 "INDEX_CENTER_VERTICAL"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9667895 "INDEX_TOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9668023 "INDEX_BOTTOM"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9668151 "INDEX_FILL"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9668279 "mDividerWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9668407 "mDividerHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9668535 "mShowDividers"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 9668663 "mDividerPadding"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 38101559 "LinearLayoutCompat"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38101687 "LinearLayoutCompat"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38101815 "LinearLayoutCompat"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	  param in name "defStyleAttr" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38101943 "setShowDividers"
	public explicit_return_type "void"
	nparams 1
	  param in name "showDividers" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@DividerMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set how dividers should be shown between items in this layout

@param showDividers One or more of {@link #SHOW_DIVIDER_BEGINNING},
                    {@link #SHOW_DIVIDER_MIDDLE}, or {@link #SHOW_DIVIDER_END},
                    or {@link #SHOW_DIVIDER_NONE} to show no dividers.
"
      end

      operation 38102071 "shouldDelayChildPressedState"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38102199 "getShowDividers"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@DividerMode
"
	
	
	
	comment "@return A flag set indicating how dividers should be shown around items.
@see #setShowDividers(int)
"
      end

      operation 38102327 "getDividerDrawable"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the divider Drawable that will divide each item.

@see #setDividerDrawable(Drawable)
"
      end

      operation 38102455 "setDividerDrawable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "divider" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a drawable to be used as a divider between items.

@param divider Drawable that will divide each item.

@see #setShowDividers(int)
"
      end

      operation 38102583 "setDividerPadding"
	public explicit_return_type "void"
	nparams 1
	  param in name "padding" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set padding displayed on both ends of dividers.

@param padding Padding value in pixels that will be applied to each end

@see #setShowDividers(int)
@see #setDividerDrawable(Drawable)
@see #getDividerPadding()
"
      end

      operation 38102711 "getDividerPadding"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the padding size used to inset dividers in pixels

@see #setShowDividers(int)
@see #setDividerDrawable(Drawable)
@see #setDividerPadding(int)
"
      end

      operation 38102839 "getDividerWidth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the width of the current divider drawable.

@hide Used internally by framework.
"
      end

      operation 38102967 "onDraw"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "canvas" type class_ref 165175 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38103095 "drawDividersVertical"
	package explicit_return_type "void"
	nparams 1
	  param inout name "canvas" type class_ref 165175 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38103223 "drawDividersHorizontal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "canvas" type class_ref 165175 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38103351 "drawHorizontalDivider"
	package explicit_return_type "void"
	nparams 2
	  param inout name "canvas" type class_ref 165175 // Canvas
	  param in name "top" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38103479 "drawVerticalDivider"
	package explicit_return_type "void"
	nparams 2
	  param inout name "canvas" type class_ref 165175 // Canvas
	  param in name "left" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38103607 "isBaselineAligned"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Indicates whether widgets contained within this layout are aligned
on their baseline or not.</p>

@return true when widgets are baseline-aligned, false otherwise
"
      end

      operation 38103735 "setBaselineAligned"
	public explicit_return_type "void"
	nparams 1
	  param inout name "baselineAligned" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Defines whether widgets contained in this layout are
baseline-aligned or not.</p>

@param baselineAligned true to align widgets on their baseline,
        false otherwise
"
      end

      operation 38103863 "isMeasureWithLargestChildEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When true, all children with a weight will be considered having
the minimum size of the largest child. If false, all children are
measured normally.

@return True to measure children with a weight using the minimum
        size of the largest child, false otherwise.
"
      end

      operation 38103991 "setMeasureWithLargestChildEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When set to true, all children with a weight will be considered having
the minimum size of the largest child. If false, all children are
measured normally.

Disabled by default.

@param enabled True to measure children with a weight using the
       minimum size of the largest child, false otherwise.
"
      end

      operation 38104119 "getBaseline"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38104247 "getBaselineAlignedChildIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The index of the child that will be used if this layout is
  part of a larger layout that is baseline aligned, or -1 if none has
  been set.
"
      end

      operation 38104375 "setBaselineAlignedChildIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param i The index of the child that will be used if this layout is
         part of a larger layout that is baseline aligned.
"
      end

      operation 38104503 "getVirtualChildAt"
	package explicit_return_type "View"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the view at the specified index. This method can be overriden
to take into account virtual children. Refer to
{@link android.widget.TableLayout} and {@link android.widget.TableRow}
for an example.</p>

@param index the child's index
@return the child at the specified index
"
      end

      operation 38104631 "getVirtualChildCount"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the virtual number of children. This number might be different
than the actual number of children if the layout can hold virtual
children. Refer to
{@link android.widget.TableLayout} and {@link android.widget.TableRow}
for an example.</p>

@return the virtual number of children
"
      end

      operation 38104759 "getWeightSum"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the desired weights sum.

@return A number greater than 0.0f if the weight sum is defined, or
        a number lower than or equals to 0.0f if not weight sum is
        to be used.
"
      end

      operation 38104887 "setWeightSum"
	public explicit_return_type "void"
	nparams 1
	  param in name "weightSum" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines the desired weights sum. If unspecified the weights sum is computed
at layout time by adding the layout_weight of each child.

This can be used for instance to give a single child 50% of the total
available space by giving it a layout_weight of 0.5 and setting the
weightSum to 1.0.

@param weightSum a number greater than 0.0f, or a number lower than or equals
       to 0.0f if the weight sum should be computed from the children's
       layout_weight
"
      end

      operation 38105015 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38105143 "hasDividerBeforeChildAt"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "childIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines where to position dividers between children.

@param childIndex Index of child to check for preceding divider
@return true if there should be a divider before the child at childIndex
@hide Pending API consideration. Currently only used internally by the system.
"
      end

      operation 38105271 "measureVertical"
	package explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Measures the children when the orientation of this LinearLayout is set
to {@link #VERTICAL}.

@param widthMeasureSpec Horizontal space requirements as imposed by the parent.
@param heightMeasureSpec Vertical space requirements as imposed by the parent.

@see #getOrientation()
@see #setOrientation(int)
@see #onMeasure(int, int)
"
      end

      operation 38105399 "forceUniformWidth"
	private explicit_return_type "void"
	nparams 2
	  param in name "count" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38105527 "measureHorizontal"
	package explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Measures the children when the orientation of this LinearLayout is set
to {@link #HORIZONTAL}.

@param widthMeasureSpec Horizontal space requirements as imposed by the parent.
@param heightMeasureSpec Vertical space requirements as imposed by the parent.

@see #getOrientation()
@see #setOrientation(int)
@see #onMeasure(int, int)
"
      end

      operation 38105655 "forceUniformHeight"
	private explicit_return_type "void"
	nparams 2
	  param in name "count" explicit_type "int"
	  param in name "widthMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38105783 "getChildrenSkipCount"
	package explicit_return_type "int"
	nparams 2
	  param inout name "child" explicit_type "View"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the number of children to skip after measuring/laying out
the specified child.</p>

@param child the child after which we want to skip children
@param index the index of the child after which we want to skip children
@return the number of children to skip, 0 by default
"
      end

      operation 38105911 "measureNullChild"
	package explicit_return_type "int"
	nparams 1
	  param in name "childIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the size (width or height) that should be occupied by a null
child.</p>

@param childIndex the index of the null child
@return the width or height of the child depending on the orientation
"
      end

      operation 38106039 "measureChildBeforeLayout"
	package explicit_return_type "void"
	nparams 6
	  param inout name "child" explicit_type "View"
	  param in name "childIndex" explicit_type "int"
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "totalWidth" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	  param in name "totalHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Measure the child according to the parent's measure specs. This
method should be overriden by subclasses to force the sizing of
children. This method is called by {@link #measureVertical(int, int)} and
{@link #measureHorizontal(int, int)}.</p>

@param child the child to measure
@param childIndex the index of the child in this view
@param widthMeasureSpec horizontal space requirements as imposed by the parent
@param totalWidth extra space that has been used up by the parent horizontally
@param heightMeasureSpec vertical space requirements as imposed by the parent
@param totalHeight extra space that has been used up by the parent vertically
"
      end

      operation 38106167 "getLocationOffset"
	package explicit_return_type "int"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the location offset of the specified child. This can be used
by subclasses to change the location of a given widget.</p>

@param child the child for which to obtain the location offset
@return the location offset in pixels
"
      end

      operation 38106295 "getNextLocationOffset"
	package explicit_return_type "int"
	nparams 1
	  param inout name "child" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the size offset of the next sibling of the specified child.
This can be used by subclasses to change the location of the widget
following <code>child</code>.</p>

@param child the child whose next sibling will be moved
@return the location offset of the next child in pixels
"
      end

      operation 38106423 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "l" explicit_type "int"
	  param in name "t" explicit_type "int"
	  param in name "r" explicit_type "int"
	  param in name "b" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38106551 "layoutVertical"
	package explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Position the children during a layout pass if the orientation of this
LinearLayout is set to {@link #VERTICAL}.

@see #getOrientation()
@see #setOrientation(int)
@see #onLayout(boolean, int, int, int, int)
@param left
@param top
@param right
@param bottom
"
      end

      operation 38106679 "layoutHorizontal"
	package explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Position the children during a layout pass if the orientation of this
LinearLayout is set to {@link #HORIZONTAL}.

@see #getOrientation()
@see #setOrientation(int)
@see #onLayout(boolean, int, int, int, int)
@param left
@param top
@param right
@param bottom
"
      end

      operation 38106807 "setChildFrame"
	private explicit_return_type "void"
	nparams 5
	  param inout name "child" explicit_type "View"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38106935 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@OrientationMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Should the layout be a column or a row.
@param orientation Pass {@link #HORIZONTAL} or {@link #VERTICAL}. Default
value is {@link #HORIZONTAL}.
"
      end

      operation 38107063 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@OrientationMode
"
	
	
	
	comment "Returns the current orientation.

@return either {@link #HORIZONTAL} or {@link #VERTICAL}
"
      end

      operation 38107191 "setGravity"
	public explicit_return_type "void"
	nparams 1
	  param in name "gravity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Describes how the child views are positioned. Defaults to GRAVITY_TOP. If
this layout has a VERTICAL orientation, this controls where all the child
views are placed if there is extra vertical space. If this layout has a
HORIZONTAL orientation, this controls the alignment of the children.

@param gravity See {@link android.view.Gravity}
"
      end

      operation 38107319 "setHorizontalGravity"
	public explicit_return_type "void"
	nparams 1
	  param in name "horizontalGravity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38107447 "setVerticalGravity"
	public explicit_return_type "void"
	nparams 1
	  param in name "verticalGravity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38107575 "generateLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38107703 "generateDefaultLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a set of layout parameters with a width of
{@link android.view.ViewGroup.LayoutParams#MATCH_PARENT}
and a height of {@link android.view.ViewGroup.LayoutParams#WRAP_CONTENT}
when the layout's orientation is {@link #VERTICAL}. When the orientation is
{@link #HORIZONTAL}, the width is set to {@link LayoutParams#WRAP_CONTENT}
and the height to {@link LayoutParams#WRAP_CONTENT}.
"
      end

      operation 38107831 "generateLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38107959 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Override to allow type-checking of LayoutParams."
      end

      operation 38108087 "onInitializeAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" explicit_type "AccessibilityEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38108215 "onInitializeAccessibilityNodeInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" explicit_type "AccessibilityNodeInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 2384567 "ActionBarOverlayLayout"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Special layout for the containing of an overlay action bar (and its content) to correctly handle
fitting system windows when the content has request that its layout ignore them.

@hide
"
      class 2384695 "ActionBarVisibilityCallback"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 10114743 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ActionBarOverlayLayout\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10114871 "mActionBarHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10114999 "mWindowVisibility"
	private explicit_type "int"
	init_value " View.VISIBLE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "private WindowDecorActionBar mActionBar;
"
      end

      attribute 10115127 "mIgnoreWindowContentOverlay"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10115255 "mOverlayMode"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10115383 "mHasNonEmbeddedTabs"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10115511 "mHideOnContentScroll"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10115639 "mAnimatingForFling"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10115767 "mHideOnContentScrollReference"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10115895 "mLastSystemUiVisibility"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4858935 // mActionBarVisibilityCallback (<unidirectional association>)
	relation 4858935 --->
	  a role_name "mActionBarVisibilityCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4858935 // mActionBarVisibilityCallback (<unidirectional association>)
	  b parent class_ref 2384695 // ActionBarVisibilityCallback
      end

      attribute 10116023 "ACTION_BAR_ANIMATE_DELAY"
	const_attribute private explicit_type "int"
	init_value " 600"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ms"
      end

      attribute 10116151 "mRemoveActionBarHideOffset"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        public void run() {
            haltActionBarHideOffsetAnimations();
            mCurrentActionBarTopAnimator = ViewCompat.animate(mActionBarTop).translationY(0)
                    .setListener(mTopAnimatorListener);
        }
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10116279 "mAddActionBarHideOffset"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        public void run() {
            haltActionBarHideOffsetAnimations();
            mCurrentActionBarTopAnimator = ViewCompat.animate(mActionBarTop)
                    .translationY(-mActionBarTop.getHeight())
                    .setListener(mTopAnimatorListener);
        }
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10116407 "ATTRS"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " new int [] {
            R.attr.actionBarSize,
            android.R.attr.windowContentOverlay
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 39708599 "ActionBarOverlayLayout"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39708727 "ActionBarOverlayLayout"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39708855 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39708983 "onDetachedFromWindow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39709111 "setActionBarVisibilityCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 2384695 // ActionBarVisibilityCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709239 "setOverlayMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "overlayMode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709367 "isInOverlayMode"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709495 "setHasNonEmbeddedTabs"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hasNonEmbeddedTabs" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709623 "setShowingForActionMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "showing" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709751 "onConfigurationChanged"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" explicit_type "Configuration"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709879 "onWindowSystemUiVisibilityChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "visible" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710007 "onWindowVisibilityChanged"
	protected explicit_return_type "void"
	nparams 1
	  param in name "visibility" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39710135 "applyInsets"
	private explicit_return_type "boolean"
	nparams 6
	  param inout name "view" explicit_type "View"
	  param inout name "insets" explicit_type "Rect"
	  param inout name "left" explicit_type "boolean"
	  param inout name "top" explicit_type "boolean"
	  param inout name "bottom" explicit_type "boolean"
	  param inout name "right" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710263 "fitSystemWindows"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "insets" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39710391 "generateDefaultLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39710519 "generateLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39710647 "generateLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39710775 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39710903 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711031 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711159 "draw"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 165175 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711287 "shouldDelayChildPressedState"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711415 "onStartNestedScroll"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "child" explicit_type "View"
	  param inout name "target" explicit_type "View"
	  param in name "axes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711543 "onNestedScrollAccepted"
	public explicit_return_type "void"
	nparams 3
	  param inout name "child" explicit_type "View"
	  param inout name "target" explicit_type "View"
	  param in name "axes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711671 "onNestedScroll"
	public explicit_return_type "void"
	nparams 5
	  param inout name "target" explicit_type "View"
	  param in name "dxConsumed" explicit_type "int"
	  param in name "dyConsumed" explicit_type "int"
	  param in name "dxUnconsumed" explicit_type "int"
	  param in name "dyUnconsumed" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711799 "onStopNestedScroll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39711927 "onNestedFling"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "target" explicit_type "View"
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	  param inout name "consumed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39712055 "onNestedPreScroll"
	public explicit_return_type "void"
	nparams 4
	  param inout name "target" explicit_type "View"
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param inout name "consumed" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39712183 "onNestedPreFling"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "target" explicit_type "View"
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39712311 "getNestedScrollAxes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39712439 "pullChildren"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39712567 "getDecorToolbar"
	private explicit_return_type "DecorToolbar"
	nparams 1
	  param inout name "view" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39712695 "setHideOnContentScrollEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hideOnContentScroll" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39712823 "isHideOnContentScrollEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39712951 "getActionBarHideOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713079 "setActionBarHideOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713207 "haltActionBarHideOffsetAnimations"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713335 "postRemoveActionBarHideOffset"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713463 "postAddActionBarHideOffset"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713591 "removeActionBarHideOffset"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713719 "addActionBarHideOffset"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713847 "shouldHideActionBarOnFling"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39713975 "setWindowCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" explicit_type "Callback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714103 "setWindowTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714231 "getTitle"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714359 "initFeature"
	public explicit_return_type "void"
	nparams 1
	  param in name "windowFeature" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714487 "setUiOptions"
	public explicit_return_type "void"
	nparams 1
	  param in name "uiOptions" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714615 "hasIcon"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714743 "hasLogo"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714871 "setIcon"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39714999 "setIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715127 "setLogo"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715255 "canShowOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715383 "isOverflowMenuShowing"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715511 "isOverflowMenuShowPending"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715639 "showOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715767 "hideOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39715895 "setMenuPrepared"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39716023 "setMenu"
	public explicit_return_type "void"
	nparams 2
	  param inout name "menu" explicit_type "Menu"
	  param inout name "cb" explicit_type "Callback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39716151 "saveToolbarHierarchyState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toolbarStates" explicit_type "SparseArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Parcelable> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39716279 "restoreToolbarHierarchyState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toolbarStates" explicit_type "SparseArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Parcelable> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39716407 "dismissPopups"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 2387383 "ActionMenuView"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ActionMenuView is a presentation of a series of menu options as a View. It provides
several top level options as action buttons while spilling remaining options over as
items in an overflow menu. This allows applications to present packs of actions inline with
specific or repeating content.
"
      class 2387511 "ActionMenuChildView"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 39758775 "needsDividerBefore"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 39758903 "needsDividerAfter"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4868663 // <generalisation>
	relation 4868663 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4868663 // <generalisation>
	  b parent class_ref 2167479 // LinearLayoutCompat
      end

      attribute 10124087 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ActionMenuView\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10124215 "MIN_CELL_SIZE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 56"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " dips"
      end

      attribute 10124343 "GENERATED_ITEM_PADDING"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " dips"
      end

      attribute 10124471 "mPopupTheme"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Theme resource against which to inflate popup menus. 
"
      end

      attribute 10124599 "mReserveOverflow"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10124727 "mFormatItems"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10124855 "mFormatItemsWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10124983 "mMinCellSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10125111 "mGeneratedItemPadding"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 2387767 "OnMenuItemClickListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 39758135 "onMenuItemClick"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "item" explicit_type "MenuItem"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when a menu item is clicked if the item itself did
not already handle the event.

@param item {@link MenuItem} that was clicked
@return <code>true</code> if the event was handled, <code>false</code> otherwise.
"
	end
      end

      classrelation 4869687 // mOnMenuItemClickListener (<unidirectional association>)
	relation 4869687 --->
	  a role_name "mOnMenuItemClickListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4869687 // mOnMenuItemClickListener (<unidirectional association>)
	  b parent class_ref 2387767 // OnMenuItemClickListener
      end

      operation 39753655 "ActionMenuView"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39753783 "ActionMenuView"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39753911 "setPopupTheme"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StyleRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the theme to use when inflating popup menus. By default, uses
the same theme as the action menu view itself.

@param resId theme used to inflate popup menus
@see #getPopupTheme()
"
      end

      operation 39754039 "getPopupTheme"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return resource identifier of the theme used to inflate popup menus, or
        0 if menus are inflated against the action menu view theme
@see #setPopupTheme(int)
"
      end

      operation 39754167 "setPresenter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "presenter" explicit_type "ActionMenuPresenter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param presenter Menu presenter used to display popup menu
@hide
"
      end

      operation 39754295 "onConfigurationChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" explicit_type "Configuration"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39754423 "setOnMenuItemClickListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 2387767 // OnMenuItemClickListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39754551 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39754679 "onMeasureExactFormat"
	private explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39754807 "measureChildForCells"
	class_operation package explicit_return_type "int"
	nparams 5
	  param inout name "child" explicit_type "View"
	  param in name "cellSize" explicit_type "int"
	  param in name "cellsRemaining" explicit_type "int"
	  param in name "parentHeightMeasureSpec" explicit_type "int"
	  param in name "parentHeightPadding" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Measure a child view to fit within cell-based formatting. The child's width
will be measured to a whole multiple of cellSize.

<p>Sets the expandable and cellsUsed fields of LayoutParams.

@param child Child to measure
@param cellSize Size of one cell
@param cellsRemaining Number of cells remaining that this view can expand to fill
@param parentHeightMeasureSpec MeasureSpec used by the parent view
@param parentHeightPadding Padding present in the parent view
@return Number of cells this child was measured to occupy
"
      end

      operation 39754935 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39755063 "onDetachedFromWindow"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39755191 "setOverflowIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icon" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the icon to use for the overflow button.

@param icon Drawable to set, may be null to clear the icon
"
      end

      operation 39755319 "getOverflowIcon"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the current drawable used as the overflow icon.

@return The overflow icon drawable
"
      end

      operation 39755447 "isOverflowReserved"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39755575 "setOverflowReserved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reserveOverflow" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39755703 "generateDefaultLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39755831 "generateLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39755959 "generateLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39756087 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 39756215 "generateOverflowButtonLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39756343 "invokeItem"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "item" explicit_type "MenuItemImpl"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39756471 "getWindowAnimations"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39756599 "initialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" explicit_type "MenuBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39756727 "getMenu"
	public explicit_return_type "Menu"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Menu object that this ActionMenuView is currently presenting.

<p>Applications should use this method to obtain the ActionMenuView's Menu object
and inflate or add content to it as necessary.</p>

@return the Menu presented by this view
"
      end

      operation 39756855 "setMenuCallbacks"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pcb" explicit_type "Callback"
	  param inout name "mcb" explicit_type "Callback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must be called before the first call to getMenu()
@hide
"
      end

      operation 39756983 "peekMenu"
	public explicit_return_type "MenuBuilder"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current menu or null if one has not yet been configured.
@hide Internal use only for action bar integration
"
      end

      operation 39757111 "showOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Show the overflow items from the associated menu.

@return true if the menu was able to be shown, false otherwise
"
      end

      operation 39757239 "hideOverflowMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide the overflow items from the associated menu.

@return true if the menu was able to be hidden, false otherwise
"
      end

      operation 39757367 "isOverflowMenuShowing"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the overflow menu is currently showing. This may not reflect
a pending show operation in progress.

@return true if the overflow menu is currently showing
"
      end

      operation 39757495 "isOverflowMenuShowPending"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 39757623 "dismissPopupMenus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dismiss any popups associated with this menu view.
"
      end

      operation 39757751 "hasSupportDividerBeforeChildAt"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "childIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide Private LinearLayout (superclass) API. Un-hide if LinearLayout API is made public.
"
      end

      operation 39757879 "dispatchPopulateAccessibilityEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" explicit_type "AccessibilityEvent"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39758007 "setExpandedActionViewsExclusive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      class 2387895 "MenuBuilderCallback"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 39758263 "onMenuItemSelected"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "menu" explicit_type "MenuBuilder"
	    param inout name "item" explicit_type "MenuItem"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 39758391 "onMenuModeChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "menu" explicit_type "MenuBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 2388023 "ActionMenuPresenterCallback"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 39758519 "onCloseMenu"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "menu" explicit_type "MenuBuilder"
	    param inout name "allMenusAreClosing" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 39758647 "onOpenSubMenu"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "subMenu" explicit_type "MenuBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 2397239 "AppCompatPopupWindow"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 10149687 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AppCompatPopupWindow\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 2413879 "GridLayout"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A layout that places its children in a rectangular <em>grid</em>.
<p>
The grid is composed of a set of infinitely thin lines that separate the
viewing area into <em>cells</em>. Throughout the API, grid lines are referenced
by grid <em>indices</em>. A grid with {@code N} columns
has {@code N + 1} grid indices that run from {@code 0}
through {@code N} inclusive. Regardless of how GridLayout is
configured, grid index {@code 0} is fixed to the leading edge of the
container and grid index {@code N} is fixed to its trailing edge
(after padding is taken into account).

<h4>Row and Column Specs</h4>

Children occupy one or more contiguous cells, as defined
by their {@link GridLayout.LayoutParams#rowSpec rowSpec} and
{@link GridLayout.LayoutParams#columnSpec columnSpec} layout parameters.
Each spec defines the set of rows or columns that are to be
occupied; and how children should be aligned within the resulting group of cells.
Although cells do not normally overlap in a GridLayout, GridLayout does
not prevent children being defined to occupy the same cell or group of cells.
In this case however, there is no guarantee that children will not themselves
overlap after the layout operation completes.

<h4>Default Cell Assignment</h4>

If a child does not specify the row and column indices of the cell it
wishes to occupy, GridLayout assigns cell locations automatically using its:
{@link GridLayout#setOrientation(int) orientation},
{@link GridLayout#setRowCount(int) rowCount} and
{@link GridLayout#setColumnCount(int) columnCount} properties.

<h4>Space</h4>

Space between children may be specified either by using instances of the
dedicated {@link android.support.v7.widget.Space} view or by setting the

{@link ViewGroup.MarginLayoutParams#leftMargin leftMargin},
{@link ViewGroup.MarginLayoutParams#topMargin topMargin},
{@link ViewGroup.MarginLayoutParams#rightMargin rightMargin} and
{@link ViewGroup.MarginLayoutParams#bottomMargin bottomMargin}

layout parameters. When the
{@link GridLayout#setUseDefaultMargins(boolean) useDefaultMargins}
property is set, default margins around children are automatically
allocated based on the prevailing UI style guide for the platform.
Each of the margins so defined may be independently overridden by an assignment
to the appropriate layout parameter.
Default values will generally produce a reasonable spacing between components
but values may change between different releases of the platform.

<h4>Excess Space Distribution</h4>

GridLayout's distribution of excess space accommodates the principle of weight.
In the event that no weights are specified, columns and rows are taken as
flexible if their views specify some form of alignment within their groups.
<p>
The flexibility of a view is therefore influenced by its alignment which is,
in turn, typically defined by setting the
{@link LayoutParams#setGravity(int) gravity} property of the child's layout parameters.
If either a weight or alignment were defined along a given axis then the component
is taken as <em>flexible</em> in that direction. If no weight or alignment was set,
the component is instead assumed to be <em>inflexible</em>.
<p>
Multiple components in the same row or column group are
considered to act in <em>parallel</em>. Such a
group is flexible only if <em>all</em> of the components
within it are flexible. Row and column groups that sit either side of a common boundary
are instead considered to act in <em>series</em>. The composite group made of these two
elements is flexible if <em>one</em> of its elements is flexible.
<p>
To make a column stretch, make sure all of the components inside it define a
weight or a gravity. To prevent a column from stretching, ensure that one of the components
in the column does not define a weight or a gravity.
<p>
When the principle of flexibility does not provide complete disambiguation,
GridLayout's algorithms favour rows and columns that are closer to its <em>right</em>
and <em>bottom</em> edges. To be more precise, GridLayout treats each of its layout
parameters as a constraint in the a set of variables that define the grid-lines along a
given axis. During layout, GridLayout solves the constraints so as to return the unique
solution to those constraints for which all variables are less-than-or-equal-to
the corresponding value in any other valid solution.

<h4>Interpretation of GONE</h4>

For layout purposes, GridLayout treats views whose visibility status is
{@link View#GONE GONE}, as having zero width and height. This is subtly different from
the policy of ignoring views that are marked as GONE outright. If, for example, a gone-marked
view was alone in a column, that column would itself collapse to zero width if and only if
no gravity was defined on the view. If gravity was defined, then the gone-marked
view has no effect on the layout and the container should be laid out as if the view
had never been added to it. GONE views are taken to have zero weight during excess space
distribution.
<p>
These statements apply equally to rows as well as columns, and to groups of rows or columns.


<p>
See {@link GridLayout.LayoutParams} for a full description of the
layout parameters used by GridLayout.

@attr name android:orientation
@attr name android:rowCount
@attr name android:columnCount
@attr name android:useDefaultMargins
@attr name android:rowOrderPreserved
@attr name android:columnOrderPreserved
"
      attribute 10185527 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " LinearLayout.HORIZONTAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Public constants

The horizontal orientation.

"
      end

      attribute 10185655 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " LinearLayout.VERTICAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The vertical orientation.

"
      end

      attribute 10185783 "UNDEFINED"
	class_attribute const_attribute public explicit_type "int"
	init_value " Integer.MIN_VALUE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The constant used to indicate that a value is undefined.
Fields can use this value to indicate that their values
have not yet been set. Similarly, methods can return this value
to indicate that there is no suitable value that the implementation
can return.
The value used for the constant (currently {@link Integer#MIN_VALUE}) is
intended to avoid confusion between valid values whose sign may not be known.

"
      end

      attribute 10185911 "ALIGN_BOUNDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This constant is an {@link #setAlignmentMode(int) alignmentMode}.
When the {@code alignmentMode} is set to {@link #ALIGN_BOUNDS}, alignment
is made between the edges of each component's raw
view boundary: i.e. the area delimited by the component's:
{@link android.view.View#getTop() top},
{@link android.view.View#getLeft() left},
{@link android.view.View#getBottom() bottom} and
{@link android.view.View#getRight() right} properties.
<p>
For example, when {@code GridLayout} is in {@link #ALIGN_BOUNDS} mode,
children that belong to a row group that uses {@link #TOP} alignment will
all return the same value when their {@link android.view.View#getTop()}
method is called.

@see #setAlignmentMode(int)

"
      end

      attribute 10186039 "ALIGN_MARGINS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This constant is an {@link #setAlignmentMode(int) alignmentMode}.
When the {@code alignmentMode} is set to {@link #ALIGN_MARGINS},
the bounds of each view are extended outwards, according
to their margins, before the edges of the resulting rectangle are aligned.
<p>
For example, when {@code GridLayout} is in {@link #ALIGN_MARGINS} mode,
the quantity {@code top - layoutParams.topMargin} is the same for all children that
belong to a row group that uses {@link #TOP} alignment.

@see #setAlignmentMode(int)

"
      end

      attribute 10186167 "MAX_SIZE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 100000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Misc constants
"
      end

      attribute 10186295 "DEFAULT_CONTAINER_MARGIN"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10186423 "UNINITIALIZED_HASH"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10186551 "DEFAULT_ORIENTATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " HORIZONTAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defaults
"
      end

      attribute 10186679 "DEFAULT_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10186807 "DEFAULT_USE_DEFAULT_MARGINS"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10186935 "DEFAULT_ORDER_PRESERVED"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187063 "DEFAULT_ALIGNMENT_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " ALIGN_MARGINS"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187191 "ORIENTATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_orientation"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TypedArray indices
"
      end

      attribute 10187319 "ROW_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_rowCount"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187447 "COLUMN_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_columnCount"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187575 "USE_DEFAULT_MARGINS"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_useDefaultMargins"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187703 "ALIGNMENT_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_alignmentMode"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187831 "ROW_ORDER_PRESERVED"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_rowOrderPreserved"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10187959 "COLUMN_ORDER_PRESERVED"
	class_attribute const_attribute private explicit_type "int"
	init_value " R.styleable.GridLayout_columnOrderPreserved"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 2414007 "Axis"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 10188727 "NEW"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10188855 "PENDING"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10188983 "COMPLETE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10189111 "horizontal"
	  const_attribute public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10189239 "definedCount"
	  public explicit_type "int"
	  init_value " UNDEFINED"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10189367 "maxIndex"
	  private explicit_type "int"
	  init_value " UNDEFINED"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4952247 // groupBounds (<unidirectional association>)
	  relation 4952247 --->
	    a role_name "groupBounds" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Spec, Bounds> ${name}${value};
"
	      classrelation_ref 4952247 // groupBounds (<unidirectional association>)
	    b parent class_ref 2414519 // PackedMap
	end

	attribute 10189495 "groupBoundsValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4952375 // forwardLinks (<unidirectional association>)
	  relation 4952375 --->
	    a role_name "forwardLinks" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Interval, MutableInt> ${name}${value};
"
	      classrelation_ref 4952375 // forwardLinks (<unidirectional association>)
	    b parent class_ref 2414519 // PackedMap
	end

	attribute 10189623 "forwardLinksValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4952503 // backwardLinks (<unidirectional association>)
	  relation 4952503 --->
	    a role_name "backwardLinks" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Interval, MutableInt> ${name}${value};
"
	      classrelation_ref 4952503 // backwardLinks (<unidirectional association>)
	    b parent class_ref 2414519 // PackedMap
	end

	attribute 10189751 "backwardLinksValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10189879 "leadingMargins"
	  public explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190007 "leadingMarginsValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190135 "trailingMargins"
	  public explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190263 "trailingMarginsValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4952631 // arcs (<unidirectional association>)
	  relation 4952631 --->
	    a role_name "arcs" multiplicity "[]" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 4952631 // arcs (<unidirectional association>)
	    b parent class_ref 2414647 // Arc
	end

	attribute 10190391 "arcsValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190519 "locations"
	  public explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190647 "locationsValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190775 "hasWeights"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10190903 "hasWeightsValid"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10191031 "deltas"
	  public explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10191159 "orderPreserved"
	  package explicit_type "boolean"
	  init_value " DEFAULT_ORDER_PRESERVED"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4952759 // parentMin (<unidirectional association>)
	  relation 4952759 --->
	    a role_name "parentMin" init_value " new MutableInt(0)" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4952759 // parentMin (<unidirectional association>)
	    b parent class_ref 2414775 // MutableInt
	end

	classrelation 4952887 // parentMax (<unidirectional association>)
	  relation 4952887 --->
	    a role_name "parentMax" init_value " new MutableInt(-MAX_SIZE)" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4952887 // parentMax (<unidirectional association>)
	    b parent class_ref 2414775 // MutableInt
	end

	operation 40038711 "Axis"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "horizontal" explicit_type "boolean"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40038839 "calculateMaxIndex"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40038967 "getMaxIndex"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039095 "getCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039223 "setCount"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "count" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039351 "isOrderPreserved"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039479 "setOrderPreserved"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "orderPreserved" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039607 "createGroupBounds"
	  private return_type class_ref 2414519 // PackedMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Spec, Bounds> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039735 "computeGroupBounds"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039863 "getGroupBounds"
	  public return_type class_ref 2414519 // PackedMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Spec, Bounds> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40039991 "createLinks"
	  private return_type class_ref 2414519 // PackedMap
	  nparams 1
	    param inout name "min" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Interval, MutableInt> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add values computed by alignment - taking the max of all alignments in each span"
	end

	operation 40040119 "computeLinks"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "links" type class_ref 2414519 // PackedMap
	    param inout name "min" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Interval, MutableInt> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40040247 "getForwardLinks"
	  private return_type class_ref 2414519 // PackedMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Interval, MutableInt> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40040375 "getBackwardLinks"
	  private return_type class_ref 2414519 // PackedMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Interval, MutableInt> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40040503 "include"
	  private explicit_return_type "void"
	  nparams 4
	    param inout name "arcs" explicit_type "List<Arc>"
	    param inout name "key" type class_ref 2414263 // Interval
	    param inout name "size" type class_ref 2414775 // MutableInt
	    param inout name "ignoreIfAlreadyPresent" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40040631 "include"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "arcs" explicit_type "List<Arc>"
	    param inout name "key" type class_ref 2414263 // Interval
	    param inout name "size" type class_ref 2414775 // MutableInt
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40040759 "groupArcsByFirstVertex"
	  package return_type class_ref 2414647 // Arc
	  nparams 1
	    param inout name "arcs" type class_ref 2414647 // Arc
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Group arcs by their first vertex, returning an array of arrays.
 This is linear in the number of arcs."
	end

	operation 40040887 "topologicalSort"
	  private return_type class_ref 2414647 // Arc
	  nparams 1
	    param in name "arcs" type class_ref 2414647 // Arc
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041015 "topologicalSort"
	  private return_type class_ref 2414647 // Arc
	  nparams 1
	    param inout name "arcs" explicit_type "List<Arc>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041143 "addComponentSizes"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "result" explicit_type "List<Arc>"
	    param inout name "links" type class_ref 2414519 // PackedMap
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Interval, MutableInt> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041271 "createArcs"
	  private return_type class_ref 2414647 // Arc
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041399 "computeArcs"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041527 "getArcs"
	  public return_type class_ref 2414647 // Arc
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041655 "relax"
	  private explicit_return_type "boolean"
	  nparams 2
	    param inout name "locations" explicit_type "int"
	  multiplicity "[]"
	    param inout name "entry" type class_ref 2414647 // Arc
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041783 "init"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "locations" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40041911 "arcsToString"
	  private explicit_return_type "String"
	  nparams 1
	    param inout name "arcs" explicit_type "List<Arc>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40042039 "logError"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "axisName" explicit_type "String"
	    param inout name "arcs" type class_ref 2414647 // Arc
	  multiplicity "[]"
	    param inout name "culprits0" explicit_type "boolean"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40042167 "solve"
	  private explicit_return_type "boolean"
	  nparams 2
	    param inout name "arcs" type class_ref 2414647 // Arc
	  multiplicity "[]"
	    param inout name "locations" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Bellman-Ford variant - modified to reduce typical running time from O(N^2) to O(N)

GridLayout converts its requirements into a system of linear constraints of the
form:

x[i] - x[j] < a[k]

Where the x[i] are variables and the a[k] are constants.

For example, if the variables were instead labeled x, y, z we might have:

x - y < 17
y - z < 23
z - x < 42

This is a special case of the Linear Programming problem that is, in turn,
equivalent to the single-source shortest paths problem on a digraph, for
which the O(n^2) Bellman-Ford algorithm the most commonly used general solution.
"
	end

	operation 40042295 "solve"
	  private explicit_return_type "boolean"
	  nparams 3
	    param inout name "arcs" type class_ref 2414647 // Arc
	  multiplicity "[]"
	    param inout name "locations" explicit_type "int"
	  multiplicity "[]"
	    param inout name "modifyOnError" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40042423 "computeMargins"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "leading" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40042551 "getLeadingMargins"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " External entry points"
	end

	operation 40042679 "getTrailingMargins"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40042807 "solve"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "a" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40042935 "computeHasWeights"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043063 "hasWeights"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043191 "getDeltas"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043319 "shareOutDelta"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "totalDelta" explicit_type "int"
	    param in name "totalWeight" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043447 "solveAndDistributeSpace"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "a" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043575 "calculateTotalWeight"
	  private explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043703 "computeLocations"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "a" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043831 "getLocations"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40043959 "size"
	  private explicit_return_type "int"
	  nparams 1
	    param inout name "locations" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40044087 "setParentConstraints"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "min" explicit_type "int"
	    param in name "max" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40044215 "getMeasure"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "min" explicit_type "int"
	    param in name "max" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40044343 "getMeasure"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "measureSpec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40044471 "layout"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40044599 "invalidateStructure"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 40044727 "invalidateValues"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4951863 // mHorizontalAxis (<unidirectional association>)
	relation 4951863 --->
	  a role_name "mHorizontalAxis" init_value " new Axis(true)" const_relation package
	    comment " Instance variables
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4951863 // mHorizontalAxis (<unidirectional association>)
	  b parent class_ref 2414007 // Axis
      end

      classrelation 4951991 // mVerticalAxis (<unidirectional association>)
	relation 4951991 --->
	  a role_name "mVerticalAxis" init_value " new Axis(false)" const_relation package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4951991 // mVerticalAxis (<unidirectional association>)
	  b parent class_ref 2414007 // Axis
      end

      attribute 10188087 "mOrientation"
	package explicit_type "int"
	init_value " DEFAULT_ORIENTATION"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10188215 "mUseDefaultMargins"
	package explicit_type "boolean"
	init_value " DEFAULT_USE_DEFAULT_MARGINS"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10188343 "mAlignmentMode"
	package explicit_type "int"
	init_value " DEFAULT_ALIGNMENT_MODE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10188471 "mDefaultGap"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 10188599 "mLastLayoutParamsHashCode"
	package explicit_type "int"
	init_value " UNINITIALIZED_HASH"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 40031799 "GridLayout"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	  param in name "defStyle" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

{@inheritDoc}
"
      end

      operation 40031927 "GridLayout"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" explicit_type "Context"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 40032055 "GridLayout"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" explicit_type "Context"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 40032183 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation

Returns the current orientation.

@return either {@link #HORIZONTAL} or {@link #VERTICAL}

@see #setOrientation(int)

@attr name android:orientation
"
      end

      operation 40032311 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
GridLayout uses the orientation property for two purposes:
<ul>
 <li>
     To control the 'direction' in which default row/column indices are generated
     when they are not specified in a component's layout parameters.
 </li>
 <li>
     To control which axis should be processed first during the layout operation:
     when orientation is {@link #HORIZONTAL} the horizontal axis is laid out first.
 </li>
</ul>

The order in which axes are laid out is important if, for example, the height of
one of GridLayout's children is dependent on its width - and its width is, in turn,
dependent on the widths of other components.
<p>
If your layout contains a {@link android.widget.TextView} (or derivative:
{@code Button}, {@code EditText}, {@code CheckBox}, etc.) which is
in multi-line mode (the default) it is normally best to leave GridLayout's
orientation as {@code HORIZONTAL} - because {@code TextView} is capable of
deriving its height for a given width, but not the other way around.
<p>
Other than the effects above, orientation does not affect the actual layout operation of
GridLayout, so it's fine to leave GridLayout in {@code HORIZONTAL} mode even if
the height of the intended layout greatly exceeds its width.
<p>
The default value of this property is {@link #HORIZONTAL}.

@param orientation either {@link #HORIZONTAL} or {@link #VERTICAL}

@see #getOrientation()

@attr name android:orientation
"
      end

      operation 40032439 "getRowCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current number of rows. This is either the last value that was set
with {@link #setRowCount(int)} or, if no such value was set, the maximum
value of each the upper bounds defined in {@link LayoutParams#rowSpec}.

@return the current number of rows

@see #setRowCount(int)
@see LayoutParams#rowSpec

@attr name android:rowCount
"
      end

      operation 40032567 "setRowCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "rowCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "RowCount is used only to generate default row/column indices when
they are not specified by a component's layout parameters.

@param rowCount the number of rows

@see #getRowCount()
@see LayoutParams#rowSpec

@attr name android:rowCount
"
      end

      operation 40032695 "getColumnCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current number of columns. This is either the last value that was set
with {@link #setColumnCount(int)} or, if no such value was set, the maximum
value of each the upper bounds defined in {@link LayoutParams#columnSpec}.

@return the current number of columns

@see #setColumnCount(int)
@see LayoutParams#columnSpec

@attr name android:columnCount
"
      end

      operation 40032823 "setColumnCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "columnCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "ColumnCount is used only to generate default column/column indices when
they are not specified by a component's layout parameters.

@param columnCount the number of columns.

@see #getColumnCount()
@see LayoutParams#columnSpec

@attr name android:columnCount
"
      end

      operation 40032951 "getUseDefaultMargins"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this GridLayout will allocate default margins when no
corresponding layout parameters are defined.

@return {@code true} if default margins should be allocated

@see #setUseDefaultMargins(boolean)

@attr name android:useDefaultMargins
"
      end

      operation 40033079 "setUseDefaultMargins"
	public explicit_return_type "void"
	nparams 1
	  param inout name "useDefaultMargins" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When {@code true}, GridLayout allocates default margins around children
based on the child's visual characteristics. Each of the
margins so defined may be independently overridden by an assignment
to the appropriate layout parameter.
<p>
When {@code false}, the default value of all margins is zero.
<p>
When setting to {@code true}, consider setting the value of the
{@link #setAlignmentMode(int) alignmentMode}
property to {@link #ALIGN_BOUNDS}.
<p>
The default value of this property is {@code false}.

@param useDefaultMargins use {@code true} to make GridLayout allocate default margins

@see #getUseDefaultMargins()
@see #setAlignmentMode(int)

@see MarginLayoutParams#leftMargin
@see MarginLayoutParams#topMargin
@see MarginLayoutParams#rightMargin
@see MarginLayoutParams#bottomMargin

@attr name android:useDefaultMargins
"
      end

      operation 40033207 "getAlignmentMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment mode.

@return the alignment mode; either {@link #ALIGN_BOUNDS} or {@link #ALIGN_MARGINS}

@see #ALIGN_BOUNDS
@see #ALIGN_MARGINS

@see #setAlignmentMode(int)

@attr name android:alignmentMode
"
      end

      operation 40033335 "setAlignmentMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignmentMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the alignment mode to be used for all of the alignments between the
children of this container.
<p>
The default value of this property is {@link #ALIGN_MARGINS}.

@param alignmentMode either {@link #ALIGN_BOUNDS} or {@link #ALIGN_MARGINS}

@see #ALIGN_BOUNDS
@see #ALIGN_MARGINS

@see #getAlignmentMode()

@attr name android:alignmentMode
"
      end

      operation 40033463 "isRowOrderPreserved"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not row boundaries are ordered by their grid indices.

@return {@code true} if row boundaries must appear in the order of their indices,
        {@code false} otherwise

@see #setRowOrderPreserved(boolean)

@attr name android:rowOrderPreserved
"
      end

      operation 40033591 "setRowOrderPreserved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rowOrderPreserved" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When this property is {@code true}, GridLayout is forced to place the row boundaries
so that their associated grid indices are in ascending order in the view.
<p>
When this property is {@code false} GridLayout is at liberty to place the vertical row
boundaries in whatever order best fits the given constraints.
<p>
The default value of this property is {@code true}.

@param rowOrderPreserved {@code true} to force GridLayout to respect the order
       of row boundaries

@see #isRowOrderPreserved()

@attr name android:rowOrderPreserved
"
      end

      operation 40033719 "isColumnOrderPreserved"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not column boundaries are ordered by their grid indices.

@return {@code true} if column boundaries must appear in the order of their indices,
        {@code false} otherwise

@see #setColumnOrderPreserved(boolean)

@attr name android:columnOrderPreserved
"
      end

      operation 40033847 "setColumnOrderPreserved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "columnOrderPreserved" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When this property is {@code true}, GridLayout is forced to place the column boundaries
so that their associated grid indices are in ascending order in the view.
<p>
When this property is {@code false} GridLayout is at liberty to place the horizontal column
boundaries in whatever order best fits the given constraints.
<p>
The default value of this property is {@code true}.

@param columnOrderPreserved use {@code true} to force GridLayout to respect the order
       of column boundaries.

@see #isColumnOrderPreserved()

@attr name android:columnOrderPreserved
"
      end

      operation 40033975 "getPrinter"
	public explicit_return_type "Printer"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the printer that will log diagnostics from this layout.

@see #setPrinter(android.util.Printer)

@return the printer associated with this view
"
      end

      operation 40034103 "setPrinter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printer" explicit_type "Printer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the printer that will log diagnostics from this layout.
The default value is created by {@link android.util.LogPrinter}.

@param printer the printer associated with this layout

@see #getPrinter()
"
      end

      operation 40034231 "max2"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "valueIfEmpty" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Static utility methods"
      end

      operation 40034359 "append"
	class_operation package explicit_return_type "T"
	nparams 2
	  param inout name "a" explicit_type "T"
	multiplicity "[]"
	  param inout name "b" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      class 2414135 "Alignment"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 40034487 "getAlignment"
	class_operation package return_type class_ref 2414135 // Alignment
	nparams 2
	  param in name "gravity" explicit_type "int"
	  param inout name "horizontal" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40034615 "getDefaultMargin"
	private explicit_return_type "int"
	nparams 3
	  param inout name "c" explicit_type "View"
	  param inout name "horizontal" explicit_type "boolean"
	  param inout name "leading" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @noinspection UnusedParameters"
      end

      operation 40034743 "getDefaultMargin"
	private explicit_return_type "int"
	nparams 4
	  param inout name "c" explicit_type "View"
	  param inout name "isAtEdge" explicit_type "boolean"
	  param inout name "horizontal" explicit_type "boolean"
	  param inout name "leading" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40034871 "getDefaultMargin"
	private explicit_return_type "int"
	nparams 4
	  param inout name "c" explicit_type "View"
	  param inout name "p" explicit_type "LayoutParams"
	  param inout name "horizontal" explicit_type "boolean"
	  param inout name "leading" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40034999 "getMargin1"
	package explicit_return_type "int"
	nparams 3
	  param inout name "view" explicit_type "View"
	  param inout name "horizontal" explicit_type "boolean"
	  param inout name "leading" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035127 "isLayoutRtlCompat"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035255 "getMargin"
	private explicit_return_type "int"
	nparams 3
	  param inout name "view" explicit_type "View"
	  param inout name "horizontal" explicit_type "boolean"
	  param inout name "leading" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035383 "getTotalMargin"
	private explicit_return_type "int"
	nparams 2
	  param inout name "child" explicit_type "View"
	  param inout name "horizontal" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035511 "fits"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "value" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035639 "procrusteanFill"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035767 "setCellGroup"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "lp" explicit_type "LayoutParams"
	  param in name "row" explicit_type "int"
	  param in name "rowSpan" explicit_type "int"
	  param in name "col" explicit_type "int"
	  param in name "colSpan" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40035895 "clip"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "minorRange" type class_ref 2414263 // Interval
	  param inout name "minorWasDefined" explicit_type "boolean"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Logic to avert infinite loops by ensuring that the cells can be placed somewhere."
      end

      class 2414263 "Interval"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 40036023 "validateLayoutParams"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " install default indices for cells that don't define them"
      end

      operation 40036151 "invalidateStructure"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40036279 "invalidateValues"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40036407 "getLayoutParams"
	package explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "c" explicit_type "View"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40036535 "handleInvalidParams"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40036663 "checkLayoutParams"
	private explicit_return_type "void"
	nparams 2
	  param inout name "lp" explicit_type "LayoutParams"
	  param inout name "horizontal" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40036791 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40036919 "generateDefaultLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40037047 "generateLayoutParams"
	public explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40037175 "generateLayoutParams"
	protected explicit_return_type "LayoutParams"
	nparams 1
	  param inout name "lp" explicit_type "LayoutParams"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40037303 "drawLine"
	private explicit_return_type "void"
	nparams 6
	  param inout name "graphics" type class_ref 165175 // Canvas
	  param in name "x1" explicit_type "int"
	  param in name "y1" explicit_type "int"
	  param in name "x2" explicit_type "int"
	  param in name "y2" explicit_type "int"
	  param inout name "paint" explicit_type "Paint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Draw grid"
      end

      operation 40037431 "computeLayoutParamsHashCode"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40037559 "consistencyCheck"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40037687 "measureChildWithMargins2"
	private explicit_return_type "void"
	nparams 5
	  param inout name "child" explicit_type "View"
	  param in name "parentWidthSpec" explicit_type "int"
	  param in name "parentHeightSpec" explicit_type "int"
	  param in name "childWidth" explicit_type "int"
	  param in name "childHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Measurement
 Note: padding has already been removed from the supplied specs"
      end

      operation 40037815 "measureChildrenWithMargins"
	private explicit_return_type "void"
	nparams 3
	  param in name "widthSpec" explicit_type "int"
	  param in name "heightSpec" explicit_type "int"
	  param inout name "firstPass" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note: padding has already been removed from the supplied specs"
      end

      operation 40037943 "adjust"
	class_operation package explicit_return_type "int"
	nparams 2
	  param in name "measureSpec" explicit_type "int"
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40038071 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthSpec" explicit_type "int"
	  param in name "heightSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40038199 "getMeasurement"
	private explicit_return_type "int"
	nparams 2
	  param inout name "c" explicit_type "View"
	  param inout name "horizontal" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40038327 "getMeasurementIncludingMargin"
	package explicit_return_type "int"
	nparams 2
	  param inout name "c" explicit_type "View"
	  param inout name "horizontal" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40038455 "requestLayout"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 40038583 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Layout container

{@inheritDoc}


The layout operation is implemented by delegating the heavy lifting to the
to the mHorizontalAxis and mVerticalAxis instances of the internal Axis class.
Together they compute the locations of the vertical and horizontal lines of
the grid (respectively!).

This method is then left with the simpler task of applying margins, gravity
and sizing to each child view and then placing it in its cell.
"
      end

      class 2414391 "Spec"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 2414519 "PackedMap"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 2414647 "Arc"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 2414775 "MutableInt"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end
    end
  end

  deploymentview 164407 "widget"
    //deployment diagram settings
    deploymentdiagramsettings
     end
  end

  package_ref 201015 // helper

  package_ref 288311 // util

  package_ref 288695 // test
end
