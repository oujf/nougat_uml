class ActionsItemBridgeAdapter
!!!38665527.java!!!	ActionsItemBridgeAdapter(inout viewHolder : Presenter::ViewHolder)
            mViewHolder = viewHolder;
!!!38665655.java!!!	onBind(in ibvh : ItemBridgeAdapter::ViewHolder) : void
            if (mViewHolder.getOnItemViewClickedListener() != null ||
                    mActionClickedListener != null) {
                ibvh.getPresenter().setOnClickListener(
                        ibvh.getViewHolder(), new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                if (mViewHolder.getOnItemViewClickedListener() != null) {
                                    mViewHolder.getOnItemViewClickedListener().onItemClicked(
                                            ibvh.getViewHolder(), ibvh.getItem(),
                                            mViewHolder, mViewHolder.getRow());
                                }
                                if (mActionClickedListener != null) {
                                    mActionClickedListener.onActionClicked((Action) ibvh.getItem());
                                }
                            }
                        });
            }
!!!38665783.java!!!	onUnbind(in ibvh : ItemBridgeAdapter::ViewHolder) : void
            if (mViewHolder.getOnItemViewClickedListener() != null ||
                    mActionClickedListener != null) {
                ibvh.getPresenter().setOnClickListener(ibvh.getViewHolder(), null);
            }
!!!38665911.java!!!	onAttachedToWindow(inout viewHolder : ItemBridgeAdapter::ViewHolder) : void
            // Remove first to ensure we don't add ourselves more than once.
            viewHolder.itemView.removeOnLayoutChangeListener(mViewHolder.mLayoutChangeListener);
            viewHolder.itemView.addOnLayoutChangeListener(mViewHolder.mLayoutChangeListener);
!!!38666039.java!!!	onDetachedFromWindow(inout viewHolder : ItemBridgeAdapter::ViewHolder) : void
            viewHolder.itemView.removeOnLayoutChangeListener(mViewHolder.mLayoutChangeListener);
            mViewHolder.checkFirstAndLastPosition(false);
