class DragHelperCallback
!!!39536055.java!!!	tryCaptureView(inout child : View, in pointerId : int) : boolean
            if (mIsUnableToDrag) {
                return false;
            }

            return ((LayoutParams) child.getLayoutParams()).slideable;
!!!39536183.java!!!	onViewDragStateChanged(in state : int) : void
            if (mDragHelper.getViewDragState() == ViewDragHelper.STATE_IDLE) {
                if (mSlideOffset == 0) {
                    updateObscuredViewsVisibility(mSlideableView);
                    dispatchOnPanelClosed(mSlideableView);
                    mPreservedOpenState = false;
                } else {
                    dispatchOnPanelOpened(mSlideableView);
                    mPreservedOpenState = true;
                }
            }
!!!39536311.java!!!	onViewCaptured(inout capturedChild : View, in activePointerId : int) : void
            // Make all child views visible in preparation for sliding things around
            setAllChildrenVisible();
!!!39536439.java!!!	onViewPositionChanged(inout changedView : View, in left : int, in top : int, in dx : int, in dy : int) : void
            onPanelDragged(left);
            invalidate();
!!!39536567.java!!!	onViewReleased(inout releasedChild : View, in xvel : float, in yvel : float) : void
            final LayoutParams lp = (LayoutParams) releasedChild.getLayoutParams();

            int left;
            if (isLayoutRtlSupport()) {
                int startToRight =  getPaddingRight() + lp.rightMargin;
                if (xvel < 0 || (xvel == 0 && mSlideOffset > 0.5f)) {
                    startToRight += mSlideRange;
                }
                int childWidth = mSlideableView.getWidth();
                left = getWidth() - startToRight - childWidth;
            } else {
                left = getPaddingLeft() + lp.leftMargin;
                if (xvel > 0 || (xvel == 0 && mSlideOffset > 0.5f)) {
                    left += mSlideRange;
                }
            }
            mDragHelper.settleCapturedViewAt(left, releasedChild.getTop());
            invalidate();
!!!39536695.java!!!	getViewHorizontalDragRange(inout child : View) : int
            return mSlideRange;
!!!39536823.java!!!	clampViewPositionHorizontal(inout child : View, in left : int, in dx : int) : int
            final LayoutParams lp = (LayoutParams) mSlideableView.getLayoutParams();

            final int newLeft;
            if (isLayoutRtlSupport()) {
                int startBound = getWidth() -
                        (getPaddingRight() + lp.rightMargin + mSlideableView.getWidth());
                int endBound =  startBound - mSlideRange;
                newLeft = Math.max(Math.min(left, startBound), endBound);
            } else {
                int startBound = getPaddingLeft() + lp.leftMargin;
                int endBound = startBound + mSlideRange;
                newLeft = Math.min(Math.max(left, startBound), endBound);
            }
            return newLeft;
!!!39536951.java!!!	clampViewPositionVertical(inout child : View, in top : int, in dy : int) : int
            // Make sure we never move views vertically.
            // This could happen if the child has less height than its parent.
            return child.getTop();
!!!39537079.java!!!	onEdgeDragStarted(in edgeFlags : int, in pointerId : int) : void
            mDragHelper.captureChildView(mSlideableView, pointerId);
