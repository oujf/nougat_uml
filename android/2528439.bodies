class CorrectedGyroSensor
!!!40859575.cpp!!!	CorrectedGyroSensor(in list : sensor_t, in count : size_t)
    for (size_t i=0 ; i<count ; i++) {
        if (list[i].type == SENSOR_TYPE_GYROSCOPE) {
            mGyro = Sensor(list + i);
            break;
        }
    }

    const sensor_t sensor = {
            .name       = "Corrected Gyroscope Sensor",
            .vendor     = "AOSP",
            .version    = 1,
            .handle     = '_cgy',
            .type       = SENSOR_TYPE_GYROSCOPE,
            .maxRange   = mGyro.getMaxValue(),
            .resolution = mGyro.getResolution(),
            .power      = mSensorFusion.getPowerUsage(),
            .minDelay   = mGyro.getMinDelay(),
    };
    mSensor = Sensor(&sensor);
!!!40859703.cpp!!!	process(inout outEvent : sensors_event_t, in event : sensors_event_t) : bool
    if (event.type == SENSOR_TYPE_GYROSCOPE) {
        const vec3_t bias(mSensorFusion.getGyroBias());
        *outEvent = event;
        outEvent->data[0] -= bias.x;
        outEvent->data[1] -= bias.y;
        outEvent->data[2] -= bias.z;
        outEvent->sensor = '_cgy';
        return true;
    }
    return false;
!!!40859831.cpp!!!	activate(inout ident : void, in enabled : bool) : status_t
    mSensorDevice.activate(ident, mGyro.getHandle(), enabled);
    return mSensorFusion.activate(FUSION_9AXIS, ident, enabled);
!!!40859959.cpp!!!	setDelay(inout ident : void, in handle : int, in ns : int64_t) : status_t
    mSensorDevice.setDelay(ident, mGyro.getHandle(), ns);
    return mSensorFusion.setDelay(FUSION_9AXIS, ident, ns);
