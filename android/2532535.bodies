class OrientationSensor
!!!40866103.cpp!!!	OrientationSensor()
    const sensor_t sensor = {
        .name       = "Orientation Sensor",
        .vendor     = "AOSP",
        .version    = 1,
        .handle     = '_ypr',
        .type       = SENSOR_TYPE_ORIENTATION,
        .maxRange   = 360.0f,
        .resolution = 1.0f/256.0f, // FIXME: real value here
        .power      = mSensorFusion.getPowerUsage(),
        .minDelay   = mSensorFusion.getMinDelay(),
    };
    mSensor = Sensor(&sensor);
!!!40866231.cpp!!!	process(inout outEvent : sensors_event_t, in event : sensors_event_t) : bool
    if (event.type == SENSOR_TYPE_ACCELEROMETER) {
        if (mSensorFusion.hasEstimate()) {
            vec3_t g;
            const float rad2deg = 180 / M_PI;
            const mat33_t R(mSensorFusion.getRotationMatrix());
            g[0] = atan2f(-R[1][0], R[0][0])    * rad2deg;
            g[1] = atan2f(-R[2][1], R[2][2])    * rad2deg;
            g[2] = asinf ( R[2][0])             * rad2deg;
            if (g[0] < 0)
                g[0] += 360;

            *outEvent = event;
            outEvent->orientation.azimuth = g.x;
            outEvent->orientation.pitch   = g.y;
            outEvent->orientation.roll    = g.z;
            outEvent->orientation.status  = SENSOR_STATUS_ACCURACY_HIGH;
            outEvent->sensor = '_ypr';
            outEvent->type = SENSOR_TYPE_ORIENTATION;
            return true;
        }
    }
    return false;
!!!40866359.cpp!!!	activate(inout ident : void, in enabled : bool) : status_t
    return mSensorFusion.activate(FUSION_9AXIS, ident, enabled);
!!!40866487.cpp!!!	setDelay(inout ident : void, in handle : int, in ns : int64_t) : status_t
    return mSensorFusion.setDelay(FUSION_9AXIS, ident, ns);
