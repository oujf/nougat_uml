class GyroDriftSensor
!!!40868791.cpp!!!	GyroDriftSensor()
    const sensor_t sensor = {
        .name       = "Gyroscope Bias (debug)",
        .vendor     = "AOSP",
        .version    = 1,
        .handle     = '_gbs',
        .type       = SENSOR_TYPE_ACCELEROMETER,
        .maxRange   = 1,
        .resolution = 1.0f / (1<<24),
        .power      = mSensorFusion.getPowerUsage(),
        .minDelay   = mSensorFusion.getMinDelay(),
    };
    mSensor = Sensor(&sensor);
!!!40868919.cpp!!!	process(inout outEvent : sensors_event_t, in event : sensors_event_t) : bool
    if (event.type == SENSOR_TYPE_ACCELEROMETER) {
        if (mSensorFusion.hasEstimate()) {
            const vec3_t b(mSensorFusion.getGyroBias());
            *outEvent = event;
            outEvent->data[0] = b.x;
            outEvent->data[1] = b.y;
            outEvent->data[2] = b.z;
            outEvent->sensor = '_gbs';
            outEvent->type = SENSOR_TYPE_ACCELEROMETER;
            return true;
        }
    }
    return false;
!!!40869047.cpp!!!	activate(inout ident : void, in enabled : bool) : status_t
    return mSensorFusion.activate(FUSION_9AXIS, ident, enabled);
!!!40869175.cpp!!!	setDelay(inout ident : void, in handle : int, in ns : int64_t) : status_t
    return mSensorFusion.setDelay(FUSION_9AXIS, ident, ns);
