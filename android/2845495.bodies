class ScanFilter
!!!41854519.cpp!!!	ScanFilter(in other : ScanFilter)
  device_name_ = other.device_name_;
  device_address_ = other.device_address_;

  if (other.service_uuid_)
    service_uuid_.reset(new UUID(*other.service_uuid_));

  if (other.service_uuid_mask_)
    service_uuid_mask_.reset(new UUID(*other.service_uuid_mask_));
!!!41854647.cpp!!!	operator =(in other : ScanFilter) : ScanFilter
  device_name_ = other.device_name_;
  device_address_ = other.device_address_;

  if (other.service_uuid_)
    service_uuid_.reset(new UUID(*other.service_uuid_));
  else
    service_uuid_ = nullptr;

  if (other.service_uuid_mask_)
    service_uuid_mask_.reset(new UUID(*other.service_uuid_mask_));
  else
    service_uuid_mask_ = nullptr;

  return *this;
!!!41855159.cpp!!!	SetDeviceAddress(in device_address : std::string) : bool
  if (!util::IsAddressValid(device_address))
    return false;

  device_address_ = device_address;
  return true;
!!!41855543.cpp!!!	SetServiceUuid(in service_uuid : UUID) : void
  service_uuid_.reset(new UUID(service_uuid));
  service_uuid_mask_.reset();
!!!41855671.cpp!!!	SetServiceUuidWithMask(in service_uuid : UUID, in mask : UUID) : void
  service_uuid_.reset(new UUID(service_uuid));
  service_uuid_mask_.reset(new UUID(mask));
!!!41855799.cpp!!!	operator ==(in rhs : ScanFilter) : bool
  if (device_name_ != rhs.device_name_)
    return false;

  if (device_address_ != rhs.device_address_)
    return false;

  // Both must be either NULL or non-NULL. If only one of them is NULL, then
  // return false.
  if (!!service_uuid_ != !!rhs.service_uuid_)
    return false;

  if (service_uuid_ && rhs.service_uuid_ &&
      *service_uuid_ != *rhs.service_uuid_)
    return false;

  // Both must be either NULL or non-NULL. If only one of them is NULL, then
  // return false.
  if (!!service_uuid_mask_ != !!rhs.service_uuid_mask_)
    return false;

  if (service_uuid_mask_ && rhs.service_uuid_mask_ &&
      *service_uuid_mask_ != *rhs.service_uuid_mask_)
    return false;

  return true;
