class BpBluetoothGattServer
!!!41871159.cpp!!!	UnregisterServer(in server_if : int) : void
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);

  remote()->transact(IBluetoothGattServer::UNREGISTER_SERVER_TRANSACTION,
                     data, &reply);
!!!41871287.cpp!!!	UnregisterAll() : void
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());

  remote()->transact(IBluetoothGattServer::UNREGISTER_ALL_TRANSACTION,
                     data, &reply);
!!!41871415.cpp!!!	BeginServiceDeclaration(in server_if : int, in is_primary : bool, in uuid : UUID, inout out_id : std::unique_ptr<bluetooth::GattIdentifier>) : bool
  CHECK(out_id);
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);
  data.writeInt32(is_primary);
  WriteUUIDToParcel(uuid, &data);

  remote()->transact(
      IBluetoothGattServer::BEGIN_SERVICE_DECLARATION_TRANSACTION,
      data, &reply);

  bool result = reply.readInt32();
  if (result)
    *out_id = CreateGattIdentifierFromParcel(reply);

  return result;
!!!41871543.cpp!!!	AddCharacteristic(in server_if : int, in uuid : UUID, in properties : int, in permissions : int, inout out_id : std::unique_ptr<bluetooth::GattIdentifier>) : bool
  CHECK(out_id);
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);
  WriteUUIDToParcel(uuid, &data);
  data.writeInt32(properties);
  data.writeInt32(permissions);

  remote()->transact(IBluetoothGattServer::ADD_CHARACTERISTIC_TRANSACTION,
                     data, &reply);

  bool result = reply.readInt32();
  if (result)
    *out_id = CreateGattIdentifierFromParcel(reply);

  return result;
!!!41871671.cpp!!!	AddDescriptor(in server_if : int, in uuid : UUID, in permissions : int, inout out_id : std::unique_ptr<bluetooth::GattIdentifier>) : bool
  CHECK(out_id);
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);
  WriteUUIDToParcel(uuid, &data);
  data.writeInt32(permissions);

  remote()->transact(IBluetoothGattServer::ADD_DESCRIPTOR_TRANSACTION,
                     data, &reply);

  bool result = reply.readInt32();
  if (result)
    *out_id = CreateGattIdentifierFromParcel(reply);

  return result;
!!!41871799.cpp!!!	EndServiceDeclaration(in server_if : int) : bool
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);

  remote()->transact(IBluetoothGattServer::END_SERVICE_DECLARATION_TRANSACTION,
                     data, &reply);

  return reply.readInt32();
!!!41871927.cpp!!!	SendResponse(in server_if : int, in device_address : std::string, in request_id : int, in status : int, in offset : int, in value : std::vector<uint8_t>) : bool
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);
  data.writeCString(device_address.c_str());
  data.writeInt32(request_id);
  data.writeInt32(status);
  data.writeInt32(offset);
  data.writeByteVector(value);

  remote()->transact(IBluetoothGattServer::SEND_RESPONSE_TRANSACTION,
                     data, &reply);

  return reply.readInt32();
!!!41872055.cpp!!!	SendNotification(in server_if : int, in device_address : std::string, in characteristic_id : bluetooth::GattIdentifier, in confirm : bool, in value : std::vector<uint8_t>) : bool
  Parcel data, reply;

  data.writeInterfaceToken(IBluetoothGattServer::getInterfaceDescriptor());
  data.writeInt32(server_if);
  data.writeCString(device_address.c_str());
  WriteGattIdentifierToParcel(characteristic_id, &data);
  data.writeInt32(confirm);
  data.writeByteVector(value);

  remote()->transact(IBluetoothGattServer::SEND_NOTIFICATION_TRANSACTION,
                     data, &reply);

  return reply.readInt32();
