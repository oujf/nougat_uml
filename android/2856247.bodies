class BluetoothGattServerBinderServer
!!!41906999.cpp!!!	BluetoothGattServerBinderServer(inout adapter : Adapter)
  CHECK(adapter_);
!!!41907255.cpp!!!	RegisterServer(in callback : android::sp<IBluetoothGattServerCallback>) : bool
  VLOG(2) << __func__;
  bluetooth::GattServerFactory* gatt_server_factory =
      adapter_->GetGattServerFactory();

  return RegisterInstanceBase(callback, gatt_server_factory);
!!!41907383.cpp!!!	UnregisterServer(in server_id : int) : void
  VLOG(2) << __func__;
  UnregisterInstanceBase(server_id);
!!!41907511.cpp!!!	UnregisterAll() : void
  VLOG(2) << __func__;
  UnregisterAllBase();
!!!41907639.cpp!!!	BeginServiceDeclaration(in server_id : int, in is_primary : bool, in uuid : UUID, inout out_id : std::unique_ptr<bluetooth::GattIdentifier>) : bool
  VLOG(2) << __func__;
  CHECK(out_id);
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_server = GetGattServer(server_id);
  if (!gatt_server) {
    LOG(ERROR) << "Unknown server_id: " << server_id;
    return false;
  }

  auto service_id = gatt_server->BeginServiceDeclaration(uuid, is_primary);
  if (!service_id) {
    LOG(ERROR) << "Failed to begin service declaration - server_id: "
               << server_id << " UUID: " << uuid.ToString();
    return false;
  }

  out_id->swap(service_id);

  return true;
!!!41907767.cpp!!!	AddCharacteristic(in server_id : int, in uuid : UUID, in properties : int, in permissions : int, inout out_id : std::unique_ptr<bluetooth::GattIdentifier>) : bool
  VLOG(2) << __func__;
  CHECK(out_id);
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_server = GetGattServer(server_id);
  if (!gatt_server) {
    LOG(ERROR) << "Unknown server_id: " << server_id;
    return false;
  }

  auto char_id = gatt_server->AddCharacteristic(uuid, properties, permissions);
  if (!char_id) {
    LOG(ERROR) << "Failed to add characteristic - server_id: "
               << server_id << " UUID: " << uuid.ToString();
    return false;
  }

  out_id->swap(char_id);

  return true;
!!!41907895.cpp!!!	AddDescriptor(in server_id : int, in uuid : UUID, in permissions : int, inout out_id : std::unique_ptr<bluetooth::GattIdentifier>) : bool
  VLOG(2) << __func__;
  CHECK(out_id);
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_server = GetGattServer(server_id);
  if (!gatt_server) {
    LOG(ERROR) << "Unknown server_id: " << server_id;
    return false;
  }

  auto desc_id = gatt_server->AddDescriptor(uuid, permissions);
  if (!desc_id) {
    LOG(ERROR) << "Failed to add descriptor - server_id: "
               << server_id << " UUID: " << uuid.ToString();
    return false;
  }

  out_id->swap(desc_id);

  return true;
!!!41908023.cpp!!!	EndServiceDeclaration(in server_id : int) : bool
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_server = GetGattServer(server_id);
  if (!gatt_server) {
    LOG(ERROR) << "Unknown server_id: " << server_id;
    return false;
  }

  // Create a weak pointer and pass that to the callback to prevent a potential
  // use after free.
  android::wp<BluetoothGattServerBinderServer> weak_ptr_to_this(this);
  auto callback = [=](
      bluetooth::BLEStatus status,
      const bluetooth::GattIdentifier& service_id) {
    auto sp_to_this = weak_ptr_to_this.promote();
    if (!sp_to_this.get()) {
      VLOG(2) << "BluetoothLowEnergyBinderServer was deleted";
      return;
    }

    std::lock_guard<std::mutex> lock(*maps_lock());

    auto gatt_cb = GetGattServerCallback(server_id);
    if (!gatt_cb.get()) {
      VLOG(2) << "The callback was deleted";
      return;
    }

    gatt_cb->OnServiceAdded(status, service_id);
  };

  if (!gatt_server->EndServiceDeclaration(callback)) {
    LOG(ERROR) << "Failed to end service declaration";
    return false;
  }

  return true;
!!!41908151.cpp!!!	SendResponse(in server_id : int, in device_address : std::string, in request_id : int, in status : int, in offset : int, in value : std::vector<uint8_t>) : bool
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_server = GetGattServer(server_id);
  if (!gatt_server) {
    LOG(ERROR) << "Unknown server_id: " << server_id;
    return false;
  }

  return gatt_server->SendResponse(
      device_address, request_id, static_cast<bluetooth::GATTError>(status),
      offset, value);
!!!41908279.cpp!!!	SendNotification(in server_id : int, in device_address : std::string, in characteristic_id : bluetooth::GattIdentifier, in confirm : bool, in value : std::vector<uint8_t>) : bool
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_server = GetGattServer(server_id);
  if (!gatt_server) {
    LOG(ERROR) << "Unknown server_id: " << server_id;
    return false;
  }

  // Create a weak pointer and pass that to the callback to prevent a potential
  // use after free.
  android::wp<BluetoothGattServerBinderServer> weak_ptr_to_this(this);
  auto callback = [=](bluetooth::GATTError error) {
    auto sp_to_this = weak_ptr_to_this.promote();
    if (!sp_to_this.get()) {
      VLOG(2) << "BluetoothLowEnergyBinderServer was deleted";
      return;
    }

    std::lock_guard<std::mutex> lock(*maps_lock());

    auto gatt_cb = GetGattServerCallback(server_id);
    if (!gatt_cb.get()) {
      VLOG(2) << "The callback was deleted";
      return;
    }

    gatt_cb->OnNotificationSent(device_address, error);
  };

  if (!gatt_server->SendNotification(device_address, characteristic_id,
                                     confirm, value, callback)) {
    LOG(ERROR) << "Failed to send notification";
    return false;
  }

  return true;
!!!41908407.cpp!!!	OnCharacteristicReadRequest(inout gatt_server : GattServer, in device_address : std::string, in request_id : int, in offset : int, in is_long : bool, in characteristic_id : bluetooth::GattIdentifier) : void
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_cb = GetGattServerCallback(gatt_server->GetInstanceId());
  if (!gatt_cb.get()) {
    LOG(WARNING) << "Callback for this GattServer was deleted.";
    return;
  }

  gatt_cb->OnCharacteristicReadRequest(
      device_address, request_id, offset, is_long, characteristic_id);
!!!41908535.cpp!!!	OnDescriptorReadRequest(inout gatt_server : GattServer, in device_address : std::string, in request_id : int, in offset : int, in is_long : bool, in descriptor_id : bluetooth::GattIdentifier) : void
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_cb = GetGattServerCallback(gatt_server->GetInstanceId());
  if (!gatt_cb.get()) {
    LOG(WARNING) << "Callback for this GattServer was deleted.";
    return;
  }

  gatt_cb->OnDescriptorReadRequest(
      device_address, request_id, offset, is_long, descriptor_id);
!!!41908663.cpp!!!	OnCharacteristicWriteRequest(inout gatt_server : GattServer, in device_address : std::string, in request_id : int, in offset : int, in is_prepare_write : bool, in need_response : bool, in value : std::vector<uint8_t>, in characteristic_id : bluetooth::GattIdentifier) : void
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_cb = GetGattServerCallback(gatt_server->GetInstanceId());
  if (!gatt_cb.get()) {
    LOG(WARNING) << "Callback for this GattServer was deleted.";
    return;
  }

  gatt_cb->OnCharacteristicWriteRequest(
      device_address, request_id, offset, is_prepare_write, need_response,
      value, characteristic_id);
!!!41908791.cpp!!!	OnDescriptorWriteRequest(inout gatt_server : GattServer, in device_address : std::string, in request_id : int, in offset : int, in is_prepare_write : bool, in need_response : bool, in value : std::vector<uint8_t>, in descriptor_id : bluetooth::GattIdentifier) : void
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_cb = GetGattServerCallback(gatt_server->GetInstanceId());
  if (!gatt_cb.get()) {
    LOG(WARNING) << "Callback for this GattServer was deleted.";
    return;
  }

  gatt_cb->OnDescriptorWriteRequest(
      device_address, request_id, offset, is_prepare_write, need_response,
      value, descriptor_id);
!!!41908919.cpp!!!	OnExecuteWriteRequest(inout gatt_server : GattServer, in device_address : std::string, in request_id : int, in is_execute : bool) : void
  VLOG(2) << __func__;
  std::lock_guard<std::mutex> lock(*maps_lock());

  auto gatt_cb = GetGattServerCallback(gatt_server->GetInstanceId());
  if (!gatt_cb.get()) {
    LOG(WARNING) << "Callback for this GattServer was deleted.";
    return;
  }

  gatt_cb->OnExecuteWriteRequest(device_address, request_id, is_execute);
!!!41909047.cpp!!!	GetGattServerCallback(in server_id : int) : android::sp<IBluetoothGattServerCallback>
  auto cb = GetCallback(server_id);
  return android::sp<IBluetoothGattServerCallback>(
      static_cast<IBluetoothGattServerCallback*>(cb.get()));
!!!41909175.cpp!!!	GetGattServer(in server_id : int) : std::shared_ptr<bluetooth::GattServer>
  return std::static_pointer_cast<bluetooth::GattServer>(
      GetInstance(server_id));
!!!41909303.cpp!!!	OnRegisterInstanceImpl(in status : BLEStatus, in callback : android::sp<IInterface>, inout instance : BluetoothInstance) : void
  VLOG(1) << __func__ << " instance ID: " << instance->GetInstanceId()
          << " status: " << status;
  bluetooth::GattServer* gatt_server =
      static_cast<bluetooth::GattServer*>(instance);
  gatt_server->SetDelegate(this);

  android::sp<IBluetoothGattServerCallback> cb(
      static_cast<IBluetoothGattServerCallback*>(callback.get()));
  cb->OnServerRegistered(
      status,
      (status == bluetooth::BLE_STATUS_SUCCESS) ?
          instance->GetInstanceId() : kInvalidInstanceId);
