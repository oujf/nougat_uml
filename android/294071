format 213
"include" // android::frameworks::av::drm::libdrmframework::plugins::forward-lock::FwdLockEngine::include
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/frameworks/av/drm/libdrmframework/plugins/forward-lock/FwdLockEngine/include/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/frameworks/av/drm/libdrmframework/plugins/forward-lock/FwdLockEngine/include/"
  cpp_namespace "android"
  classview 274359 "include"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 2504119 "FwdLockEngine"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Forward Lock Engine class.
"
      classrelation 5100983 // <generalisation>
	relation 5100983 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5100983 // <generalisation>
	  b parent class_ref 2503735 // DrmEngineBase
      end

      operation 40718647 "FwdLockEngine"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 40718775 "~FwdLockEngine"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 40718903 "onGetConstraints"
	protected return_type class_ref 2497975 // DrmConstraints
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get constraint information associated with input content.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@param action Actions defined such as,
    Action::DEFAULT, Action::PLAY, etc
@return DrmConstraints
    key-value pairs of constraint are embedded in it
@note
    In case of error, return NULL
"
      end

      operation 40719031 "onGetMetadata"
	protected return_type class_ref 2498103 // DrmMetadata
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get metadata information associated with input content.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@return DrmMetadata
     For Forward Lock engine, it returns an empty object
@note
    In case of error, returns NULL
"
      end

      operation 40719159 "onInitialize"
	protected explicit_return_type "status_t"
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize plug-in.

@param uniqueId Unique identifier for a session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40719287 "onSetOnInfoListener"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "infoListener" type class_ref 2497847 // OnInfoListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a callback to be invoked when the caller required to
receive necessary information.

@param uniqueId Unique identifier for a session
@param infoListener Listener
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40719415 "onTerminate"
	protected explicit_return_type "status_t"
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminate the plug-in and release resources bound to it.

@param uniqueId Unique identifier for a session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40719543 "onCanHandle"
	protected explicit_return_type "bool"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get whether the given content can be handled by this plugin or not.

@param uniqueId Unique identifier for a session
@param path Path to the protected object
@return bool
     Returns true if this plugin can handle , false in case of not able to handle
"
      end

      operation 40719671 "onProcessDrmInfo"
	protected return_type class_ref 2498231 // DrmInfoStatus
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "drmInfo" type class_ref 2498359 // DrmInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes the given DRM information as appropriate for its type.
Not used for Forward Lock Engine.

@param uniqueId Unique identifier for a session
@param drmInfo Information that needs to be processed
@return DrmInfoStatus
     instance as a result of processing given input
"
      end

      operation 40719799 "onSaveRights"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param in name "drmRights" type class_ref 2498615 // DrmRights
	  param in name "rightsPath" type class_ref 2495031 // String8
	  param in name "contentPath" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save DRM rights to specified rights path
and make association with content path.

@param uniqueId Unique identifier for a session
@param drmRights DrmRights to be saved
@param rightsPath File path where rights to be saved
@param contentPath File path where content was saved
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40719927 "onAcquireDrmInfo"
	protected return_type class_ref 2498359 // DrmInfo
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "drmInfoRequest" type class_ref 2498487 // DrmInfoRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves necessary information for registration, unregistration or rights
acquisition information.

@param uniqueId Unique identifier for a session
@param drmInfoRequest Request information to retrieve drmInfo
@return DrmInfo
     instance as a result of processing given input
"
      end

      operation 40720055 "onGetOriginalMimeType"
	protected return_type class_ref 2495031 // String8
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the mime type embedded inside the original content.

@param uniqueId Unique identifier for a session
@param path Path of the conent or null.
@param fd descriptor of the protected content as a file source
@return String8
      Returns mime-type of the original content, such as \"video/mpeg\"
"
      end

      operation 40720183 "onGetDrmObjectType"
	protected explicit_return_type "int"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	  param in name "mimeType" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the type of the protected object (content, rights, etc..)
using specified path or mimetype. At least one parameter should be non null
to retrieve DRM object type.

@param uniqueId Unique identifier for a session
@param path Path of the content or null.
@param mimeType Mime type of the content or null.
@return type of the DRM content,
    such as DrmObjectType::CONTENT, DrmObjectType::RIGHTS_OBJECT
"
      end

      operation 40720311 "onCheckRightsStatus"
	protected explicit_return_type "int"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the given content has valid rights or not.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@param action Action to perform (Action::DEFAULT, Action::PLAY, etc)
@return the status of the rights for the protected content,
    such as RightsStatus::RIGHTS_VALID, RightsStatus::RIGHTS_EXPIRED, etc.
"
      end

      operation 40720439 "onConsumeRights"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "action" explicit_type "int"
	  param in name "reserve" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consumes the rights for a content.
If the reserve parameter is true the rights are reserved until the same
application calls this api again with the reserve parameter set to false.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param action Action to perform. (Action::DEFAULT, Action::PLAY, etc)
@param reserve True if the rights should be reserved.
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40720567 "onSetPlaybackStatus"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "playbackStatus" explicit_type "int"
	  param in name "position" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40720695 "onSetPlaybackStatus"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "playbackStatus" explicit_type "int"
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40720823 "onValidateAction"
	protected explicit_return_type "bool"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	  param in name "action" explicit_type "int"
	  param in name "description" type class_ref 2498871 // ActionDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Validates whether an action on the DRM content is allowed or not.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@param action Action to validate (Action::PLAY, Action::TRANSFER, etc)
@param description Detailed description of the action
@return true if the action is allowed.
"
      end

      operation 40720951 "onRemoveRights"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the rights associated with the given protected content.
Not used for Forward Lock Engine.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40721079 "onRemoveAllRights"
	protected explicit_return_type "status_t"
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the rights information of each plug-in associated with
DRM framework. Will be used in master reset but does nothing for
Forward Lock Engine.

@param uniqueId Unique identifier for a session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40721207 "onOpenConvertSession"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "convertId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the Forward Lock file conversion session.
Each time the application tries to download a new DRM file
which needs to be converted, then the application has to
begin with calling this API. The convertId is used as the conversion session key
and must not be the same for different convert sessions.

@param uniqueId Unique identifier for a session
@param convertId Handle for the convert session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40721335 "onConvertData"
	protected return_type class_ref 2498999 // DrmConvertedStatus
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "convertId" explicit_type "int"
	  param in name "inputData" type class_ref 2499127 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts and converts the input data which is part of DRM file.
The resultant converted data and the status is returned in the DrmConvertedInfo
object. This method will be called each time there is a new block
of data received by the application.

@param uniqueId Unique identifier for a session
@param convertId Handle for the convert session
@param inputData Input Data which need to be converted
@return Return object contains the status of the data conversion,
      the output converted data and offset. In this case the
     application will ignore the offset information.
"
      end

      operation 40721463 "onCloseConvertSession"
	protected return_type class_ref 2498999 // DrmConvertedStatus
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "convertId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the convert session in case of data supply completed or error occurred.
Upon successful conversion of the complete data, it returns signature calculated over
the entire data used over a conversion session. This signature must be copied to the offset
mentioned in the DrmConvertedStatus. Signature is used for data integrity protection.

@param uniqueId Unique identifier for a session
@param convertId Handle for the convert session
@return Return object contains the status of the data conversion,
     the header and body signature data. It also informs
     the application about the file offset at which this
     signature data should be written.
"
      end

      operation 40721591 "onGetSupportInfo"
	protected return_type class_ref 2499255 // DrmSupportInfo
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the information about the Drm Engine capabilities which includes
supported MimeTypes and file suffixes.

@param uniqueId Unique identifier for a session
@return DrmSupportInfo
     instance which holds the capabilities of a plug-in
"
      end

      operation 40721719 "onOpenDecryptSession"
	protected explicit_return_type "status_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "fd" explicit_type "int"
	  param in name "offset" explicit_type "off64_t"
	  param in name "length" explicit_type "off64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40721847 "onOpenDecryptSession"
	protected explicit_return_type "status_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "fd" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40721975 "onOpenDecryptSession"
	protected explicit_return_type "status_t"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "uri" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open the decrypt session to decrypt the given protected content.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the current decryption session
@param uri Path of the protected content to be decrypted
@return
    DRM_ERROR_CANNOT_HANDLE for failure and DRM_NO_ERROR for success
"
      end

      operation 40722103 "onCloseDecryptSession"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the decrypt session for the given handle.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure
"
      end

      operation 40722231 "onInitializeDecryptUnit"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	  param in name "headerInfo" type class_ref 2499127 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize decryption for the given unit of the protected content.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param decryptUnitId ID which specifies decryption unit, such as track ID
@param headerInfo Information for initializing decryption of this decrypUnit
@return
    DRM_ERROR_CANNOT_HANDLE for failure and DRM_NO_ERROR for success
"
      end

      operation 40722359 "onDecrypt"
	protected explicit_return_type "status_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	  param in name "encBuffer" type class_ref 2499127 // DrmBuffer
	  param inout name "decBuffer" type class_ref 2499127 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decrypt the protected content buffers for the given unit.
This method will be called any number of times, based on number of
encrypted streams received from application.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param decryptUnitId ID which specifies decryption unit, such as track ID
@param encBuffer Encrypted data block
@param decBuffer Decrypted data block
@return status_t
    Returns the error code for this API
    DRM_NO_ERROR for success, and one of DRM_ERROR_UNKNOWN, DRM_ERROR_LICENSE_EXPIRED
    DRM_ERROR_SESSION_NOT_OPENED, DRM_ERROR_DECRYPT_UNIT_NOT_INITIALIZED,
    DRM_ERROR_DECRYPT for failure.
"
      end

      operation 40722487 "onDecrypt"
	protected explicit_return_type "status_t"
	nparams 6
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	  param in name "encBuffer" type class_ref 2499127 // DrmBuffer
	  param inout name "decBuffer" type class_ref 2499127 // DrmBuffer
	  param inout name "IV" type class_ref 2499127 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decrypt the protected content buffers for the given unit.
This method will be called any number of times, based on number of
encrypted streams received from application.

@param uniqueId Unique identifier for a session
@param decryptId Handle for the decryption session
@param decryptUnitId ID Specifies decryption unit, such as track ID
@param encBuffer Encrypted data block
@param decBuffer Decrypted data block
@param IV Optional buffer
@return status_t
    Returns the error code for this API
    DRM_NO_ERROR for success, and one of DRM_ERROR_UNKNOWN, DRM_ERROR_LICENSE_EXPIRED
    DRM_ERROR_SESSION_NOT_OPENED, DRM_ERROR_DECRYPT_UNIT_NOT_INITIALIZED,
    DRM_ERROR_DECRYPT for failure.
"
      end

      operation 40722615 "onFinalizeDecryptUnit"
	protected explicit_return_type "status_t"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalize decryption for the given unit of the protected content.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param decryptUnitId ID Specifies decryption unit, such as track ID
@return
    DRM_ERROR_CANNOT_HANDLE for failure and DRM_NO_ERROR for success
"
      end

      operation 40722743 "onRead"
	protected explicit_return_type "ssize_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param inout name "pBuffer" explicit_type "void"
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the specified number of bytes from an open DRM file.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param buffer Reference to the buffer that should receive the read data.
@param numBytes Number of bytes to read.

@return Number of bytes read.
@retval -1 Failure.
"
      end

      operation 40722871 "onLseek"
	protected explicit_return_type "off64_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "offset" explicit_type "off64_t"
	  param in name "whence" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40722999 "onLseek"
	protected explicit_return_type "off_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param in name "offset" explicit_type "off_t"
	  param in name "whence" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40723127 "onPread"
	protected explicit_return_type "ssize_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param inout name "buffer" explicit_type "void"
	  param in name "numBytes" explicit_type "ssize_t"
	  param in name "offset" explicit_type "off64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40723255 "onPread"
	protected explicit_return_type "ssize_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 2498743 // DecryptHandle
	  param inout name "buffer" explicit_type "void"
	  param in name "numBytes" explicit_type "ssize_t"
	  param in name "offset" explicit_type "off_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 5101111 // Description (<directional composition>)
	relation 5101111 *-->
	  a role_name "Description" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5101111 // Description (<directional composition>)
	  b parent class_ref 2495031 // String8
      end

      classrelation 5101239 // FileSuffixes (<directional composition>)
	relation 5101239 *-->
	  a role_name "FileSuffixes" multiplicity "[]" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5101239 // FileSuffixes (<directional composition>)
	  b parent class_ref 2495031 // String8
      end

      classrelation 5101367 // MimeTypes (<directional composition>)
	relation 5101367 *-->
	  a role_name "MimeTypes" multiplicity "[]" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5101367 // MimeTypes (<directional composition>)
	  b parent class_ref 2495031 // String8
      end

      operation 40723383 "IsFileSuffixSupported"
	class_operation private explicit_return_type "bool"
	nparams 1
	  param in name "suffix" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40723511 "IsMimeTypeSupported"
	class_operation private explicit_return_type "bool"
	nparams 1
	  param in name "mime" type class_ref 2495031 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40723639 "AddSupportedMimeTypes"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 2499255 // DrmSupportInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 40723767 "AddSupportedFileSuffixes"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 2499255 // DrmSupportInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 2504247 "ConvertSession"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 10401975 "uniqueId"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 5101495 // output (<directional composition>)
	  relation 5101495 *-->
	    a role_name "output" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5101495 // output (<directional composition>)
	    b parent class_ref 2504375 // FwdLockConv_Output_t
	end

	operation 40723895 "ConvertSession"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
            uniqueId = 0;
            memset(&output, 0, sizeof(FwdLockConv_Output_t));
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 40724023 "~ConvertSession"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	  
	  
	  
	  
	end
      end

      class 2504503 "DecodeSession"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 10402103 "fileDesc"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 10402231 "offset"
	  public explicit_type "off_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 40724151 "DecodeSession"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
            fileDesc = -1;
            offset = 0;
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 40724279 "DecodeSession"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "fd" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract} {
            fileDesc = fd;
            offset = 0;
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 40724407 "~DecodeSession"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	  
	  
	  
	  
	end
      end

      classrelation 5101623 // convertSessionMap (<unidirectional association>)
	relation 5101623 --->
	  stereotype "SessionMap"
	  a role_name "convertSessionMap" private
	    comment "Session Map Tables for Conversion and Decoding of forward lock files.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5101623 // convertSessionMap (<unidirectional association>)
	  b parent class_ref 2504247 // ConvertSession
      end

      classrelation 5101751 // decodeSessionMap (<unidirectional association>)
	relation 5101751 --->
	  stereotype "SessionMap"
	  a role_name "decodeSessionMap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5101751 // decodeSessionMap (<unidirectional association>)
	  b parent class_ref 2504503 // DecodeSession
      end

      operation 40724535 "getConvertedStatus"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "status" type class_ref 2504631 // FwdLockConv_Status_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the error code from Forward Lock Converter to DrmConvertStatus error code.

@param Forward Lock Converter error code

@return Status code from DrmConvertStatus.
"
      end
    end
  end

  deploymentview 236599 "include"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1339319 "FwdLockEngine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2504119 // FwdLockEngine
      end
    end
  end
end
