class ServiceParser
!!!42818999.cpp!!!	ParseSection(in args : std::vector<std::string>, inout err : std::string) : bool
    if (args.size() < 3) {
        *err = "services must have a name and a program";
        return false;
    }

    const std::string& name = args[1];
    if (!IsValidName(name)) {
        *err = StringPrintf("invalid service name '%s'", name.c_str());
        return false;
    }

    std::vector<std::string> str_args(args.begin() + 2, args.end());
    service_ = std::make_unique<Service>(name, "default", str_args);
    return true;
!!!42819127.cpp!!!	ParseLineSection(in args : std::vector<std::string>, in filename : std::string, in line : int, inout err : std::string) : bool
    return service_ ? service_->HandleLine(args, err) : false;
!!!42819255.cpp!!!	EndSection() : void
    if (service_) {
        ServiceManager::GetInstance().AddService(std::move(service_));
    }
!!!42819511.cpp!!!	IsValidName(in name : std::string) : bool
    if (name.size() > 16) {
        return false;
    }
    for (const auto& c : name) {
        if (!isalnum(c) && (c != '_') && (c != '-')) {
            return false;
        }
    }
    return true;
