class Tokenizer
!!!42819895.cpp!!!	Tokenizer(in data : std::string)
  current_.type = TOK_START;

  if (data.size() > 0) {
    cur_char_ = data[0];
  } else {
    eof_ = true;
    cur_char_ = '\0';
  }
!!!42820151.cpp!!!	current() : Tokenizer::Token
  return current_;
!!!42820279.cpp!!!	Next() : bool
  while (!eof_) {
    AdvWhiteSpace();

    // Check for comments.
    if (cur_char_ == '#') {
      AdvChar();
      // Skip rest of line
      while (!eof_ && cur_char_ != '\n') {
        AdvChar();
      }
    }

    if (eof_) {
      break;
    }

    if (cur_char_ == '\0') {
      AdvChar();
    } else if (cur_char_ == '\n') {
      current_.type = TOK_NEWLINE;
      current_.text.clear();
      AdvChar();
      return true;
    } else if (cur_char_ == '\\') {
      AdvChar();  // skip backslash
      // This is line continuation so
      // do not generated TOK_NEWLINE at
      // the next \n.
      AdvUntil('\n');
      AdvChar();  // skip \n
    } else if (cur_char_ == '\"') {
      AdvChar();
      StartText();
      // Grab everything until the next quote.
      AdvUntil('\"');
      EndText();
      AdvChar();  // skip quote.
      return true;
    } else {
      StartText();
      AdvText();
      EndText();
      return true;
    }
  }
  current_.type = TOK_END;
  current_.text.clear();
  return false;
!!!42820535.cpp!!!	AdvChar() : void
  pos_++;
  if (pos_ < data_.size()) {
    cur_char_ = data_[pos_];
  } else {
    eof_ = true;
    cur_char_ = '\0';
  }
!!!42820663.cpp!!!	AdvText() : void
  while (cur_char_ != '\t' && cur_char_ != '\r' && cur_char_ != '\0' &&
         cur_char_ != ' ' && cur_char_ != '\n' && cur_char_ != '#') {
    AdvChar();
  }
!!!42820791.cpp!!!	AdvUntil(in x : char) : void
  while (!eof_ && cur_char_ != x) {
    AdvChar();
  }
!!!42820919.cpp!!!	AdvWhiteSpace() : void
  while (cur_char_ == '\t' || cur_char_ == '\r' || cur_char_ == ' ') {
    AdvChar();
  }
!!!42821047.cpp!!!	StartText() : void
  current_.text.clear();
  tok_start_ = pos_;
  current_.type = TOK_TEXT;
!!!42821175.cpp!!!	EndText() : void
  if (pos_ != tok_start_) {
    current_.text.append(data_, tok_start_, pos_ - tok_start_);
  }
