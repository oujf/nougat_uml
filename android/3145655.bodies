class Heap
!!!42832567.cpp!!!	Heap()
  // HeapImpl overloads the operator new in order to mmap itself instead of
  // allocating with new.
  // Can't use a shared_ptr to store the result because shared_ptr needs to
  // allocate, and Allocator<T> is still being constructed.
  impl_ = new HeapImpl();
  owns_impl_ = true;
!!!42832695.cpp!!!	~Heap()
  if (owns_impl_) {
    delete impl_;
  }
!!!42833079.cpp!!!	allocate(in size : size_t) : void
  return impl_->Alloc(size);
!!!42833207.cpp!!!	deallocate(inout ptr : void) : void
  impl_->Free(ptr);
!!!42833335.cpp!!!	empty() : bool
  return impl_->Empty();
!!!42833463.cpp!!!	deallocate(inout impl : HeapImpl, inout ptr : void) : void
  impl->Free(ptr);
