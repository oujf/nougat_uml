class RecordCache
!!!43045815.cpp!!!	~RecordCache()
  PopAll();
!!!43045943.cpp!!!	Push(in data : char, in size : size_t) : void
  std::vector<std::unique_ptr<Record>> records = ReadRecordsFromBuffer(attr_, data, size);
  if (has_timestamp_) {
    for (const auto& r : records) {
      last_time_ = std::max(last_time_, r->Timestamp());
    }
  }
  for (auto& r : records) {
    queue_.push(CreateRecordWithSeq(r.release()));
  }
!!!43046071.cpp!!!	Push(in record : std::unique_ptr<Record>) : void
  queue_.push(CreateRecordWithSeq(record.release()));
!!!43046199.cpp!!!	Pop() : std::unique_ptr<Record>
  if (queue_.size() < min_cache_size_) {
    return nullptr;
  }
  Record* r = queue_.top().record;
  if (has_timestamp_) {
    if (r->Timestamp() + min_time_diff_in_ns_ > last_time_) {
      return nullptr;
    }
  }
  queue_.pop();
  return std::unique_ptr<Record>(r);
!!!43046327.cpp!!!	PopAll() : std::vector<std::unique_ptr<Record>>
  std::vector<std::unique_ptr<Record>> result;
  while (!queue_.empty()) {
    result.emplace_back(queue_.top().record);
    queue_.pop();
  }
  return result;
!!!43046711.cpp!!!	CreateRecordWithSeq(inout r : Record) : RecordCache::RecordWithSeq
  RecordWithSeq result;
  result.seq = cur_seq_++;
  result.record = r;
  return result;
