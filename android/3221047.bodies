class SymmetricKeyFactory
!!!43135543.cpp!!!	GenerateKey(in key_description : AuthorizationSet, inout key_blob : KeymasterKeyBlob, inout hw_enforced : AuthorizationSet, inout sw_enforced : AuthorizationSet) : keymaster_error_t
    if (!key_blob || !hw_enforced || !sw_enforced)
        return KM_ERROR_OUTPUT_PARAMETER_NULL;

    uint32_t key_size_bits;
    if (!key_description.GetTagValue(TAG_KEY_SIZE, &key_size_bits) ||
        !key_size_supported(key_size_bits))
        return KM_ERROR_UNSUPPORTED_KEY_SIZE;

    keymaster_error_t error = validate_algorithm_specific_new_key_params(key_description);
    if (error != KM_ERROR_OK)
        return error;

    size_t key_data_size = key_size_bits / 8;
    KeymasterKeyBlob key_material(key_data_size);
    if (!key_material.key_material)
        return KM_ERROR_MEMORY_ALLOCATION_FAILED;

    error = context_->GenerateRandom(key_material.writable_data(), key_data_size);
    if (error != KM_ERROR_OK) {
        LOG_E("Error generating %d bit symmetric key", key_size_bits);
        return error;
    }

    return context_->CreateKeyBlob(key_description, KM_ORIGIN_GENERATED, key_material, key_blob,
                                   hw_enforced, sw_enforced);
!!!43135671.cpp!!!	ImportKey(in key_description : AuthorizationSet, in input_key_material_format : keymaster_key_format_t, in input_key_material : KeymasterKeyBlob, inout output_key_blob : KeymasterKeyBlob, inout hw_enforced : AuthorizationSet, inout sw_enforced : AuthorizationSet) : keymaster_error_t
    if (!output_key_blob || !hw_enforced || !sw_enforced)
        return KM_ERROR_OUTPUT_PARAMETER_NULL;

    AuthorizationSet authorizations(key_description);

    uint32_t key_size_bits;
    if (!authorizations.GetTagValue(TAG_KEY_SIZE, &key_size_bits)) {
        // Default key size if not specified.
        key_size_bits = input_key_material.key_material_size * 8;
        authorizations.push_back(TAG_KEY_SIZE, key_size_bits);
    }

    keymaster_error_t error = validate_algorithm_specific_new_key_params(key_description);
    if (error != KM_ERROR_OK)
        return error;

    if (!key_size_supported(key_size_bits))
        return KM_ERROR_UNSUPPORTED_KEY_SIZE;

    if (input_key_material_format != KM_KEY_FORMAT_RAW)
        return KM_ERROR_UNSUPPORTED_KEY_FORMAT;

    if (key_size_bits != input_key_material.key_material_size * 8) {
        LOG_E("Expected %d-bit key data but got %d bits", key_size_bits,
              input_key_material.key_material_size * 8);
        return KM_ERROR_INVALID_KEY_BLOB;
    }

    return context_->CreateKeyBlob(authorizations, KM_ORIGIN_IMPORTED, input_key_material,
                                   output_key_blob, hw_enforced, sw_enforced);
!!!43135799.cpp!!!	SupportedImportFormats(inout format_count : size_t) : keymaster_key_format_t
    *format_count = array_length(supported_import_formats);
    return supported_import_formats;
