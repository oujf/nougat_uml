class Buffer
!!!43193271.cpp!!!	reserve(in size : size_t) : bool
    if (available_write() < size) {
        size_t new_size = buffer_size_ + size - available_write();
        uint8_t* new_buffer = new (std::nothrow) uint8_t[new_size];
        if (!new_buffer)
            return false;
        memcpy(new_buffer, buffer_.get() + read_position_, available_read());
        memset_s(buffer_.get(), 0, buffer_size_);
        buffer_.reset(new_buffer);
        buffer_size_ = new_size;
        write_position_ -= read_position_;
        read_position_ = 0;
    }
    return true;
!!!43193399.cpp!!!	Reinitialize(in size : size_t) : bool
    Clear();
    buffer_.reset(new (std::nothrow) uint8_t[size]);
    if (!buffer_.get())
        return false;
    buffer_size_ = size;
    read_position_ = 0;
    write_position_ = 0;
    return true;
!!!43193527.cpp!!!	Reinitialize(in data : void, in data_len : size_t) : bool
    Clear();
    if (__pval(data) + data_len < __pval(data))  // Pointer wrap check
        return false;
    buffer_.reset(new (std::nothrow) uint8_t[data_len]);
    if (!buffer_.get())
        return false;
    buffer_size_ = data_len;
    memcpy(buffer_.get(), data, data_len);
    read_position_ = 0;
    write_position_ = buffer_size_;
    return true;
!!!43194039.cpp!!!	Clear() : void
    memset_s(buffer_.get(), 0, buffer_size_);
    buffer_.reset();
    read_position_ = 0;
    write_position_ = 0;
    buffer_size_ = 0;
!!!43194167.cpp!!!	available_write() : size_t
    assert(buffer_size_ >= write_position_);
    return buffer_size_ - write_position_;
!!!43194295.cpp!!!	available_read() : size_t
    assert(buffer_size_ >= write_position_);
    assert(write_position_ >= read_position_);
    return write_position_ - read_position_;
!!!43194551.cpp!!!	write(in src : uint8_t, in write_length : size_t) : bool
    if (available_write() < write_length)
        return false;
    memcpy(buffer_.get() + write_position_, src, write_length);
    write_position_ += write_length;
    return true;
!!!43194679.cpp!!!	read(inout dest : uint8_t, in read_length : size_t) : bool
    if (available_read() < read_length)
        return false;
    memcpy(dest, buffer_.get() + read_position_, read_length);
    read_position_ += read_length;
    return true;
!!!43195319.cpp!!!	SerializedSize() : size_t
    return sizeof(uint32_t) + available_read();
!!!43195447.cpp!!!	Serialize(inout buf : uint8_t, in end : uint8_t) : uint8_t
    return append_size_and_data_to_buf(buf, end, peek_read(), available_read());
!!!43195575.cpp!!!	Deserialize(in buf_ptr : uint8_t, in end : uint8_t) : bool
    Clear();
    if (!copy_size_and_data_from_buf(buf_ptr, end, &buffer_size_, &buffer_)) {
        buffer_.reset();
        buffer_size_ = 0;
        return false;
    }
    write_position_ = buffer_size_;
    return true;
