class EcdsaKeymaster0KeyFactory
!!!43098039.cpp!!!	GenerateKey(in key_description : AuthorizationSet, inout key_blob : KeymasterKeyBlob, inout hw_enforced : AuthorizationSet, inout sw_enforced : AuthorizationSet) : keymaster_error_t
    if (!key_blob || !hw_enforced || !sw_enforced)
        return KM_ERROR_OUTPUT_PARAMETER_NULL;

    if (!engine_ || !engine_->supports_ec())
        return super::GenerateKey(key_description, key_blob, hw_enforced, sw_enforced);

    keymaster_ec_curve_t ec_curve;
    uint32_t key_size;
    keymaster_error_t error = GetCurveAndSize(key_description, &ec_curve, &key_size);
    if (error != KM_ERROR_OK) {
        return error;
    }

    KeymasterKeyBlob key_material;
    if (!engine_->GenerateEcKey(key_size, &key_material))
        return KM_ERROR_UNKNOWN_ERROR;

    // These tags are hardware-enforced.  Putting them in the hw_enforced set here will ensure that
    // context_->CreateKeyBlob doesn't put them in sw_enforced.
    hw_enforced->push_back(TAG_ALGORITHM, KM_ALGORITHM_EC);
    hw_enforced->push_back(TAG_KEY_SIZE, key_size);
    hw_enforced->push_back(TAG_EC_CURVE, ec_curve);
    hw_enforced->push_back(TAG_ORIGIN, KM_ORIGIN_UNKNOWN);

    return context_->CreateKeyBlob(key_description, KM_ORIGIN_UNKNOWN, key_material, key_blob,
                                   hw_enforced, sw_enforced);
!!!43098167.cpp!!!	ImportKey(in key_description : AuthorizationSet, in input_key_material_format : keymaster_key_format_t, in input_key_material : KeymasterKeyBlob, inout output_key_blob : KeymasterKeyBlob, inout hw_enforced : AuthorizationSet, inout sw_enforced : AuthorizationSet) : keymaster_error_t
    if (!output_key_blob || !hw_enforced || !sw_enforced)
        return KM_ERROR_OUTPUT_PARAMETER_NULL;

    if (!engine_ || !engine_->supports_ec())
        return super::ImportKey(key_description, input_key_material_format, input_key_material,
                                output_key_blob, hw_enforced, sw_enforced);

    AuthorizationSet authorizations;
    uint32_t key_size;
    keymaster_error_t error = UpdateImportKeyDescription(
        key_description, input_key_material_format, input_key_material, &authorizations, &key_size);
    if (error != KM_ERROR_OK)
        return error;

    KeymasterKeyBlob imported_hw_key;
    if (!engine_->ImportKey(input_key_material_format, input_key_material, &imported_hw_key))
        return KM_ERROR_UNKNOWN_ERROR;

    // These tags are hardware-enforced.  Putting them in the hw_enforced set here will ensure that
    // context_->CreateKeyBlob doesn't put them in sw_enforced.
    hw_enforced->push_back(TAG_ALGORITHM, KM_ALGORITHM_EC);
    hw_enforced->push_back(TAG_KEY_SIZE, key_size);
    hw_enforced->push_back(TAG_ORIGIN, KM_ORIGIN_UNKNOWN);

    return context_->CreateKeyBlob(authorizations, KM_ORIGIN_UNKNOWN, imported_hw_key,
                                   output_key_blob, hw_enforced, sw_enforced);
!!!43098295.cpp!!!	LoadKey(in key_material : KeymasterKeyBlob, in additional_params : AuthorizationSet, in hw_enforced : AuthorizationSet, in sw_enforced : AuthorizationSet, inout key : UniquePtr<Key>) : keymaster_error_t
    if (!key)
        return KM_ERROR_OUTPUT_PARAMETER_NULL;

    if (sw_enforced.GetTagCount(TAG_ALGORITHM) == 1)
        return super::LoadKey(key_material, additional_params, hw_enforced, sw_enforced, key);

    unique_ptr<EC_KEY, EC_KEY_Delete> ec_key(engine_->BlobToEcKey(key_material));
    if (!ec_key)
        return KM_ERROR_UNKNOWN_ERROR;

    keymaster_error_t error;
    key->reset(new (std::nothrow)
                   EcKeymaster0Key(ec_key.release(), hw_enforced, sw_enforced, &error));
    if (error != KM_ERROR_OK)
        return error;

    return KM_ERROR_OK;
