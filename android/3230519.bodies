class RsaKey
!!!43124151.cpp!!!	InternalToEvp(inout pkey : EVP_PKEY) : bool
    return EVP_PKEY_set1_RSA(pkey, rsa_key_.get()) == 1;
!!!43124279.cpp!!!	EvpToInternal(in pkey : EVP_PKEY) : bool
    rsa_key_.reset(EVP_PKEY_get1_RSA(const_cast<EVP_PKEY*>(pkey)));
    return rsa_key_.get() != NULL;
!!!43124407.cpp!!!	SupportedMode(in purpose : keymaster_purpose_t, in padding : keymaster_padding_t) : bool
    switch (purpose) {
    case KM_PURPOSE_SIGN:
    case KM_PURPOSE_VERIFY:
        return padding == KM_PAD_NONE || padding == KM_PAD_RSA_PSS ||
               padding == KM_PAD_RSA_PKCS1_1_5_SIGN;

    case KM_PURPOSE_ENCRYPT:
    case KM_PURPOSE_DECRYPT:
        return padding == KM_PAD_RSA_OAEP || padding == KM_PAD_RSA_PKCS1_1_5_ENCRYPT;

    case KM_PURPOSE_DERIVE_KEY:
        return false;
    };
    return false;
!!!43124535.cpp!!!	SupportedMode(in purpose : keymaster_purpose_t, in digest : keymaster_digest_t) : bool
    switch (purpose) {
    case KM_PURPOSE_SIGN:
    case KM_PURPOSE_VERIFY:
        return digest == KM_DIGEST_NONE || digest == KM_DIGEST_SHA_2_256;

    case KM_PURPOSE_ENCRYPT:
    case KM_PURPOSE_DECRYPT:
        /* Don't care */
        break;

    case KM_PURPOSE_DERIVE_KEY:
        return false;
    };
    return true;
