class RsaDigestingOperation
!!!43130039.cpp!!!	RsaDigestingOperation(in purpose : keymaster_purpose_t, in digest : keymaster_digest_t, in padding : keymaster_padding_t, inout key : EVP_PKEY)
    EVP_MD_CTX_init(&digest_ctx_);
!!!43130167.cpp!!!	~RsaDigestingOperation()
    EVP_MD_CTX_cleanup(&digest_ctx_);
!!!43130295.cpp!!!	GetOpensslPadding(inout error : keymaster_error_t) : int
    *error = KM_ERROR_OK;
    switch (padding_) {
    case KM_PAD_NONE:
        return RSA_NO_PADDING;
    case KM_PAD_RSA_PKCS1_1_5_SIGN:
        return RSA_PKCS1_PADDING;
    case KM_PAD_RSA_PSS:
        if (digest_ == KM_DIGEST_NONE) {
            *error = KM_ERROR_INCOMPATIBLE_PADDING_MODE;
            return -1;
        }
        if (EVP_MD_size(digest_algorithm_) * 2 + kPssOverhead > (size_t)EVP_PKEY_size(rsa_key_)) {
            LOG_E("Input too long: %d-byte digest cannot be used with %d-byte RSA key in PSS "
                  "padding mode",
                  EVP_MD_size(digest_algorithm_), EVP_PKEY_size(rsa_key_));
            *error = KM_ERROR_INCOMPATIBLE_DIGEST;
            return -1;
        }
        return RSA_PKCS1_PSS_PADDING;
    default:
        return -1;
    }
