class AsymmetricKeyFactory
!!!43167287.cpp!!!	LoadKey(in key_material : KeymasterKeyBlob, in additional_params : AuthorizationSet, in hw_enforced : AuthorizationSet, in sw_enforced : AuthorizationSet, inout key : UniquePtr<Key>) : keymaster_error_t
    UniquePtr<AsymmetricKey> asymmetric_key;
    keymaster_error_t error = CreateEmptyKey(hw_enforced, sw_enforced, &asymmetric_key);
    if (error != KM_ERROR_OK)
        return error;

    const uint8_t* tmp = key_material.key_material;
    EVP_PKEY* pkey =
        d2i_PrivateKey(evp_key_type(), NULL /* pkey */, &tmp, key_material.key_material_size);
    if (!pkey)
        return TranslateLastOpenSslError();
    UniquePtr<EVP_PKEY, EVP_PKEY_Delete> pkey_deleter(pkey);

    if (!asymmetric_key->EvpToInternal(pkey))
        error = TranslateLastOpenSslError();
    else
        key->reset(asymmetric_key.release());

    return error;
!!!43167799.cpp!!!	SupportedImportFormats(inout format_count : size_t) : keymaster_key_format_t
    *format_count = array_length(supported_import_formats);
    return supported_import_formats;
!!!43167927.cpp!!!	SupportedExportFormats(inout format_count : size_t) : keymaster_key_format_t
    *format_count = array_length(supported_export_formats);
    return supported_export_formats;
