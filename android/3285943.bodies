class IdletimerController
!!!43241399.cpp!!!	enableIdletimerControl() : int
    int res = setDefaults();
    return res;
!!!43241527.cpp!!!	disableIdletimerControl() : int
    int res = setDefaults();
    return res;
!!!43241655.cpp!!!	addInterfaceIdletimer(in iface : char, in timeout : uint32_t, in classLabel : char) : int
  return modifyInterfaceIdletimer(IptOpAdd, iface, timeout, classLabel);
!!!43241783.cpp!!!	removeInterfaceIdletimer(in iface : char, in timeout : uint32_t, in classLabel : char) : int
  return modifyInterfaceIdletimer(IptOpDelete, iface, timeout, classLabel);
!!!43241911.cpp!!!	setupIptablesHooks() : bool
    return true;
!!!43242039.cpp!!!	setDefaults() : int
  int res;
  const char *cmd1[] = {
      NULL, // To be filled inside runIpxtablesCmd
      "-w",
      "-t",
      "raw",
      "-F",
      LOCAL_RAW_PREROUTING
  };
  res = runIpxtablesCmd(ARRAY_SIZE(cmd1), cmd1);

  if (res)
    return res;

  const char *cmd2[] = {
      NULL, // To be filled inside runIpxtablesCmd
      "-w",
      "-t",
      "mangle",
      "-F",
      LOCAL_MANGLE_POSTROUTING
  };
  res = runIpxtablesCmd(ARRAY_SIZE(cmd2), cmd2);

  return res;
!!!43242167.cpp!!!	runIpxtablesCmd(in argc : int, in argv : char) : int
    int resIpv4, resIpv6;

    // Running for IPv4
    argv[0] = IPTABLES_PATH;
    resIpv4 = android_fork_execvp(argc, (char **)argv, NULL, false, false);

    // Running for IPv6
    argv[0] = IP6TABLES_PATH;
    resIpv6 = android_fork_execvp(argc, (char **)argv, NULL, false, false);

#if !LOG_NDEBUG
    std::string full_cmd = argv[0];
    argc--; argv++;
    for (; argc; argc--, argv++) {
        full_cmd += " ";
        full_cmd += argv[0];
    }
    ALOGV("runCmd(%s) res_ipv4=%d, res_ipv6=%d", full_cmd.c_str(), resIpv4, resIpv6);
#endif

    return (resIpv4 == 0 && resIpv6 == 0) ? 0 : -1;
!!!43242295.cpp!!!	modifyInterfaceIdletimer(in op : IdletimerController::IptOp, in iface : char, in timeout : uint32_t, in classLabel : char) : int
  int res;
  char timeout_str[11]; //enough to store any 32-bit unsigned decimal

  if (!isIfaceName(iface)) {
    errno = ENOENT;
    return -1;
  }

  snprintf(timeout_str, sizeof(timeout_str), "%u", timeout);

  const char *cmd1[] = {
      NULL, // To be filled inside runIpxtablesCmd
      "-w",
      "-t",
      "raw",
      (op == IptOpAdd) ? "-A" : "-D",
      LOCAL_RAW_PREROUTING,
      "-i",
      iface,
      "-j",
      "IDLETIMER",
      "--timeout",
      timeout_str,
      "--label",
      classLabel,
      "--send_nl_msg",
      "1"
  };
  res = runIpxtablesCmd(ARRAY_SIZE(cmd1), cmd1);

  if (res)
    return res;

  const char *cmd2[] = {
      NULL, // To be filled inside runIpxtablesCmd
      "-w",
      "-t",
      "mangle",
      (op == IptOpAdd) ? "-A" : "-D",
      LOCAL_MANGLE_POSTROUTING,
      "-o",
      iface,
      "-j",
      "IDLETIMER",
      "--timeout",
      timeout_str,
      "--label",
      classLabel,
      "--send_nl_msg",
      "1"
  };
  res = runIpxtablesCmd(ARRAY_SIZE(cmd2), cmd2);

  return res;
