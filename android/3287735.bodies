class Network
!!!43255607.cpp!!!	~Network()
    if (!mInterfaces.empty()) {
        ALOGE("deleting network with netId %u without clearing its interfaces", mNetId);
    }
!!!43255863.cpp!!!	getNetId() : uint
    return mNetId;
!!!43255991.cpp!!!	hasInterface(in interface : std::string) : bool
    return mInterfaces.find(interface) != mInterfaces.end();
!!!43256119.cpp!!!	getInterfaces() : std::set<std::string>
    return mInterfaces;
!!!43256503.cpp!!!	clearInterfaces() : int
    while (!mInterfaces.empty()) {
        // Make a copy of the string, so removeInterface() doesn't lose its parameter when it
        // removes the string from the set.
        std::string interface = *mInterfaces.begin();
        if (int ret = removeInterface(interface)) {
            return ret;
        }
    }
    return 0;
!!!43256631.cpp!!!	toString() : std::string
    const char kSeparator[] = " ";
    std::stringstream repr;

    repr << mNetId;

    repr << kSeparator;
    switch (getType()) {
        case DUMMY:
            repr << "DUMMY";
            break;
        case LOCAL:
            repr << "LOCAL";
            break;
        case PHYSICAL:
            repr << "PHYSICAL";
            break;
        case VIRTUAL:
            repr << "VIRTUAL";
            break;
        default:
            repr << "unknown";
    }

    if (mInterfaces.size() > 0) {
        repr << kSeparator << android::base::Join(mInterfaces, ",");
    }

    return repr.str();
