class KeymasterCertificateChain
!!!43306551.cpp!!!	KeymasterCertificateChain()
    memset(&chain, 0, sizeof(chain));
!!!43306679.cpp!!!	~KeymasterCertificateChain()
    keymaster_free_cert_chain(&chain);
!!!43306807.cpp!!!	readFromParcel(in in : Parcel) : void
    keymaster_free_cert_chain(&chain);

    ssize_t count = in.readInt32();
    size_t ucount = count;
    if (count <= 0) {
        return;
    }

    chain.entries = reinterpret_cast<keymaster_blob_t*>(malloc(sizeof(keymaster_blob_t) * ucount));
    if (!chain.entries) {
        ALOGE("Error allocating memory for certificate chain");
        return;
    }

    memset(chain.entries, 0, sizeof(keymaster_blob_t) * ucount);
    for (size_t i = 0; i < ucount; ++i) {
        if (!readKeymasterBlob(in, &chain.entries[i])) {
            ALOGE("Error reading certificate from parcel");
            keymaster_free_cert_chain(&chain);
            return;
        }
    }
!!!43306935.cpp!!!	writeToParcel(inout out : Parcel) : void
    out->writeInt32(chain.entry_count);
    for (size_t i = 0; i < chain.entry_count; ++i) {
        if (chain.entries[i].data) {
            out->writeInt32(chain.entries[i].data_length);
            void* buf = out->writeInplace(chain.entries[i].data_length);
            if (buf) {
                memcpy(buf, chain.entries[i].data, chain.entries[i].data_length);
            } else {
                ALOGE("Failed to writeInplace keymaster cert chain entry");
            }
        } else {
            out->writeInt32(0); // Tell Java side this object is NULL.
            ALOGE("Found NULL certificate chain entry");
        }
    }
