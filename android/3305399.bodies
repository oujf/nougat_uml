class Type
!!!43361975.cpp!!!	CreatorName() : std::string
 return "";
!!!43362103.cpp!!!	InstantiableName() : std::string
 return JavaType();
!!!43362231.cpp!!!	WriteToParcel(inout addTo : StatementBlock, inout v : Variable, inout parcel : Variable, in flags : int) : void
  fprintf(stderr, "aidl:internal error %s:%d qualifiedName=%sn", __FILE__,
          __LINE__, m_javaType.c_str());
  addTo->Add(new LiteralExpression("/* WriteToParcel error " + m_javaType +
                                   " */"));
!!!43362359.cpp!!!	CreateFromParcel(inout addTo : StatementBlock, inout v : Variable, inout parcel : Variable, inout cl : Variable) : void
  fprintf(stderr, "aidl:internal error %s:%d qualifiedName=%s\n", __FILE__,
          __LINE__, m_javaType.c_str());
  addTo->Add(new LiteralExpression("/* CreateFromParcel error " +
                                   m_javaType + " */"));
!!!43362487.cpp!!!	ReadFromParcel(inout addTo : StatementBlock, inout v : Variable, inout parcel : Variable, inout cl : Variable) : void
  fprintf(stderr, "aidl:internal error %s:%d qualifiedName=%s\n", __FILE__,
          __LINE__, m_javaType.c_str());
  addTo->Add(new LiteralExpression("/* ReadFromParcel error " +
                                   m_javaType + " */"));
!!!43362615.cpp!!!	BuildWriteToParcelFlags(in flags : int) : Expression
  if (flags == 0) {
    return new LiteralExpression("0");
  }
  if ((flags & PARCELABLE_WRITE_RETURN_VALUE) != 0) {
    return new FieldVariable(m_types->ParcelableInterfaceType(),
                             "PARCELABLE_WRITE_RETURN_VALUE");
  }
  return new LiteralExpression("0");
