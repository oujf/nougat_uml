class GenericListType
!!!43376951.cpp!!!	CreatorName() : std::string
  return "android.os.Parcel.arrayListCreator";
!!!43377079.cpp!!!	InstantiableName() : std::string
  return "java.util.ArrayList<" + m_contained_type->JavaType() + ">";
!!!43377335.cpp!!!	WriteToParcel(inout addTo : StatementBlock, inout v : Variable, inout parcel : Variable, in flags : int) : void
  if (m_creator == m_types->StringType()->CreatorName()) {
    addTo->Add(new MethodCall(parcel, "writeStringList", 1, v));
  } else if (m_creator == m_types->IBinderType()->CreatorName()) {
    addTo->Add(new MethodCall(parcel, "writeBinderList", 1, v));
  } else {
    // parcel.writeTypedListXX(arg);
    addTo->Add(new MethodCall(parcel, "writeTypedList", 1, v));
  }
!!!43377463.cpp!!!	CreateFromParcel(inout addTo : StatementBlock, inout v : Variable, inout parcel : Variable, inout cl : Variable) : void
  if (m_creator == m_types->StringType()->CreatorName()) {
    addTo->Add(
        new Assignment(v, new MethodCall(parcel, "createStringArrayList", 0)));
  } else if (m_creator == m_types->IBinderType()->CreatorName()) {
    addTo->Add(
        new Assignment(v, new MethodCall(parcel, "createBinderArrayList", 0)));
  } else {
    // v = _data.readTypedArrayList(XXX.creator);
    addTo->Add(
        new Assignment(v, new MethodCall(parcel, "createTypedArrayList", 1,
                                         new LiteralExpression(m_creator))));
  }
!!!43377591.cpp!!!	ReadFromParcel(inout addTo : StatementBlock, inout v : Variable, inout parcel : Variable, inout cl : Variable) : void
  if (m_creator == m_types->StringType()->CreatorName()) {
    addTo->Add(new MethodCall(parcel, "readStringList", 1, v));
  } else if (m_creator == m_types->IBinderType()->CreatorName()) {
    addTo->Add(new MethodCall(parcel, "readBinderList", 1, v));
  } else {
    // v = _data.readTypedList(v, XXX.creator);
    addTo->Add(new MethodCall(parcel, "readTypedList", 2, v,
                              new LiteralExpression(m_creator)));
  }
