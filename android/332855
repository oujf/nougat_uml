format 213
"include" // android::system::bt::vendor_libs::test_vendor_lib::include
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/bt/vendor_libs/test_vendor_lib/include/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/bt/vendor_libs/test_vendor_lib/include/"
  cpp_namespace "test_vendor_lib"
  classview 306231 "include"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 2950967 "CommandPacket"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The following is specified in the Bluetooth Core Specification Version 4.2,
 Volume 2, Part E, Section 5.4.1 (page 470). Command Packets begin with a 3
 octet header formatted as follows:
 - Opcode: 2 octets
   - Opcode Group Field (OGF): Upper bits 10-15
   - Opcode Command Field (OCF): Lower bits 0-9
 - Payload size (in octets): 1 octet
 The header is followed by the payload, which contains command specific
 parameters and has a maximum size of 255 octets. Valid command opcodes are
 defined in stack/include/hcidefs.h. The OGF ranges from 0x00 to 0x3F, with
 0x3F reserved for vendor-specific debug functions. The OCF ranges from
 0x0000 to 0x03FF. Note that the payload size is the size in octets of the
 command parameters and not the number of parameters. Finally, although the
 parameters contained in the payload are command specific (including the size
 and number of parameters), each parameter will be an integer number of octets
 in size."
      classrelation 6304695 // <generalisation>
	relation 6304695 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6304695 // <generalisation>
	  b parent class_ref 2951095 // Packet
      end

      operation 41919159 "CommandPacket"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 41919287 "~CommandPacket"
	cpp_virtual cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41919415 "GetOpcode"
	const public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the command opcode as defined in stack/include/hcidefs.h.
 See the Bluetooth Core Specification Version 4.2, Volume 2, Part E,
 Section 7 for more information about each HCI commands and for a listing
 of their specific opcodes/OGF and OCF values."
      end

      operation 41919543 "GetOGF"
	const public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the 6 bit opcode group field that specifies the general category of
 the command. The OGF can be one of seven values:
 - 0x01: Link control commands
 - 0x02: Link policy commands
 - 0x03: Controller and baseband commands
 - 0x04: Informational parameters commands
 - 0x05: Status parameters commands
 - 0x06: Testing commands
 - 0x08: Low energy controller commands
 The upper 2 bits will be zero filled."
      end

      operation 41919671 "GetOCF"
	const public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the 10 bit opcode command field that specifies an exact command
 within an opcode group field. The upper 6 bits will be zero filled."
      end

      attribute 11260087 "kCommandHeaderSize"
	class_attribute const_attribute public explicit_type "size_t"
	init_value "=  3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size in octets of a command packet header, which consists of a 2 octet
 opcode and a 1 octet payload size.
"
      end
    end

    class 2951095 "Packet"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " extern \"C\"
 Abstract base class that is subclassed to provide type-specifc accessors on
 data. Manages said data's memory and guarantees the data's persistence for IO
 operations."
      operation 41930167 "~Packet"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41930295 "GetPacketSize"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the size in octets of the entire packet, which consists of the type
 octet, the header, and the payload."
      end

      operation 41930423 "GetPayload"
	const public explicit_return_type "std::vector<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41930551 "GetPayloadSize"
	const public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41930679 "GetHeader"
	const public explicit_return_type "std::vector<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41930807 "GetHeaderSize"
	const public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41930935 "GetType"
	const public return_type class_ref 2829367 // serial_data_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41931063 "Encode"
	public explicit_return_type "bool"
	nparams 2
	  param in name "header" explicit_type "std::vector<uint8_t>"
	  param in name "payload" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Validates the packet by checking that the payload size in the header is
 accurate. If the size is not valid, returns false. Otherwise, the data in
 |header| and |payload| is copied into |header_| and |payload_|
 respectively. If an error occurs while the data is being copied, the
 contents of |header| and |payload| are guaranteed to be preserved. The
 packet object will assume ownership of the copied data for its entire
 lifetime."
      end

      operation 41931191 "Packet"
	protected explicit_return_type ""
	nparams 1
	  param in name "type" type class_ref 2829367 // serial_data_type_t
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs an empty packet of type |type|. A call to Encode() shall be made
 to check and fill in the packet's data."
      end

      attribute 11263927 "header_"
	private explicit_type "uint8_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Underlying containers for storing the actual packet, broken down into the
 packet header and the packet payload. Data is copied into the vectors
 during the constructor and becomes accessible (read only) to children
 through GetHeader() and GetPayload().
"
      end

      attribute 11264055 "payload_"
	private explicit_type "uint8_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6305847 // type_ (<directional composition>)
	relation 6305847 *-->
	  a role_name "type_" private
	    comment " The packet type is one of DATA_TYPE_ACL, DATA_TYPE_COMMAND,
 DATA_TYPE_EVENT, or DATA_TYPE_SCO.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6305847 // type_ (<directional composition>)
	  b parent class_ref 2829367 // serial_data_type_t
      end
    end

    class 2951223 "DualModeController"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Emulates a dual mode BR/EDR + LE controller by maintaining the link layer
 state machine detailed in the Bluetooth Core Specification Version 4.2,
 Volume 6, Part B, Section 1.1 (page 30). Provides methods corresponding to
 commands sent by the HCI. These methods will be registered as callbacks from
 a controller instance with the HciHandler. To implement a new Bluetooth
 command, simply add the method declaration below, with return type void and a
 single const std::vector<uint8_t>& argument. After implementing the
 method, simply register it with the HciHandler using the SET_HANDLER macro in
 the controller's default constructor. Be sure to name your method after the
 corresponding Bluetooth command in the Core Specification with the prefix
 \"Hci\" to distinguish it as a controller command."
      class 2951351 "Properties"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 41919799 "Properties"
	  public explicit_return_type ""
	  nparams 1
	    param in name "file_name" explicit_type "std::string"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	  comment " TODO(dennischeng): Add default initialization and use that to instantiate
 a default configured controller if the config file is invalid or not
 provided."
	end

	operation 41919927 "GetBdAddress"
	  public explicit_return_type "std::vector<uint8_t>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Aggregates and returns the result for the Read Local Extended Features
 command. This result contains the |maximum_page_number_| property (among
 other things not in the Properties object). See the Bluetooth Core
 Specification Version 4.2, Volume 2, Part E, Section 7.4.4 (page 792)."
	end

	operation 41920055 "GetBufferSize"
	  public explicit_return_type "std::vector<uint8_t>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Aggregates and returns the result for the Read Buffer Size command. This
 result consists of the |acl_data_packet_size_|, |sco_data_packet_size_|,
 |num_acl_data_packets_|, and |num_sco_data_packets_| properties. See the
 Bluetooth Core Specification Version 4.2, Volume 2, Part E, Section 7.4.5
 (page 794)."
	end

	operation 41920183 "GetLocalExtendedFeatures"
	  public explicit_return_type "std::vector<uint8_t>"
	  nparams 1
	    param in name "page_number" explicit_type "uint8_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the result for the Read BD_ADDR command. This result is the
 |bd_address_| property. See the Bluetooth Core Specification Version
 4.2, Volume 2, Part E, Section 7.4.6 (page 796)."
	end

	operation 41920311 "GetLocalName"
	  public explicit_return_type "std::vector<uint8_t>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the result for the Read Local Name command. See the Bluetooth
 Core Specification Version 4.2, Volume 2, Part E, Section 7.3.12
 (page 664)."
	end

	operation 41920439 "GetLocalSupportedCommands"
	  public explicit_return_type "std::vector<uint8_t>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the result for the Read Local Supported Commands command. See the
 Bluetooth Core Specification Version 4.2, Volume 2, Part E, Section 7.4.2
 (page 790)."
	end

	operation 41920567 "GetLocalVersionInformation"
	  public explicit_return_type "std::vector<uint8_t>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Aggregates and returns the Read Local Version Information result. This
 consists of the |version_|, |revision_|, |lmp_pal_version_|,
 |manufacturer_name_|, and |lmp_pal_subversion_|. See the Bluetooth Core
 Specification Version 4.2, Volume 2, Part E, Section 7.4.1 (page 788)."
	end

	operation 41920695 "RegisterJSONConverter"
	  class_operation public explicit_return_type "void"
	  nparams 1
	    param inout name "converter" explicit_type "base::JSONValueConverter<Properties>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 11260215 "acl_data_packet_size_"
	  private explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11260343 "sco_data_packet_size_"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11260471 "num_acl_data_packets_"
	  private explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11260599 "num_sco_data_packets_"
	  private explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11260727 "version_"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11260855 "revision_"
	  private explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11260983 "lmp_pal_version_"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11261111 "manufacturer_name_"
	  private explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11261239 "lmp_pal_subversion_"
	  private explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11261367 "maximum_page_number_"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11261495 "local_supported_commands_size_"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11261623 "local_name_size_"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11261751 "bd_address_"
	  private explicit_type "uint8_t"
	  stereotype "std::vector"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 41920823 "DualModeController"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Sets all of the methods to be used as callbacks in the HciHandler."
      end

      operation 41920951 "~DualModeController"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41921079 "HandleCommand"
	public explicit_return_type "void"
	nparams 1
	  param in name "command_packet" explicit_type "std::unique_ptr<CommandPacket>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Preprocesses the command, primarily checking testh channel hooks. If
 possible, dispatches the corresponding controller method corresponding to
 carry out the command."
      end

      operation 41921207 "HandleTestChannelCommand"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "args" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Dispatches the test channel action corresponding to the command specified
 by |name|."
      end

      operation 41921335 "RegisterHandlersWithHciTransport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transport" type class_ref 2951479 // HciTransport
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the controller Handle* methods as callbacks for the transport to call
 when data is received."
      end

      operation 41921463 "RegisterHandlersWithTestChannelTransport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transport" type class_ref 2951607 // TestChannelTransport
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the test channel handler with the transport dedicated to test channel
 communications."
      end

      operation 41921591 "RegisterEventChannel"
	public explicit_return_type "void"
	nparams 1
	  param in name "send_event" explicit_type "std::function<void(std::unique_ptr<EventPacket>)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the callback to be used for sending events back to the HCI.
 TODO(dennischeng): Once PostDelayedTask works, get rid of this and only use
 |RegisterDelayedEventChannel|."
      end

      operation 41921719 "RegisterDelayedEventChannel"
	public explicit_return_type "void"
	nparams 1
	  param in name "send_event" explicit_type "std::function<void(std::unique_ptr<EventPacket>, base::TimeDelta)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41921847 "HciReset"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Controller commands. For error codes, see the Bluetooth Core Specification,
 Version 4.2, Volume 2, Part D (page 370).
 OGF: 0x0003
 OCF: 0x0003
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.2"
      end

      operation 41921975 "HciReadBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0004
 OGF: 0x0005
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.4.5"
      end

      operation 41922103 "HciHostBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0033
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.39"
      end

      operation 41922231 "HciReadLocalVersionInformation"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0004
 OCF: 0x0001
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.4.1"
      end

      operation 41922359 "HciReadBdAddr"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0004
 OCF: 0x0009
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.4.6"
      end

      operation 41922487 "HciReadLocalSupportedCommands"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0004
 OCF: 0x0002
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.4.2"
      end

      operation 41922615 "HciReadLocalExtendedFeatures"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0004
 OCF: 0x0004
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.4.4"
      end

      operation 41922743 "HciWriteSimplePairingMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0056
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.59"
      end

      operation 41922871 "HciWriteLeHostSupport"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x006D
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.79"
      end

      operation 41922999 "HciSetEventMask"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0001
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.1"
      end

      operation 41923127 "HciWriteInquiryMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0045
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.50"
      end

      operation 41923255 "HciWritePageScanType"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0047
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.52"
      end

      operation 41923383 "HciWriteInquiryScanType"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0043
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.48"
      end

      operation 41923511 "HciWriteClassOfDevice"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0024
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.26"
      end

      operation 41923639 "HciWritePageTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0018
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.16"
      end

      operation 41923767 "HciWriteDefaultLinkPolicySettings"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0002
 OCF: 0x000F
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.2.12"
      end

      operation 41923895 "HciReadLocalName"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0014
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.12"
      end

      operation 41924023 "HciWriteLocalName"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0013
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.11"
      end

      operation 41924151 "HciWriteExtendedInquiryResponse"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0052
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.56"
      end

      operation 41924279 "HciWriteVoiceSetting"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0026
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.28"
      end

      operation 41924407 "HciWriteCurrentIacLap"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x003A
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.45"
      end

      operation 41924535 "HciWriteInquiryScanActivity"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x001E
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.22"
      end

      operation 41924663 "HciWriteScanEnable"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x001A
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.18"
      end

      operation 41924791 "HciSetEventFilter"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0005
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.3"
      end

      operation 41924919 "HciInquiry"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0001
 OCF: 0x0001
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.1.1"
      end

      operation 41925047 "HciInquiryCancel"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0001
 OCF: 0x0002
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.1.2"
      end

      operation 41925175 "HciDeleteStoredLinkKey"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0003
 OCF: 0x0012
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.3.10"
      end

      operation 41925303 "HciRemoteNameRequest"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OGF: 0x0001
 OCF: 0x0019
 Bluetooth Core Specification Version 4.2 Volume 2 Part E 7.1.19"
      end

      operation 41925431 "TestChannelClear"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Test Channel commands:
 Clears all test channel modifications."
      end

      operation 41925559 "TestChannelClearEventDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the response delay for events to 0."
      end

      operation 41925687 "TestChannelDiscover"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Discovers a fake device."
      end

      operation 41925815 "TestChannelSetEventDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Causes events to be sent after a delay."
      end

      operation 41925943 "TestChannelTimeoutAll"
	public explicit_return_type "void"
	nparams 1
	  param in name "args" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Causes all future HCI commands to timeout."
      end

      class 2951735 "State"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11261879 "kStandby"
	  public type class_ref 2951735 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11262007 "kInquiry"
	  public type class_ref 2951735 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 2951863 "TestChannelState"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11262135 "kNone"
	  public type class_ref 2951863 // TestChannelState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11262263 "kTimeoutAll"
	  public type class_ref 2951863 // TestChannelState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11262391 "kDelayedResponse"
	  public type class_ref 2951863 // TestChannelState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 41926071 "SendCommandComplete"
	const private explicit_return_type "void"
	nparams 2
	  param in name "command_opcode" explicit_type "uint16_t"
	  param in name "return_parameters" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a command complete event and sends it back to the HCI."
      end

      operation 41926199 "SendCommandCompleteSuccess"
	const private explicit_return_type "void"
	nparams 1
	  param in name "command_opcode" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends a command complete event with no return parameters. This event is
 typically sent for commands that can be completed immediately."
      end

      operation 41926327 "SendCommandStatus"
	const private explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "uint8_t"
	  param in name "command_opcode" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a command status event and sends it back to the HCI."
      end

      operation 41926455 "SendCommandStatusSuccess"
	const private explicit_return_type "void"
	nparams 1
	  param in name "command_opcode" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends a command status event with default event parameters."
      end

      operation 41926583 "SendInquiryResult"
	const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends an inquiry response for a fake device."
      end

      operation 41926711 "SendExtendedInquiryResult"
	const private explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends an extended inquiry response for a fake device."
      end

      operation 41926839 "SetEventDelay"
	private explicit_return_type "void"
	nparams 1
	  param in name "delay" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11262519 "send_event_"
	private explicit_type "void(std::unique_ptr<EventPacket>)"
	stereotype "std::function"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Callback provided to send events from the controller back to the HCI.
"
      end

      attribute 11262647 "send_delayed_event_"
	private explicit_type "void(std::unique_ptr<EventPacket>, base::TimeDelta)"
	stereotype "std::function"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11262775 "active_hci_commands_"
	private explicit_type "uint16_t, std::function<void(const std::vector<uint8_t>&)>"
	stereotype "std::unordered_map"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maintains the commands to be registered and used in the HciHandler object.
 Keys are command opcodes and values are the callbacks to handle each
 command.
"
      end

      attribute 11262903 "active_test_channel_commands_"
	private explicit_type "std::string,
                     std::function<void(const std::vector<std::string>&)>"
	stereotype "std::unordered_map"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11263031 "inquiry_mode_"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Specifies the format of Inquiry Result events to be returned during the
 Inquiry command.
 0x00: Standard Inquiry Result event format (default).
 0x01: Inquiry Result format with RSSI.
 0x02 Inquiry Result with RSSI format or Extended Inquiry Result format.
 0x03-0xFF: Reserved.
"
      end

      classrelation 6304823 // state_ (<directional composition>)
	relation 6304823 *-->
	  a role_name "state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6304823 // state_ (<directional composition>)
	  b parent class_ref 2951735 // State
      end

      classrelation 6304951 // properties_ (<directional composition>)
	relation 6304951 *-->
	  a role_name "properties_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6304951 // properties_ (<directional composition>)
	  b parent class_ref 2951351 // Properties
      end

      classrelation 6305079 // test_channel_state_ (<directional composition>)
	relation 6305079 *-->
	  a role_name "test_channel_state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6305079 // test_channel_state_ (<directional composition>)
	  b parent class_ref 2951863 // TestChannelState
      end
    end

    class 2951479 "HciTransport"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Manages communication channel between HCI and the controller by providing the
 socketing mechanisms for reading/writing between the HCI and the controller."
      classrelation 6305335 // <generalisation>
	relation 6305335 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6305335 // <generalisation>
	  b parent class_ref 2952119 // typedef28
      end

      operation 41927863 "HciTransport"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 41927991 "~HciTransport"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41928119 "CloseHciFd"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41928247 "CloseVendorFd"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41928375 "GetHciFd"
	const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41928503 "GetVendorFd"
	const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41928631 "SetUp"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates the underlying socketpair to be used as a communication channel
 between the HCI and the vendor library/controller. Returns false if an
 error occurs."
      end

      operation 41928759 "RegisterCommandHandler"
	public explicit_return_type "void"
	nparams 1
	  param in name "callback" explicit_type "std::function<void(std::unique_ptr<CommandPacket>)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the callback that is run when command packets are received."
      end

      operation 41928887 "PostEventResponse"
	public explicit_return_type "void"
	nparams 1
	  param in name "event" explicit_type "std::unique_ptr<EventPacket>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Posts the event onto |outbound_events_| to be written sometime in the
 future when the vendor file descriptor is ready for writing."
      end

      operation 41929015 "PostDelayedEventResponse"
	public explicit_return_type "void"
	nparams 2
	  param in name "event" explicit_type "std::unique_ptr<EventPacket>"
	  param in name "delay" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Posts the event onto |outbound_events_| after |delay| ms. A call to
 |PostEventResponse| with |delay| 0 is equivalent to a call to |PostEvent|."
      end

      class 2952247 "TimeStampedEvent"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 41929143 "TimeStampedEvent"
	  public explicit_return_type ""
	  nparams 2
	    param in name "event" explicit_type "std::unique_ptr<EventPacket>"
	    param in name "delay" explicit_type "base::TimeDelta"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 41929271 "TimeStampedEvent"
	  public explicit_return_type ""
	  nparams 1
	    param in name "event" explicit_type "std::unique_ptr<EventPacket>"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	  comment " Using this constructor is equivalent to calling the 2-argument
 constructor with a |delay| of 0. It is used to generate event responses
 with no delay."
	end

	operation 41929399 "GetTimeStamp"
	  const public explicit_return_type "base::TimeTicks"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 41929527 "GetEvent"
	  public return_type class_ref 2951991 // EventPacket
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 6305463 // event_ (<directional composition>)
	  relation 6305463 *-->
	    stereotype "std::shared_ptr"
	    a role_name "event_" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6305463 // event_ (<directional composition>)
	    b parent class_ref 2951991 // EventPacket
	end

	attribute 11263287 "time_stamp_"
	  private explicit_type "base::TimeTicks"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " The time associated with the event, indicating the earliest time at which
 |event_| will be sent.
"
	end
      end

      operation 41929655 "OnFileCanReadWithoutBlocking"
	cpp_override private explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " base::MessageLoopForIO::Watcher overrides:"
      end

      operation 41929783 "OnFileCanWriteWithoutBlocking"
	cpp_override private explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41929911 "ReceiveReadyCommand"
	const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads in a command packet and calls the command ready callback,
 |command_handler_|, passing ownership of the command packet to the handler."
      end

      operation 41930039 "AddEventToOutboundEvents"
	private explicit_return_type "void"
	nparams 1
	  param in name "event" explicit_type "std::unique_ptr<TimeStampedEvent>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11263415 "outbound_events_"
	private explicit_type "std::unique_ptr<TimeStampedEvent>"
	stereotype "std::list"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Write queue for sending events to the HCI. Event packets are removed from
 the queue and written when write-readiness is signalled by the message
 loop. After being written, the event packets are destructed.
"
      end

      attribute 11263543 "command_handler_"
	private explicit_type "void(std::unique_ptr<CommandPacket>)"
	stereotype "std::function"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Callback executed in ReceiveReadyCommand() to pass the incoming command
 over to the handler for further processing.
"
      end

      classrelation 6305591 // packet_stream_ (<directional composition>)
	relation 6305591 *-->
	  a role_name "packet_stream_" private
	    comment " For performing packet-based IO.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6305591 // packet_stream_ (<directional composition>)
	  b parent class_ref 2952375 // PacketStream
      end

      attribute 11263671 "hci_fd_"
	private explicit_type "base::ScopedFD"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The two ends of the socketpair. |hci_fd_| is handed back to the HCI in
 bt_vendor.cc and |vendor_fd_| is used by |packet_stream_| to receive/send
 data from/to the HCI. Both file descriptors are owned and managed by the
 transport object, although |hci_fd_| can be closed by the HCI in
 TestVendorOp().
"
      end

      attribute 11263799 "vendor_fd_"
	private explicit_type "base::ScopedFD"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6305719 // weak_ptr_factory_ (<directional composition>)
	relation 6305719 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_ptr_factory_" private
	    comment " This should remain the last member so it'll be destroyed and invalidate
 its weak pointers before any other members are destroyed.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6305719 // weak_ptr_factory_ (<directional composition>)
	  b parent class_ref 2951479 // HciTransport
      end
    end

    class 2951607 "TestChannelTransport"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Manages communications between test channel and the controller. Mirrors the
 HciTransport for the test channel."
      classrelation 6305975 // <generalisation>
	relation 6305975 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6305975 // <generalisation>
	  b parent class_ref 2952119 // typedef28
      end

      operation 41932343 "TestChannelTransport"
	public explicit_return_type ""
	nparams 2
	  param in name "enabled" explicit_type "bool"
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 41932471 "~TestChannelTransport"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41932599 "SetUp"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Waits for a connection request from the test channel program and
 allocates the file descriptor to watch for run-time parameters at. This
 file descriptor gets stored in |fd_|."
      end

      operation 41932727 "GetFd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41932855 "IsEnabled"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Because it imposes a different flow of work, the test channel must be
 actively enabled to be used. |enabled_| is set by the vendor manager."
      end

      operation 41932983 "Disable"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Turns the test channel off for use in circumstances where an error occurs
 and leaving the channel on would crash Bluetooth (e.g. if the test channel
 is unable to bind to its socket, Bluetooth should still start without the
 channel enabled)."
      end

      operation 41933111 "RegisterCommandHandler"
	public explicit_return_type "void"
	nparams 1
	  param in name "callback" explicit_type "std::function<void(const std::string&, const std::vector<std::string>&)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the callback that fires when data is read in
 |OnFileCanReadWithoutBlocking|."
      end

      operation 41933239 "OnFileCanReadWithoutBlocking"
	cpp_override private explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " base::MessageLoopForIO::Watcher overrides:"
      end

      operation 41933367 "OnFileCanWriteWithoutBlocking"
	cpp_override private explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11264183 "command_handler_"
	private explicit_type "void(const std::string&, const std::vector<std::string>&)"
	stereotype "std::function"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11264311 "fd_"
	private explicit_type "base::ScopedFD"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " File descriptor to watch for test hook data.
"
      end

      attribute 11264439 "port_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TODO(dennischeng): Get port and enabled flag from a config file.
"
      end

      attribute 11264567 "enabled_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 2951991 "EventPacket"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The following is specified in the Bluetooth Core Specification Version 4.2,
 Volume 2, Part E, Section 5.4.4 (page 477). Event Packets begin with a 2
 octet header formatted as follows:
 - Event code: 1 octet
 - Payload size (in octets): 1 octet
 The header is followed by the payload, which contains event specific
 parameters and has a maximum size of 255 octets. Valid event codes are
 listed in stack/include/hcidefs.h. They can range from 0x00 to 0xFF, with
 0xFF reserved for vendor specific debug events. Note the payload size
 describes the total size of the event parameters and not the number of
 parameters. The event parameters contained in the payload will be an integer
 number of octets in size. Each flavor of event packet is created via a static
 factory function that takes the event type-specific parameters and returns an
 initialized event packet from that data."
      classrelation 6305207 // <generalisation>
	relation 6305207 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6305207 // <generalisation>
	  b parent class_ref 2951095 // Packet
      end

      operation 41926967 "~EventPacket"
	cpp_virtual cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41927095 "GetEventCode"
	const public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41927223 "CreateCommandCompleteEvent"
	class_operation public explicit_return_type "std::unique_ptr<EventPacket>"
	nparams 3
	  param in name "num_hci_command_packets" explicit_type "uint8_t"
	  param in name "command_opcode" explicit_type "uint16_t"
	  param in name "event_return_parameters" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Static functions for creating event packets:
 Creates and returns a command complete event packet. See the Bluetooth
 Core Specification Version 4.2, Volume 2, Part E, Section 7.7.14 (page 861)
 for more information about the command complete event.
 Event Parameters:
   |num_hci_command_packets|
     Indicates the number of HCI command packets the host can send to the
     controller. If |num_hci_command_packets| is 0, the controller would
     like to stop receiving commands from the host (to indicate
     readiness again, the controller sends a command complete event with
     |command_opcode| to 0x0000 (no op) and |num_hci_command_packets| > 1).
   |command_opcode|
     The opcode of the command that caused this event.
   |return_parameters|
     Contains any event specific parameters that should
     be sent to the host."
      end

      operation 41927351 "CreateCommandStatusEvent"
	class_operation public explicit_return_type "std::unique_ptr<EventPacket>"
	nparams 3
	  param in name "status" explicit_type "uint8_t"
	  param in name "num_hci_command_packets" explicit_type "uint8_t"
	  param in name "command_opcode" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and returns a command complete event packet. See the Bluetooth
 Core Specification Version 4.2, Volume 2, Part E, Section 7.7.15 (page 862)
 for more information about the command complete event.
 Event Parameters:
   Status
     0x00: Command currently in pending.
     0x01-0xFF: Command failed.
   |num_hci_command_packets|
     Indicates the number of HCI command packets the host can send to the
     controller. If |num_hci_command_packets| is 0, the controller would
     like to stop receiving commands from the host (to indicate
     readiness again, the controller sends a command complete event with
     |command_opcode| to 0x0000 (no op) and |num_hci_command_packets| > 1).
   |command_opcode|
     The opcode of the command that caused this event."
      end

      operation 41927479 "CreateInquiryResultEvent"
	class_operation public explicit_return_type "std::unique_ptr<EventPacket>"
	nparams 7
	  param in name "num_responses" explicit_type "uint8_t"
	  param in name "bd_addresses" explicit_type "std::vector<uint8_t>"
	  param in name "page_scan_repetition_mode" explicit_type "std::vector<uint8_t>"
	  param in name "page_scan_period_mode" explicit_type "std::vector<uint8_t>"
	  param in name "page_scan_mode" explicit_type "std::vector<uint8_t>"
	  param in name "class_of_device" explicit_type "std::vector<uint8_t>"
	  param in name "clock_offset" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, const ${t5} & ${p5}, const ${t6} & ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and returns an inquiry result event packet. See the Bluetooth
 Core Specification Version 4.2, Volume 2, Part E, Section 7.7.2 (page 844)
 for more information about the command complete event.
 Event Parameters:
   Num Responses (1 octet)
     0xXX: Number of responses from the inquiry.
   Bd Addresses (6 octets * Num Responses)
     0xXXXXXXXXXXX: Bd Address for each device which responded.
   Page Scan Repetition Mode (1 octet * Num Responses)
     0x00: R0
     0x01: R1
     0x02: R2
     0x03-0xFF: Reserved.
   Reserved 1 (1 octet * Num Responses)
     Originally Page Scan Period Mode parameter. No longer in use.
   Reserved 2 (1 octet * Num Responses)
     Originally Page Scan Mode parameter. No longer in use.
   Class of Device (3 octet * Num Responses)
     0xXXXXXX: Class of device.
   Clock Offset (2 octet * Num Responses)
     Bits 14-0: Bits 16-2 of CLKNslave-CLK.
     Bits 15: Reserved."
      end

      operation 41927607 "CreateExtendedInquiryResultEvent"
	class_operation public explicit_return_type "std::unique_ptr<EventPacket>"
	nparams 7
	  param in name "bd_address" explicit_type "std::vector<uint8_t>"
	  param in name "page_scan_repetition_mode" explicit_type "std::vector<uint8_t>"
	  param in name "page_scan_period_mode" explicit_type "std::vector<uint8_t>"
	  param in name "class_of_device" explicit_type "std::vector<uint8_t>"
	  param in name "clock_offset" explicit_type "std::vector<uint8_t>"
	  param in name "rssi" explicit_type "std::vector<uint8_t>"
	  param in name "extended_inquiry_response" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, const ${t5} & ${p5}, const ${t6} & ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and returns an inquiry result event packet. See the Bluetooth
 Core Specification Version 4.2, Volume 2, Part E, Section 7.7.38 (page 896)
 for more information about the command complete event.
 Event Parameters:
   Num Responses (1 octet)
     0x01: Always contains a single response.
   Bd Addresses (6 octets * Num Responses)
     0xXXXXXXXXXXX: Bd Address for each device which responded.
   Page Scan Repetition Mode (1 octet * Num Responses)
     0x00: R0
     0x01: R1
     0x02: R2
     0x03-0xFF: Reserved.
   Reserved 1 (1 octet * Num Responses)
     Originally Page Scan Period Mode parameter. No longer in use.
   Class of Device (3 octet * Num Responses)
     0xXXXXXX: Class of device.
   Clock Offset (2 octet * Num Responses)
     Bits 14-0: Bits 16-2 of CLKNslave-CLK.
     Bits 15: Reserved.
   RSSI (1 octet)
     0xXX: Ranges from -127 to +20. Units are dBm.
  Extended Inquiry Response (240 octets)
    Defined in Volumne 2, Part C, Section 8. Also see the Supplement to the
    Bluetooth Core Specificiation for data type definitions and formats."
      end

      attribute 11263159 "kEventHeaderSize"
	class_attribute const_attribute public explicit_type "size_t"
	init_value "=  2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size in octets of a data packet header, which consists of a 1 octet
 event code and a 1 octet payload size.
"
      end

      operation 41927735 "EventPacket"
	private explicit_return_type ""
	nparams 2
	  param in name "event_code" explicit_type "uint8_t"
	  param in name "payload" explicit_type "std::vector<uint8_t>"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Takes in the event parameters in |payload|. These parameters vary by event
 and are detailed in the Bluetooth Core Specification."
      end
    end

    class 2952119 "typedef28"
      visibility package stereotype "typedef" explicit_base_type "base::MessageLoopForIO::Watcher"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 2952375 "PacketStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Provides abstractions for IO with Packet objects. Used to receive commands
 and data from the HCI and to send controller events back to the host."
      operation 41931319 "PacketStream"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 41931447 "~PacketStream"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41931575 "ReceiveCommand"
	const public explicit_return_type "std::unique_ptr<CommandPacket>"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads a command packet from the file descriptor at |fd| and returns the
 packet back to the caller, along with the responsibility of managing the
 packet."
      end

      operation 41931703 "ReceivePacketType"
	const public return_type class_ref 2829367 // serial_data_type_t
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads a single octet from |fd| and interprets it as a packet type octet.
 Validates the type octet for correctness."
      end

      operation 41931831 "SendEvent"
	const public explicit_return_type "bool"
	nparams 2
	  param in name "event" type class_ref 2951991 // EventPacket
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends an event to file descriptor |fd|. The ownership of the event is left
 with the caller."
      end

      operation 41931959 "ValidateTypeOctet"
	const private explicit_return_type "bool"
	nparams 1
	  param in name "type" type class_ref 2829367 // serial_data_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if |type| is in the valid range from DATA_TYPE_COMMAND to
 DATA_TYPE_SCO."
      end

      operation 41932087 "ReceiveAll"
	const private explicit_return_type "bool"
	nparams 3
	  param inout name "destination" explicit_type "std::vector<uint8_t>"
	  param in name "num_octets_to_receive" explicit_type "size_t"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attempts to receive |num_octets_to_receive| into |destination| from |fd|,
 returning false if an error occurs."
      end

      operation 41932215 "SendAll"
	const private explicit_return_type "bool"
	nparams 3
	  param in name "source" explicit_type "std::vector<uint8_t>"
	  param in name "num_octets_to_send" explicit_type "size_t"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attempts to send |num_octets_to_send| from |source| to |fd|, returning
 false if an error occurs."
      end
    end

    class 2952503 "VendorManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Contains the three core objects that make up the test vendor library: the
 HciTransport for communication, the HciHandler for processing commands, and
 the Controller for actual command implementations. The VendorManager shall
 operate as a global singleton and be used in bt_vendor.cc to perform vendor
 specific operations, via |vendor_callbacks_|, and to provide access to the
 test controller by setting up a message loop (on another thread) that the HCI
 will talk to and controller methods will execute on."
      operation 41933495 "CleanUp"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Functions that operate on the global manager instance. Initialize()
 is called by the vendor library's TestVendorInitialize() function to create
 the global manager and must be called before Get() and CleanUp().
 CleanUp() should be called when a call to TestVendorCleanUp() is made
 since the global manager should live throughout the entire time the test
 vendor library is in use."
      end

      operation 41933623 "Get"
	class_operation public return_type class_ref 2952503 // VendorManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41933751 "Initialize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41933879 "CloseHciFd"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41934007 "GetHciFd"
	const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41934135 "GetVendorCallbacks"
	const public return_type class_ref 2828471 // bt_vendor_callbacks_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 41934263 "SetVendorCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param in name "callbacks" type class_ref 2828471 // bt_vendor_callbacks_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stores a copy of the vendor specific configuration callbacks passed into
 the vendor library from the HCI in TestVendorInit()."
      end

      operation 41934391 "Run"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if |thread_| is able to be started and the
 StartingWatchingOnThread() task has been posted to the task runner."
      end

      operation 41934519 "VendorManager"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 41934647 "~VendorManager"
	cpp_defaulted private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 41934775 "PostTask"
	private explicit_return_type "bool"
	nparams 1
	  param in name "task" explicit_type "base::Closure"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Posts a callback to |thread_|'s task runner. Equivalent to calling
 |PostDelayedTask| with a delay of 0."
      end

      operation 41934903 "PostDelayedTask"
	private explicit_return_type "bool"
	nparams 2
	  param in name "task" explicit_type "base::Closure"
	  param in name "delay" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Posts a callback to be run after |delay| ms (or longer) have passed."
      end

      operation 41935031 "StartWatchingOnThread"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts watching for incoming data from the HCI and the test hook."
      end

      classrelation 6306103 // transport_ (<directional composition>)
	relation 6306103 *-->
	  a role_name "transport_" private
	    comment " Creates the HCI's communication channel and overrides IO callbacks to
 receive and send packets.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6306103 // transport_ (<directional composition>)
	  b parent class_ref 2951479 // HciTransport
      end

      classrelation 6306231 // controller_ (<directional composition>)
	relation 6306231 *-->
	  a role_name "controller_" private
	    comment " The controller object that provides implementations of Bluetooth commands.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6306231 // controller_ (<directional composition>)
	  b parent class_ref 2951223 // DualModeController
      end

      classrelation 6306359 // test_channel_transport_ (<directional composition>)
	relation 6306359 *-->
	  a role_name "test_channel_transport_" private
	    comment " The two test channel objects that perform functions corresponding to the
 HciTransport and HciHandler.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6306359 // test_channel_transport_ (<directional composition>)
	  b parent class_ref 2951607 // TestChannelTransport
      end

      classrelation 6306487 // vendor_callbacks_ (<directional composition>)
	relation 6306487 *-->
	  a role_name "vendor_callbacks_" private
	    comment " Configuration callbacks provided by the HCI for use in TestVendorOp().
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6306487 // vendor_callbacks_ (<directional composition>)
	  b parent class_ref 2828471 // bt_vendor_callbacks_t
      end

      attribute 11264695 "running_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the underlying message loop (in |thread_|) is running.
"
      end

      attribute 11264823 "thread_"
	private explicit_type "base::Thread"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Dedicated thread for managing the message loop to receive and send packets
 from the HCI and to receive additional parameters from the test hook file
 descriptor.
"
      end

      attribute 11264951 "hci_watcher_"
	private explicit_type "base::MessageLoopForIO::FileDescriptorWatcher"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to handle further watching of the vendor's/test channel's file
 descriptor after WatchFileDescriptor() is called.
"
      end

      attribute 11265079 "test_channel_watcher_"
	private explicit_type "base::MessageLoopForIO::FileDescriptorWatcher"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to handle further watching of the test channel's file descriptor after
 WatchFileDescriptor() is called.
"
      end

      classrelation 6306615 // weak_ptr_factory_ (<directional composition>)
	relation 6306615 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_ptr_factory_" private
	    comment " This should remain the last member so it'll be destroyed and invalidate
 its weak pointers before any other members are destroyed.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6306615 // weak_ptr_factory_ (<directional composition>)
	  b parent class_ref 2952503 // VendorManager
      end
    end
  end

  deploymentview 268087 "include"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1484599 "command_packet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2950967 // CommandPacket
      end
    end

    artifact 1484727 "dual_mode_controller"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2951223 // DualModeController
      end
    end

    artifact 1484855 "event_packet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2951991 // EventPacket
      end
    end

    artifact 1484983 "hci_transport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2952119 // typedef28
	class_ref 2951479 // HciTransport
      end
    end

    artifact 1485111 "packet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2951095 // Packet
      end
    end

    artifact 1485239 "packet_stream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2952375 // PacketStream
      end
    end

    artifact 1485367 "test_channel_transport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2951607 // TestChannelTransport
      end
    end

    artifact 1485495 "vendor_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2952503 // VendorManager
      end
    end
  end
end
