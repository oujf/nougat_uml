format 213
"wifi" // android::system::connectivity::shill::wifi
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/connectivity/shill/wifi/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/connectivity/shill/wifi/"
  cpp_namespace "shill"
  classview 307511 "wifi"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 2978999 "WiFiEndpoint"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6468535 // <generalisation>
	relation 6468535 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6468535 // <generalisation>
	  b parent class_ref 3074103 // typedef104
      end

      class 3074231 "SecurityFlags"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 42598967 "SecurityFlags"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : rsn_8021x(false),
          rsn_psk(false),
          wpa_8021x(false),
          wpa_psk(false),
          privacy(false) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	attribute 11648311 "rsn_8021x"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11648439 "rsn_psk"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11648567 "wpa_8021x"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11648695 "wpa_psk"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11648823 "privacy"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3074359 "VendorInformation"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11648951 "wps_manufacturer"
	  public explicit_type "std::string"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11649079 "wps_model_name"
	  public explicit_type "std::string"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11649207 "wps_model_number"
	  public explicit_type "std::string"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11649335 "wps_device_name"
	  public explicit_type "std::string"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6468663 // oui_set (<directional composition>)
	  relation 6468663 *-->
	    stereotype "std::set"
	    a role_name "oui_set" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6468663 // oui_set (<directional composition>)
	    b parent class_ref 2810935 // uint32_t
	end
      end

      operation 42599095 "WiFiEndpoint"
	public explicit_return_type ""
	nparams 4
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param in name "device" type class_ref 3016887 // WiFiRefPtr
	  param in name "rpc_id" explicit_type "std::string"
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42599223 "~WiFiEndpoint"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42599351 "Start"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set up RPC channel. Broken out from the ctor, so that WiFi can
 look over the Endpoint details before commiting to setting up
 RPC."
      end

      operation 42599479 "PropertiesChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by SupplicantBSSProxy, in response to events from
 wpa_supplicant."
      end

      operation 42599607 "UpdateSignalStrength"
	public explicit_return_type "void"
	nparams 1
	  param in name "strength" explicit_type "int16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFi when it polls for signal strength from the kernel."
      end

      operation 42599735 "ModeStringToUint"
	class_operation public return_type class_ref 2810935 // uint32_t
	nparams 1
	  param in name "mode_string" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Maps mode strings from flimflam's nomenclature, as defined
 in chromeos/dbus/service_constants.h, to uints used by supplicant"
      end

      operation 42599863 "GetVendorInformation"
	const public explicit_return_type "std::map<std::string, std::string>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a stringmap containing information gleaned about the
 vendor of this AP."
      end

      operation 42599991 "ssid"
	const public explicit_return_type "std::vector<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600119 "ssid_string"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600247 "ssid_hex"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600375 "bssid_string"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600503 "bssid_hex"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600631 "country_code"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600759 "device"
	const public return_type class_ref 3016887 // WiFiRefPtr
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42600887 "signal_strength"
	const public explicit_return_type "int16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601015 "frequency"
	const public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601143 "physical_mode"
	const public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601271 "network_mode"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601399 "security_mode"
	const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601527 "ieee80211w_required"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601655 "has_rsn_property"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601783 "has_wpa_property"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42601911 "has_tethering_signature"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 216247 "friend"
	
	cpp "
  friend class WiFiEndpointTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 216375 "friend"
	
	cpp "  friend class WiFiObjectTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 216503 "friend"
	
	cpp "  friend class WiFiProviderTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 216631 "friend"
	
	cpp "  friend class WiFiServiceTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 3074487 "KeyManagement"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11649463 "kKeyManagement802_1x"
	  public type class_ref 3074487 // KeyManagement
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11649591 "kKeyManagementPSK"
	  public type class_ref 3074487 // KeyManagement
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 42602039 "MakeEndpoint"
	class_operation private return_type class_ref 2978999 // WiFiEndpoint
	nparams 9
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param in name "wifi" type class_ref 3016887 // WiFiRefPtr
	  param in name "ssid" explicit_type "std::string"
	  param in name "bssid" explicit_type "std::string"
	  param in name "network_mode" explicit_type "std::string"
	  param in name "frequency" explicit_type "uint16_t"
	  param in name "signal_dbm" explicit_type "int16_t"
	  param in name "has_wpa_property" explicit_type "bool"
	  param in name "has_rsn_property" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Build a simple WiFiEndpoint, for testing purposes."
      end

      operation 42602167 "MakeOpenEndpoint"
	class_operation private return_type class_ref 2978999 // WiFiEndpoint
	nparams 7
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param in name "wifi" type class_ref 3016887 // WiFiRefPtr
	  param in name "ssid" explicit_type "std::string"
	  param in name "bssid" explicit_type "std::string"
	  param in name "network_mode" explicit_type "std::string"
	  param in name "frequency" explicit_type "uint16_t"
	  param in name "signal_dbm" explicit_type "int16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " As above, but with the last two parameters false."
      end

      operation 42602295 "ParseMode"
	class_operation private explicit_return_type "char"
	nparams 1
	  param in name "mode_string" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Maps mode strings from supplicant into flimflam's nomenclature, as defined
 in chromeos/dbus/service_constants.h."
      end

      operation 42602423 "ParseSecurity"
	class_operation private explicit_return_type "char"
	nparams 2
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	  param inout name "flags" type class_ref 3074231 // SecurityFlags
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses an Endpoint's properties to identify an approprirate flimflam
 security property value, as defined in chromeos/dbus/service_constants.h.
 The stored data in the |flags| parameter is merged with the provided
 properties, and the security value returned is the result of the
 merger."
      end

      operation 42602551 "ParseKeyManagementMethods"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "security_method_properties" type class_ref 2969015 // KeyValueStore
	  param inout name "key_management_methods" explicit_type "std::set<KeyManagement>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses an Endpoint's properties' \"RSN\" or \"WPA\" sub-dictionary, to
 identify supported key management methods (802.1x or PSK)."
      end

      operation 42602679 "DeterminePhyModeFromFrequency"
	class_operation private return_type class_ref 2994871 // WiFiNetworkPhyMode
	nparams 2
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	  param in name "frequency" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determine the negotiated operating mode for the channel by looking at
 the information elements, frequency and data rates.  The information
 elements and data rates live in |properties|."
      end

      operation 42602807 "ParseIEs"
	class_operation private explicit_return_type "bool"
	nparams 5
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	  param inout name "phy_mode" type class_ref 2994871 // WiFiNetworkPhyMode
	  param inout name "vendor_information" type class_ref 3074359 // VendorInformation
	  param inout name "ieee80211w_required" explicit_type "bool"
	  param inout name "country_code" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parse information elements to determine the physical mode, vendor
 information and IEEE 802.11w requirement information associated
 with the AP.  Returns true if a physical mode was determined from
 the IE elements, false otherwise."
      end

      operation 42602935 "ParseWPACapabilities"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "ie" explicit_type "std::vector<uint8_t>::const_iterator"
	  param in name "end" explicit_type "std::vector<uint8_t>::const_iterator"
	  param inout name "ieee80211w_required" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parse a WPA information element and set *|ieee80211w_required| to true
 if IEEE 802.11w is required by this AP."
      end

      operation 42603063 "ParseVendorIE"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "ie" explicit_type "std::vector<uint8_t>::const_iterator"
	  param in name "end" explicit_type "std::vector<uint8_t>::const_iterator"
	  param inout name "vendor_information" type class_ref 3074359 // VendorInformation
	  param inout name "ieee80211w_required" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parse a single vendor information element.  If this is a WPA vendor
 element, call ParseWPACapabilites with |ieee80211w_required|."
      end

      operation 42603191 "CheckForTetheringSignature"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Assigns a value to |has_tethering_signature_|."
      end

      operation 42603319 "set_security_mode"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { security_mode_ = mode; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private setter used in unit tests."
      end

      attribute 11649719 "ssid_"
	private explicit_type "uint8_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TODO(quiche): make const?
"
      end

      attribute 11649847 "bssid_"
	private explicit_type "uint8_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11649975 "ssid_string_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650103 "ssid_hex_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650231 "bssid_string_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650359 "bssid_hex_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650487 "country_code_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650615 "signal_strength_"
	private explicit_type "int16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650743 "frequency_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650871 "physical_mode_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11650999 "network_mode_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " network_mode_ and security_mode_ are represented as flimflam names
 (not necessarily the same as wpa_supplicant names)
"
      end

      attribute 11651127 "security_mode_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6468791 // vendor_information_ (<directional composition>)
	relation 6468791 *-->
	  a role_name "vendor_information_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6468791 // vendor_information_ (<directional composition>)
	  b parent class_ref 3074359 // VendorInformation
      end

      attribute 11651255 "ieee80211w_required_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11651383 "has_rsn_property_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11651511 "has_wpa_property_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11651639 "has_tethering_signature_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6468919 // security_flags_ (<directional composition>)
	relation 6468919 *-->
	  a role_name "security_flags_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6468919 // security_flags_ (<directional composition>)
	  b parent class_ref 3074231 // SecurityFlags
      end

      classrelation 6469047 // control_interface_ (<unidirectional association>)
	relation 6469047 --->
	  a role_name "control_interface_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6469047 // control_interface_ (<unidirectional association>)
	  b parent class_ref 2972599 // ControlInterface
      end

      classrelation 6469175 // device_ (<directional composition>)
	relation 6469175 *-->
	  a role_name "device_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6469175 // device_ (<directional composition>)
	  b parent class_ref 3016887 // WiFiRefPtr
      end

      attribute 11651767 "rpc_id_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6469303 // supplicant_bss_proxy_ (<directional composition>)
	relation 6469303 *-->
	  stereotype "std::unique_ptr"
	  a role_name "supplicant_bss_proxy_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6469303 // supplicant_bss_proxy_ (<directional composition>)
	  b parent class_ref 2978871 // SupplicantBSSProxyInterface
      end
    end

    class 2983735 "Callback80211Metrics"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " NetlinkManager callback object that sends stuff to UMA metrics."
      classrelation 6459319 // <generalisation>
	relation 6459319 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6459319 // <generalisation>
	  b parent class_ref 3070391 // typedef103
      end

      operation 42568887 "Callback80211Metrics"
	public explicit_return_type ""
	nparams 1
	  param inout name "metrics" type class_ref 2968503 // Metrics
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42569015 "CollectDisconnectStatistics"
	public explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "NetlinkMessage"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called with each broadcast netlink message that arrives to NetlinkManager.
 If the message is a deauthenticate message, the method collects the reason
 for the deauthentication and communicates those to UMA."
      end

      attribute 11628471 "kMetricLinkDisconnectCount"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 42569143 "WiFiReasonCodeFromUint16"
	const private return_type class_ref 3000247 // WiFiReasonCode
	nparams 1
	  param in name "reason" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6459447 // metrics_ (<unidirectional association>)
	relation 6459447 --->
	  a role_name "metrics_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6459447 // metrics_ (<unidirectional association>)
	  b parent class_ref 2968503 // Metrics
      end
    end

    class 2984887 "WiFiProvider"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The WiFi Provider is the holder of all WiFi Services.  It holds both
 visible (created due to an Endpoint becoming visible) and invisible
 (created due to user or storage configuration) Services."
      class 3071415 "FrequencyCountList"
	visibility package stereotype "typedef" base_type class_ref 3072695 // FrequencyCount
	cpp_decl "${comment}typedef std::deque<${type}> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6469687 // <dependency>
	  relation 6469687 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6469687 // <dependency>
	    b parent class_ref 3072695 // FrequencyCount
	end
      end

      class 3072695 "FrequencyCount"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 42603447 "FrequencyCount"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : frequency(0), connection_count(0) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 42603575 "FrequencyCount"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param in name "freq" explicit_type "uint16_t"
	    param in name "conn" explicit_type "size_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract} : frequency(freq), connection_count(conn) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	attribute 11652151 "frequency"
	  public explicit_type "uint16_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11652279 "connection_count"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Number of successful connections at this"
	end
      end

      classrelation 6469431 // <generalisation>
	relation 6469431 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6469431 // <generalisation>
	  b parent class_ref 3015095 // ProviderInterface
      end

      attribute 11651895 "kStorageFrequencies"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11652023 "kMaxStorageFrequencies"
	class_attribute const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3074615 "ConnectFrequencyMap"
	visibility package stereotype "typedef" explicit_base_type "std::map<uint16_t, int64_t>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3074743 "ConnectFrequencyMapDated"
	visibility package stereotype "typedef" base_type class_ref 3074615 // ConnectFrequencyMap
	cpp_decl "${comment}typedef std::map<time_t,${type}> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6469559 // <dependency>
	  relation 6469559 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6469559 // <dependency>
	    b parent class_ref 3074615 // ConnectFrequencyMap
	end
      end

      operation 42603703 "WiFiProvider"
	public explicit_return_type ""
	nparams 4
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	  param inout name "manager" type class_ref 2977207 // Manager
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42603831 "~WiFiProvider"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42603959 "CreateServicesFromProfile"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "profile" type class_ref 2993335 // ProfileRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by Manager as a part of the Provider interface.  The attributes
 used for matching services for the WiFi provider are the SSID, mode and
 security parameters."
      end

      operation 42604087 "FindSimilarService"
	const cpp_override public return_type class_ref 2984631 // ServiceRefPtr
	nparams 2
	  param in name "args" type class_ref 2969015 // KeyValueStore
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42604215 "GetService"
	cpp_override public return_type class_ref 2984631 // ServiceRefPtr
	nparams 2
	  param in name "args" type class_ref 2969015 // KeyValueStore
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42604343 "CreateTemporaryService"
	cpp_override public return_type class_ref 2984631 // ServiceRefPtr
	nparams 2
	  param in name "args" type class_ref 2969015 // KeyValueStore
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42604471 "CreateTemporaryServiceFromProfile"
	cpp_override public return_type class_ref 2984631 // ServiceRefPtr
	nparams 3
	  param in name "profile" type class_ref 2993335 // ProfileRefPtr
	  param in name "entry_name" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42604599 "Start"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42604727 "Stop"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42604855 "FindServiceForEndpoint"
	cpp_virtual public return_type class_ref 3019063 // WiFiServiceRefPtr
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Find a Service this Endpoint should be associated with."
      end

      operation 42604983 "OnEndpointAdded"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Find or create a Service for |endpoint| to be associated with.  This
 method first calls FindServiceForEndpoint, and failing this, creates
 a new Service.  It then associates |endpoint| with this service."
      end

      operation 42605111 "OnEndpointRemoved"
	cpp_virtual public return_type class_ref 3019063 // WiFiServiceRefPtr
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by a Device when it removes an Endpoint.  If the Provider
 forgets a service as a result, it returns a reference to the
 forgotten service, otherwise it returns a null reference."
      end

      operation 42605239 "OnEndpointUpdated"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by a Device when it receives notification that an Endpoint
 has changed.  Ensure the updated endpoint still matches its
 associated service.  If necessary re-assign the endpoint to a new
 service, otherwise notify the associated service of the update to
 the endpoint."
      end

      operation 42605367 "OnServiceUnloaded"
	cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by a WiFiService when it is unloaded and no longer visible."
      end

      operation 42605495 "GetHiddenSSIDList"
	cpp_virtual public return_type class_ref 2964919 // ByteArrays
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get the list of SSIDs for hidden WiFi services we are aware of."
      end

      operation 42605623 "LoadAndFixupServiceEntries"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "profile" type class_ref 2977591 // Profile
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls WiFiService::FixupServiceEntries() and adds a UMA metric if
 this causes entries to be updated."
      end

      operation 42605751 "Save"
	const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "storage" type class_ref 2985399 // StoreInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Save configuration for wifi_provider to |storage|."
      end

      operation 42605879 "IncrementConnectCount"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "frequency_mhz" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42606007 "GetScanFrequencies"
	const cpp_virtual public return_type class_ref 3071415 // FrequencyCountList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a list of all of the frequencies on which this device has
 connected.  This data is accumulated across multiple shill runs."
      end

      operation 42606135 "ReportAutoConnectableServices"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Report the number of auto connectable services available to uma
 metrics."
      end

      operation 42606263 "NumAutoConnectableServices"
	cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns number of services available for auto-connect."
      end

      operation 42606391 "GetSsidsConfiguredForAutoConnect"
	public explicit_return_type "std::vector<ByteString>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a list of ByteStrings representing the SSIDs of WiFi services
 configured for auto-connect."
      end

      operation 42606519 "disable_vht"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return disable_vht_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42606647 "set_disable_vht"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "disable_vht" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { disable_vht_ = disable_vht; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 216759 "friend"
	
	cpp "
  friend class WiFiProviderTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 3074871 "EndpointServiceMap"
	visibility package stereotype "typedef" base_type class_ref 2978999 // WiFiEndpoint
	cpp_decl "${comment}typedef std::map<const ${type}*,WiFiServiceRefPtr> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6469815 // <dependency>
	  relation 6469815 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6469815 // <dependency>
	    b parent class_ref 2978999 // WiFiEndpoint
	end
      end

      attribute 11652407 "kManagerErrorSSIDTooLong"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11652535 "kManagerErrorSSIDTooShort"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11652663 "kManagerErrorSSIDRequired"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11652791 "kManagerErrorUnsupportedSecurityClass"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11652919 "kManagerErrorUnsupportedSecurityMode"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653047 "kManagerErrorUnsupportedServiceMode"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653175 "kManagerErrorArgumentConflict"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653303 "kFrequencyDelimiter"
	class_attribute const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653431 "kStartWeekHeader"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653559 "kIllegalStartWeek"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653687 "kStorageId"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653815 "kWeeksToKeepFrequencyCounts"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11653943 "kSecondsPerWeek"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 42606775 "AddService"
	private return_type class_ref 3019063 // WiFiServiceRefPtr
	nparams 4
	  param in name "ssid" explicit_type "std::vector<uint8_t>"
	  param in name "mode" explicit_type "std::string"
	  param in name "security" explicit_type "std::string"
	  param in name "is_hidden" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Add a service to the service_ vector and register it with the Manager."
      end

      operation 42606903 "FindService"
	const private return_type class_ref 3019063 // WiFiServiceRefPtr
	nparams 3
	  param in name "ssid" explicit_type "std::vector<uint8_t>"
	  param in name "mode" explicit_type "std::string"
	  param in name "security" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Find a service given its properties."
      end

      operation 42607031 "GetWiFiService"
	private return_type class_ref 3019063 // WiFiServiceRefPtr
	nparams 2
	  param in name "args" type class_ref 2969015 // KeyValueStore
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a WiFiServiceRefPtr for unit tests and for down-casting to a
 ServiceRefPtr in GetService()."
      end

      operation 42607159 "ForgetService"
	private explicit_return_type "void"
	nparams 1
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disassociate the service from its WiFi device and remove it from the
 services_ vector."
      end

      operation 42607287 "ReportRememberedNetworkCount"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42607415 "ReportServiceSourceMetrics"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42607543 "GetServiceParametersFromArgs"
	class_operation private explicit_return_type "bool"
	nparams 6
	  param in name "args" type class_ref 2969015 // KeyValueStore
	  param inout name "ssid_bytes" explicit_type "std::vector<uint8_t>"
	  param inout name "mode" explicit_type "std::string"
	  param inout name "security_method" explicit_type "std::string"
	  param inout name "hidden_ssid" explicit_type "bool"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieve a WiFi service's identifying properties from passed-in |args|.
 Returns true if |args| are valid and populates |ssid|, |mode|,
 |security| and |hidden_ssid|, if successful.  Otherwise, this function
 returns false and populates |error| with the reason for failure.  It
 is a fatal error if the \"Type\" parameter passed in |args| is not kWiFi."
      end

      operation 42607671 "GetServiceParametersFromStorage"
	class_operation private explicit_return_type "bool"
	nparams 7
	  param in name "storage" type class_ref 2985399 // StoreInterface
	  param in name "entry_name" explicit_type "std::string"
	  param inout name "ssid_bytes" explicit_type "std::vector<uint8_t>"
	  param inout name "mode" explicit_type "std::string"
	  param inout name "security_method" explicit_type "std::string"
	  param inout name "hidden_ssid" explicit_type "bool"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieve a WiFi service's identifying properties from passed-in |storage|.
 Return true if storage contain valid parameter values and populates |ssid|,
 |mode|, |security| and |hidden_ssid|. Otherwise, this function returns
 false and populates |error| with the reason for failure."
      end

      operation 42607799 "StringListToFrequencyMap"
	class_operation private explicit_return_type "time_t"
	nparams 2
	  param in name "strings" explicit_type "std::vector<std::string>"
	  param inout name "numbers" type class_ref 3074615 // ConnectFrequencyMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts frequency profile information from a list of strings of the form
 \"frequency:connection_count\" to a form consistent with
 |connect_count_by_frequency_|.  The first string must be of the form
 [nnn] where |nnn| is a positive integer that represents the creation time
 (number of days since the Epoch) of the data."
      end

      operation 42607927 "GetStringListStartWeek"
	class_operation private explicit_return_type "time_t"
	nparams 1
	  param in name "week_string" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Extracts the start week from the first string in the StringList for
 |StringListToFrequencyMap|."
      end

      operation 42608055 "ParseStringListFreqCount"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "freq_count_string" explicit_type "std::string"
	  param inout name "numbers" type class_ref 3074615 // ConnectFrequencyMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Extracts frequency and connection count from a string from the StringList
 for |StringListToFrequencyMap|.  Places those values in |numbers|."
      end

      operation 42608183 "FrequencyMapToStringList"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "creation_day" explicit_type "time_t"
	  param in name "numbers" type class_ref 3074615 // ConnectFrequencyMap
	  param inout name "strings" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts frequency profile information from a form consistent with
 |connect_count_by_frequency_| to a list of strings of the form
 \"frequency:connection_count\".  The |creation_day| is the day that the
 data was first createed (represented as the number of days since the
 Epoch)."
      end

      classrelation 6469943 // control_interface_ (<unidirectional association>)
	relation 6469943 --->
	  a role_name "control_interface_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6469943 // control_interface_ (<unidirectional association>)
	  b parent class_ref 2972599 // ControlInterface
      end

      classrelation 6470071 // dispatcher_ (<unidirectional association>)
	relation 6470071 --->
	  a role_name "dispatcher_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470071 // dispatcher_ (<unidirectional association>)
	  b parent class_ref 2968375 // EventDispatcher
      end

      classrelation 6470199 // metrics_ (<unidirectional association>)
	relation 6470199 --->
	  a role_name "metrics_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470199 // metrics_ (<unidirectional association>)
	  b parent class_ref 2968503 // Metrics
      end

      classrelation 6470327 // manager_ (<unidirectional association>)
	relation 6470327 --->
	  a role_name "manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470327 // manager_ (<unidirectional association>)
	  b parent class_ref 2977207 // Manager
      end

      classrelation 6470455 // services_ (<directional composition>)
	relation 6470455 *-->
	  stereotype "std::vector"
	  a role_name "services_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470455 // services_ (<directional composition>)
	  b parent class_ref 3019063 // WiFiServiceRefPtr
      end

      classrelation 6470583 // service_by_endpoint_ (<directional composition>)
	relation 6470583 *-->
	  a role_name "service_by_endpoint_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470583 // service_by_endpoint_ (<directional composition>)
	  b parent class_ref 3074871 // EndpointServiceMap
      end

      attribute 11654071 "running_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6470711 // connect_count_by_frequency_ (<directional composition>)
	relation 6470711 *-->
	  a role_name "connect_count_by_frequency_" private
	    comment " Map of frequencies at which we've connected and the number of times a
 successful connection has been made at that frequency.  Absent frequencies
 have not had a successful connection.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470711 // connect_count_by_frequency_ (<directional composition>)
	  b parent class_ref 3074615 // ConnectFrequencyMap
      end

      classrelation 6470839 // connect_count_by_frequency_dated_ (<directional composition>)
	relation 6470839 *-->
	  a role_name "connect_count_by_frequency_dated_" private
	    comment " A number of entries of |ConnectFrequencyMap| stored by date of creation.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6470839 // connect_count_by_frequency_dated_ (<directional composition>)
	  b parent class_ref 3074743 // ConnectFrequencyMapDated
      end

      attribute 11654199 "total_frequency_connections_"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Count of successful wifi connections we've made.
"
      end

      attribute 11654327 "time_"
	private explicit_type "Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11654455 "disable_vht_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Disable 802.11ac Very High Throughput (VHT) connections.
"
      end
    end

    class 2994487 "WiFiDriverHal"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This is a singleton class for invoking calls to WiFi driver HAL,
 mainly for configuring device operation mode (station vs AP mode)."
      operation 42598327 "~WiFiDriverHal"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42598455 "GetInstance"
	class_operation public return_type class_ref 2994487 // WiFiDriverHal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Since this is a singleton, use WiFiDriverHal::GetInstance()->Foo()."
      end

      operation 42598583 "SetupStationModeInterface"
	cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup WiFi interface in station mode. Return an |interface_name| if
 success. Otherwise, return an empty string.
 This will attempt to initialize the WiFi driver before configuring
 the interface mode. It will be a noop in the driver if it is already
 initialized. So there won't be any performance penalty for doing it."
      end

      operation 42598711 "SetupApModeInterface"
	cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup WiFi interface in AP mode. Return an |interface_name| if
 success. Otherwise, return an empty string.
 This will attempt to initialize the WiFi driver before configuring
 the interface mode. It will be a noop in the driver if it is already
 initialized. So there won't be any performance penalty for doing it."
      end

      operation 42598839 "WiFiDriverHal"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      extra_member 216119 "friend"
	
	cpp "
  friend struct base::DefaultLazyInstanceTraits<WiFiDriverHal>;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 3000375 "WakeOnWiFi"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " |WakeOnWiFi| performs all wake on WiFi related tasks and logic (e.g.
 suspend/dark resume/resume logic, NIC wowlan programming via nl80211), and
 stores the state necessary to perform these actions.

 Shill implements two wake on WiFi features:
   1) Dark connect: this feature allows the CrOS device to maintain WiFi
      connectivity while suspended, and to wake from suspend in a low-power
      state (dark resume) to maintain or re-establish WiFi connectivity.
   2) Packet: this feature allows the CrOS device to wake from suspend upon
      receiving network packets from any whitelisted hosts.
 Either or both of these features can be enabled/disabled by assigning the
 appropriate value to |wake_on_wifi_features_enabled_|.

 Note that wake on WiFi features are different from wake on WiFi triggers. The
 former refers to shill's suspend/resume/dark resume handling logic, whereas
 the latter refers to the NIC's  ability to wake the CPU on certain network
 events (e.g. disconnects). In order for shill's wake on WiFi features to
 work, the platform must be compiled with wake on WiFi support (i.e.
 DISABLE_WAKE_ON_WIFI not set), and its NIC must support the triggers required
 for the features to work (see WakeOnWiFi::WakeOnWiFiPacketEnabledAndSupported
 and WakeOnWiFi::WakeOnWiFiDarkConnectEnabledAndSupported for more details).

 The logic shill uses before, during (i.e. during dark resume), and after
 suspend when both wake on WiFi features are enabled are described below:

 OnBeforeSuspend
 ================
 This function is run when Manager announces an upcoming system suspend.

         +--------------+
         |          Yes |   +----------------+
 +-------+--------+     +-->|Renew DHCP Lease|
 |  Connected &   |         +------+---------+
 |holding expiring|                |
 |  DHCP lease?   |                v
 +------+---------+         +--------------------+
        |               +-> |BeforeSuspendActions|
        |           No  |   +--------------------+
        +---------------+

 OnDarkResume
 =============
 This function is run when Manager announces that the system has entered
 dark resume and that there is an upcoming system suspend.

 +-------------+      +------------+     Unsupported     +----------+
 |  Too many   +----->|Wake reason?+-------------------->|Connected?|
 |dark resumes?|  No  +-+----------+                     +-+-----+--+
 +------+------+        |       |                          |     |
        | Yes           |       | Disconnect/           No |     | Yes
        v               |       |    SSID                  |     |
 +-------------------+  |       v                          |     |
 |  Disable Wake on  |  |     +------------+               |     v
 |  WiFi, start wake |  |     |  Initiate  |<--------------+    +--------+
 |  to scan timer &  |  |     |passive scan|                    |Get DHCP|
 |  report readiness |  |     +-+----------+           +------->| Lease  |
 +-------------------+  |       | ScanDone         Yes |        +--+---+-+
    +-------------------+       v                      |           |   |
    | Pattern                 +-------------+      +---------+     |   |
    |                    No   | Any services| Yes  |Connected|     |   |
    |    +--------------------+available for+----->| to AP?  |     |   |
    |    |                    | autoconnect?|      +---+-----+     |   |
    |    |                    +-------------+          |           |   |
    |    |                                             |No         |   |
    v    v                                             |           |   |
 +--------------------+       +-------+                |           |   |
 |BeforeSuspendActions|<------+Timeout|<---------------+       No  |   |
 +--------------------+       +-------+<---------------------------+   |
         ^                                                             |
         |                   +-------------------+                     |
         +-------------------+ OnIPConfigUpdated/|             Yes     |
                             |OnIPv6ConfigUpdated|<--------------------+
                             +-------------------+

 BeforeSuspendActions
 =====================
 This function is run immediately before the system reports suspend readiness
 to Manager. This is the common \"exit path\" taken by OnBeforeSuspend and
 OnDarkResume before suspending.

 +----------------------+
 |Packet feature enabled|   Yes   +------------------------+
 |    and supported?    +-------->|Set Wake on Pattern flag|
 +-----+----------------+         +------------+-----------+
       |                                       |
    No |        +------------------------------+
       |        |
 +-----v--------v-------+        No
 | Dark connect feature +---------------------------------+
 |enabled and supported?|                                 |
 +--+-------------------+                                 |
    |                                                     |
    |Yes    Yes   +----------------------------+          |        +---------+
    |     +-----> |Set Wake on Disconnect flag,+--+    +--v----+   |Report   |
    |     |       |Start Lease Renewal Timer*  |  |    |Program|   |Suspend  |
    |     |       +----------------------------+  +--> |  NIC  |   |Readiness|
 +--v-----+-+                                     |    +-+---+-+   +--+------+
 |Connected?|                                     |      |   ^        ^
 +--------+-+                                     |      |   |Failed  |
          |                                       |      ^   |        |Success
          |       +----------------------------+  |  +---+---+---+    |
          +-----> |Set Wake on SSID flag,      +--+  |  Verify   +----+
            No    |Start Wake To Scan Timer**  |     |Programming|
                  +----------------------------+     +-----------+

 *  if necessary (as indicated by caller of BeforeSuspendActions).
 ** if we need to whitelist more SSIDs than our NIC supports.

 OnAfterResume
 ==============
 This is run after Manager announces that the system has fully resumed from
 suspend.

 Wake on WiFi is disabled on the NIC if it was enabled before suspend or
 dark resume, and both the wake to scan timer and DHCP lease renewal timers
 are stopped."
      class 3000503 "WakeOnWiFiTrigger"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11635511 "kWakeTriggerUnsupported"
	  public type class_ref 3000503 // WakeOnWiFiTrigger
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11635639 "kWakeTriggerPattern"
	  public type class_ref 3000503 // WakeOnWiFiTrigger
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11635767 "kWakeTriggerDisconnect"
	  public type class_ref 3000503 // WakeOnWiFiTrigger
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11635895 "kWakeTriggerSSID"
	  public type class_ref 3000503 // WakeOnWiFiTrigger
	  init_value " 3
  "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3072951 "InitiateScanCallback"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const WiFi::FreqSet&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3073079 "RecordWakeReasonCallback"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const std::string&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 42576183 "WakeOnWiFi"
	public explicit_return_type ""
	nparams 4
	  param inout name "netlink_manager" type class_ref 2983607 // NetlinkManager
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	  param in name "record_wake_reason_callback" type class_ref 3073079 // RecordWakeReasonCallback
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42576311 "~WakeOnWiFi"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42576439 "InitPropertyStore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "store" type class_ref 2985271 // PropertyStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Registers |store| with properties related to wake on WiFi."
      end

      operation 42576567 "StartMetricsTimer"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts |metrics_timer_| so that wake on WiFi related metrics are
 periodically collected."
      end

      operation 42576695 "AddWakeOnPacketConnection"
	public explicit_return_type "void"
	nparams 2
	  param in name "ip_endpoint" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enable the NIC to wake on packets received from |ip_endpoint|.
 Note: The actual programming of the NIC only happens before the system
 suspends, in |OnBeforeSuspend|."
      end

      operation 42576823 "RemoveWakeOnPacketConnection"
	public explicit_return_type "void"
	nparams 2
	  param in name "ip_endpoint" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove rule to wake on packets received from |ip_endpoint| from the NIC.
 Note: The actual programming of the NIC only happens before the system
 suspends, in |OnBeforeSuspend|."
      end

      operation 42576951 "RemoveAllWakeOnPacketConnections"
	public explicit_return_type "void"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove all rules to wake on incoming packets from the NIC.
 Note: The actual programming of the NIC only happens before the system
 suspends, in |OnBeforeSuspend|."
      end

      operation 42577079 "ParseWakeOnWiFiCapabilities"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "nl80211_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Given a NL80211_CMD_NEW_WIPHY message |nl80211_message|, parses the
 wake on WiFi capabilities of the NIC and set relevant members of this
 WakeOnWiFi object to reflect the supported capbilities."
      end

      operation 42577207 "OnWakeupReasonReceived"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "netlink_message" explicit_type "NetlinkMessage"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback invoked when the system reports its wakeup reason.

 Arguments:
  - |netlink_message|: wakeup report message (note: must manually check
    this message to make sure it is a wakeup report message).

 Note: Assumes only one wakeup reason is received. If more than one is
 received, the only first one parsed will be handled."
      end

      operation 42577335 "OnBeforeSuspend"
	cpp_virtual public explicit_return_type "void"
	nparams 7
	  param in name "is_connected" explicit_type "bool"
	  param in name "ssid_whitelist" explicit_type "std::vector<ByteString>"
	  param in name "done_callback" type class_ref 2970551 // ResultCallback
	  param in name "renew_dhcp_lease_callback" explicit_type "base::Closure"
	  param in name "remove_supplicant_networks_callback" explicit_type "base::Closure"
	  param in name "have_dhcp_lease" explicit_type "bool"
	  param in name "time_to_next_lease_renewal" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Performs pre-suspend actions relevant to wake on WiFi functionality.

 Arguments:
  - |is_connected|: whether the WiFi device is connected.
  - |ssid_whitelist|: list of SSIDs that the NIC will be programmed to wake
    the system on if the NIC is programmed to wake on SSID.
  - |done_callback|: callback to invoke when suspend  actions have
    completed.
  - |renew_dhcp_lease_callback|: callback to invoke to initiate DHCP lease
    renewal.
  - |remove_supplicant_networks_callback|: callback to invoke
    to remove all networks from WPA supplicant.
  - |have_dhcp_lease|: whether or not there is a DHCP lease to renew.
  - |time_to_next_lease_renewal|: number of seconds until next DHCP lease
    renewal is due."
      end

      operation 42577463 "OnAfterResume"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Performs post-resume actions relevant to wake on wireless functionality."
      end

      operation 42577591 "OnDarkResume"
	cpp_virtual public explicit_return_type "void"
	nparams 6
	  param in name "is_connected" explicit_type "bool"
	  param in name "ssid_whitelist" explicit_type "std::vector<ByteString>"
	  param in name "done_callback" type class_ref 2970551 // ResultCallback
	  param in name "renew_dhcp_lease_callback" explicit_type "base::Closure"
	  param in name "initiate_scan_callback" type class_ref 3072951 // InitiateScanCallback
	  param in name "remove_supplicant_networks_callback" explicit_type "base::Closure"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, const ${t5} & ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Performs and post actions to be performed in dark resume.

 Arguments:
  - |is_connected|: whether the WiFi device is connected.
  - |ssid_whitelist|: list of SSIDs that the NIC will be programmed to wake
    the system on if the NIC is programmed to wake on SSID.
  - |done_callback|: callback to invoke when dark resume actions have
    completed.
  - |renew_dhcp_lease_callback|: callback to invoke to initiate DHCP lease
    renewal.
  - |initate_scan_callback|: callback to invoke to initiate a scan.
  - |remove_supplicant_networks_callback|: callback to invoke
    to remove all networks from WPA supplicant."
      end

      operation 42577719 "OnConnectedAndReachable"
	cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "start_lease_renewal_timer" explicit_type "bool"
	  param in name "time_to_next_lease_renewal" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when we the current service is connected, and we have IP
 reachability. Calls WakeOnWiFi::BeforeSuspendActions if we are in dark
 resume to end the current dark resume. Otherwise, does nothing."
      end

      operation 42577847 "ReportConnectedToServiceAfterWake"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "is_connected" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback invoked to report whether this WiFi device is connected to
 a service after waking from suspend."
      end

      operation 42577975 "OnNoAutoConnectableServicesAfterScan"
	cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "ssid_whitelist" explicit_type "std::vector<ByteString>"
	  param in name "remove_supplicant_networks_callback" explicit_type "base::Closure"
	  param in name "initiate_scan_callback" type class_ref 3072951 // InitiateScanCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called in WiFi::ScanDoneTask when there are no WiFi services available
 for auto-connect after a scan. |initiate_scan_callback| is used for dark
 resume scan retries."
      end

      operation 42578103 "OnScanStarted"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "is_active_scan" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFi when it is notified by the kernel that a scan has started.
 If |is_active_scan| is true, the scan is an active scan. Otherwise, the
 scan is a passive scan."
      end

      operation 42578231 "in_dark_resume"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return in_dark_resume_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42578359 "OnWiphyIndexReceived"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 215479 "friend"
	
	cpp "
  friend class WakeOnWiFiTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 215607 "friend"
	
	cpp "  friend class WiFiObjectTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 11636023 "kWakeOnIPAddressPatternsNotSupported"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11636151 "kWakeOnWiFiNotSupported"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11636279 "kVerifyWakeOnWiFiSettingsDelayMilliseconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11636407 "kMaxSetWakeOnPacketRetries"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11636535 "kMetricsReportingFrequencySeconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6462647 // kDefaultWakeToScanPeriodSeconds (<directional composition>)
	relation 6462647 *-->
	  a role_name "kDefaultWakeToScanPeriodSeconds" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462647 // kDefaultWakeToScanPeriodSeconds (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      classrelation 6462775 // kDefaultNetDetectScanPeriodSeconds (<directional composition>)
	relation 6462775 *-->
	  a role_name "kDefaultNetDetectScanPeriodSeconds" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462775 // kDefaultNetDetectScanPeriodSeconds (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      classrelation 6462903 // kImmediateDHCPLeaseRenewalThresholdSeconds (<directional composition>)
	relation 6462903 *-->
	  a role_name "kImmediateDHCPLeaseRenewalThresholdSeconds" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462903 // kImmediateDHCPLeaseRenewalThresholdSeconds (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11636663 "kDarkResumeFrequencySamplingPeriodShortMinutes"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11636791 "kDarkResumeFrequencySamplingPeriodLongMinutes"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11636919 "kMaxDarkResumesPerPeriodShort"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11637047 "kMaxDarkResumesPerPeriodLong"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11637175 "DarkResumeActionsTimeoutMilliseconds"
	class_attribute private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " non-const for testing"
      end

      attribute 11637303 "kMaxFreqsForDarkResumeScanRetries"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11637431 "kMaxDarkResumeScanRetries"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11637559 "kWakeReasonStringPattern"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Dark resume wake reason names. These will be sent to powerd via
 RecordDarkResumeWakeReason, to tell it the reason the system woke in the
 current dark resume.
"
      end

      attribute 11637687 "kWakeReasonStringDisconnect"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11637815 "kWakeReasonStringSSID"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 42578487 "GetWakeOnWiFiFeaturesEnabled"
	private explicit_return_type "std::string"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42578615 "SetWakeOnWiFiFeaturesEnabled"
	private explicit_return_type "bool"
	nparams 2
	  param in name "enabled" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42578743 "RunAndResetSuspendActionsDoneCallback"
	private explicit_return_type "void"
	nparams 1
	  param in name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to run and reset |suspend_actions_done_callback_|."
      end

      operation 42578871 "ByteStringPairIsLessThan"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param in name "lhs" explicit_type "std::pair<ByteString, ByteString>"
	  param in name "rhs" explicit_type "std::pair<ByteString, ByteString>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used for comparison of ByteString pairs in a set."
      end

      operation 42578999 "SetMask"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "mask" explicit_type "ByteString"
	  param in name "pattern_len" type class_ref 2810935 // uint32_t
	  param in name "offset" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a mask which specifies which bytes in pattern of length
 |pattern_len| to match against. Bits |offset| to |pattern_len| - 1 are set,
 which bits 0 to bits 0 to |offset| - 1 are unset. This mask is saved in
 |mask|."
      end

      operation 42579127 "CreateIPAddressPatternAndMask"
	class_operation private explicit_return_type "bool"
	nparams 3
	  param in name "ip_addr" explicit_type "IPAddress"
	  param inout name "pattern" explicit_type "ByteString"
	  param inout name "mask" explicit_type "ByteString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a pattern and mask for a NL80211 message that programs the NIC to
 wake on packets originating from IP address |ip_addr|. The pattern and mask
 are saved in |pattern| and |mask| respectively. Returns true iff the
 pattern and mask are successfully created and written to |pattern| and
 |mask| respectively."
      end

      operation 42579255 "CreateIPV4PatternAndMask"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "ip_addr" explicit_type "IPAddress"
	  param inout name "pattern" explicit_type "ByteString"
	  param inout name "mask" explicit_type "ByteString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42579383 "CreateIPV6PatternAndMask"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "ip_addr" explicit_type "IPAddress"
	  param inout name "pattern" explicit_type "ByteString"
	  param inout name "mask" explicit_type "ByteString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42579511 "ConfigureWiphyIndex"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param inout name "msg" explicit_type "Nl80211Message"
	  param in name "index" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and sets an attribute in a NL80211 message |msg| which indicates
 the index of the wiphy interface to program. Returns true iff |msg| is
 successfully configured."
      end

      operation 42579639 "ConfigureDisableWakeOnWiFiMessage"
	class_operation private explicit_return_type "bool"
	nparams 3
	  param inout name "msg" explicit_type "SetWakeOnPacketConnMessage"
	  param in name "wiphy_index" type class_ref 2810935 // uint32_t
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and sets attributes in an SetWakeOnPacketConnMessage |msg| so that
 the message will disable wake-on-packet functionality of the NIC with wiphy
 index |wiphy_index|. Returns true iff |msg| is successfully configured.
 NOTE: Assumes that |msg| has not been altered since construction."
      end

      operation 42579767 "ConfigureSetWakeOnWiFiSettingsMessage"
	class_operation private explicit_return_type "bool"
	nparams 7
	  param inout name "msg" explicit_type "SetWakeOnPacketConnMessage"
	  param in name "trigs" explicit_type "std::set<WakeOnWiFiTrigger>"
	  param in name "addrs" type class_ref 2975671 // IPAddressStore
	  param in name "wiphy_index" type class_ref 2810935 // uint32_t
	  param in name "net_detect_scan_period_seconds" type class_ref 2810935 // uint32_t
	  param in name "ssid_whitelist" explicit_type "std::vector<ByteString>"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} & ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}, const ${t5} & ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and sets attributes in a SetWakeOnPacketConnMessage |msg|
 so that the message will program the NIC with wiphy index |wiphy_index|
 with wake on wireless triggers in |trigs|. If |trigs| contains the
 kWakeTriggerPattern trigger, the message is configured to program the NIC
 to wake on packets from the IP addresses in |addrs|. If |trigs| contains
 the kSSID trigger, the message is configured to program the NIC to wake on
 the SSIDs in |ssid_whitelist|.
 Returns true iff |msg| is successfully configured.
 NOTE: Assumes that |msg| has not been altered since construction."
      end

      operation 42579895 "CreateSinglePattern"
	class_operation private explicit_return_type "bool"
	nparams 4
	  param in name "ip_addr" explicit_type "IPAddress"
	  param in name "patterns" type class_ref 3049143 // AttributeListRefPtr
	  param in name "patnum" explicit_type "uint8_t"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to ConfigureSetWakeOnWiFiSettingsMessage that creates a
 single nested attribute inside the attribute list referenced by |patterns|
 representing a wake-on-packet pattern matching rule with index |patnum|.
 Returns true iff the attribute is successfully created and set.
 NOTE: |patterns| is assumed to reference the nested attribute list
 NL80211_WOWLAN_TRIG_PKT_PATTERN.
 NOTE: |patnum| should be unique across multiple calls to this function to
 prevent the formation of a erroneous nl80211 message or the overwriting of
 pattern matching rules."
      end

      operation 42580023 "ConfigureGetWakeOnWiFiSettingsMessage"
	class_operation private explicit_return_type "bool"
	nparams 3
	  param inout name "msg" explicit_type "GetWakeOnPacketConnMessage"
	  param in name "wiphy_index" type class_ref 2810935 // uint32_t
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and sets attributes in an GetWakeOnPacketConnMessage msg| so that
 the message will request for wake-on-packet settings information from the
 NIC with wiphy index |wiphy_index|. Returns true iff |msg| is successfully
 configured.
 NOTE: Assumes that |msg| has not been altered since construction."
      end

      operation 42580151 "WakeOnWiFiSettingsMatch"
	class_operation private explicit_return_type "bool"
	nparams 5
	  param in name "msg" explicit_type "Nl80211Message"
	  param in name "trigs" explicit_type "std::set<WakeOnWiFiTrigger>"
	  param in name "addrs" type class_ref 2975671 // IPAddressStore
	  param in name "net_detect_scan_period_seconds" type class_ref 2810935 // uint32_t
	  param in name "ssid_whitelist" explicit_type "std::vector<ByteString>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} & ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, const ${t4} & ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Given a NL80211_CMD_GET_WOWLAN response or NL80211_CMD_SET_WOWLAN request
 |msg|, returns true iff the wake-on-wifi trigger settings in |msg| match
 those in |trigs|. Performs the following checks for the following triggers:
 - kWakeTriggerDisconnect: checks that the wake on disconnect flag is
   present and set.
 - kIPAddress: checks that source IP addresses in |msg| match those reported
   in |addrs|.
 - kSSID: checks that the SSIDs in |ssid_whitelist| and the scan interval
   |net_detect_scan_period_seconds| match those reported in |msg|.
 Note: finding a trigger is in |msg| that is not expected based on the flags
 in |trig| also counts as a mismatch."
      end

      operation 42580279 "OnWakeOnWiFiSettingsErrorResponse"
	private explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "NetlinkManager::AuxilliaryMessageType"
	  param in name "raw_message" explicit_type "NetlinkMessage"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handler for NL80211 message error responses from NIC wake on WiFi setting
 programming attempts."
      end

      operation 42580407 "OnSetWakeOnPacketConnectionResponse"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "nl80211_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Message handler for NL80211_CMD_SET_WOWLAN responses."
      end

      operation 42580535 "RequestWakeOnPacketSettings"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request wake on WiFi settings for this WiFi device."
      end

      operation 42580663 "VerifyWakeOnWiFiSettings"
	private explicit_return_type "void"
	nparams 1
	  param in name "nl80211_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Verify that the wake on WiFi settings programmed into the NIC match
 those recorded locally for this device in |wake_on_packet_connections_|,
 |wake_on_wifi_triggers_|, and |wake_on_ssid_whitelist_|."
      end

      operation 42580791 "ApplyWakeOnWiFiSettings"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends an NL80211 message to program the NIC with wake on WiFi settings
 configured in |wake_on_packet_connections_|, |wake_on_ssid_whitelist_|, and
 |wake_on_wifi_triggers_|. If |wake_on_wifi_triggers_| is empty, calls
 WakeOnWiFi::DisableWakeOnWiFi."
      end

      operation 42580919 "DisableWakeOnWiFi"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function called by |ApplyWakeOnWiFiSettings| that sends an NL80211
 message to program the NIC to disable wake on WiFi."
      end

      operation 42581047 "RetrySetWakeOnPacketConnections"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls |ApplyWakeOnWiFiSettings| and counts this call as
 a retry. If |kMaxSetWakeOnPacketRetries| retries have already been
 performed, resets counter and returns."
      end

      operation 42581175 "WakeOnWiFiPacketEnabledAndSupported"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility functions to check which wake on WiFi features are currently
 enabled based on the descriptor |wake_on_wifi_features_enabled_| and
 are supported by the NIC."
      end

      operation 42581303 "WakeOnWiFiDarkConnectEnabledAndSupported"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42581431 "ReportMetrics"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by metrics_timer_ to reports metrics."
      end

      operation 42581559 "BeforeSuspendActions"
	private explicit_return_type "void"
	nparams 4
	  param in name "is_connected" explicit_type "bool"
	  param in name "start_lease_renewal_timer" explicit_type "bool"
	  param in name "time_to_next_lease_renewal" type class_ref 2810935 // uint32_t
	  param in name "remove_supplicant_networks_callback" explicit_type "base::Closure"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actions executed before normal suspend and dark resume suspend.

 Arguments:
  - |is_connected|: whether the WiFi device is connected.
  - |start_lease_renewal_timer|: whether or not to start the DHCP lease
    renewal timer.
  - |time_to_next_lease_renewal|: number of seconds until next DHCP lease
    renewal is due.
  - |remove_supplicant_networks_callback|: callback to invoke
    to remove all networks from WPA supplicant."
      end

      operation 42581687 "OnTimerWakeDoNothing"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Needed for |dhcp_lease_renewal_timer_| and |wake_to_scan_timer_| since
 passing a empty base::Closure() causes a run-time DCHECK error when
 SimpleAlarmTimer::Start or SimpleAlarmTimer::Reset are called."
      end

      operation 42581815 "ParseWakeOnSSIDResults"
	class_operation private return_type class_ref 3073207 // FreqSet
	nparams 1
	  param in name "results_list" type class_ref 3049015 // AttributeListConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses an attribute list containing the SSID matches that caused the
 system wake, along with the corresponding channels that these SSIDs were
 detected in. Returns a set of unique frequencies that the reported
 SSID matches occured in.

 Arguments:
  - |results_list|: Nested attribute list containing an array of nested
    attributes which contain the NL80211_ATTR_SSID or
    NL80211_ATTR_SCAN_FREQUENCIES attributes. This attribute list is assumed
    to have been extracted from a NL80211_CMD_SET_WOWLAN response message
    using the NL80211_WOWLAN_TRIG_NET_DETECT_RESULTS id."
      end

      operation 42581943 "InitiateScanInDarkResume"
	private explicit_return_type "void"
	nparams 2
	  param in name "initiate_scan_callback" type class_ref 3072951 // InitiateScanCallback
	  param in name "freqs" type class_ref 3073207 // FreqSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the |dark_resume_scan_retries_left_| counter if necessary, then runs
 |initiate_scan_callback| with |freqs|."
      end

      classrelation 6463031 // dispatcher_ (<unidirectional association>)
	relation 6463031 --->
	  a role_name "dispatcher_" private
	    comment " Pointers to objects owned by the WiFi object that created this object.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463031 // dispatcher_ (<unidirectional association>)
	  b parent class_ref 2968375 // EventDispatcher
      end

      classrelation 6463159 // netlink_manager_ (<unidirectional association>)
	relation 6463159 --->
	  a role_name "netlink_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463159 // netlink_manager_ (<unidirectional association>)
	  b parent class_ref 2983607 // NetlinkManager
      end

      classrelation 6463287 // metrics_ (<unidirectional association>)
	relation 6463287 --->
	  a role_name "metrics_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463287 // metrics_ (<unidirectional association>)
	  b parent class_ref 2968503 // Metrics
      end

      attribute 11637943 "verify_wake_on_packet_settings_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes after the NIC's wake-on-packet settings are configured via
 NL80211 messages to verify that the new configuration has taken effect.
 Calls RequestWakeOnPacketSettings.
"
      end

      classrelation 6463415 // suspend_actions_done_callback_ (<directional composition>)
	relation 6463415 *-->
	  a role_name "suspend_actions_done_callback_" private
	    comment " Callback to be invoked after all suspend actions finish executing both
 before regular suspend and before suspend in dark resume.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463415 // suspend_actions_done_callback_ (<directional composition>)
	  b parent class_ref 2970551 // ResultCallback
      end

      attribute 11638071 "report_metrics_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Callback to report wake on WiFi related metrics.
"
      end

      attribute 11638199 "num_set_wake_on_packet_retries_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of retry attempts to program the NIC's wake-on-packet settings.
"
      end

      classrelation 6463543 // wake_on_wifi_triggers_ (<directional composition>)
	relation 6463543 *-->
	  stereotype "std::set"
	  a role_name "wake_on_wifi_triggers_" private
	    comment " Keeps track of triggers that the NIC will be programmed to wake from
 while suspended.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463543 // wake_on_wifi_triggers_ (<directional composition>)
	  b parent class_ref 3000503 // WakeOnWiFiTrigger
      end

      classrelation 6463671 // wake_on_wifi_triggers_supported_ (<directional composition>)
	relation 6463671 *-->
	  stereotype "std::set"
	  a role_name "wake_on_wifi_triggers_supported_" private
	    comment " Keeps track of what wake on wifi triggers this WiFi device supports.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463671 // wake_on_wifi_triggers_supported_ (<directional composition>)
	  b parent class_ref 3000503 // WakeOnWiFiTrigger
      end

      attribute 11638327 "wake_on_wifi_max_patterns_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Max number of patterns this WiFi device can be programmed to wake on at one
 time.
"
      end

      classrelation 6463799 // wake_on_wifi_max_ssids_ (<directional composition>)
	relation 6463799 *-->
	  a role_name "wake_on_wifi_max_ssids_" private
	    comment " Max number of SSIDs this WiFi device can be programmed to wake on at one
 time.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463799 // wake_on_wifi_max_ssids_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      classrelation 6463927 // wake_on_packet_connections_ (<directional composition>)
	relation 6463927 *-->
	  a role_name "wake_on_packet_connections_" private
	    comment " Keeps track of IP addresses whose packets this device will wake upon
 receiving while the device is suspended. Only used if the NIC is programmed
 to wake on IP address patterns.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6463927 // wake_on_packet_connections_ (<directional composition>)
	  b parent class_ref 2975671 // IPAddressStore
      end

      attribute 11638455 "wake_on_ssid_whitelist_"
	private explicit_type "ByteString"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Keeps track of SSIDs that this device will wake on the appearance of while
 the device is suspended. Only used if the NIC is programmed to wake on
 SSIDs.
"
      end

      classrelation 6464055 // wiphy_index_ (<directional composition>)
	relation 6464055 *-->
	  a role_name "wiphy_index_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464055 // wiphy_index_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11638583 "wiphy_index_received_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11638711 "wake_on_wifi_features_enabled_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Describes the wake on WiFi features that are currently enabled.
"
      end

      attribute 11638839 "dhcp_lease_renewal_timer_"
	private explicit_type "timers::SimpleAlarmTimer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Timer that wakes the system to renew DHCP leases.
"
      end

      attribute 11638967 "wake_to_scan_timer_"
	private explicit_type "timers::SimpleAlarmTimer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Timer that wakes the system to scan for networks.
"
      end

      attribute 11639095 "dark_resume_actions_timeout_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes when the dark resume actions timer expires. Calls
 ScanTimerHandler.
"
      end

      attribute 11639223 "in_dark_resume_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether shill is currently in dark resume.
"
      end

      classrelation 6464183 // wake_to_scan_period_seconds_ (<directional composition>)
	relation 6464183 *-->
	  a role_name "wake_to_scan_period_seconds_" private
	    comment " Period (in seconds) between instances where the system wakes from suspend
 to scan for networks in dark resume.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464183 // wake_to_scan_period_seconds_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      classrelation 6464311 // net_detect_scan_period_seconds_ (<directional composition>)
	relation 6464311 *-->
	  a role_name "net_detect_scan_period_seconds_" private
	    comment " Period (in seconds) between instances where the NIC performs Net Detect
 scans while the system is suspended.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464311 // net_detect_scan_period_seconds_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11639351 "dark_resume_history_"
	private explicit_type "EventHistory"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Timestamps of dark resume wakes that took place during the current
 or most recent suspend.
"
      end

      classrelation 6464439 // last_wake_reason_ (<directional composition>)
	relation 6464439 *-->
	  a role_name "last_wake_reason_" private
	    comment " Last wake reason reported by the kernel.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464439 // last_wake_reason_ (<directional composition>)
	  b parent class_ref 3000503 // WakeOnWiFiTrigger
      end

      attribute 11639479 "force_wake_to_scan_timer_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not to always start |wake_to_scan_timer_| before suspend.
"
      end

      classrelation 6464567 // last_ssid_match_freqs_ (<directional composition>)
	relation 6464567 *-->
	  a role_name "last_ssid_match_freqs_" private
	    comment " Frequencies that the last wake on SSID matches reported by the kernel
 occurred in.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464567 // last_ssid_match_freqs_ (<directional composition>)
	  b parent class_ref 3073207 // FreqSet
      end

      attribute 11639607 "dark_resume_scan_retries_left_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " How many more times to retry the last dark resume scan that shill launched
 if no auto-connectable services were found.
"
      end

      classrelation 6464695 // record_wake_reason_callback_ (<directional composition>)
	relation 6464695 *-->
	  a role_name "record_wake_reason_callback_" private
	    comment " Callback invoked to report the wake reason for the current dark resume to
 powerd.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464695 // record_wake_reason_callback_ (<directional composition>)
	  b parent class_ref 3073079 // RecordWakeReasonCallback
      end

      classrelation 6464823 // weak_ptr_factory_ (<directional composition>)
	relation 6464823 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_ptr_factory_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6464823 // weak_ptr_factory_ (<directional composition>)
	  b parent class_ref 3000375 // WakeOnWiFi
      end
    end

    class 3016631 "WiFi"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " WiFi class. Specialization of Device for WiFi."
      class 3073207 "FreqSet"
	visibility package stereotype "typedef" base_type class_ref 2810935 // uint32_t
	cpp_decl "${comment}typedef std::set<${type}> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6465207 // <dependency>
	  relation 6465207 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6465207 // <dependency>
	    b parent class_ref 2810935 // uint32_t
	end
      end

      classrelation 6464951 // <generalisation>
	relation 6464951 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6464951 // <generalisation>
	  b parent class_ref 2977335 // Device
      end

      classrelation 6465079 // <generalisation>
	relation 6465079 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6465079 // <generalisation>
	  b parent class_ref 2978615 // SupplicantEventDelegateInterface
      end

      operation 42582071 "WiFi"
	public explicit_return_type ""
	nparams 7
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	  param inout name "manager" type class_ref 2977207 // Manager
	  param in name "link" explicit_type "std::string"
	  param in name "address" explicit_type "std::string"
	  param in name "interface_index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, ${t6} ${p6}${v6}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, const ${t4} & ${p4}, const ${t5} & ${p5}, ${t6} ${p6}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42582199 "~WiFi"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42582327 "Start"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param inout name "error" type class_ref 2964663 // Error
	  param in name "callback" type class_ref 2970935 // EnabledStateChangedCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42582455 "Stop"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param inout name "error" type class_ref 2964663 // Error
	  param in name "callback" type class_ref 2970935 // EnabledStateChangedCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42582583 "Scan"
	cpp_override public explicit_return_type "void"
	nparams 3
	  param in name "scan_type" explicit_type "ScanType"
	  param inout name "error" type class_ref 2964663 // Error
	  param in name "reason" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42582711 "SetSchedScan"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "enable" explicit_type "bool"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42582839 "OnBeforeSuspend"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "callback" type class_ref 2970551 // ResultCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback for system suspend."
      end

      operation 42582967 "OnDarkResume"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "callback" type class_ref 2970551 // ResultCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback for dark resume."
      end

      operation 42583095 "OnAfterResume"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback for system resume. If this WiFi device is idle, a scan
 is initiated. Additionally, the base class implementation is
 invoked unconditionally."
      end

      operation 42583223 "OnConnected"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback for when a service is configured with an IP."
      end

      operation 42583351 "OnIPConfigFailure"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback for when a service fails to configure with an IP."
      end

      operation 42583479 "AddWakeOnPacketConnection"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "ip_endpoint" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls corresponding functions of |wake_on_wifi_|. Refer to wake_on_wifi.h
 for documentation."
      end

      operation 42583607 "RemoveWakeOnPacketConnection"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "ip_endpoint" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42583735 "RemoveAllWakeOnPacketConnections"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42583863 "BSSAdded"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "BSS" explicit_type "std::string"
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation of SupplicantEventDelegateInterface.  These methods
 are called by SupplicantInterfaceProxy, in response to events from
 wpa_supplicant."
      end

      operation 42583991 "BSSRemoved"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "BSS" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42584119 "Certification"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42584247 "EAPEvent"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "std::string"
	  param in name "parameter" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42584375 "PropertiesChanged"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42584503 "ScanDone"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "success" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42584631 "TDLSDiscoverResponse"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "peer_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42584759 "ConnectTo"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 3018807 // WiFiService
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFiService."
      end

      operation 42584887 "DisconnectFromIfActive"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 3018807 // WiFiService
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " After checking |service| state is active, initiate
 process of disconnecting.  Log and return if not active."
      end

      operation 42585015 "DisconnectFrom"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 3018807 // WiFiService
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If |service| is connected, initiate the process of disconnecting it.
 Otherwise, if it a pending or current service, discontinue the process
 of connecting and return |service| to the idle state."
      end

      operation 42585143 "IsIdle"
	const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42585271 "ClearCachedCredentials"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "service" type class_ref 3018807 // WiFiService
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clear any cached credentials wpa_supplicant may be holding for
 |service|.  This has a side-effect of disconnecting the service
 if it is connected."
      end

      operation 42585399 "NotifyEndpointChanged"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFiEndpoint."
      end

      operation 42585527 "SanitizeSSID"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param inout name "ssid" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility, used by WiFiService and WiFiEndpoint.
 Replace non-ASCII characters with '?'. Return true if one or more
 characters were changed."
      end

      operation 42585655 "LogSSID"
	class_operation public explicit_return_type "std::string"
	nparams 1
	  param in name "ssid" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Formats |ssid| for logging purposes, to ease scrubbing."
      end

      operation 42585783 "OnLinkMonitorFailure"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by Linkmonitor (overridden from Device superclass)."
      end

      operation 42585911 "OnUnreliableLink"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by Device when link becomes unreliable (overriden from Device
 superclass)."
      end

      operation 42586039 "IsCurrentService"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return service.get() == current_service_.get();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42586167 "GetGeolocationObjects"
	const cpp_override public explicit_return_type "std::vector<GeolocationInfo>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Overridden from Device superclass"
      end

      operation 42586295 "ShouldUseArpGateway"
	const cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Overridden from Device superclass"
      end

      operation 42586423 "DisassociateFromService"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by a WiFiService when it disassociates itself from this Device."
      end

      operation 42586551 "DestroyServiceLease"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "service" type class_ref 3018807 // WiFiService
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by a WiFiService when it unloads to destroy its lease file."
      end

      operation 42586679 "PerformTDLSOperation"
	cpp_override public explicit_return_type "std::string"
	nparams 3
	  param in name "operation" explicit_type "std::string"
	  param in name "peer" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Perform TDLS |operation| on |peer|."
      end

      operation 42586807 "IsTrafficMonitorEnabled"
	const cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Overridden from Device superclass."
      end

      operation 42586935 "RemoveSupplicantNetworks"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove all networks from WPA supplicant.
 Passed as a callback to |wake_on_wifi_| where it is used."
      end

      operation 42587063 "RequestRoam"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "addr" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3073335 "ScanMethod"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11639735 "kScanMethodNone"
	  public type class_ref 3073335 // ScanMethod
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11639863 "kScanMethodFull"
	  public type class_ref 3073335 // ScanMethod
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11639991 "kScanMethodProgressive"
	  public type class_ref 3073335 // ScanMethod
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11640119 "kScanMethodProgressiveErrorToFull"
	  public type class_ref 3073335 // ScanMethod
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11640247 "kScanMethodProgressiveFinishedToFull"
	  public type class_ref 3073335 // ScanMethod
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3073463 "ScanState"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11640375 "kScanIdle"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11640503 "kScanScanning"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11640631 "kScanBackgroundScanning"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11640759 "kScanTransitionToConnecting"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11640887 "kScanConnecting"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11641015 "kScanConnected"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11641143 "kScanFoundNothing"
	  public type class_ref 3073463 // ScanState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3073591 "ScanResult"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 42587191 "ScanResult"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : is_removal(false) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 42587319 "ScanResult"
	  cpp_inline public explicit_return_type ""
	  nparams 3
	    param in name "path_in" explicit_type "std::string"
	    param in name "properties_in" type class_ref 2969015 // KeyValueStore
	    param in name "is_removal_in" explicit_type "bool"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw}${abstract} : path(path_in), properties(properties_in), is_removal(is_removal_in) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	attribute 11641271 "path"
	  public explicit_type "std::string"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6465335 // properties (<directional composition>)
	  relation 6465335 *-->
	    a role_name "properties" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6465335 // properties (<directional composition>)
	    b parent class_ref 2969015 // KeyValueStore
	end

	attribute 11641399 "is_removal"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3073719 "PendingScanResults"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 42587447 "PendingScanResults"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : is_complete(false) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 42587575 "PendingScanResults"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "process_results_callback" explicit_type "base::Closure"
	  cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract} : is_complete(false), callback(process_results_callback) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	classrelation 6465463 // results (<directional composition>)
	  relation 6465463 *-->
	    stereotype "std::vector"
	    a role_name "results" public
	      comment " List of pending scan results to process.
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6465463 // results (<directional composition>)
	    b parent class_ref 3073591 // ScanResult
	end

	attribute 11641527 "is_complete"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " If true, denotes that the scan is complete (ScanDone() was called).
"
	end

	attribute 11641655 "callback"
	  public explicit_type "base::CancelableClosure"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Cancelable closure used to process the scan results.
"
	end
      end

      extra_member 215735 "friend"
	
	cpp "

  friend class WiFiObjectTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 215863 "friend"
	
	cpp "  friend class WiFiTimerTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 215991 "friend"
	
	cpp "  friend class WiFiMainTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 3073847 "EndpointMap"
	visibility package stereotype "typedef" base_type class_ref 3017527 // WiFiEndpointRefPtr
	cpp_decl "${comment}typedef std::map<const std::string,${type}> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6465591 // <dependency>
	  relation 6465591 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6465591 // <dependency>
	    b parent class_ref 3017527 // WiFiEndpointRefPtr
	end
      end

      class 3073975 "ReverseServiceMap"
	visibility package stereotype "typedef" base_type class_ref 3018807 // WiFiService
	cpp_decl "${comment}typedef std::map<const ${type}*,std::string> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6465719 // <dependency>
	  relation 6465719 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6465719 // <dependency>
	    b parent class_ref 3018807 // WiFiService
	end
      end

      attribute 11641783 "kDefaultBgscanMethod"
	class_attribute const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11641911 "kBackgroundScanIntervalSeconds"
	class_attribute const_attribute private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642039 "kDefaultBgscanShortIntervalSeconds"
	class_attribute const_attribute private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642167 "kDefaultBgscanSignalThresholdDbm"
	class_attribute const_attribute private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642295 "kDefaultRoamThresholdDb"
	class_attribute const_attribute private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642423 "kDefaultScanIntervalSeconds"
	class_attribute const_attribute private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642551 "kMaxBSSResumeAgeSeconds"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642679 "kInterfaceStateUnknown"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11642807 "kRescanIntervalSeconds"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Delay between scans when supplicant finds \"No suitable network\".
"
      end

      attribute 11642935 "kNumFastScanAttempts"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of times to quickly attempt a scan after startup / disconnect.
"
      end

      attribute 11643063 "kFastScanIntervalSeconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643191 "kPendingTimeoutSeconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643319 "kReconnectTimeoutSeconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643447 "kRequestStationInfoPeriodSeconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643575 "kMinumumFrequenciesToScan"
	class_attribute const_attribute private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643703 "kDefaultFractionPerScan"
	class_attribute const_attribute private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643831 "kStuckQueueLengthThreshold"
	class_attribute const_attribute private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11643959 "kPostWakeConnectivityReportDelayMilliseconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of milliseconds to wait after waking from suspend to report the
 connection status to metrics.
"
      end

      classrelation 6465847 // kDefaultWiphyIndex (<directional composition>)
	relation 6465847 *-->
	  a role_name "kDefaultWiphyIndex" class_relation const_relation private
	    comment " Used to instantiate |wiphy_index_| in WiFi. Assigned a large value so that
 any attempts to match the default value of |wiphy_index_| against an actual
 wiphy index reported in an NL80211 message will fail.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6465847 // kDefaultWiphyIndex (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11644087 "kPostScanFailedDelayMilliseconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of milliseconds to wait after failing to launch a scan before
 resetting the scan state to idle.
"
      end

      attribute 11644215 "kDefaultDisconnectReason"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to distinguish between a disconnect reason explicitly set by
 supplicant and a default.
"
      end

      operation 42587703 "GetPhyInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42587831 "AppendBgscan"
	const private explicit_return_type "void"
	nparams 2
	  param inout name "service" type class_ref 3018807 // WiFiService
	  param inout name "service_params" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42587959 "GetBgscanMethod"
	private explicit_return_type "std::string"
	nparams 2
	  param in name "argument" explicit_type "int"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42588087 "GetBgscanShortInterval"
	cpp_inline private explicit_return_type "uint16_t"
	nparams 1
	  param inout name "" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return bgscan_short_interval_seconds_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42588215 "GetBgscanSignalThreshold"
	cpp_inline private explicit_return_type "int32_t"
	nparams 1
	  param inout name "" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return bgscan_signal_threshold_dbm_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42588343 "GetRoamThreshold"
	cpp_inline private explicit_return_type "uint16_t"
	nparams 1
	  param inout name "" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return roam_threshold_db_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These methods can't be 'const' because they are passed to
 HelpRegisterDerivedUint16 which don't take const methods."
      end

      operation 42588471 "GetScanInterval"
	cpp_inline private explicit_return_type "uint16_t"
	nparams 1
	  param inout name "" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return scan_interval_seconds_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42588599 "GetLinkStatistics"
	private return_type class_ref 2969015 // KeyValueStore
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " RPC accessor for |link_statistics_|."
      end

      operation 42588727 "GetScanPending"
	private explicit_return_type "bool"
	nparams 1
	  param inout name "" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42588855 "SetBgscanMethod"
	private explicit_return_type "bool"
	nparams 3
	  param in name "argument" explicit_type "int"
	  param in name "method" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42588983 "SetBgscanShortInterval"
	private explicit_return_type "bool"
	nparams 2
	  param in name "seconds" explicit_type "uint16_t"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589111 "SetBgscanSignalThreshold"
	private explicit_return_type "bool"
	nparams 2
	  param in name "dbm" explicit_type "int32_t"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589239 "SetRoamThreshold"
	private explicit_return_type "bool"
	nparams 2
	  param in name "threshold" explicit_type "uint16_t"
	  param inout name "" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589367 "SetScanInterval"
	private explicit_return_type "bool"
	nparams 2
	  param in name "seconds" explicit_type "uint16_t"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589495 "ClearBgscanMethod"
	private explicit_return_type "void"
	nparams 2
	  param in name "argument" explicit_type "int"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589623 "CurrentBSSChanged"
	private explicit_return_type "void"
	nparams 1
	  param in name "new_bss" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589751 "DisconnectReasonChanged"
	private explicit_return_type "void"
	nparams 1
	  param in name "new_disconnect_reason" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42589879 "FindNetworkRpcidForService"
	private explicit_return_type "std::string"
	nparams 2
	  param in name "service" type class_ref 3018807 // WiFiService
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the RPC identifier associated with the wpa_supplicant network
 entry created for |service|.  If one does not exist, an empty string
 is returned, and |error| is populated."
      end

      operation 42590007 "HandleDisconnect"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42590135 "ServiceDisconnected"
	private explicit_return_type "void"
	nparams 1
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Update failure and state for disconnected service.
 Set failure for disconnected service if disconnect is not user-initiated
 and failure is not already set. Then set the state of the service back
 to idle, so it can be used for future connections."
      end

      operation 42590263 "HandleRoam"
	private explicit_return_type "void"
	nparams 1
	  param in name "new_bssid" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42590391 "BSSAddedTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "BSS" explicit_type "std::string"
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42590519 "BSSRemovedTask"
	private explicit_return_type "void"
	nparams 1
	  param in name "BSS" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42590647 "CertificationTask"
	private explicit_return_type "void"
	nparams 1
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42590775 "EAPEventTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "std::string"
	  param in name "parameter" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42590903 "PropertiesChangedTask"
	private explicit_return_type "void"
	nparams 1
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42591031 "ScanDoneTask"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42591159 "ScanFailedTask"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42591287 "UpdateScanStateAfterScanDone"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " UpdateScanStateAfterScanDone is spawned as a task from ScanDoneTask in
 order to guarantee that it is run after the start of any connections that
 result from a scan.  This works because supplicant sends all BSSAdded
 signals to shill before it sends a ScanDone signal.  The code that
 handles those signals launch tasks such that the tasks have the following
 dependencies (an arrow from X->Y indicates X is guaranteed to run before
 Y):

 [BSSAdded]-->[BssAddedTask]-->[SortServiceTask (calls ConnectTo)]
     |              |                 |
     V              V                 V
 [ScanDone]-->[ScanDoneTask]-->[UpdateScanStateAfterScanDone]"
      end

      operation 42591415 "ScanTask"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42591543 "StateChanged"
	private explicit_return_type "void"
	nparams 1
	  param in name "new_state" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42591671 "SuspectCredentials"
	const private explicit_return_type "bool"
	nparams 2
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	  param inout name "failure" type class_ref 2985783 // ConnectFailure
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Heuristic check if a connection failure was due to bad credentials.
 Returns true and puts type of failure in |failure| if a credential
 problem is detected."
      end

      operation 42591799 "HelpRegisterDerivedInt32"
	private explicit_return_type "void"
	nparams 4
	  param inout name "store" type class_ref 2985271 // PropertyStore
	  param in name "name" explicit_type "std::string"
	  param in name "get" explicit_type "int32_t(WiFi::*)(Error* error)"
	  param in name "set" explicit_type "bool(WiFi::*)(const int32_t& value, Error* error)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, int32_t(WiFi::*${p2})(Error* error)${v2}, bool(WiFi::*${p3})(const int32_t& value, Error* error)${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, int32_t(WiFi::*${p2})(Error* error), bool(WiFi::*${p3})(const int32_t& value, Error* error)${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42591927 "HelpRegisterDerivedUint16"
	private explicit_return_type "void"
	nparams 4
	  param inout name "store" type class_ref 2985271 // PropertyStore
	  param in name "name" explicit_type "std::string"
	  param in name "get" explicit_type "uint16_t(WiFi::*)(Error* error)"
	  param in name "set" explicit_type "bool(WiFi::*)(const uint16_t& value, Error* error)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, uint16_t(WiFi::*${p2})(Error* error)${v2}, bool(WiFi::*${p3})(const uint16_t& value, Error* error)${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, uint16_t(WiFi::*${p2})(Error* error), bool(WiFi::*${p3})(const uint16_t& value, Error* error)${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42592055 "HelpRegisterConstDerivedBool"
	private explicit_return_type "void"
	nparams 3
	  param inout name "store" type class_ref 2985271 // PropertyStore
	  param in name "name" explicit_type "std::string"
	  param in name "get" explicit_type "bool(WiFi::*)(Error* error)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, bool(WiFi::*${p2})(Error* error)${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, bool(WiFi::*${p2})(Error* error)${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42592183 "DisableNetwork"
	private explicit_return_type "bool"
	nparams 1
	  param in name "network" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disable a network entry in wpa_supplicant, and catch any exception
 that occurs.  Returns false if an exception occurred, true otherwise."
      end

      operation 42592311 "DisableNetworkForService"
	cpp_virtual private explicit_return_type "bool"
	nparams 2
	  param in name "service" type class_ref 3018807 // WiFiService
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disable the wpa_supplicant network entry associated with |service|.
 Any cached credentials stored in wpa_supplicant related to this
 network entry will be preserved.  This will have the side-effect of
 disconnecting this service if it is currently connected.  Returns
 true if successful, otherwise returns false and populates |error|
 with the reason for failure."
      end

      operation 42592439 "RemoveNetwork"
	private explicit_return_type "bool"
	nparams 1
	  param in name "network" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove a network entry from wpa_supplicant, and catch any exception
 that occurs.  Returns false if an exception occurred, true otherwise."
      end

      operation 42592567 "RemoveNetworkForService"
	cpp_virtual private explicit_return_type "bool"
	nparams 2
	  param in name "service" type class_ref 3018807 // WiFiService
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove the wpa_supplicant network entry associated with |service|.
 Any cached credentials stored in wpa_supplicant related to this
 network entry will be removed.  This will have the side-effect of
 disconnecting this service if it is currently connected.  Returns
 true if successful, otherwise returns false and populates |error|
 with the reason for failure."
      end

      operation 42592695 "SetHT40EnableForService"
	private explicit_return_type "void"
	nparams 2
	  param in name "service" type class_ref 3018807 // WiFiService
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Update disable_ht40 setting in wpa_supplicant for the given service."
      end

      operation 42592823 "ProgressiveScanTask"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Perform the next in a series of progressive scans."
      end

      operation 42592951 "SetSchedScanTask"
	private explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Task to configure scheduled scan in wpa_supplicant."
      end

      operation 42593079 "OnFailedProgressiveScan"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Recovers from failed progressive scan."
      end

      operation 42593207 "RestartFastScanAttempts"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Restart fast scanning after disconnection."
      end

      operation 42593335 "StartScanTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Schedules a scan attempt at time |scan_interval_seconds_| in the
 future.  Cancels any currently pending scan timer."
      end

      operation 42593463 "StopScanTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cancels any currently pending scan timer."
      end

      operation 42593591 "ScanTimerHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initiates a scan, if idle. Reschedules the scan timer regardless."
      end

      operation 42593719 "AbortScan"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Abort any current scan (at the shill-level; let any request that's
 already gone out finish)."
      end

      operation 42593847 "InitiateScan"
	private explicit_return_type "void"
	nparams 1
	  param in name "scan_type" explicit_type "ScanType"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Abort any current scan and start a new scan of type |type| if shill is
 currently idle."
      end

      operation 42593975 "InitiateScanInDarkResume"
	private explicit_return_type "void"
	nparams 1
	  param in name "freqs" type class_ref 3073207 // FreqSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suppresses manager auto-connects and flushes supplicant BSS cache, then
 triggers the passive scan. Meant for use in dark resume where we want to
 ensure that shill and supplicant do not use stale information to launch
 connection attempts."
      end

      operation 42594103 "TriggerPassiveScan"
	private explicit_return_type "void"
	nparams 1
	  param in name "freqs" type class_ref 3073207 // FreqSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If |freqs| contains at least one frequency channel a passive scan is
 launched on all the frequencies in |freqs|. Otherwise, a passive scan is
 launched on all channels."
      end

      operation 42594231 "StartPendingTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts a timer in order to limit the length of an attempt to
 connect to a pending network."
      end

      operation 42594359 "StopPendingTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cancels any currently pending network timer."
      end

      operation 42594487 "PendingTimeoutHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Aborts a pending network that is taking too long to connect."
      end

      operation 42594615 "StartReconnectTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts a timer in order to limit the length of an attempt to
 reconnect to the current network."
      end

      operation 42594743 "StopReconnectTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops any pending reconnect timer."
      end

      operation 42594871 "ReconnectTimeoutHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disconnects from the current service that is taking too long
 to reconnect on its own."
      end

      operation 42594999 "SetPendingService"
	private explicit_return_type "void"
	nparams 1
	  param in name "service" type class_ref 3019063 // WiFiServiceRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the current pending service.  If the argument is non-NULL,
 the Pending timer is started and the associated service is set
 to \"Associating\", otherwise it is stopped."
      end

      operation 42595127 "OnSupplicantAppear"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42595255 "OnSupplicantVanish"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42595383 "OnWiFiDebugScopeChanged"
	private explicit_return_type "void"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by ScopeLogger when WiFi debug scope is enabled/disabled."
      end

      operation 42595511 "SetConnectionDebugging"
	private explicit_return_type "void"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enable or disable debugging for the current connection attempt."
      end

      operation 42595639 "EnableHighBitrates"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enable high bitrates for the current network.  High rates are disabled
 on the initial association and every reassociation afterward."
      end

      operation 42595767 "RequestStationInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request and retrieve information about the currently connected station."
      end

      operation 42595895 "OnReceivedStationInfo"
	private explicit_return_type "void"
	nparams 1
	  param in name "nl80211_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596023 "StopRequestingStationInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596151 "ConnectToSupplicant"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596279 "Restart"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596407 "GetServiceLeaseName"
	private explicit_return_type "std::string"
	nparams 1
	  param in name "service" type class_ref 3018807 // WiFiService
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596535 "OnNewWiphy"
	private explicit_return_type "void"
	nparams 1
	  param in name "nl80211_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Netlink message handler for NL80211_CMD_NEW_WIPHY messages; copies
 device's supported frequencies from that message into
 |all_scan_frequencies_|."
      end

      operation 42596663 "OnTriggerPassiveScanResponse"
	private explicit_return_type "void"
	nparams 1
	  param in name "netlink_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596791 "SetScanState"
	private explicit_return_type "void"
	nparams 3
	  param in name "new_state" type class_ref 3073463 // ScanState
	  param in name "new_method" type class_ref 3073335 // ScanMethod
	  param in name "reason" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42596919 "ReportScanResultToUma"
	private explicit_return_type "void"
	nparams 2
	  param in name "state" type class_ref 3073463 // ScanState
	  param in name "method" type class_ref 3073335 // ScanMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42597047 "ScanStateString"
	class_operation private explicit_return_type "std::string"
	nparams 2
	  param in name "state" type class_ref 3073463 // ScanState
	  param in name "type" type class_ref 3073335 // ScanMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42597175 "OnIPConfigUpdated"
	cpp_override private explicit_return_type "void"
	nparams 2
	  param in name "ipconfig" type class_ref 2972727 // IPConfigRefPtr
	  param in name "new_lease_acquired" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " In addition to calling the implementations of these functions in Device,
 calls WakeOnWiFi::PrepareForWakeOnWiFiBeforeSuspend."
      end

      operation 42597303 "OnIPv6ConfigUpdated"
	cpp_override private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42597431 "IsConnectedToCurrentService"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff the WiFi device is connected to the current service."
      end

      operation 42597559 "ReportConnectedToServiceAfterWake"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback invoked to report whether this WiFi device is connected to
 a service after waking from suspend. Wraps around a Call the function
 with the same name in WakeOnWiFi."
      end

      operation 42597687 "AddPendingScanResult"
	private explicit_return_type "void"
	nparams 3
	  param in name "path" explicit_type "std::string"
	  param in name "properties" type class_ref 2969015 // KeyValueStore
	  param in name "is_removal" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Add a scan result to the list of pending scan results, and post a task
 for handling these results if one is not already running."
      end

      operation 42597815 "PendingScanResultsHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback invoked to handle pending scan results from AddPendingScanResult."
      end

      operation 42597943 "ParseWiphyIndex"
	private explicit_return_type "bool"
	nparams 1
	  param in name "nl80211_message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Given a NL80211_CMD_NEW_WIPHY message |nl80211_message|, parses the
 wiphy index of the NIC and sets |wiphy_index_| with the parsed index.
 Returns true iff the wiphy index was parsed successfully, false otherwise."
      end

      operation 42598071 "OnScanStarted"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param in name "netlink_message" explicit_type "NetlinkMessage"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback invoked when the kernel broadcasts a notification that a scan has
 started."
      end

      operation 42598199 "SetSupplicantInterfaceProxy"
	private explicit_return_type "void"
	nparams 1
	  param inout name "supplicant_interface_proxy" type class_ref 2978487 // SupplicantInterfaceProxyInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function for setting supplicant_interface_proxy_ pointer."
      end

      classrelation 6465975 // provider_ (<unidirectional association>)
	relation 6465975 --->
	  a role_name "provider_" private
	    comment " Pointer to the provider object that maintains WiFiService objects.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6465975 // provider_ (<unidirectional association>)
	  b parent class_ref 2984887 // WiFiProvider
      end

      classrelation 6466103 // weak_ptr_factory_ (<directional composition>)
	relation 6466103 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_ptr_factory_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466103 // weak_ptr_factory_ (<directional composition>)
	  b parent class_ref 3016631 // WiFi
      end

      attribute 11644343 "time_"
	private explicit_type "Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Store cached copies of singletons for speed/ease of testing.
"
      end

      attribute 11644471 "supplicant_present_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6466231 // supplicant_process_proxy_ (<directional composition>)
	relation 6466231 *-->
	  stereotype "std::unique_ptr"
	  a role_name "supplicant_process_proxy_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466231 // supplicant_process_proxy_ (<directional composition>)
	  b parent class_ref 2978359 // SupplicantProcessProxyInterface
      end

      classrelation 6466359 // supplicant_interface_proxy_ (<directional composition>)
	relation 6466359 *-->
	  stereotype "std::unique_ptr"
	  a role_name "supplicant_interface_proxy_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466359 // supplicant_interface_proxy_ (<directional composition>)
	  b parent class_ref 2978487 // SupplicantInterfaceProxyInterface
      end

      attribute 11644599 "supplicant_interface_path_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " wpa_supplicant's RPC path for this device/interface.
"
      end

      classrelation 6466487 // endpoint_by_rpcid_ (<directional composition>)
	relation 6466487 *-->
	  a role_name "endpoint_by_rpcid_" private
	    comment " The rpcid used as the key is wpa_supplicant's D-Bus path for the
 Endpoint (BSS, in supplicant parlance).
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466487 // endpoint_by_rpcid_ (<directional composition>)
	  b parent class_ref 3073847 // EndpointMap
      end

      classrelation 6466615 // rpcid_by_service_ (<directional composition>)
	relation 6466615 *-->
	  a role_name "rpcid_by_service_" private
	    comment " Map from Services to the D-Bus path for the corresponding wpa_supplicant
 Network.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466615 // rpcid_by_service_ (<directional composition>)
	  b parent class_ref 3073975 // ReverseServiceMap
      end

      classrelation 6466743 // current_service_ (<directional composition>)
	relation 6466743 *-->
	  a role_name "current_service_" private
	    comment " The Service we are presently connected to. May be nullptr is we're not
 not connected to any Service.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466743 // current_service_ (<directional composition>)
	  b parent class_ref 3019063 // WiFiServiceRefPtr
      end

      classrelation 6466871 // pending_service_ (<directional composition>)
	relation 6466871 *-->
	  a role_name "pending_service_" private
	    comment " The Service we're attempting to connect to. May be nullptr if we're
 not attempting to connect to a new Service. If non-NULL, should
 be distinct from |current_service_|. (A service should not
 simultaneously be both pending, and current.)
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466871 // pending_service_ (<directional composition>)
	  b parent class_ref 3019063 // WiFiServiceRefPtr
      end

      attribute 11644727 "supplicant_state_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11644855 "supplicant_bss_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11644983 "supplicant_disconnect_reason_"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11645111 "phy_name_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11645239 "need_bss_flush_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates that we should flush supplicant's BSS cache after the
 next scan completes.
"
      end

      attribute 11645367 "resumed_at_"
	private explicit_type "timeval"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11645495 "scan_timer_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes when the (foreground) scan timer expires. Calls ScanTimerHandler.
"
      end

      attribute 11645623 "pending_timeout_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes when a pending service connect timer expires. Calls
 PendingTimeoutHandler.
"
      end

      attribute 11645751 "reconnect_timeout_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes when a reconnecting service timer expires. Calls
 ReconnectTimeoutHandler.
"
      end

      attribute 11645879 "request_station_info_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes periodically while a service is connected, to update the
 signal strength from the currently connected AP.
"
      end

      attribute 11646007 "scan_failed_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes when WPA supplicant reports that a scan has failed via a ScanDone
 signal.
"
      end

      attribute 11646135 "fast_scans_remaining_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of remaining fast scans to be done during startup and disconnect.
"
      end

      attribute 11646263 "has_already_completed_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates that the current BSS has reached the completed state according
 to supplicant.
"
      end

      attribute 11646391 "is_roaming_in_progress_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates that the current BSS for a connected service has changed, which
 implies that a driver-based roam has been initiated.  If this roam
 succeeds, we should renew our lease.
"
      end

      attribute 11646519 "is_debugging_connection_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates that we are debugging a problematic connection.
"
      end

      classrelation 6466999 // eap_state_handler_ (<directional composition>)
	relation 6466999 *-->
	  stereotype "std::unique_ptr"
	  a role_name "eap_state_handler_" private
	    comment " Tracks the process of an EAP negotiation.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6466999 // eap_state_handler_ (<directional composition>)
	  b parent class_ref 3063223 // SupplicantEAPStateHandler
      end

      classrelation 6467127 // mac80211_monitor_ (<directional composition>)
	relation 6467127 *-->
	  stereotype "std::unique_ptr"
	  a role_name "mac80211_monitor_" private
	    comment " Tracks mac80211 state, to diagnose problems such as queue stalls.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467127 // mac80211_monitor_ (<directional composition>)
	  b parent class_ref 3070519 // Mac80211Monitor
      end

      attribute 11646647 "bgscan_method_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Properties
"
      end

      attribute 11646775 "bgscan_short_interval_seconds_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11646903 "bgscan_signal_threshold_dbm_"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11647031 "roam_threshold_db_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11647159 "scan_interval_seconds_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11647287 "progressive_scan_enabled_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11647415 "scan_configuration_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6467255 // netlink_manager_ (<unidirectional association>)
	relation 6467255 --->
	  a role_name "netlink_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467255 // netlink_manager_ (<unidirectional association>)
	  b parent class_ref 2983607 // NetlinkManager
      end

      attribute 11647543 "all_scan_frequencies_"
	private explicit_type "uint16_t"
	stereotype "std::set"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6467383 // scan_session_ (<directional composition>)
	relation 6467383 *-->
	  stereotype "std::unique_ptr"
	  a role_name "scan_session_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467383 // scan_session_ (<directional composition>)
	  b parent class_ref 3071287 // ScanSession
      end

      attribute 11647671 "min_frequencies_to_scan_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11647799 "max_frequencies_to_scan_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11647927 "scan_all_frequencies_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6467511 // pending_scan_results_ (<directional composition>)
	relation 6467511 *-->
	  stereotype "std::unique_ptr"
	  a role_name "pending_scan_results_" private
	    comment " Holds the list of scan results waiting to be processed and a cancelable
 closure for processing the pending tasks in PendingScanResultsHandler().
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467511 // pending_scan_results_ (<directional composition>)
	  b parent class_ref 3073719 // PendingScanResults
      end

      attribute 11648055 "fraction_per_scan_"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fraction of previously seen scan frequencies to include in each
 progressive scan batch (since the frequencies are sorted, the sum of the
 fraction_per_scan_ over the scans in a session (* 100) is the percentile
 of the frequencies that have been scanned).
"
      end

      classrelation 6467639 // scan_state_ (<directional composition>)
	relation 6467639 *-->
	  a role_name "scan_state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467639 // scan_state_ (<directional composition>)
	  b parent class_ref 3073463 // ScanState
      end

      classrelation 6467767 // scan_method_ (<directional composition>)
	relation 6467767 *-->
	  a role_name "scan_method_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467767 // scan_method_ (<directional composition>)
	  b parent class_ref 3073335 // ScanMethod
      end

      classrelation 6467895 // scan_timer_ (<directional composition>)
	relation 6467895 *-->
	  a role_name "scan_timer_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6467895 // scan_timer_ (<directional composition>)
	  b parent class_ref 3001783 // Timer
      end

      attribute 11648183 "receive_byte_count_at_connect_"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to compute the number of bytes received since the link went up.
"
      end

      classrelation 6468023 // link_statistics_ (<directional composition>)
	relation 6468023 *-->
	  a role_name "link_statistics_" private
	    comment " Used to report the current state of our wireless link.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6468023 // link_statistics_ (<directional composition>)
	  b parent class_ref 2969015 // KeyValueStore
      end

      classrelation 6468151 // wiphy_index_ (<directional composition>)
	relation 6468151 *-->
	  a role_name "wiphy_index_" private
	    comment " Wiphy interface index of this WiFi device.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6468151 // wiphy_index_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      classrelation 6468279 // wake_on_wifi_ (<directional composition>)
	relation 6468279 *-->
	  stereotype "std::unique_ptr"
	  a role_name "wake_on_wifi_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6468279 // wake_on_wifi_ (<directional composition>)
	  b parent class_ref 3000375 // WakeOnWiFi
      end

      classrelation 6468407 // tdls_manager_ (<directional composition>)
	relation 6468407 *-->
	  stereotype "std::unique_ptr"
	  a role_name "tdls_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6468407 // tdls_manager_ (<directional composition>)
	  b parent class_ref 3071671 // TDLSManager
      end
    end

    class 3018807 "WiFiService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6470967 // <generalisation>
	relation 6470967 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6470967 // <generalisation>
	  b parent class_ref 2977719 // Service
      end

      attribute 11654583 "kStorageHiddenSSID"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TODO(pstew): Storage constants shouldn't need to be public
 crbug.com/208736
"
      end

      attribute 11654711 "kStorageMode"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11654839 "kStoragePassphrase"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11654967 "kStorageSecurity"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655095 "kStorageSecurityClass"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655223 "kStorageSSID"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655351 "kStoragePreferredDevice"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655479 "kStorageRoamThreshold"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655607 "kStorageRoamThresholdSet"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 42608311 "WiFiService"
	public explicit_return_type ""
	nparams 9
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	  param inout name "manager" type class_ref 2977207 // Manager
	  param inout name "provider" type class_ref 2984887 // WiFiProvider
	  param in name "ssid" explicit_type "std::vector<uint8_t>"
	  param in name "mode" explicit_type "std::string"
	  param in name "security" explicit_type "std::string"
	  param in name "hidden_ssid" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, const ${t5} & ${p5}, const ${t6} & ${p6}, const ${t7} & ${p7}, ${t8} ${p8}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42608439 "~WiFiService"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42608567 "Connect"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param inout name "error" type class_ref 2964663 // Error
	  param in name "reason" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inherited from Service."
      end

      operation 42608695 "Disconnect"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param inout name "error" type class_ref 2964663 // Error
	  param in name "reason" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42608823 "Is8021x"
	const cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42608951 "AddEndpoint"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42609079 "RemoveEndpoint"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42609207 "GetEndpointCount"
	const cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return endpoints_.size(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42609335 "NotifyCurrentEndpoint"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called to update the identity of the currently connected endpoint.
 To indicate that there is no currently connect endpoint, call with
 |endpoint| set to nullptr."
      end

      operation 42609463 "NotifyEndpointUpdated"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "endpoint" type class_ref 3017399 // WiFiEndpointConstRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called to inform of changes in the properties of an endpoint.
 (Not necessarily the currently connected endpoint.)"
      end

      operation 42609591 "GetStorageIdentifier"
	const cpp_override public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " wifi_<MAC>_<BSSID>_<mode_string>_<security_string>"
      end

      operation 42609719 "ParseStorageIdentifier"
	class_operation public explicit_return_type "bool"
	nparams 4
	  param in name "storage_name" explicit_type "std::string"
	  param inout name "address" explicit_type "std::string"
	  param inout name "mode" explicit_type "std::string"
	  param inout name "security" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42609847 "FixupServiceEntries"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param inout name "storage" type class_ref 2985399 // StoreInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterate over |storage| looking for WiFi servces with \"old-style\"
 properties that don't include explicit type/mode/security, and add
 these properties.  Returns true if any entries were fixed."
      end

      operation 42609975 "IsValidMode"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param in name "mode" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Validate |mode| against all valid and supported service modes."
      end

      operation 42610103 "IsValidSecurityMethod"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param in name "method" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Validate |method| against all valid and supported security methods."
      end

      operation 42610231 "IsValidSecurityClass"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param in name "security_class" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Validate |security_class| against all valid and supported
 security classes."
      end

      operation 42610359 "mode"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mode_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42610487 "key_management"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return GetEAPKeyManagement(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42610615 "ssid"
	const cpp_inline public explicit_return_type "std::vector<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return ssid_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42610743 "bssid"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return bssid_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42610871 "frequency_list"
	const cpp_inline public explicit_return_type "std::vector<uint16_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return frequency_list_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42610999 "physical_mode"
	const cpp_inline public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return physical_mode_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42611127 "frequency"
	const cpp_inline public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return frequency_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42611255 "GetLoadableStorageIdentifier"
	const cpp_override public explicit_return_type "std::string"
	nparams 1
	  param in name "storage" type class_ref 2985399 // StoreInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " WiFi services can load from profile entries other than their current
 storage identifier.  Override the methods from the parent Service
 class which pertain to whether this service may be loaded from |storage|."
      end

      operation 42611383 "IsLoadableFrom"
	const cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "storage" type class_ref 2985399 // StoreInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42611511 "Load"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "storage" type class_ref 2985399 // StoreInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override Load and Save from parent Service class.  We will call
 the parent method."
      end

      operation 42611639 "Save"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "storage" type class_ref 2985399 // StoreInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42611767 "Unload"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42611895 "SetState"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "ConnectState"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override SetState from parent Service class.  We will call the
 parent method."
      end

      operation 42612023 "HasEndpoints"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return !endpoints_.empty(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42612151 "IsVisible"
	const cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42612279 "IsSecurityMatch"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "security" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42612407 "AddSuspectedCredentialFailure"
	cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used by WiFi objects to indicate that the credentials for this network
 have been called into question.  This method returns true if given this
 suspicion, if it is probable that indeed these credentials are likely
 to be incorrect.  Credentials that have never been used before are
 considered suspect by default, while those which have been used
 successfully in the past must have this method called a number of times
 since the last time ResetSuspectedCredentialsFailures() was called."
      end

      operation 42612535 "ResetSuspectedCredentialFailures"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42612663 "hidden_ssid"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return hidden_ssid_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42612791 "ieee80211w_required"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return ieee80211w_required_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42612919 "InitializeCustomMetrics"
	const public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42613047 "SendPostReadyStateMetrics"
	const cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "time_resume_to_ready_milliseconds" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42613175 "ClearCachedCredentials"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clear any cached credentials stored in wpa_supplicant related to |this|.
 This will disconnect this service if it is currently connected."
      end

      operation 42613303 "OnEapCredentialsChanged"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "reason" type class_ref 3021879 // UpdateCredentialsReason
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override from parent Service class to correctly update connectability
 when the EAP credentials change for 802.1x networks."
      end

      operation 42613431 "OnCredentialChange"
	public explicit_return_type "void"
	nparams 1
	  param in name "reason" type class_ref 3021879 // UpdateCredentialsReason
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFiService to reset state associated with prior success
 of a connection with particular EAP credentials or a passphrase."
      end

      operation 42613559 "OnProfileConfigured"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override from parent Service class to register hidden services once they
 have been configured."
      end

      operation 42613687 "ResetWiFi"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFiProvider to reset the WiFi device reference on shutdown."
      end

      operation 42613815 "GetSupplicantConfigurationParameters"
	const cpp_virtual public return_type class_ref 2969015 // KeyValueStore
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by WiFi to retrieve configuration parameters for wpa_supplicant."
      end

      operation 42613943 "ComputeSecurityClass"
	class_operation public explicit_return_type "std::string"
	nparams 1
	  param in name "security" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " \"wpa\", \"rsn\" and \"psk\" are equivalent from a configuration perspective.
 This function maps them all into \"psk\"."
      end

      operation 42614071 "IsAutoConnectable"
	const cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "reason" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42614199 "SignalLevel"
	const public explicit_return_type "int16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Signal level in dBm.  If no current endpoint, returns
 std::numeric_limits<int>::min()."
      end

      operation 42614327 "set_expecting_disconnect"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { expecting_disconnect_ = val; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42614455 "expecting_disconnect"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return expecting_disconnect_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42614583 "roam_threshold_db"
	cpp_inline public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return roam_threshold_db_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42614711 "roam_threshold_db_set"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return roam_threshold_db_set_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42614839 "SetEAPKeyManagement"
	cpp_override protected explicit_return_type "void"
	nparams 1
	  param in name "key_management" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42614967 "GetTethering"
	const cpp_override protected explicit_return_type "std::string"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 216887 "friend"
	
	cpp "
  friend class WiFiServiceSecurityTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 217015 "friend"
	
	cpp "  friend class WiFiServiceTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 217143 "friend"
	
	cpp "  friend class WiFiServiceUpdateFromEndpointsTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 11655735 "kAutoConnNoEndpoint"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655863 "kAnyDeviceAddress"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11655991 "kSuspectedCredentialFailureThreshold"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 42615095 "HelpRegisterConstDerivedString"
	private explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "get" explicit_type "std::string(WiFiService::*)(Error* error)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, std::string(WiFiService::*${p1})(Error* error)${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, std::string(WiFiService::*${p1})(Error* error)${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override the base clase implementation, because we need to allow
 arguments that aren't base class methods."
      end

      operation 42615223 "HelpRegisterDerivedString"
	private explicit_return_type "void"
	nparams 3
	  param in name "name" explicit_type "std::string"
	  param in name "get" explicit_type "std::string(WiFiService::*)(Error* error)"
	  param in name "set" explicit_type "bool(WiFiService::*)(const std::string& value, Error* error)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, std::string(WiFiService::*${p1})(Error* error)${v1}, bool(WiFiService::*${p2})(const std::string& value, Error* error)${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, std::string(WiFiService::*${p1})(Error* error), bool(WiFiService::*${p2})(const std::string& value, Error* error)${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42615351 "HelpRegisterWriteOnlyDerivedString"
	private explicit_return_type "void"
	nparams 4
	  param in name "name" explicit_type "std::string"
	  param in name "set" explicit_type "bool(WiFiService::*)(const std::string& value, Error* error)"
	  param in name "clear" explicit_type "void(WiFiService::*)(Error* error)"
	  param in name "default_value" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, bool(WiFiService::*${p1})(const std::string& value, Error* error)${v1}, void(WiFiService::*${p2})(Error* error)${v2}, const ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, bool(WiFiService::*${p1})(const std::string& value, Error* error), void(WiFiService::*${p2})(Error* error), const ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42615479 "HelpRegisterDerivedUint16"
	private explicit_return_type "void"
	nparams 4
	  param in name "name" explicit_type "std::string"
	  param in name "get" explicit_type "uint16_t(WiFiService::*)(Error* error)"
	  param in name "set" explicit_type "bool(WiFiService::*)(const uint16_t& value, Error* error)"
	  param in name "clear" explicit_type "void(WiFiService::*)(Error* error)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, uint16_t(WiFiService::*${p1})(Error* error)${v1}, bool(WiFiService::*${p2})(const uint16_t& value, Error* error)${v2}, void(WiFiService::*${p3})(Error* error)${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, uint16_t(WiFiService::*${p1})(Error* error), bool(WiFiService::*${p2})(const uint16_t& value, Error* error), void(WiFiService::*${p3})(Error* error)${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42615607 "GetDeviceRpcId"
	const cpp_override private explicit_return_type "std::string"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42615735 "ClearPassphrase"
	private explicit_return_type "void"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42615863 "UpdateConnectable"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42615991 "UpdateFromEndpoints"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616119 "UpdateSecurity"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616247 "ComputeCipher8021x"
	class_operation private explicit_return_type "CryptoAlgorithm"
	nparams 1
	  param in name "endpoints" explicit_type "std::set<WiFiEndpointConstRefPtr>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616375 "ValidateWEPPassphrase"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616503 "ValidateWPAPassphrase"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616631 "ParseWEPPassphrase"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "key_index" explicit_type "int"
	  param inout name "password_bytes" explicit_type "std::vector<uint8_t>"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616759 "CheckWEPIsHex"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42616887 "CheckWEPKeyIndex"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42617015 "CheckWEPPrefix"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42617143 "SignalToStrength"
	class_operation private explicit_return_type "uint8_t"
	nparams 1
	  param in name "signal_dbm" explicit_type "int16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Maps a signal value, in dBm, to a \"strength\" value, from
 |Service::kStrengthMin| to |Service:kStrengthMax|."
      end

      operation 42617271 "GetDefaultStorageIdentifier"
	const private explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create a default group name for this WiFi service."
      end

      operation 42617399 "GetSecurity"
	private explicit_return_type "std::string"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the security of this service.  If connected, the security
 reported from the currently connected endpoint is returned.  Otherwise
 the configured security for the service is returned."
      end

      operation 42617527 "GetSecurityClass"
	private explicit_return_type "std::string"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the security class of this service.  If connected, the
 security class of the currently connected endpoint is returned.
 Otherwise the configured security class for the service is
 returned.

 See also: ComputeSecurityClass."
      end

      operation 42617655 "GetStorageProperties"
	const private return_type class_ref 2969015 // KeyValueStore
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Profile data for a WPA/RSN service can be stored under a number of
 different security types.  These functions create different storage
 property lists based on whether they are saved with their generic
 \"psk\" name or if they use the (legacy) specific \"wpa\" or \"rsn\" names."
      end

      operation 42617783 "SetPassphrase"
	private explicit_return_type "bool"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called from DBus and during Load to validate and apply a passphrase for
 this service.  If the passphrase is successfully changed, UpdateConnectable
 and OnCredentialChange are both called and the method returns true.  This
 method will return false if the passphrase cannot be set.  If the
 passphrase is already set to the value of |passphrase|, this method will
 return false.  If it is due to an error, |error| will be populated with the
 appropriate information."
      end

      operation 42617911 "SetPassphraseInternal"
	private explicit_return_type "bool"
	nparams 2
	  param in name "passphrase" explicit_type "std::string"
	  param in name "reason" type class_ref 3021879 // UpdateCredentialsReason
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by SetPassphrase and LoadPassphrase to perform the check on a
 passphrase change.  |passphrase| is the new passphrase to be used for the
 service.  If the new passphrase is not different from the existing
 passphrase, SetPassphraseInternal will return false.  |reason| signals how
 the SetPassphraseInternal method was triggered.  If the method was called
 from Load, the has_ever_connected flag will not be reset.  If the method
 was called from SetPassphrase, has_ever_connected will be set to false."
      end

      operation 42618039 "ChooseDevice"
	private return_type class_ref 3016887 // WiFiRefPtr
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Select a WiFi device (e.g, for connecting a hidden service with no
 endpoints)."
      end

      operation 42618167 "GetPreferredDevice"
	private explicit_return_type "std::string"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42618295 "SetPreferredDevice"
	private explicit_return_type "bool"
	nparams 2
	  param in name "device_name" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called from DBus and during load to apply the preferred device for this
 service."
      end

      operation 42618423 "SetWiFi"
	private explicit_return_type "void"
	nparams 1
	  param in name "new_wifi" type class_ref 3016887 // WiFiRefPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42618551 "GetRoamThreshold"
	private explicit_return_type "uint16_t"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method can't be 'const' because it is passed to
 HelpRegisterDerivedUint16, which doesn't take const methods."
      end

      operation 42618679 "SetRoamThreshold"
	private explicit_return_type "bool"
	nparams 2
	  param in name "threshold" explicit_type "uint16_t"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42618807 "ClearRoamThreshold"
	private explicit_return_type "void"
	nparams 1
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11656119 "passphrase_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Properties
"
      end

      attribute 11656247 "need_passphrase_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11656375 "security_"
	const_attribute private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11656503 "mode_"
	const_attribute private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TODO(cmasone): see if the below can be pulled from the endpoint associated
 with this service instead.
"
      end

      attribute 11656631 "auth_mode_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11656759 "hidden_ssid_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11656887 "frequency_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11657015 "frequency_list_"
	private explicit_type "uint16_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11657143 "physical_mode_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11657271 "preferred_device_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Preferred device to use for connecting to this service.
"
      end

      attribute 11657399 "raw_signal_strength_"
	private explicit_type "int16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The raw dBm signal strength from the associated endpoint.
"
      end

      attribute 11657527 "hex_ssid_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11657655 "storage_identifier_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11657783 "bssid_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6471095 // vendor_information_ (<directional composition>)
	relation 6471095 *-->
	  a role_name "vendor_information_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6471095 // vendor_information_ (<directional composition>)
	  b parent class_ref 2965431 // Stringmap
      end

      attribute 11657911 "country_code_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The country code reported by the current endpoint.
"
      end

      attribute 11658039 "cipher_8021x_"
	private explicit_type "CryptoAlgorithm"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If |security_| == kSecurity8021x, the crypto algorithm being used.
 (Otherwise, crypto algorithm is implied by |security_|.)
"
      end

      attribute 11658167 "suspected_credential_failures_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Track the number of consecutive times our current credentials have
 been called into question.
"
      end

      attribute 11658295 "logged_signal_warning"
	class_attribute private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Track whether or not we've warned about large signal values.
 Used to avoid spamming the log.
"
      end

      classrelation 6471223 // wifi_ (<directional composition>)
	relation 6471223 *-->
	  a role_name "wifi_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6471223 // wifi_ (<directional composition>)
	  b parent class_ref 3016887 // WiFiRefPtr
      end

      classrelation 6471351 // endpoints_ (<directional composition>)
	relation 6471351 *-->
	  stereotype "std::set"
	  a role_name "endpoints_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6471351 // endpoints_ (<directional composition>)
	  b parent class_ref 3017399 // WiFiEndpointConstRefPtr
      end

      classrelation 6471479 // current_endpoint_ (<directional composition>)
	relation 6471479 *-->
	  a role_name "current_endpoint_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6471479 // current_endpoint_ (<directional composition>)
	  b parent class_ref 3017399 // WiFiEndpointConstRefPtr
      end

      attribute 11658423 "ssid_"
	const_attribute private explicit_type "uint8_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11658551 "ieee80211w_required_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Track whether IEEE 802.11w (Protected Management Frame) support is
 mandated by one or more endpoints we have seen that provide this service.
"
      end

      attribute 11658679 "expecting_disconnect_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag indicating if service disconnect is initiated by user for
 connecting to other service.
"
      end

      classrelation 6471607 // certificate_file_ (<directional composition>)
	relation 6471607 *-->
	  stereotype "std::unique_ptr"
	  a role_name "certificate_file_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6471607 // certificate_file_ (<directional composition>)
	  b parent class_ref 2971831 // CertificateFile
      end

      attribute 11658807 "roam_threshold_db_"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11658935 "roam_threshold_db_set_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6471735 // provider_ (<unidirectional association>)
	relation 6471735 --->
	  a role_name "provider_" private
	    comment " Bare pointer is safe because WiFi service instances are owned by
 the WiFiProvider and are guaranteed to be deallocated by the time
 the WiFiProvider is.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6471735 // provider_ (<unidirectional association>)
	  b parent class_ref 2984887 // WiFiProvider
      end
    end

    class 3070391 "typedef103"
      visibility package stereotype "typedef" explicit_base_type "base::SupportsWeakPtr<Callback80211Metrics>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3070519 "Mac80211Monitor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 3070647 "QueueState"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 42569271 "QueueState"
	  cpp_inline public explicit_return_type ""
	  nparams 3
	    param in name "queue_number_in" explicit_type "size_t"
	    param in name "stop_flags_in" type class_ref 2810935 // uint32_t
	    param in name "queue_length_in" explicit_type "size_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw}${abstract} : queue_number(queue_number_in), stop_flags(stop_flags_in),
      queue_length(queue_length_in) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	attribute 11628599 "queue_number"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6459575 // stop_flags (<directional composition>)
	  relation 6459575 *-->
	    a role_name "stop_flags" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6459575 // stop_flags (<directional composition>)
	    b parent class_ref 2810935 // uint32_t
	end

	attribute 11628727 "queue_length"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 42569399 "Mac80211Monitor"
	public explicit_return_type ""
	nparams 5
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param in name "link_name" explicit_type "std::string"
	  param in name "queue_length_limit" explicit_type "size_t"
	  param in name "on_repair_callback" explicit_type "base::Closure"
	  param inout name "metrics" type class_ref 2968503 // Metrics
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42569527 "~Mac80211Monitor"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42569655 "Start"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "phy_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42569783 "Stop"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42569911 "UpdateConnectedState"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "new_state" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42570039 "link_name"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return link_name_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 214967 "friend"
	
	cpp "
  friend class Mac80211MonitorTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 11628855 "kMaxQueueStateSizeBytes"
	class_attribute const_attribute private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11628983 "kQueueStatusPathFormat"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11629111 "kWakeQueuesPathFormat"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11629239 "kQueueStatePollIntervalSeconds"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11629367 "kMinimumTimeBetweenWakesSeconds"
	class_attribute const_attribute private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3070775 "QueueStopReason"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11629495 "kStopReasonDriver"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11629623 "kStopReasonPowerSave"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11629751 "kStopReasonChannelSwitch"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11629879 "kStopReasonAggregation"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630007 "kStopReasonSuspend"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630135 "kStopReasonBufferAdd"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630263 "kStopReasonChannelTypeChange"
	  public type class_ref 3070775 // QueueStopReason
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630391 "kStopReasonMax"
	  public type class_ref 3070775 // QueueStopReason
	  init_value " kStopReasonChannelTypeChange
  "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3070903 "QueueStopFlag"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11630519 "kStopFlagDriver"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonDriver"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630647 "kStopFlagPowerSave"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonPowerSave"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630775 "kStopFlagChannelSwitch"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonChannelSwitch"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11630903 "kStopFlagAggregation"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonAggregation"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11631031 "kStopFlagSuspend"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonSuspend"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11631159 "kStopFlagBufferAdd"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonBufferAdd"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11631287 "kStopFlagChannelTypeChange"
	  public type class_ref 3070903 // QueueStopFlag
	  init_value " 1 << kStopReasonChannelTypeChange"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11631415 "kStopFlagInvalid"
	  public type class_ref 3070903 // QueueStopFlag
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 42570167 "StartTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42570295 "StopTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42570423 "WakeQueuesIfNeeded"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check if queues need to be woken. If so, and we haven't woken them
 too recently, then wake them now."
      end

      operation 42570551 "CheckAreQueuesStuck"
	private return_type class_ref 2810935 // uint32_t
	nparams 1
	  param in name "queue_states" explicit_type "std::vector<QueueState>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check |queue_states|, to determine if any queues are stuck.
 Returns a bitmask of QueueStopFlags. A flag will be set if
 any of the queues has that flag set, and is non-empty.
 A return value if 0 indicates no queues are stuck."
      end

      operation 42570679 "ParseQueueState"
	class_operation private explicit_return_type "std::vector<QueueState>"
	nparams 1
	  param in name "state_string" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42570807 "GetFlagForReason"
	class_operation private return_type class_ref 3070903 // QueueStopFlag
	nparams 1
	  param in name "reason" type class_ref 3070775 // QueueStopReason
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11631543 "time_"
	private explicit_type "Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " for mocking in tests"
      end

      classrelation 6459703 // dispatcher_ (<unidirectional association>)
	relation 6459703 --->
	  a role_name "dispatcher_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6459703 // dispatcher_ (<unidirectional association>)
	  b parent class_ref 2968375 // EventDispatcher
      end

      attribute 11631671 "link_name_"
	const_attribute private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11631799 "queue_length_limit_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11631927 "on_repair_callback_"
	private explicit_type "base::Closure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6459831 // metrics_ (<unidirectional association>)
	relation 6459831 --->
	  a role_name "metrics_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6459831 // metrics_ (<unidirectional association>)
	  b parent class_ref 2968503 // Metrics
      end

      attribute 11632055 "phy_name_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632183 "last_woke_queues_monotonic_seconds_"
	private explicit_type "time_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632311 "is_running_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632439 "have_ever_read_queue_state_file_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632567 "queue_state_file_path_"
	private explicit_type "base::FilePath"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632695 "wake_queues_file_path_"
	private explicit_type "base::FilePath"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632823 "check_queues_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11632951 "is_device_connected_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6459959 // weak_ptr_factory_ (<directional composition>)
	relation 6459959 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_ptr_factory_" private
	    comment " keep last"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6459959 // weak_ptr_factory_ (<directional composition>)
	  b parent class_ref 3070519 // Mac80211Monitor
      end
    end

    class 3071031 "MockMac80211Monitor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460087 // <generalisation>
	relation 6460087 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460087 // <generalisation>
	  b parent class_ref 3070519 // Mac80211Monitor
      end

      operation 42570935 "MockMac80211Monitor"
	public explicit_return_type ""
	nparams 5
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param in name "link_name" explicit_type "std::string"
	  param in name "queue_length_limit" explicit_type "size_t"
	  param in name "on_repair_callback" explicit_type "base::Closure"
	  param inout name "metrics" type class_ref 2968503 // Metrics
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42571063 "~MockMac80211Monitor"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3071159 "MockScanSession"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460215 // <generalisation>
	relation 6460215 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460215 // <generalisation>
	  b parent class_ref 3071287 // ScanSession
      end

      operation 42571191 "MockScanSession"
	public explicit_return_type ""
	nparams 10
	  param inout name "netlink_manager" type class_ref 2983607 // NetlinkManager
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param in name "previous_frequencies" type class_ref 3071415 // FrequencyCountList
	  param in name "available_frequencies" explicit_type "std::set<uint16_t>"
	  param in name "ifindex" type class_ref 2810935 // uint32_t
	  param in name "fractions" explicit_type "FractionList"
	  param in name "min_frequencies" explicit_type "int"
	  param in name "max_frequencies" explicit_type "int"
	  param in name "on_scan_failed" explicit_type "OnScanFailed"
	  param inout name "metrics" type class_ref 2968503 // Metrics
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} & ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, const ${t5} & ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42571319 "~MockScanSession"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3071287 "ScanSession"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " |ScanSession| sends requests to the kernel to scan WiFi frequencies for
 access points.  The sequence for a single scan is as follows:

   +-------------+                                                +--------+
   | ScanSession |                                                | Kernel |
   +---+---------+                                                +-----+--+
       |--- NL80211_CMD_TRIGGER_SCAN ---------------------------------->|
       |<-- NL80211_CMD_TRIGGER_SCAN (broadcast) -----------------------|
       |<-- NL80211_CMD_NEW_SCAN_RESULTS (broadcast) -------------------|
       |--- NL80211_CMD_GET_SCAN -------------------------------------->|
       |<-- NL80211_CMD_NEW_SCAN_RESULTS (reply, unicast, NLM_F_MULTI) -|
       |<-- NL80211_CMD_NEW_SCAN_RESULTS (reply, unicast, NLM_F_MULTI) -|
       |                               ...                              |
       |<-- NL80211_CMD_NEW_SCAN_RESULTS (reply, unicast, NLM_F_MULTI) -|
       |                                                                |

 Scanning WiFi frequencies for access points takes a long time (on the order
 of 100ms per frequency and the kernel doesn't return the result until the
 answers are ready for all the frequencies in the batch).  Given this,
 scanning all frequencies in one batch takes a very long time.

 A ScanSession is used to distribute a scan across multiple requests (hoping
 that a successful connection will result from an early request thereby
 obviating the need for the remainder of the scan).  A ScanSession can be
 used as follows (note, this is shown as synchronous code for clarity
 but it really should be implemented as asynchronous code):

 ScanSession::FractionList scan_fractions;
 scan_fractions.push_back(<some value>);
 ...
 scan_fractions.push_back(<some value>);
 ScanSession scan_session(netlink_manager_, dispatcher(),
                          frequencies_seen_ever, all_scan_frequencies_,
                          interface_index(), scan_fractions,
                          kMinScanFrequencies, kMaxScanFrequencies,
                          on_scan_failed);
 while (scan_session.HasMoreFrequencies()) {
   scan_session.InitiateScan();
   // Wait for scan results.  In the current WiFi code, this means wait
   // until |WiFi::ScanDone| is called.
 }"
      class 3072439 "OnScanFailed"
	visibility package stereotype "typedef" explicit_base_type "base::Closure"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3072567 "FractionList"
	visibility package stereotype "typedef" explicit_base_type "std::deque<float>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 11633079 "kAllFrequencies"
	class_attribute const_attribute public explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used as a fraction in |FractionList| to indicate that future scans in
 this session should not be limited to a subset of the frequencies we've
 already seen.
"
      end

      operation 42572983 "ScanSession"
	public explicit_return_type ""
	nparams 10
	  param inout name "netlink_manager" type class_ref 2983607 // NetlinkManager
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param in name "previous_frequencies" type class_ref 3071415 // FrequencyCountList
	  param in name "available_frequencies" explicit_type "std::set<uint16_t>"
	  param in name "ifindex" type class_ref 2810935 // uint32_t
	  param in name "fractions" type class_ref 3072567 // FractionList
	  param in name "min_frequencies" explicit_type "size_t"
	  param in name "max_frequencies" explicit_type "size_t"
	  param in name "on_scan_failed" type class_ref 3072439 // OnScanFailed
	  param inout name "metrics" type class_ref 2968503 // Metrics
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} & ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, const ${t5} & ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Sets up a new progressive scan session.  Uses |netlink_manager| to send
 NL80211_CMD_TRIGGER_SCAN messages to the kernel (uses |dispatcher| to
 reissue those commands if a send request returns EBUSY).  Multiple scans
 for APs on wifi device |ifindex| are issued (one for each call to
 |InitiateScan|) on wifi frequencies taken from the union of unique
 frequencies in |previous_frequencies| and |available_frequencies| (most
 commonly seen frequencies before less commonly seen ones followed by
 never-before seen frequencies, the latter in an unspecified order).

 Each scan takes a greater percentile (described by the values in
 |fractions|) of the previously seen frequencies (but no less than
 |min_frequencies| and no more than |max_frequencies|).  After all
 previously seen frequencies have been requested, each |InitiateScan|
 scans the next |max_frequencies| until all |available_frequencies| have
 been exhausted.

 If a scan request to the kernel returns an error, |on_scan_failed| is
 called.  The caller can reissue the scan by calling |ReInitiateScan| or
 abort the scan session by deleting the |ScanSession| object."
      end

      operation 42573111 "~ScanSession"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42573239 "HasMoreFrequencies"
	const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if |ScanSession| contains unscanned frequencies."
      end

      operation 42573367 "AddSsid"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "ssid" explicit_type "ByteString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds an SSID to the list of things for which to scan.  Useful for hidden
 SSIDs."
      end

      operation 42573495 "InitiateScan"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start a wifi scan of the next set of frequencies (derived from the
 constructor's parameters) after saving those frequencies for the potential
 need to reinitiate a scan."
      end

      operation 42573623 "ReInitiateScan"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Re-issues the previous scan (i.e., it uses the same frequency list as the
 previous scan).  Other classes may use this when |on_scan_failed| is
 called.  Called by |OnTriggerScanResponse| when the previous attempt to do
 a scan fails."
      end

      extra_member 215095 "friend"
	
	cpp "
  friend class ScanSessionTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 215223 "friend"
	
	cpp "  friend class WiFiObjectTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 11633207 "kScanRetryDelayMilliseconds"
	class_attribute const_attribute private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Milliseconds to wait before retrying a failed scan.
"
      end

      attribute 11633335 "kScanRetryCount"
	class_attribute const_attribute private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of times to retry a failed scan before giving up and calling
 |on_scan_failed_|.
"
      end

      operation 42573751 "CompareFrequencyCount"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param in name "first" type class_ref 3072695 // FrequencyCount
	  param in name "second" type class_ref 3072695 // FrequencyCount
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Assists with sorting the |previous_frequencies| passed to the
 constructor."
      end

      operation 42573879 "GetScanFrequencies"
	cpp_virtual private explicit_return_type "std::vector<uint16_t>"
	nparams 3
	  param in name "scan_fraction" explicit_type "float"
	  param in name "min_frequencies" explicit_type "size_t"
	  param in name "max_frequencies" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " |GetScanFrequencies| gets the next set of WiFi scan frequencies.  Returns
 at least |min_frequencies| (unless fewer frequencies remain from previous
 calls) and no more than |max_frequencies|.  Inside these constraints,
 |GetScanFrequencies| tries to return at least the number of frequencies
 required to reach the connection fraction |scan_fraction| out of the total
 number of previous connections.  For example, the first call requesting
 33.3% will return the minimum number frequencies that add up to _at least_
 the 33.3rd percentile of frequencies to which we've successfully connected
 in the past.  The next call of 33.3% returns the minimum number of
 frequencies required so that the total of the frequencies returned are _at
 least_ the 66.6th percentile of the frequencies to which we've successfully
 connected.

 For example, say we've connected to 3 frequencies before:
  freq a,count=10; freq b,count=5; freq c,count=5.

  GetScanFrequencies(.50,2,10) // Returns a & b (|a| reaches %ile but |b| is
                               // required to meet the minimum).
  GetScanFrequencies(.51,2,10) // Returns c & 9 frequencies from the list
                               // of frequencies to which we've never
                               // connected."
      end

      operation 42574007 "DoScan"
	private explicit_return_type "void"
	nparams 1
	  param in name "scan_frequencies" explicit_type "std::vector<uint16_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Does the real work of initiating a scan by sending an
 NL80211_CMD_TRIGGER_SCAN message to the kernel and installing a handler for
 any response (which only happens in the error case)."
      end

      operation 42574135 "OnTriggerScanResponse"
	private explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "Nl80211Message"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles any unicast response to NL80211_CMD_TRIGGER_SCAN (which is,
 likely, an error -- when things work, we get an
 NL80211_CMD_NEW_SCAN_RESULTS broadcast message)."
      end

      operation 42574263 "OnTriggerScanErrorResponse"
	private explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "NetlinkManager::AuxilliaryMessageType"
	  param in name "netlink_message" explicit_type "NetlinkMessage"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42574391 "ReportEbusyTime"
	private explicit_return_type "void"
	nparams 1
	  param in name "log_level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42574519 "ReportResults"
	private explicit_return_type "void"
	nparams 1
	  param in name "log_level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Logs the results of the scan."
      end

      classrelation 6461111 // weak_ptr_factory_ (<directional composition>)
	relation 6461111 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_ptr_factory_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461111 // weak_ptr_factory_ (<directional composition>)
	  b parent class_ref 3071287 // ScanSession
      end

      classrelation 6461239 // netlink_manager_ (<unidirectional association>)
	relation 6461239 --->
	  a role_name "netlink_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461239 // netlink_manager_ (<unidirectional association>)
	  b parent class_ref 2983607 // NetlinkManager
      end

      classrelation 6461367 // dispatcher_ (<unidirectional association>)
	relation 6461367 --->
	  a role_name "dispatcher_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461367 // dispatcher_ (<unidirectional association>)
	  b parent class_ref 2968375 // EventDispatcher
      end

      classrelation 6461495 // frequency_list_ (<directional composition>)
	relation 6461495 *-->
	  a role_name "frequency_list_" private
	    comment " List of frequencies, sorted by the number of successful connections for
 each frequency.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461495 // frequency_list_ (<directional composition>)
	  b parent class_ref 3071415 // FrequencyCountList
      end

      attribute 11633463 "total_connections_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11633591 "total_connects_provided_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11633719 "total_fraction_wanted_"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11633847 "current_scan_frequencies_"
	private explicit_type "uint16_t"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6461623 // wifi_interface_index_ (<directional composition>)
	relation 6461623 *-->
	  a role_name "wifi_interface_index_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461623 // wifi_interface_index_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11633975 "ssids_"
	private explicit_type "ByteString, bool(*)(const ByteString&, const ByteString&)"
	stereotype "std::set"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6461751 // fractions_ (<directional composition>)
	relation 6461751 *-->
	  a role_name "fractions_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461751 // fractions_ (<directional composition>)
	  b parent class_ref 3072567 // FractionList
      end

      attribute 11634103 "min_frequencies_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11634231 "max_frequencies_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6461879 // on_scan_failed_ (<directional composition>)
	relation 6461879 *-->
	  a role_name "on_scan_failed_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6461879 // on_scan_failed_ (<directional composition>)
	  b parent class_ref 3072439 // OnScanFailed
      end

      attribute 11634359 "scan_tries_left_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11634487 "found_error_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11634615 "original_frequency_count_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Statistics gathering.
"
      end

      classrelation 6462007 // ebusy_timer_ (<directional composition>)
	relation 6462007 *-->
	  a role_name "ebusy_timer_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462007 // ebusy_timer_ (<directional composition>)
	  b parent class_ref 3001783 // Timer
      end

      classrelation 6462135 // metrics_ (<unidirectional association>)
	relation 6462135 --->
	  a role_name "metrics_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462135 // metrics_ (<unidirectional association>)
	  b parent class_ref 2968503 // Metrics
      end
    end

    class 3071543 "MockTDLSManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460343 // <generalisation>
	relation 6460343 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460343 // <generalisation>
	  b parent class_ref 3071671 // TDLSManager
      end

      operation 42571447 "MockTDLSManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42571575 "~MockTDLSManager"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3071671 "TDLSManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Manage TDLS peers for the specified interface |interface_name|."
      operation 42574647 "TDLSManager"
	public explicit_return_type ""
	nparams 3
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "supplicant_interface_proxy" type class_ref 2978487 // SupplicantInterfaceProxyInterface
	  param in name "interface_name" explicit_type "std::string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, const ${t2} & ${p2}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42574775 "~TDLSManager"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42574903 "PerformOperation"
	cpp_virtual public explicit_return_type "std::string"
	nparams 3
	  param in name "peer_mac_address" explicit_type "std::string"
	  param in name "operation" explicit_type "std::string"
	  param inout name "error" type class_ref 2964663 // Error
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Perform TDLS |operation| on |peer|."
      end

      operation 42575031 "OnDiscoverResponseReceived"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "peer_mac_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when a discover response for |peer_mac_address| is received."
      end

      operation 42575159 "interface_name"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return interface_name_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 215351 "friend"
	
	cpp "
  friend class TDLSManagerTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 3072823 "PeerDiscoveryState"
	visibility package stereotype "enum_class"
	cpp_decl "${comment}enum class ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11634743 "kNone"
	  public type class_ref 3072823 // PeerDiscoveryState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11634871 "kRequestSent"
	  public type class_ref 3072823 // PeerDiscoveryState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11634999 "kResponseReceived"
	  public type class_ref 3072823 // PeerDiscoveryState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      attribute 11635127 "kPeerDiscoveryCleanupTimeoutSeconds"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 42575287 "DiscoverPeer"
	private explicit_return_type "bool"
	nparams 1
	  param in name "peer_mac_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Discover TDLS service on a remote |peer_mac_address|.  Returns true if
 operation is initiated successfully."
      end

      operation 42575415 "SetupPeer"
	private explicit_return_type "bool"
	nparams 1
	  param in name "peer_mac_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup a TDLS pairing with |peer_mac_address|.  Returns true if operation is
 initiated successfully."
      end

      operation 42575543 "TearDownPeer"
	private explicit_return_type "bool"
	nparams 1
	  param in name "peer_mac_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tear down the TDLS pairing with |peer|.  Returns true if operation is
 initiated successfully."
      end

      operation 42575671 "PeerStatus"
	private explicit_return_type "std::string"
	nparams 1
	  param in name "peer_mac_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a string indicating the TDLS status with |peer_mac_address|."
      end

      operation 42575799 "StartPeerDiscoveryCleanupTimer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start the timer to delete any peer entries stored in our peer discovery
 map."
      end

      operation 42575927 "PeerDiscoveryCleanup"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Timeout handler to delete any peer entries from our peer discovery map."
      end

      operation 42576055 "CheckDiscoveryState"
	private return_type class_ref 3072823 // PeerDiscoveryState
	nparams 1
	  param in name "peer_mac_address" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the TDLS discover status for this peer"
      end

      attribute 11635255 "peer_discovery_cleanup_callback_"
	private explicit_type "base::CancelableClosure"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Executes when the TDLS peer discovery cleanup timer expires.
"
      end

      classrelation 6462263 // peer_discovery_state_ (<directional composition>)
	relation 6462263 *-->
	  stereotype "std::map"
	  a role_name "peer_discovery_state_" private
	    comment " Maps peer to its discovery state.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<std::string,${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462263 // peer_discovery_state_ (<directional composition>)
	  b parent class_ref 3072823 // PeerDiscoveryState
      end

      classrelation 6462391 // dispatcher_ (<unidirectional association>)
	relation 6462391 --->
	  a role_name "dispatcher_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462391 // dispatcher_ (<unidirectional association>)
	  b parent class_ref 2968375 // EventDispatcher
      end

      classrelation 6462519 // supplicant_interface_proxy_ (<unidirectional association>)
	relation 6462519 --->
	  a role_name "supplicant_interface_proxy_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6462519 // supplicant_interface_proxy_ (<unidirectional association>)
	  b parent class_ref 2978487 // SupplicantInterfaceProxyInterface
      end

      attribute 11635383 "interface_name_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3071799 "MockWakeOnWiFi"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460471 // <generalisation>
	relation 6460471 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460471 // <generalisation>
	  b parent class_ref 3000375 // WakeOnWiFi
      end

      operation 42571703 "MockWakeOnWiFi"
	public explicit_return_type ""
	nparams 3
	  param inout name "netlink_manager" type class_ref 2983607 // NetlinkManager
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42571831 "~MockWakeOnWiFi"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3071927 "MockWiFi"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460599 // <generalisation>
	relation 6460599 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460599 // <generalisation>
	  b parent class_ref 3016631 // WiFi
      end

      operation 42571959 "MockWiFi"
	public explicit_return_type ""
	nparams 7
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	  param inout name "manager" type class_ref 2977207 // Manager
	  param in name "link_name" explicit_type "std::string"
	  param in name "address" explicit_type "std::string"
	  param in name "interface_index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, ${t6} ${p6}${v6}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, const ${t4} & ${p4}, const ${t5} & ${p5}, ${t6} ${p6}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42572087 "~MockWiFi"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3072055 "MockWiFiDriverHal"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460727 // <generalisation>
	relation 6460727 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460727 // <generalisation>
	  b parent class_ref 2994487 // WiFiDriverHal
      end

      operation 42572215 "MockWiFiDriverHal"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42572343 "~MockWiFiDriverHal"
	cpp_override cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end
    end

    class 3072183 "MockWiFiProvider"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460855 // <generalisation>
	relation 6460855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460855 // <generalisation>
	  b parent class_ref 2984887 // WiFiProvider
      end

      operation 42572471 "MockWiFiProvider"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42572599 "~MockWiFiProvider"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3072311 "MockWiFiService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6460983 // <generalisation>
	relation 6460983 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6460983 // <generalisation>
	  b parent class_ref 3018807 // WiFiService
      end

      operation 42572727 "MockWiFiService"
	public explicit_return_type ""
	nparams 9
	  param inout name "control_interface" type class_ref 2972599 // ControlInterface
	  param inout name "dispatcher" type class_ref 2968375 // EventDispatcher
	  param inout name "metrics" type class_ref 2968503 // Metrics
	  param inout name "manager" type class_ref 2977207 // Manager
	  param inout name "provider" type class_ref 2984887 // WiFiProvider
	  param in name "ssid" explicit_type "std::vector<uint8_t>"
	  param in name "mode" explicit_type "std::string"
	  param in name "security" explicit_type "std::string"
	  param in name "hidden_ssid" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, const ${t5} & ${p5}, const ${t6} & ${p6}, const ${t7} & ${p7}, ${t8} ${p8}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42572855 "~MockWiFiService"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3074103 "typedef104"
      visibility package stereotype "typedef" explicit_base_type "base::RefCounted<WiFiEndpoint>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 271159 "wifi"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1537207 "callback80211_metrics"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3070391 // typedef103
	class_ref 2983735 // Callback80211Metrics
      end
    end

    artifact 1537335 "mac80211_monitor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3070519 // Mac80211Monitor
      end
    end

    artifact 1537463 "mock_mac80211_monitor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071031 // MockMac80211Monitor
      end
    end

    artifact 1537591 "mock_scan_session"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071159 // MockScanSession
      end
    end

    artifact 1537719 "mock_tdls_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071543 // MockTDLSManager
      end
    end

    artifact 1537847 "mock_wake_on_wifi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071799 // MockWakeOnWiFi
      end
    end

    artifact 1537975 "mock_wifi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071927 // MockWiFi
      end
    end

    artifact 1538103 "mock_wifi_driver_hal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3072055 // MockWiFiDriverHal
      end
    end

    artifact 1538231 "mock_wifi_provider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3072183 // MockWiFiProvider
      end
    end

    artifact 1538359 "mock_wifi_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3072311 // MockWiFiService
      end
    end

    artifact 1538487 "scan_session"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071287 // ScanSession
      end
    end

    artifact 1538615 "tdls_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3071671 // TDLSManager
      end
    end

    artifact 1538743 "wake_on_wifi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3000375 // WakeOnWiFi
      end
    end

    artifact 1538871 "wifi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3016631 // WiFi
      end
    end

    artifact 1538999 "wifi_driver_hal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2994487 // WiFiDriverHal
      end
    end

    artifact 1539127 "wifi_endpoint"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3074103 // typedef104
	class_ref 2978999 // WiFiEndpoint
      end
    end

    artifact 1539255 "wifi_provider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2984887 // WiFiProvider
      end
    end

    artifact 1539383 "wifi_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3018807 // WiFiService
      end
    end
  end
end
