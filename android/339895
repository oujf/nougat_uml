format 213
"android-base" // android::system::core::base::include::android-base
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/base/include/android-base/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/base/include/android-base/"
  cpp_namespace "android::base"
  classview 310839 "android-base"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3082679 "LogSeverity"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 11675831 "VERBOSE"
	public type class_ref 3082679 // LogSeverity
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11675959 "DEBUG"
	public type class_ref 3082679 // LogSeverity
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11676087 "INFO"
	public type class_ref 3082679 // LogSeverity
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11676215 "WARNING"
	public type class_ref 3082679 // LogSeverity
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11676343 "ERROR"
	public type class_ref 3082679 // LogSeverity
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11676471 "FATAL"
	public type class_ref 3082679 // LogSeverity
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3082807 "LogId"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 11676599 "DEFAULT"
	public type class_ref 3082807 // LogId
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11676727 "MAIN"
	public type class_ref 3082807 // LogId
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11676855 "SYSTEM"
	public type class_ref 3082807 // LogId
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3082935 "LogFunction"
      visibility package stereotype "typedef" base_type class_ref 3082679 // LogSeverity
      cpp_decl "${comment}typedef std::function<void(LogId,${type},const char*,const char*,unsigned int,const char*)> ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6480055 // <dependency>
	relation 6480055 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 6480055 // <dependency>
	  b parent class_ref 3082679 // LogSeverity
      end
    end

    class 3083063 "LogdLogger"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " We expose this even though it is the default because a user that wants to
 override the default log buffer will have to construct this themselves."
      operation 42641463 "LogdLogger"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "default_log_id" type class_ref 3082807 // LogId
	    defaultvalue "android::base::MAIN"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)} : default_log_id_(default_log_id) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42641591 "operator ()"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param in name "id" type class_ref 3082807 // LogId
	  param in name "severity" type class_ref 3082679 // LogSeverity
	  param in name "tag" explicit_type "char"
	  param in name "file" explicit_type "char"
	  param in name "line" explicit_type "uint"
	  param in name "message" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, const ${t3} * ${p3}, ${t4} ${p4}, const ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 6480183 // default_log_id_ (<directional composition>)
	relation 6480183 *-->
	  a role_name "default_log_id_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6480183 // default_log_id_ (<directional composition>)
	  b parent class_ref 3082807 // LogId
      end
    end

    class 3083191 "ErrnoRestorer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 42641719 "ErrnoRestorer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : saved_errno_(errno) {
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42641847 "~ErrnoRestorer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
    errno = saved_errno_;
  };
"
	
	
	
	
      end

      operation 42641975 "operator bool"
	const cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return true;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Allow this object to be used as part of && operation."
      end

      attribute 11676983 "saved_errno_"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3083319 "EagerEvaluator"
      visibility package stereotype "struct"
      nformals 2
      formal name "LHS" type "typename" explicit_default_value ""
        explicit_extends ""
      formal name "RHS" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Temporary class created to evaluate the LHS and RHS, used with
 MakeEagerEvaluator to infer the types of LHS and RHS."
      operation 42642103 "EagerEvaluator"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "l" explicit_type "LHS"
	  param in name "r" explicit_type "RHS"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract} : lhs(l), rhs(r) {
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      attribute 11677111 "lhs"
	public explicit_type "LHS"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11677239 "rhs"
	public explicit_type "RHS"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3083447 "LogMessage"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A LogMessage is a temporarily scoped object used by LOG and the unlikely part
 of a CHECK. The destructor will abort if the severity is FATAL."
      operation 42642231 "LogMessage"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 5
	  param in name "file" explicit_type "char"
	  param in name "line" explicit_type "uint"
	  param in name "id" type class_ref 3082807 // LogId
	  param in name "severity" type class_ref 3082679 // LogSeverity
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}
    : data_(new LogMessageData(file, line, id, severity, error)) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42642359 "~LogMessage"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 42642487 "stream"
	preserve_cpp_body_indent public explicit_return_type "std::ostream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the stream associated with the message, the LogMessage performs
 output when it goes out of scope."
      end

      operation 42642615 "LogLine"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 5
	  param in name "file" explicit_type "char"
	  param in name "line" explicit_type "uint"
	  param in name "id" type class_ref 3082807 // LogId
	  param in name "severity" type class_ref 3082679 // LogSeverity
	  param in name "message" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, const ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The routine that performs the actual logging."
      end

      classrelation 6480311 // data_ (<directional composition>)
	relation 6480311 *-->
	  stereotype "std::unique_ptr"
	  a role_name "data_" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6480311 // data_ (<directional composition>)
	  b parent class_ref 3083575 // LogMessageData
      end
    end

    class 3083703 "ScopedLogSeverity"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Allows to temporarily change the minimum severity level for logging."
      operation 42642743 "ScopedLogSeverity"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "level" type class_ref 3082679 // LogSeverity
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42642871 "~ScopedLogSeverity"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      classrelation 6480439 // old_ (<directional composition>)
	relation 6480439 *-->
	  a role_name "old_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6480439 // old_ (<directional composition>)
	  b parent class_ref 3082679 // LogSeverity
      end
    end

    class 3084087 "DefaultCloser"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " DO NOT INCLUDE OTHER LIBBASE HEADERS!
 This file gets used in libbinder, and libbinder is used everywhere.
 Including other headers from libbase frequently results in inclusion of
 android-base/macros.h, which causes macro collisions.
 Container for a file descriptor that automatically closes the descriptor as
 it goes out of scope.

      unique_fd ufd(open(\"/some/path\", \"r\"));
      if (ufd.get() == -1) return error;

      // Do something useful, possibly including 'return'.

      return 0; // Descriptor is closed for you.

 unique_fd is also known as ScopedFd/ScopedFD/scoped_fd; mentioned here to help
 you find this class if you're searching for one of those names."
      operation 42643767 "Close"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    // Even if close(2) fails with EINTR, the fd will have been closed.
    // Using TEMP_FAILURE_RETRY will either lead to EBADF or closing someone
    // else's fd.
    // http://lkml.indiana.edu/hypermail/linux/kernel/0509.1/0877.html
    ::close(fd);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 271927 "android-base"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1542967 "logging"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3082679 // LogSeverity
	class_ref 3082807 // LogId
	class_ref 3082935 // LogFunction
	class_ref 3083063 // LogdLogger
	class_ref 3083191 // ErrnoRestorer
	class_ref 3083319 // EagerEvaluator
	class_ref 3083447 // LogMessage
	class_ref 3083703 // ScopedLogSeverity
      end
    end

    artifact 1543223 "unique_fd"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3084087 // DefaultCloser
      end
    end
  end

  package_ref 340023 // android-base
end
