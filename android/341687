format 213
"gatekeeperd" // android::system::core::gatekeeperd
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/gatekeeperd/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/gatekeeperd/"
  cpp_namespace "android"
  classview 312631 "gatekeeperd"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3090743 "IGateKeeperService"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This must be kept manually in sync with frameworks/base's IGateKeeperService.aidl
"
      classrelation 6484023 // <generalisation>
	relation 6484023 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6484023 // <generalisation>
	  b parent class_ref 3090871 // typedef111
      end

      class 3090999 "anonymous128"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11694135 "ENROLL"
	  public type class_ref 3090999 // anonymous128
	  init_value " IBinder::FIRST_CALL_TRANSACTION + 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11694263 "VERIFY"
	  public type class_ref 3090999 // anonymous128
	  init_value " IBinder::FIRST_CALL_TRANSACTION + 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11694391 "VERIFY_CHALLENGE"
	  public type class_ref 3090999 // anonymous128
	  init_value " IBinder::FIRST_CALL_TRANSACTION + 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11694519 "GET_SECURE_USER_ID"
	  public type class_ref 3090999 // anonymous128
	  init_value " IBinder::FIRST_CALL_TRANSACTION + 3"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11694647 "CLEAR_SECURE_USER_ID"
	  public type class_ref 3090999 // anonymous128
	  init_value " IBinder::FIRST_CALL_TRANSACTION + 4"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3091127 "anonymous129"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11694775 "GATEKEEPER_RESPONSE_OK"
	  public type class_ref 3091127 // anonymous129
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11694903 "GATEKEEPER_RESPONSE_RETRY"
	  public type class_ref 3091127 // anonymous129
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 11695031 "GATEKEEPER_RESPONSE_ERROR"
	  public type class_ref 3091127 // anonymous129
	  init_value " -1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 6484151 // descriptor (<directional composition>)
	relation 6484151 *-->
	  a role_name "descriptor" init_value "(\"android.service.gatekeeper.IGateKeeperService\")" class_relation const_relation public
	    comment " DECLARE_META_INTERFACE - C++ client interface not needed
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6484151 // descriptor (<directional composition>)
	  b parent class_ref 3024823 // String16
      end

      operation 42668087 "getInterfaceDescriptor"
	preserve_cpp_body_indent const cpp_virtual public return_type class_ref 3024823 // String16
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42668215 "IGateKeeperService"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42668343 "~IGateKeeperService"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 42668471 "enroll"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 9
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "current_password_handle" explicit_type "uint8_t"
	  param in name "current_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "current_password" explicit_type "uint8_t"
	  param in name "current_password_length" type class_ref 2810935 // uint32_t
	  param in name "desired_password" explicit_type "uint8_t"
	  param in name "desired_password_length" type class_ref 2810935 // uint32_t
	  param inout name "enrolled_password_handle" explicit_type "uint8_t"
	  param inout name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enrolls a password with the GateKeeper. Returns 0 on success, negative on failure.
Returns:
- 0 on success
- A timestamp T > 0 if the call has failed due to throttling and should not
  be reattempted until T milliseconds have elapsed
- -1 on failure
"
      end

      operation 42668599 "verify"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 6
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "enrolled_password_handle" explicit_type "uint8_t"
	  param in name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "provided_password" explicit_type "uint8_t"
	  param in name "provided_password_length" type class_ref 2810935 // uint32_t
	  param inout name "request_reenroll" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies a password previously enrolled with the GateKeeper.
Returns:
- 0 on success
- A timestamp T > 0 if the call has failed due to throttling and should not
  be reattempted until T milliseconds have elapsed
- -1 on failure
"
      end

      operation 42668727 "verifyChallenge"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 9
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "challenge" explicit_type "uint64_t"
	  param in name "enrolled_password_handle" explicit_type "uint8_t"
	  param in name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "provided_password" explicit_type "uint8_t"
	  param in name "provided_password_length" type class_ref 2810935 // uint32_t
	  param inout name "auth_token" explicit_type "uint8_t"
	  param inout name "auth_token_length" type class_ref 2810935 // uint32_t
	  param inout name "request_reenroll" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * * ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies a password previously enrolled with the GateKeeper.
Returns:
- 0 on success
- A timestamp T > 0 if the call has failed due to throttling and should not
  be reattempted until T milliseconds have elapsed
- -1 on failure
"
      end

      operation 42668855 "getSecureUserId"
	abstract cpp_virtual public explicit_return_type "uint64_t"
	nparams 1
	  param in name "uid" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the secure user ID for the provided android user
"
      end

      operation 42668983 "clearSecureUserId"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "uid" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the secure user ID associated with the user.
"
      end
    end

    class 3090871 "typedef111"
      visibility package stereotype "typedef" explicit_base_type "IInterface"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3091255 "BnGateKeeperService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ----------------------------------------------------------------------------"
      classrelation 6484279 // <generalisation>
	relation 6484279 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6484279 // <generalisation>
	  b parent class_ref 3091383 // typedef112
      end

      operation 42669111 "onTransact"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 2847799 // status_t
	nparams 4
	  param in name "code" type class_ref 2810935 // uint32_t
	  param in name "data" explicit_type "Parcel"
	  param inout name "reply" explicit_type "Parcel"
	  param in name "flags" type class_ref 2810935 // uint32_t
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3091383 "typedef112"
      visibility package stereotype "typedef" explicit_base_type "BnInterface<IGateKeeperService>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3091511 "IUserManager"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Communication channel to UserManager
"
      classrelation 6484407 // <generalisation>
	relation 6484407 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6484407 // <generalisation>
	  b parent class_ref 3090871 // typedef111
      end

      class 3091639 "anonymous130"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 11695159 "GET_CREDENTIAL_OWNER_PROFILE"
	  public type class_ref 3091639 // anonymous130
	  init_value " IBinder::FIRST_CALL_TRANSACTION + 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 42669239 "getCredentialOwnerProfile"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "user_id" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3092791 "SoftGateKeeperDevice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Software based GateKeeper implementation
"
      operation 42671287 "SoftGateKeeperDevice"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
        impl_.reset(new SoftGateKeeper());
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42671415 "enroll"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 9
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "current_password_handle" explicit_type "uint8_t"
	  param in name "current_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "current_password" explicit_type "uint8_t"
	  param in name "current_password_length" type class_ref 2810935 // uint32_t
	  param in name "desired_password" explicit_type "uint8_t"
	  param in name "desired_password_length" type class_ref 2810935 // uint32_t
	  param inout name "enrolled_password_handle" explicit_type "uint8_t"
	  param inout name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} ${p4}, const ${t5} * ${p5}, ${t6} ${p6}, ${t7} * * ${p7}, ${t8} * ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wrappers to translate the gatekeeper HAL API to the Kegyuard Messages API.

Enrolls password_payload, which should be derived from a user selected pin or password,
with the authentication factor private key used only for enrolling authentication
factor data.

Returns: 0 on success or an error code less than 0 on error.
On error, enrolled_password_handle will not be allocated.
"
      end

      operation 42671543 "verify"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 9
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "challenge" explicit_type "uint64_t"
	  param in name "enrolled_password_handle" explicit_type "uint8_t"
	  param in name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "provided_password" explicit_type "uint8_t"
	  param in name "provided_password_length" type class_ref 2810935 // uint32_t
	  param inout name "auth_token" explicit_type "uint8_t"
	  param inout name "auth_token_length" type class_ref 2810935 // uint32_t
	  param inout name "request_reenroll" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * * ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, ${t3} ${p3}, const ${t4} * ${p4}, ${t5} ${p5}, ${t6} * * ${p6}, ${t7} * ${p7}, ${t8} * ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies provided_password matches enrolled_password_handle.

Implementations of this module may retain the result of this call
to attest to the recency of authentication.

On success, writes the address of a verification token to auth_token,
usable to attest password verification to other trusted services. Clients
may pass NULL for this value.

Returns: 0 on success or an error code less than 0 on error
On error, verification token will not be allocated
"
      end

      classrelation 6485559 // impl_ (<directional composition>)
	relation 6485559 *-->
	  stereotype "UniquePtr"
	  a role_name "impl_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6485559 // impl_ (<directional composition>)
	  b parent class_ref 3091895 // SoftGateKeeper
      end
    end

    class 3423927 "GateKeeperProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6863671 // <generalisation>
	relation 6863671 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6863671 // <generalisation>
	  b parent class_ref 3091255 // BnGateKeeperService
      end

      operation 43781943 "GateKeeperProxy"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
        int ret = hw_get_module_by_class(GATEKEEPER_HARDWARE_MODULE_ID, NULL, &module);
        device = NULL;

        if (ret < 0) {
            ALOGW(\"falling back to software GateKeeper\");
            soft_device.reset(new SoftGateKeeperDevice());
        } else {
            ret = gatekeeper_open(module, &device);
            if (ret < 0)
                LOG_ALWAYS_FATAL_IF(ret < 0, \"Unable to open GateKeeper HAL\");
        }

        if (mark_cold_boot()) {
            ALOGI(\"cold boot: clearing state\");
            if (device != NULL && device->delete_all_users != NULL) {
                device->delete_all_users(device);
            }
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43782071 "~GateKeeperProxy"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
        if (device) gatekeeper_close(device);
    };
"
	
	
	
	
      end

      operation 43782199 "store_sid"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "sid" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        char filename[21];
        sprintf(filename, \"%u\", uid);
        int fd = open(filename, O_WRONLY | O_TRUNC | O_CREAT, S_IRUSR | S_IWUSR);
        if (fd < 0) {
            ALOGE(\"could not open file: %s: %s\", filename, strerror(errno));
            return;
        }
        write(fd, &sid, sizeof(sid));
        close(fd);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43782327 "mark_cold_boot"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        const char *filename = \".coldboot\";
        if (access(filename, F_OK) == -1) {
            int fd = open(filename, O_WRONLY | O_TRUNC | O_CREAT, S_IRUSR | S_IWUSR);
            if (fd < 0) {
                ALOGE(\"could not open file: %s : %s\", filename, strerror(errno));
                return false;
            }
            close(fd);
            return true;
        }
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43782455 "maybe_store_sid"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "sid" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        char filename[21];
        sprintf(filename, \"%u\", uid);
        if (access(filename, F_OK) == -1) {
            store_sid(uid, sid);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43782583 "read_sid"
	cpp_inline public explicit_return_type "uint64_t"
	nparams 1
	  param in name "uid" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        char filename[21];
        uint64_t sid;
        sprintf(filename, \"%u\", uid);
        int fd = open(filename, O_RDONLY);
        if (fd < 0) return 0;
        read(fd, &sid, sizeof(sid));
        close(fd);
        return sid;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43782711 "clear_sid"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "uid" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        char filename[21];
        sprintf(filename, \"%u\", uid);
        if (remove(filename) < 0) {
            ALOGE(\"%s: could not remove file [%s], attempting 0 write\", __func__, strerror(errno));
            store_sid(uid, 0);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43782839 "enroll"
	cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 9
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "current_password_handle" explicit_type "uint8_t"
	  param in name "current_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "current_password" explicit_type "uint8_t"
	  param in name "current_password_length" type class_ref 2810935 // uint32_t
	  param in name "desired_password" explicit_type "uint8_t"
	  param in name "desired_password_length" type class_ref 2810935 // uint32_t
	  param inout name "enrolled_password_handle" explicit_type "uint8_t"
	  param inout name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract} {
        IPCThreadState* ipc = IPCThreadState::self();
        const int calling_pid = ipc->getCallingPid();
        const int calling_uid = ipc->getCallingUid();
        if (!PermissionCache::checkPermission(KEYGUARD_PERMISSION, calling_pid, calling_uid)) {
            return PERMISSION_DENIED;
        }

        // need a desired password to enroll
        if (desired_password_length == 0) return -EINVAL;

        int ret;
        if (device) {
            const gatekeeper::password_handle_t *handle =
                    reinterpret_cast<const gatekeeper::password_handle_t *>(current_password_handle);

            if (handle != NULL && handle->version != 0 && !handle->hardware_backed) {
                // handle is being re-enrolled from a software version. HAL probably won't accept
                // the handle as valid, so we nullify it and enroll from scratch
                current_password_handle = NULL;
                current_password_handle_length = 0;
                current_password = NULL;
                current_password_length = 0;
            }

            ret = device->enroll(device, uid, current_password_handle, current_password_handle_length,
                    current_password, current_password_length,
                    desired_password, desired_password_length,
                    enrolled_password_handle, enrolled_password_handle_length);
        } else {
            ret = soft_device->enroll(uid,
                    current_password_handle, current_password_handle_length,
                    current_password, current_password_length,
                    desired_password, desired_password_length,
                    enrolled_password_handle, enrolled_password_handle_length);
        }

        if (ret == 0) {
            gatekeeper::password_handle_t *handle =
                    reinterpret_cast<gatekeeper::password_handle_t *>(*enrolled_password_handle);
            store_sid(uid, handle->user_id);
            bool rr;

            // immediately verify this password so we don't ask the user to enter it again
            // if they just created it.
            verify(uid, *enrolled_password_handle, sizeof(password_handle_t), desired_password,
                    desired_password_length, &rr);
        }

        return ret;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43782967 "verify"
	cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 6
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "enrolled_password_handle" explicit_type "uint8_t"
	  param in name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "provided_password" explicit_type "uint8_t"
	  param in name "provided_password_length" type class_ref 2810935 // uint32_t
	  param inout name "request_reenroll" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        uint8_t *auth_token;
        uint32_t auth_token_length;
        return verifyChallenge(uid, 0, enrolled_password_handle, enrolled_password_handle_length,
                provided_password, provided_password_length,
                &auth_token, &auth_token_length, request_reenroll);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43783095 "verifyChallenge"
	cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 9
	  param in name "uid" type class_ref 2810935 // uint32_t
	  param in name "challenge" explicit_type "uint64_t"
	  param in name "enrolled_password_handle" explicit_type "uint8_t"
	  param in name "enrolled_password_handle_length" type class_ref 2810935 // uint32_t
	  param in name "provided_password" explicit_type "uint8_t"
	  param in name "provided_password_length" type class_ref 2810935 // uint32_t
	  param inout name "auth_token" explicit_type "uint8_t"
	  param inout name "auth_token_length" type class_ref 2810935 // uint32_t
	  param inout name "request_reenroll" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * * ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract} {
        IPCThreadState* ipc = IPCThreadState::self();
        const int calling_pid = ipc->getCallingPid();
        const int calling_uid = ipc->getCallingUid();
        if (!PermissionCache::checkPermission(KEYGUARD_PERMISSION, calling_pid, calling_uid)) {
            return PERMISSION_DENIED;
        }

        // can't verify if we're missing either param
        if ((enrolled_password_handle_length | provided_password_length) == 0)
            return -EINVAL;

        int ret;
        if (device) {
            const gatekeeper::password_handle_t *handle =
                    reinterpret_cast<const gatekeeper::password_handle_t *>(enrolled_password_handle);
            // handle version 0 does not have hardware backed flag, and thus cannot be upgraded to
            // a HAL if there was none before
            if (handle->version == 0 || handle->hardware_backed) {
                ret = device->verify(device, uid, challenge,
                    enrolled_password_handle, enrolled_password_handle_length,
                    provided_password, provided_password_length, auth_token, auth_token_length,
                    request_reenroll);
            } else {
                // upgrade scenario, a HAL has been added to this device where there was none before
                SoftGateKeeperDevice soft_dev;
                ret = soft_dev.verify(uid, challenge,
                    enrolled_password_handle, enrolled_password_handle_length,
                    provided_password, provided_password_length, auth_token, auth_token_length,
                    request_reenroll);

                if (ret == 0) {
                    // success! re-enroll with HAL
                    *request_reenroll = true;
                }
            }
        } else {
            ret = soft_device->verify(uid, challenge,
                enrolled_password_handle, enrolled_password_handle_length,
                provided_password, provided_password_length, auth_token, auth_token_length,
                request_reenroll);
        }

        if (ret == 0 && *auth_token != NULL && *auth_token_length > 0) {
            // TODO: cache service?
            sp<IServiceManager> sm = defaultServiceManager();
            sp<IBinder> binder = sm->getService(String16(\"android.security.keystore\"));
            sp<IKeystoreService> service = interface_cast<IKeystoreService>(binder);
            if (service != NULL) {
                status_t ret = service->addAuthToken(*auth_token, *auth_token_length);
                if (ret != ResponseCode::NO_ERROR) {
                    ALOGE(\"Falure sending auth token to KeyStore: %d\", ret);
                }
            } else {
                ALOGE(\"Unable to communicate with KeyStore\");
            }
        }

        if (ret == 0) {
            maybe_store_sid(uid, reinterpret_cast<const gatekeeper::password_handle_t *>(
                        enrolled_password_handle)->user_id);
        }

        return ret;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43783223 "getSecureUserId"
	cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 1
	  param in name "uid" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        uint64_t sid = read_sid(uid);
         if (sid == 0) {
            // might be a work profile, look up the parent
            sp<IServiceManager> sm = defaultServiceManager();
            sp<IBinder> binder = sm->getService(String16(\"user\"));
            sp<IUserManager> um = interface_cast<IUserManager>(binder);
            int32_t parent = um->getCredentialOwnerProfile(uid);
            if (parent < 0) {
                return 0;
            } else if (parent != (int32_t) uid) {
                return read_sid(parent);
            }
        }
        return sid;

    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43783351 "clearSecureUserId"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "uid" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        IPCThreadState* ipc = IPCThreadState::self();
        const int calling_pid = ipc->getCallingPid();
        const int calling_uid = ipc->getCallingUid();
        if (!PermissionCache::checkPermission(KEYGUARD_PERMISSION, calling_pid, calling_uid)) {
            ALOGE(\"%s: permission denied for [%d:%d]\", __func__, calling_pid, calling_uid);
            return;
        }
        clear_sid(uid);

        if (device != NULL && device->delete_user != NULL) {
            device->delete_user(device, uid);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43783479 "dump"
	cpp_virtual cpp_inline public return_type class_ref 2847799 // status_t
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        IPCThreadState* ipc = IPCThreadState::self();
        const int pid = ipc->getCallingPid();
        const int uid = ipc->getCallingUid();
        if (!PermissionCache::checkPermission(DUMP_PERMISSION, pid, uid)) {
            return PERMISSION_DENIED;
        }

        if (device == NULL) {
            const char *result = \"Device not available\";
            write(fd, result, strlen(result) + 1);
        } else {
            const char *result = \"OK\";
            write(fd, result, strlen(result) + 1);
        }

        return NO_ERROR;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12482615 "device"
	private explicit_type "gatekeeper_device_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6863799 // soft_device (<directional composition>)
	relation 6863799 *-->
	  stereotype "UniquePtr"
	  a role_name "soft_device" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6863799 // soft_device (<directional composition>)
	  b parent class_ref 3092791 // SoftGateKeeperDevice
      end

      attribute 12482743 "module"
	const_attribute private explicit_type "hw_module_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3424055 "BpUserManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6863927 // <generalisation>
	relation 6863927 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6863927 // <generalisation>
	  b parent class_ref 3424183 // typedef227
      end

      operation 43783607 "BpUserManager"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract} :
            BpInterface<IUserManager>(impl) {
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43783735 "getCredentialOwnerProfile"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "user_id" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IUserManager::getInterfaceDescriptor());
        data.writeInt32(user_id);
        status_t rc = remote()->transact(GET_CREDENTIAL_OWNER_PROFILE, data, &reply, 0);
        if (rc != NO_ERROR) {
            ALOGE(\"%s: failed (%d)\\n\", __func__, rc);
            return -1;
        }

        int32_t exception = reply.readExceptionCode();
        if (exception != 0) {
            ALOGE(\"%s: got exception (%d)\\n\", __func__, exception);
            return -1;
        }

        return reply.readInt32();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3424183 "typedef227"
      visibility package stereotype "typedef" explicit_base_type "BpInterface<IUserManager>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 273207 "gatekeeperd"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1546039 "IGateKeeperService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3090871 // typedef111
	class_ref 3090743 // IGateKeeperService
	class_ref 3091383 // typedef112
	class_ref 3091255 // BnGateKeeperService
      end
    end

    artifact 1546167 "IUserManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3091511 // IUserManager
      end
    end

    artifact 1546423 "SoftGateKeeperDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3092791 // SoftGateKeeperDevice
      end
    end

    artifact 1657783 "GateKeeperProxy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3423927 // GateKeeperProxy
      end
    end

    artifact 1658039 "typedef227"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3424183 // typedef227
      end
    end

    artifact 1658167 "BpUserManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3424055 // BpUserManager
      end
    end
  end

  package_ref 341815 // gatekeeper

  package_ref 369847 // gatekeeperd
end
