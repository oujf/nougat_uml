format 213
"system" // android::system::core::include::system
  revision 2
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/include/system/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/include/system/"
  classview 314295 "system"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3103415 "anonymous131"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A set of bit masks for specifying how the received preview frames are
handled before the previewCallback() call.

The least significant 3 bits of an \"int\" value are used for this purpose:

..... 0 0 0
      ^ ^ ^
      | | |---------> determine whether the callback is enabled or not
      | |-----------> determine whether the callback is one-shot or not
      |-------------> determine whether the frame is copied out or not

WARNING: When a frame is sent directly without copying, it is the frame
receiver's responsiblity to make sure that the frame data won't get
corrupted by subsequent preview frames filled by the camera. This flag is
recommended only when copying out data brings significant performance price
and the handling/processing of the received frame data is always faster than
the preview frame rate so that data corruption won't occur.

For instance,
1. 0x00 disables the callback. In this case, copy out and one shot bits
   are ignored.
2. 0x01 enables a callback without copying out the received frames. A
   typical use case is the Camcorder application to avoid making costly
   frame copies.
3. 0x05 is enabling a callback with frame copied out repeatedly. A typical
   use case is the Camera application.
4. 0x07 is enabling a callback with frame copied out only once. A typical
   use case is the Barcode scanner application.

 Typical use cases 
 msgType in notifyCallback and dataCallback functions "
      attribute 11721271 "CAMERA_MSG_ERROR"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0001"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11721399 "CAMERA_MSG_SHUTTER"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0002"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11721527 "CAMERA_MSG_FOCUS"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0004"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11721655 "CAMERA_MSG_ZOOM"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0008"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11721783 "CAMERA_MSG_PREVIEW_FRAME"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0010"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11721911 "CAMERA_MSG_VIDEO_FRAME"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0020"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722039 "CAMERA_MSG_POSTVIEW_FRAME"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0040"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722167 "CAMERA_MSG_RAW_IMAGE"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0080"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722295 "CAMERA_MSG_COMPRESSED_IMAGE"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0100"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722423 "CAMERA_MSG_RAW_IMAGE_NOTIFY"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0200"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722551 "CAMERA_MSG_PREVIEW_METADATA"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0400"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722679 "CAMERA_MSG_FOCUS_MOVE"
	public type class_ref 3103415 // anonymous131
	init_value " 0x0800"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11722807 "CAMERA_MSG_ALL_MSGS"
	public type class_ref 3103415 // anonymous131
	init_value " 0xFFFF
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3103543 "anonymous132"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " notifyCallback
 notifyCallback
 notifyCallback
 notifyCallback
 dataCallback
 data_timestamp_callback
 dataCallback
 dataCallback
 dataCallback
 dataCallback
 Preview frame metadata. This can be combined with
 CAMERA_MSG_PREVIEW_FRAME in dataCallback. For example, the apps can
 request FRAME and METADATA. Or the apps can request only FRAME or only
 METADATA.
 dataCallback
 Notify on autofocus start and stop. This is useful in continuous
 autofocus - FOCUS_MODE_CONTINUOUS_VIDEO and FOCUS_MODE_CONTINUOUS_PICTURE.
 notifyCallback
 cmdType in sendCommand functions "
      attribute 11722935 "CAMERA_CMD_START_SMOOTH_ZOOM"
	public type class_ref 3103543 // anonymous132
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723063 "CAMERA_CMD_STOP_SMOOTH_ZOOM"
	public type class_ref 3103543 // anonymous132
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723191 "CAMERA_CMD_SET_DISPLAY_ORIENTATION"
	public type class_ref 3103543 // anonymous132
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723319 "CAMERA_CMD_ENABLE_SHUTTER_SOUND"
	public type class_ref 3103543 // anonymous132
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723447 "CAMERA_CMD_PLAY_RECORDING_SOUND"
	public type class_ref 3103543 // anonymous132
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723575 "CAMERA_CMD_START_FACE_DETECTION"
	public type class_ref 3103543 // anonymous132
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723703 "CAMERA_CMD_STOP_FACE_DETECTION"
	public type class_ref 3103543 // anonymous132
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723831 "CAMERA_CMD_ENABLE_FOCUS_MOVE_MSG"
	public type class_ref 3103543 // anonymous132
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11723959 "CAMERA_CMD_PING"
	public type class_ref 3103543 // anonymous132
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11724087 "CAMERA_CMD_SET_VIDEO_BUFFER_COUNT"
	public type class_ref 3103543 // anonymous132
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11724215 "CAMERA_CMD_SET_VIDEO_FORMAT"
	public type class_ref 3103543 // anonymous132
	init_value " 11
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3103671 "anonymous133"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Set the clockwise rotation of preview display (setPreviewDisplay) in
degrees. This affects the preview frames and the picture displayed after
snapshot. This method is useful for portrait mode applications. Note
that preview display of front-facing cameras is flipped horizontally
before the rotation, that is, the image is reflected along the central
vertical axis of the camera sensor. So the users can see themselves as
looking into a mirror.

This does not affect the order of byte array of
CAMERA_MSG_PREVIEW_FRAME, CAMERA_MSG_VIDEO_FRAME,
CAMERA_MSG_POSTVIEW_FRAME, CAMERA_MSG_RAW_IMAGE, or
CAMERA_MSG_COMPRESSED_IMAGE. This is allowed to be set during preview
since API level 14.


cmdType to disable/enable shutter sound. In sendCommand passing arg1 =
0 will disable, while passing arg1 = 1 will enable the shutter sound.

 cmdType to play recording sound 

Start the face detection. This should be called after preview is started.
The camera will notify the listener of CAMERA_MSG_FACE and the detected
faces in the preview frame. The detected faces may be the same as the
previous ones. Apps should call CAMERA_CMD_STOP_FACE_DETECTION to stop
the face detection. This method is supported if CameraParameters
KEY_MAX_NUM_HW_DETECTED_FACES or KEY_MAX_NUM_SW_DETECTED_FACES is
bigger than 0. Hardware and software face detection should not be running
at the same time. If the face detection has started, apps should not send
this again.

In hardware face detection mode, CameraParameters KEY_WHITE_BALANCE,
KEY_FOCUS_AREAS and KEY_METERING_AREAS have no effect.

arg1 is the face detection type. It can be CAMERA_FACE_DETECTION_HW or
CAMERA_FACE_DETECTION_SW. If the type of face detection requested is not
supported, the HAL must return BAD_VALUE.


Stop the face detection.


Enable/disable focus move callback (CAMERA_MSG_FOCUS_MOVE). Passing
arg1 = 0 will disable, while passing arg1 = 1 will enable the callback.


Ping camera service to see if camera hardware is released.

When any camera method returns error, the client can use ping command
to see if the camera has been taken away by other clients. If the result
is NO_ERROR, it means the camera hardware is not released. If the result
is not NO_ERROR, the camera has been released and the existing client
can silently finish itself or show a dialog.


Configure the number of video buffers used for recording. The intended
video buffer count for recording is passed as arg1, which must be
greater than 0. This command must be sent before recording is started.
This command returns INVALID_OPERATION error if it is sent after video
recording is started, or the command is not supported at all. This
command also returns a BAD_VALUE error if the intended video buffer
count is non-positive or too big to be realized.


Configure an explicit format to use for video recording metadata mode.
This can be used to switch the format from the
default IMPLEMENTATION_DEFINED gralloc format to some other
device-supported format, and the default dataspace from the BT_709 color
space to some other device-supported dataspace. arg1 is the HAL pixel
format, and arg2 is the HAL dataSpace. This command returns
INVALID_OPERATION error if it is sent after video recording is started,
or the command is not supported at all.

If the gralloc format is set to a format other than
IMPLEMENTATION_DEFINED, then HALv3 devices will use gralloc usage flags
of SW_READ_OFTEN.

 camera fatal errors "
      attribute 11724343 "CAMERA_ERROR_UNKNOWN"
	public type class_ref 3103671 // anonymous133
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11724471 "CAMERA_ERROR_RELEASED"
	public type class_ref 3103671 // anonymous133
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11724599 "CAMERA_ERROR_SERVER_DIED"
	public type class_ref 3103671 // anonymous133
	init_value " 100
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3103799 "anonymous134"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Camera was released because another client has connected to the camera.
The original client should call Camera::disconnect immediately after
getting this notification. Otherwise, the camera will be released by
camera service in a short time. The client should not call any method
(except disconnect and sending CAMERA_CMD_PING) after getting this.
"
      attribute 11724727 "CAMERA_FACING_BACK"
	public type class_ref 3103799 // anonymous134
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11724855 "CAMERA_FACING_FRONT"
	public type class_ref 3103799 // anonymous134
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11724983 "CAMERA_FACING_EXTERNAL"
	public type class_ref 3103799 // anonymous134
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3103927 "anonymous135"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The facing of the camera is opposite to that of the screen. 
 The facing of the camera is the same as that of the screen. 

The facing of the camera is not fixed relative to the screen.
The cameras with this facing are external cameras, e.g. USB cameras.
"
      attribute 11725111 "CAMERA_FACE_DETECTION_HW"
	public type class_ref 3103927 // anonymous135
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11725239 "CAMERA_FACE_DETECTION_SW"
	public type class_ref 3103927 // anonymous135
	init_value " 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3104055 "camera_face"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Hardware face detection. It does not use much CPU. 

Software face detection. It uses some CPU. Applications must use
Camera.setPreviewTexture for preview in this mode.


The information of a face from camera face detection.
"
      attribute 11725367 "rect"
	public explicit_type "int32_t"
	multiplicity "[4]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bounds of the face [left, top, right, bottom]. (-1000, -1000) represents
the top-left of the camera field of view, and (1000, 1000) represents the
bottom-right of the field of view. The width and height cannot be 0 or
negative. This is supported by both hardware and software face detection.

The direction is relative to the sensor orientation, that is, what the
sensor sees. The direction is not affected by the rotation or mirroring
of CAMERA_CMD_SET_DISPLAY_ORIENTATION.

"
      end

      attribute 11725495 "score"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The confidence level of the face. The range is 1 to 100. 100 is the
highest confidence. This is supported by both hardware and software
face detection.

"
      end

      attribute 11725623 "id"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An unique id per face while the face is visible to the tracker. If
the face leaves the field-of-view and comes back, it will get a new
id. If the value is 0, id is not supported.

"
      end

      attribute 11725751 "left_eye"
	public explicit_type "int32_t"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The coordinates of the center of the left eye. The range is -1000 to
1000. -2000, -2000 if this is not supported.

"
      end

      attribute 11725879 "right_eye"
	public explicit_type "int32_t"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The coordinates of the center of the right eye. The range is -1000 to
1000. -2000, -2000 if this is not supported.

"
      end

      attribute 11726007 "mouth"
	public explicit_type "int32_t"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The coordinates of the center of the mouth. The range is -1000 to 1000.
-2000, -2000 if this is not supported.

"
      end
    end

    class 3104183 "camera_face_t"
      visibility package stereotype "typedef" base_type class_ref 3104055 // camera_face
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3104311 "camera_frame_metadata"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The metadata of the frame data.
"
      attribute 11726135 "number_of_faces"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of detected faces in the frame.

"
      end

      classrelation 6496439 // faces (<unidirectional association>)
	relation 6496439 --->
	  a role_name "faces" public
	    comment "An array of the detected faces. The length is number_of_faces.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6496439 // faces (<unidirectional association>)
	  b parent class_ref 3104183 // camera_face_t
      end
    end

    class 3104439 "camera_frame_metadata_t"
      visibility package stereotype "typedef" base_type class_ref 3104311 // camera_frame_metadata
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3104567 "android_pixel_format"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "pixel format definitions
"
      attribute 11726263 "HAL_PIXEL_FORMAT_RGBA_8888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11726391 "HAL_PIXEL_FORMAT_RGBX_8888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11726519 "HAL_PIXEL_FORMAT_RGB_888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11726647 "HAL_PIXEL_FORMAT_RGB_565"
	public type class_ref 3104567 // android_pixel_format
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11726775 "HAL_PIXEL_FORMAT_BGRA_8888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11726903 "HAL_PIXEL_FORMAT_YV12"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x32315659"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727031 "HAL_PIXEL_FORMAT_Y8"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x20203859"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727159 "HAL_PIXEL_FORMAT_Y16"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x20363159"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727287 "HAL_PIXEL_FORMAT_RAW16"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727415 "HAL_PIXEL_FORMAT_RAW10"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x25"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727543 "HAL_PIXEL_FORMAT_RAW12"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x26"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727671 "HAL_PIXEL_FORMAT_RAW_OPAQUE"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x24"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727799 "HAL_PIXEL_FORMAT_BLOB"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x21"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11727927 "HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728055 "HAL_PIXEL_FORMAT_YCbCr_420_888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x23"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728183 "HAL_PIXEL_FORMAT_YCbCr_422_888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x27"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728311 "HAL_PIXEL_FORMAT_YCbCr_444_888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x28"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728439 "HAL_PIXEL_FORMAT_FLEX_RGB_888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x29"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728567 "HAL_PIXEL_FORMAT_FLEX_RGBA_8888"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x2A"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728695 "HAL_PIXEL_FORMAT_YCbCr_422_SP"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728823 "HAL_PIXEL_FORMAT_YCrCb_420_SP"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11728951 "HAL_PIXEL_FORMAT_YCbCr_422_I"
	public type class_ref 3104567 // android_pixel_format
	init_value " 0x14"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3104695 "android_pixel_format_t"
      visibility package stereotype "typedef" base_type class_ref 3104567 // android_pixel_format
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3104823 "android_ycbcr"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "\"linear\" color pixel formats:

When used with ANativeWindow, the dataSpace field describes the color
space of the buffer.

The color space determines, for example, if the formats are linear or
gamma-corrected; or whether any special operations are performed when
reading or writing into a buffer in one of these formats.


0x100 - 0x1FF

This range is reserved for pixel formats that are specific to the HAL
implementation.  Implementations can use any value in this range to
communicate video pixel formats between their HAL modules.  These formats
must not have an alpha channel.  Additionally, an EGLimage created from a
gralloc buffer of one of these formats must be supported for use with the
GL_OES_EGL_image_external OpenGL ES extension.


Android YUV format:

This format is exposed outside of the HAL to software decoders and
applications.  EGLImageKHR must support it in conjunction with the
OES_EGL_image_external extension.

YV12 is a 4:2:0 YCrCb planar format comprised of a WxH Y plane followed
by (W/2) x (H/2) Cr and Cb planes.

This format assumes
- an even width
- an even height
- a horizontal stride multiple of 16 pixels
- a vertical stride equal to the height

  y_size = stride * height
  c_stride = ALIGN(stride/2, 16)
  c_size = c_stride * height/2
  size = y_size + c_size * 2
  cr_offset = y_size
  cb_offset = y_size + c_size

When used with ANativeWindow, the dataSpace field describes the color
space of the buffer.

 YCrCb 4:2:0 Planar

Android Y8 format:

This format is exposed outside of the HAL to the framework.
The expected gralloc usage flags are SW_* and HW_CAMERA_*,
and no other HW_ flags will be used.

Y8 is a YUV planar format comprised of a WxH Y plane,
with each pixel being represented by 8 bits.

It is equivalent to just the Y plane from YV12.

This format assumes
- an even width
- an even height
- a horizontal stride multiple of 16 pixels
- a vertical stride equal to the height

  size = stride * height

When used with ANativeWindow, the dataSpace field describes the color
space of the buffer.


Android Y16 format:

This format is exposed outside of the HAL to the framework.
The expected gralloc usage flags are SW_* and HW_CAMERA_*,
and no other HW_ flags will be used.

Y16 is a YUV planar format comprised of a WxH Y plane,
with each pixel being represented by 16 bits.

It is just like Y8, but has double the bits per pixel (little endian).

This format assumes
- an even width
- an even height
- a horizontal stride multiple of 16 pixels
- a vertical stride equal to the height
- strides are specified in pixels, not in bytes

  size = stride * height * 2

When used with ANativeWindow, the dataSpace field describes the color
space of the buffer, except that dataSpace field
HAL_DATASPACE_DEPTH indicates that this buffer contains a depth
image where each sample is a distance value measured by a depth camera,
plus an associated confidence value.


Android RAW sensor format:

This format is exposed outside of the camera HAL to applications.

RAW16 is a single-channel, 16-bit, little endian format, typically
representing raw Bayer-pattern images from an image sensor, with minimal
processing.

The exact pixel layout of the data in the buffer is sensor-dependent, and
needs to be queried from the camera device.

Generally, not all 16 bits are used; more common values are 10 or 12
bits. If not all bits are used, the lower-order bits are filled first.
All parameters to interpret the raw data (black and white points,
color space, etc) must be queried from the camera device.

This format assumes
- an even width
- an even height
- a horizontal stride multiple of 16 pixels
- a vertical stride equal to the height
- strides are specified in pixels, not in bytes

  size = stride * height * 2

This format must be accepted by the gralloc module when used with the
following usage flags:
   - GRALLOC_USAGE_HW_CAMERA_*
   - GRALLOC_USAGE_SW_*
   - GRALLOC_USAGE_RENDERSCRIPT

When used with ANativeWindow, the dataSpace should be
HAL_DATASPACE_ARBITRARY, as raw image sensor buffers require substantial
extra metadata to define.


Android RAW10 format:

This format is exposed outside of the camera HAL to applications.

RAW10 is a single-channel, 10-bit per pixel, densely packed in each row,
unprocessed format, usually representing raw Bayer-pattern images coming from
an image sensor.

In an image buffer with this format, starting from the first pixel of each
row, each 4 consecutive pixels are packed into 5 bytes (40 bits). Each one
of the first 4 bytes contains the top 8 bits of each pixel, The fifth byte
contains the 2 least significant bits of the 4 pixels, the exact layout data
for each 4 consecutive pixels is illustrated below (Pi[j] stands for the jth
bit of the ith pixel):

         bit 7                                     bit 0
         =====|=====|=====|=====|=====|=====|=====|=====|
Byte 0: |P0[9]|P0[8]|P0[7]|P0[6]|P0[5]|P0[4]|P0[3]|P0[2]|
        |-----|-----|-----|-----|-----|-----|-----|-----|
Byte 1: |P1[9]|P1[8]|P1[7]|P1[6]|P1[5]|P1[4]|P1[3]|P1[2]|
        |-----|-----|-----|-----|-----|-----|-----|-----|
Byte 2: |P2[9]|P2[8]|P2[7]|P2[6]|P2[5]|P2[4]|P2[3]|P2[2]|
        |-----|-----|-----|-----|-----|-----|-----|-----|
Byte 3: |P3[9]|P3[8]|P3[7]|P3[6]|P3[5]|P3[4]|P3[3]|P3[2]|
        |-----|-----|-----|-----|-----|-----|-----|-----|
Byte 4: |P3[1]|P3[0]|P2[1]|P2[0]|P1[1]|P1[0]|P0[1]|P0[0]|
         ===============================================

This format assumes
- a width multiple of 4 pixels
- an even height
- a vertical stride equal to the height
- strides are specified in bytes, not in pixels

  size = stride * height

When stride is equal to width * (10 / 8), there will be no padding bytes at
the end of each row, the entire image data is densely packed. When stride is
larger than width * (10 / 8), padding bytes will be present at the end of each
row (including the last row).

This format must be accepted by the gralloc module when used with the
following usage flags:
   - GRALLOC_USAGE_HW_CAMERA_*
   - GRALLOC_USAGE_SW_*
   - GRALLOC_USAGE_RENDERSCRIPT

When used with ANativeWindow, the dataSpace field should be
HAL_DATASPACE_ARBITRARY, as raw image sensor buffers require substantial
extra metadata to define.


Android RAW12 format:

This format is exposed outside of camera HAL to applications.

RAW12 is a single-channel, 12-bit per pixel, densely packed in each row,
unprocessed format, usually representing raw Bayer-pattern images coming from
an image sensor.

In an image buffer with this format, starting from the first pixel of each
row, each two consecutive pixels are packed into 3 bytes (24 bits). The first
and second byte contains the top 8 bits of first and second pixel. The third
byte contains the 4 least significant bits of the two pixels, the exact layout
data for each two consecutive pixels is illustrated below (Pi[j] stands for
the jth bit of the ith pixel):

          bit 7                                            bit 0
         ======|======|======|======|======|======|======|======|
Byte 0: |P0[11]|P0[10]|P0[ 9]|P0[ 8]|P0[ 7]|P0[ 6]|P0[ 5]|P0[ 4]|
        |------|------|------|------|------|------|------|------|
Byte 1: |P1[11]|P1[10]|P1[ 9]|P1[ 8]|P1[ 7]|P1[ 6]|P1[ 5]|P1[ 4]|
        |------|------|------|------|------|------|------|------|
Byte 2: |P1[ 3]|P1[ 2]|P1[ 1]|P1[ 0]|P0[ 3]|P0[ 2]|P0[ 1]|P0[ 0]|
         =======================================================

This format assumes:
- a width multiple of 4 pixels
- an even height
- a vertical stride equal to the height
- strides are specified in bytes, not in pixels

  size = stride * height

When stride is equal to width * (12 / 8), there will be no padding bytes at
the end of each row, the entire image data is densely packed. When stride is
larger than width * (12 / 8), padding bytes will be present at the end of
each row (including the last row).

This format must be accepted by the gralloc module when used with the
following usage flags:
   - GRALLOC_USAGE_HW_CAMERA_*
   - GRALLOC_USAGE_SW_*
   - GRALLOC_USAGE_RENDERSCRIPT

When used with ANativeWindow, the dataSpace field should be
HAL_DATASPACE_ARBITRARY, as raw image sensor buffers require substantial
extra metadata to define.


Android opaque RAW format:

This format is exposed outside of the camera HAL to applications.

RAW_OPAQUE is a format for unprocessed raw image buffers coming from an
image sensor. The actual structure of buffers of this format is
implementation-dependent.

This format must be accepted by the gralloc module when used with the
following usage flags:
   - GRALLOC_USAGE_HW_CAMERA_*
   - GRALLOC_USAGE_SW_*
   - GRALLOC_USAGE_RENDERSCRIPT

When used with ANativeWindow, the dataSpace field should be
HAL_DATASPACE_ARBITRARY, as raw image sensor buffers require substantial
extra metadata to define.


Android binary blob graphics buffer format:

This format is used to carry task-specific data which does not have a
standard image structure. The details of the format are left to the two
endpoints.

A typical use case is for transporting JPEG-compressed images from the
Camera HAL to the framework or to applications.

Buffers of this format must have a height of 1, and width equal to their
size in bytes.

When used with ANativeWindow, the mapping of the dataSpace field to
buffer contents for BLOB is as follows:

 dataSpace value               | Buffer contents
-------------------------------+-----------------------------------------
 HAL_DATASPACE_JFIF            | An encoded JPEG image
 HAL_DATASPACE_DEPTH           | An android_depth_points buffer
 Other                         | Unsupported



Android format indicating that the choice of format is entirely up to the
device-specific Gralloc implementation.

The Gralloc implementation should examine the usage bits passed in when
allocating a buffer with this format, and it should derive the pixel
format from those usage flags.  This format will never be used with any
of the GRALLOC_USAGE_SW_* usage flags.

If a buffer of this format is to be used as an OpenGL ES texture, the
framework will assume that sampling the texture will always return an
alpha value of 1.0 (i.e. the buffer contains only opaque pixel values).

When used with ANativeWindow, the dataSpace field describes the color
space of the buffer.


Android flexible YCbCr 4:2:0 formats

This format allows platforms to use an efficient YCbCr/YCrCb 4:2:0
buffer layout, while still describing the general format in a
layout-independent manner.  While called YCbCr, it can be
used to describe formats with either chromatic ordering, as well as
whole planar or semiplanar layouts.

struct android_ycbcr (below) is the the struct used to describe it.

This format must be accepted by the gralloc module when
USAGE_SW_WRITE_* or USAGE_SW_READ_* are set.

This format is locked for use by gralloc's (*lock_ycbcr) method, and
locking with the (*lock) method will return an error.

When used with ANativeWindow, the dataSpace field describes the color
space of the buffer.


Android flexible YCbCr 4:2:2 formats

This format allows platforms to use an efficient YCbCr/YCrCb 4:2:2
buffer layout, while still describing the general format in a
layout-independent manner.  While called YCbCr, it can be
used to describe formats with either chromatic ordering, as well as
whole planar or semiplanar layouts.

This format is currently only used by SW readable buffers
produced by MediaCodecs, so the gralloc module can ignore this format.


Android flexible YCbCr 4:4:4 formats

This format allows platforms to use an efficient YCbCr/YCrCb 4:4:4
buffer layout, while still describing the general format in a
layout-independent manner.  While called YCbCr, it can be
used to describe formats with either chromatic ordering, as well as
whole planar or semiplanar layouts.

This format is currently only used by SW readable buffers
produced by MediaCodecs, so the gralloc module can ignore this format.


Android flexible RGB 888 formats

This format allows platforms to use an efficient RGB/BGR/RGBX/BGRX
buffer layout, while still describing the general format in a
layout-independent manner.  While called RGB, it can be
used to describe formats with either color ordering and optional
padding, as well as whole planar layout.

This format is currently only used by SW readable buffers
produced by MediaCodecs, so the gralloc module can ignore this format.


Android flexible RGBA 8888 formats

This format allows platforms to use an efficient RGBA/BGRA/ARGB/ABGR
buffer layout, while still describing the general format in a
layout-independent manner.  While called RGBA, it can be
used to describe formats with any of the component orderings, as
well as whole planar layout.

This format is currently only used by SW readable buffers
produced by MediaCodecs, so the gralloc module can ignore this format.

 Legacy formats (deprecated), used by ImageFormat.java 
 NV16
 NV21
 YUY2

Structure for describing YCbCr formats for consumption by applications.
This is used with HAL_PIXEL_FORMAT_YCbCr_*_888.

Buffer chroma subsampling is defined in the format.
e.g. HAL_PIXEL_FORMAT_YCbCr_420_888 has subsampling 4:2:0.

Buffers must have a 8 bit depth.

@y, @cb, and @cr point to the first byte of their respective planes.

Stride describes the distance in bytes from the first value of one row of
the image to the first value of the next row.  It includes the width of the
image plus padding.
@ystride is the stride of the luma plane.
@cstride is the stride of the chroma planes.

@chroma_step is the distance in bytes from one chroma pixel value to the
next.  This is 2 bytes for semiplanar (because chroma values are interleaved
and each chroma value is one byte) and 1 for planar.
"
      attribute 11729079 "y"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11729207 "cb"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11729335 "cr"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11729463 "ystride"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11729591 "cstride"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11729719 "chroma_step"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6496567 // reserved (<directional composition>)
	relation 6496567 *-->
	  a role_name "reserved" multiplicity "[8]" public
	    comment " reserved for future use, set to 0 by gralloc's (*lock_ycbcr)() 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6496567 // reserved (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end
    end

    class 3104951 "android_depth_points"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Structure used to define depth point clouds for format HAL_PIXEL_FORMAT_BLOB
with dataSpace value of HAL_DATASPACE_DEPTH.
When locking a native buffer of the above format and dataSpace value,
the vaddr pointer can be cast to this structure.

A variable-length list of (x,y,z, confidence) 3D points, as floats.  (x, y,
z) represents a measured point's position, with the coordinate system defined
by the data source.  Confidence represents the estimated likelihood that this
measurement is correct. It is between 0.f and 1.f, inclusive, with 1.f ==
100% confidence.

@num_points is the number of points in the list

@xyz_points is the flexible array of floating-point values.
  It contains (num_points) * 4 floats.

  For example:
    android_depth_points d = get_depth_buffer();
    struct {
      float x; float y; float z; float confidence;
    } firstPoint, lastPoint;

    firstPoint.x = d.xyzc_points[0];
    firstPoint.y = d.xyzc_points[1];
    firstPoint.z = d.xyzc_points[2];
    firstPoint.confidence = d.xyzc_points[3];
    lastPoint.x = d.xyzc_points[(d.num_points - 1) * 4 + 0];
    lastPoint.y = d.xyzc_points[(d.num_points - 1) * 4 + 1];
    lastPoint.z = d.xyzc_points[(d.num_points - 1) * 4 + 2];
    lastPoint.confidence = d.xyzc_points[(d.num_points - 1) * 4 + 3];
"
      classrelation 6496695 // num_points (<directional composition>)
	relation 6496695 *-->
	  a role_name "num_points" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6496695 // num_points (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      classrelation 6496823 // reserved (<directional composition>)
	relation 6496823 *-->
	  a role_name "reserved" multiplicity "[8]" public
	    comment " reserved for future use, set to 0 by gralloc's (*lock)() 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6496823 // reserved (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11729847 "xyzc_points"
	public explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3105079 "android_transform"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Transformation definitions

IMPORTANT NOTE:
HAL_TRANSFORM_ROT_90 is applied CLOCKWISE and AFTER HAL_TRANSFORM_FLIP_{H|V}.

"
      attribute 11729975 "HAL_TRANSFORM_FLIP_H"
	public type class_ref 3105079 // android_transform
	init_value " 0x01"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730103 "HAL_TRANSFORM_FLIP_V"
	public type class_ref 3105079 // android_transform
	init_value " 0x02"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730231 "HAL_TRANSFORM_ROT_90"
	public type class_ref 3105079 // android_transform
	init_value " 0x04"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730359 "HAL_TRANSFORM_ROT_180"
	public type class_ref 3105079 // android_transform
	init_value " 0x03"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730487 "HAL_TRANSFORM_ROT_270"
	public type class_ref 3105079 // android_transform
	init_value " 0x07"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730615 "HAL_TRANSFORM_RESERVED"
	public type class_ref 3105079 // android_transform
	init_value " 0x08"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3105207 "android_transform_t"
      visibility package stereotype "typedef" base_type class_ref 3105079 // android_transform
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3105335 "android_dataspace"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " flip source image horizontally (around the vertical axis) 
 flip source image vertically (around the horizontal axis)
 rotate source image 90 degrees clockwise 
 rotate source image 180 degrees 
 rotate source image 270 degrees clockwise 
 don't use. see system/window.h 

Dataspace Definitions
======================

Dataspace is the definition of how pixel values should be interpreted.

For many formats, this is the colorspace of the image data, which includes
primaries (including white point) and the transfer characteristic function,
which describes both gamma curve and numeric range (within the bit depth).

Other dataspaces include depth measurement data from a depth camera.

A dataspace is comprised of a number of fields.

Version
--------
The top 2 bits represent the revision of the field specification. This is
currently always 0.


bits    31-30 29                      -                          0
       +-----+----------------------------------------------------+
fields | Rev |            Revision specific fields                |
       +-----+----------------------------------------------------+

Field layout for version = 0:
----------------------------

A dataspace is comprised of the following fields:
     Standard
     Transfer function
     Range

bits    31-30 29-27 26 -  22 21 -  16 15             -           0
       +-----+-----+--------+--------+----------------------------+
fields |  0  |Range|Transfer|Standard|    Legacy and custom       |
       +-----+-----+--------+--------+----------------------------+
         VV    RRR   TTTTT    SSSSSS    LLLLLLLL       LLLLLLLL

If range, transfer and standard fields are all 0 (e.g. top 16 bits are
all zeroes), the bottom 16 bits contain either a legacy dataspace value,
or a custom value.
"
      attribute 11730743 "HAL_DATASPACE_UNKNOWN"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730871 "HAL_DATASPACE_ARBITRARY"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11730999 "HAL_DATASPACE_STANDARD_SHIFT"
	public type class_ref 3105335 // android_dataspace
	init_value " 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731127 "HAL_DATASPACE_STANDARD_MASK"
	public type class_ref 3105335 // android_dataspace
	init_value " 63 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731255 "HAL_DATASPACE_STANDARD_UNSPECIFIED"
	public type class_ref 3105335 // android_dataspace
	init_value " 0 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731383 "HAL_DATASPACE_STANDARD_BT709"
	public type class_ref 3105335 // android_dataspace
	init_value " 1 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731511 "HAL_DATASPACE_STANDARD_BT601_625"
	public type class_ref 3105335 // android_dataspace
	init_value " 2 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731639 "HAL_DATASPACE_STANDARD_BT601_625_UNADJUSTED"
	public type class_ref 3105335 // android_dataspace
	init_value " 3 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731767 "HAL_DATASPACE_STANDARD_BT601_525"
	public type class_ref 3105335 // android_dataspace
	init_value " 4 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11731895 "HAL_DATASPACE_STANDARD_BT601_525_UNADJUSTED"
	public type class_ref 3105335 // android_dataspace
	init_value " 5 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732023 "HAL_DATASPACE_STANDARD_BT2020"
	public type class_ref 3105335 // android_dataspace
	init_value " 6 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732151 "HAL_DATASPACE_STANDARD_BT2020_CONSTANT_LUMINANCE"
	public type class_ref 3105335 // android_dataspace
	init_value " 7 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732279 "HAL_DATASPACE_STANDARD_BT470M"
	public type class_ref 3105335 // android_dataspace
	init_value " 8 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732407 "HAL_DATASPACE_STANDARD_FILM"
	public type class_ref 3105335 // android_dataspace
	init_value " 9 << HAL_DATASPACE_STANDARD_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732535 "HAL_DATASPACE_TRANSFER_SHIFT"
	public type class_ref 3105335 // android_dataspace
	init_value " 22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732663 "HAL_DATASPACE_TRANSFER_MASK"
	public type class_ref 3105335 // android_dataspace
	init_value " 31 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732791 "HAL_DATASPACE_TRANSFER_UNSPECIFIED"
	public type class_ref 3105335 // android_dataspace
	init_value " 0 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11732919 "HAL_DATASPACE_TRANSFER_LINEAR"
	public type class_ref 3105335 // android_dataspace
	init_value " 1 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733047 "HAL_DATASPACE_TRANSFER_SRGB"
	public type class_ref 3105335 // android_dataspace
	init_value " 2 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733175 "HAL_DATASPACE_TRANSFER_SMPTE_170M"
	public type class_ref 3105335 // android_dataspace
	init_value " 3 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733303 "HAL_DATASPACE_TRANSFER_GAMMA2_2"
	public type class_ref 3105335 // android_dataspace
	init_value " 4 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733431 "HAL_DATASPACE_TRANSFER_GAMMA2_8"
	public type class_ref 3105335 // android_dataspace
	init_value " 5 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733559 "HAL_DATASPACE_TRANSFER_ST2084"
	public type class_ref 3105335 // android_dataspace
	init_value " 6 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733687 "HAL_DATASPACE_TRANSFER_HLG"
	public type class_ref 3105335 // android_dataspace
	init_value " 7 << HAL_DATASPACE_TRANSFER_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733815 "HAL_DATASPACE_RANGE_SHIFT"
	public type class_ref 3105335 // android_dataspace
	init_value " 27"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11733943 "HAL_DATASPACE_RANGE_MASK"
	public type class_ref 3105335 // android_dataspace
	init_value " 7 << HAL_DATASPACE_RANGE_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734071 "HAL_DATASPACE_RANGE_UNSPECIFIED"
	public type class_ref 3105335 // android_dataspace
	init_value " 0 << HAL_DATASPACE_RANGE_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734199 "HAL_DATASPACE_RANGE_FULL"
	public type class_ref 3105335 // android_dataspace
	init_value " 1 << HAL_DATASPACE_RANGE_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734327 "HAL_DATASPACE_RANGE_LIMITED"
	public type class_ref 3105335 // android_dataspace
	init_value " 2 << HAL_DATASPACE_RANGE_SHIFT"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734455 "HAL_DATASPACE_SRGB_LINEAR"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x200"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734583 "HAL_DATASPACE_V0_SRGB_LINEAR"
	public type class_ref 3105335 // android_dataspace
	init_value " HAL_DATASPACE_STANDARD_BT709 |
            HAL_DATASPACE_TRANSFER_LINEAR | HAL_DATASPACE_RANGE_FULL"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734711 "HAL_DATASPACE_SRGB"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x201"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734839 "HAL_DATASPACE_V0_SRGB"
	public type class_ref 3105335 // android_dataspace
	init_value " HAL_DATASPACE_STANDARD_BT709 |
            HAL_DATASPACE_TRANSFER_SRGB | HAL_DATASPACE_RANGE_FULL"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11734967 "HAL_DATASPACE_JFIF"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x101"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735095 "HAL_DATASPACE_V0_JFIF"
	public type class_ref 3105335 // android_dataspace
	init_value " HAL_DATASPACE_STANDARD_BT601_625 |
            HAL_DATASPACE_TRANSFER_SMPTE_170M | HAL_DATASPACE_RANGE_FULL"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735223 "HAL_DATASPACE_BT601_625"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x102"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735351 "HAL_DATASPACE_V0_BT601_625"
	public type class_ref 3105335 // android_dataspace
	init_value " HAL_DATASPACE_STANDARD_BT601_625 |
            HAL_DATASPACE_TRANSFER_SMPTE_170M | HAL_DATASPACE_RANGE_LIMITED"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735479 "HAL_DATASPACE_BT601_525"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x103"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735607 "HAL_DATASPACE_V0_BT601_525"
	public type class_ref 3105335 // android_dataspace
	init_value " HAL_DATASPACE_STANDARD_BT601_525 |
            HAL_DATASPACE_TRANSFER_SMPTE_170M | HAL_DATASPACE_RANGE_LIMITED"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735735 "HAL_DATASPACE_BT709"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x104"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735863 "HAL_DATASPACE_V0_BT709"
	public type class_ref 3105335 // android_dataspace
	init_value " HAL_DATASPACE_STANDARD_BT709 |
            HAL_DATASPACE_TRANSFER_SMPTE_170M | HAL_DATASPACE_RANGE_LIMITED"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11735991 "HAL_DATASPACE_DEPTH"
	public type class_ref 3105335 // android_dataspace
	init_value " 0x1000

"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3105463 "android_dataspace_t"
      visibility package stereotype "typedef" base_type class_ref 3105335 // android_dataspace
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3105591 "android_color_transform"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default-assumption data space, when not explicitly specified.

It is safest to assume the buffer is an image with sRGB primaries and
encoding ranges, but the consumer and/or the producer of the data may
simply be using defaults. No automatic gamma transform should be
expected, except for a possible display gamma transform when drawn to a
screen.


Arbitrary dataspace with manually defined characteristics.  Definition
for colorspaces or other meaning must be communicated separately.

This is used when specifying primaries, transfer characteristics,
etc. separately.

A typical use case is in video encoding parameters (e.g. for H.264),
where a colorspace can have separately defined primaries, transfer
characteristics, etc.


Color-description aspects

The following aspects define various characteristics of the color
specification. These represent bitfields, so that a data space value
can specify each of them independently.


Standard aspect

Defines the chromaticity coordinates of the source primaries in terms of
the CIE 1931 definition of x and y specified in ISO 11664-1.

 0x3F

Chromacity coordinates are unknown or are determined by the application.
Implementations shall use the following suggested standards:

All YCbCr formats: BT709 if size is 720p or larger (since most video
                   content is letterboxed this corresponds to width is
                   1280 or greater, or height is 720 or greater).
                   BT601_625 if size is smaller than 720p or is JPEG.
All RGB formats:   BT709.

For all other formats standard is undefined, and implementations should use
an appropriate standard for the data represented.


Primaries:       x       y
 green           0.300   0.600
 blue            0.150   0.060
 red             0.640   0.330
 white (D65)     0.3127  0.3290

Use the unadjusted KR = 0.2126, KB = 0.0722 luminance interpretation
for RGB conversion.


Primaries:       x       y
 green           0.290   0.600
 blue            0.150   0.060
 red             0.640   0.330
 white (D65)     0.3127  0.3290

 KR = 0.299, KB = 0.114. This adjusts the luminance interpretation
 for RGB conversion from the one purely determined by the primaries
 to minimize the color shift into RGB space that uses BT.709
 primaries.


Primaries:       x       y
 green           0.290   0.600
 blue            0.150   0.060
 red             0.640   0.330
 white (D65)     0.3127  0.3290

Use the unadjusted KR = 0.222, KB = 0.071 luminance interpretation
for RGB conversion.


Primaries:       x       y
 green           0.310   0.595
 blue            0.155   0.070
 red             0.630   0.340
 white (D65)     0.3127  0.3290

 KR = 0.299, KB = 0.114. This adjusts the luminance interpretation
 for RGB conversion from the one purely determined by the primaries
 to minimize the color shift into RGB space that uses BT.709
 primaries.


Primaries:       x       y
 green           0.310   0.595
 blue            0.155   0.070
 red             0.630   0.340
 white (D65)     0.3127  0.3290

Use the unadjusted KR = 0.212, KB = 0.087 luminance interpretation
for RGB conversion (as in SMPTE 240M).


Primaries:       x       y
 green           0.170   0.797
 blue            0.131   0.046
 red             0.708   0.292
 white (D65)     0.3127  0.3290

Use the unadjusted KR = 0.2627, KB = 0.0593 luminance interpretation
for RGB conversion.


Primaries:       x       y
 green           0.170   0.797
 blue            0.131   0.046
 red             0.708   0.292
 white (D65)     0.3127  0.3290

Use the unadjusted KR = 0.2627, KB = 0.0593 luminance interpretation
for RGB conversion using the linear domain.


Primaries:       x      y
 green           0.21   0.71
 blue            0.14   0.08
 red             0.67   0.33
 white (C)       0.310  0.316

Use the unadjusted KR = 0.30, KB = 0.11 luminance interpretation
for RGB conversion.


Primaries:       x       y
 green           0.243   0.692
 blue            0.145   0.049
 red             0.681   0.319
 white (C)       0.310   0.316

Use the unadjusted KR = 0.254, KB = 0.068 luminance interpretation
for RGB conversion.


Transfer aspect

Transfer characteristics are the opto-electronic transfer characteristic
at the source as a function of linear optical intensity (luminance).

For digital signals, E corresponds to the recorded value. Normally, the
transfer function is applied in RGB space to each of the R, G and B
components independently. This may result in color shift that can be
minized by applying the transfer function in Lab space only for the L
component. Implementation may apply the transfer function in RGB space
for all pixel formats if desired.

 0x1F

Transfer characteristics are unknown or are determined by the
application.

Implementations should use the following transfer functions:

For YCbCr formats: use HAL_DATASPACE_TRANSFER_SMPTE_170M
For RGB formats: use HAL_DATASPACE_TRANSFER_SRGB

For all other formats transfer function is undefined, and implementations
should use an appropriate standard for the data represented.


Transfer characteristic curve:
 E = L
     L - luminance of image 0 <= L <= 1 for conventional colorimetry
     E - corresponding electrical signal


Transfer characteristic curve:

E = 1.055 * L^(1/2.4) - 0.055  for 0.0031308 <= L <= 1
  = 12.92 * L                  for 0 <= L < 0.0031308
    L - luminance of image 0 <= L <= 1 for conventional colorimetry
    E - corresponding electrical signal


BT.601 525, BT.601 625, BT.709, BT.2020

Transfer characteristic curve:
 E = 1.099 * L ^ 0.45 - 0.099  for 0.018 <= L <= 1
   = 4.500 * L                 for 0 <= L < 0.018
     L - luminance of image 0 <= L <= 1 for conventional colorimetry
     E - corresponding electrical signal


Assumed display gamma 2.2.

Transfer characteristic curve:
 E = L ^ (1/2.2)
     L - luminance of image 0 <= L <= 1 for conventional colorimetry
     E - corresponding electrical signal


 display gamma 2.8.

Transfer characteristic curve:
 E = L ^ (1/2.8)
     L - luminance of image 0 <= L <= 1 for conventional colorimetry
     E - corresponding electrical signal


SMPTE ST 2084

Transfer characteristic curve:
 E = ((c1 + c2 * L^n) / (1 + c3 * L^n)) ^ m
 c1 = c3 - c2 + 1 = 3424 / 4096 = 0.8359375
 c2 = 32 * 2413 / 4096 = 18.8515625
 c3 = 32 * 2392 / 4096 = 18.6875
 m = 128 * 2523 / 4096 = 78.84375
 n = 0.25 * 2610 / 4096 = 0.1593017578125
     L - luminance of image 0 <= L <= 1 for HDR colorimetry.
         L = 1 corresponds to 10000 cd/m2
     E - corresponding electrical signal


ARIB STD-B67 Hybrid Log Gamma

Transfer characteristic curve:
 E = r * L^0.5                 for 0 <= L <= 1
   = a * ln(L - b) + c         for 1 < L
 a = 0.17883277
 b = 0.28466892
 c = 0.55991073
 r = 0.5
     L - luminance of image 0 <= L for HDR colorimetry. L = 1 corresponds
         to reference white level of 100 cd/m2
     E - corresponding electrical signal


Range aspect

Defines the range of values corresponding to the unit range of 0-1.
This is defined for YCbCr only, but can be expanded to RGB space.

 0x7

Range is unknown or are determined by the application.  Implementations
shall use the following suggested ranges:

All YCbCr formats: limited range.
All RGB or RGBA formats (including RAW and Bayer): full range.
All Y formats: full range

For all other formats range is undefined, and implementations should use
an appropriate range for the data represented.


Full range uses all values for Y, Cb and Cr from
0 to 2^b-1, where b is the bit depth of the color format.


Limited range uses values 16/256*2^b to 235/256*2^b for Y, and
1/16*2^b to 15/16*2^b for Cb, Cr, R, G and B, where b is the bit depth of
the color format.

E.g. For 8-bit-depth formats:
Luma (Y) samples should range from 16 to 235, inclusive
Chroma (Cb, Cr) samples should range from 16 to 240, inclusive

For 10-bit-depth formats:
Luma (Y) samples should range from 64 to 940, inclusive
Chroma (Cb, Cr) samples should range from 64 to 960, inclusive


Legacy dataspaces


sRGB linear encoding:

The red, green, and blue components are stored in sRGB space, but
are linear, not gamma-encoded.
The RGB primaries and the white point are the same as BT.709.

The values are encoded using the full range ([0,255] for 8-bit) for all
components.

 deprecated, use HAL_DATASPACE_V0_SRGB_LINEAR

sRGB gamma encoding:

The red, green and blue components are stored in sRGB space, and
converted to linear space when read, using the SRGB transfer function
for each of the R, G and B components. When written, the inverse
transformation is performed.

The alpha component, if present, is always stored in linear space and
is left unmodified when read or written.

Use full range and BT.709 standard.

 deprecated, use HAL_DATASPACE_V0_SRGB

YCbCr Colorspaces
-----------------

Primaries are given using (x,y) coordinates in the CIE 1931 definition
of x and y specified by ISO 11664-1.

Transfer characteristics are the opto-electronic transfer characteristic
at the source as a function of linear optical intensity (luminance).


JPEG File Interchange Format (JFIF)

Same model as BT.601-625, but all values (Y, Cb, Cr) range from 0 to 255

Use full range, BT.601 transfer and BT.601_625 standard.

 deprecated, use HAL_DATASPACE_V0_JFIF

ITU-R Recommendation 601 (BT.601) - 625-line

Standard-definition television, 625 Lines (PAL)

Use limited range, BT.601 transfer and BT.601_625 standard.

 deprecated, use HAL_DATASPACE_V0_BT601_625

ITU-R Recommendation 601 (BT.601) - 525-line

Standard-definition television, 525 Lines (NTSC)

Use limited range, BT.601 transfer and BT.601_525 standard.

 deprecated, use HAL_DATASPACE_V0_BT601_525

ITU-R Recommendation 709 (BT.709)

High-definition television

Use limited range, BT.709 transfer and BT.709 standard.

 deprecated, use HAL_DATASPACE_V0_BT709

Data spaces for non-color formats


The buffer contains depth ranging measurements from a depth camera.
This value is valid with formats:
   HAL_PIXEL_FORMAT_Y16: 16-bit samples, consisting of a depth measurement
      and an associated confidence value. The 3 MSBs of the sample make
      up the confidence value, and the low 13 LSBs of the sample make up
      the depth measurement.
      For the confidence section, 0 means 100% confidence, 1 means 0%
      confidence. The mapping to a linear float confidence value between
      0.f and 1.f can be obtained with
        float confidence = (((depthSample >> 13) - 1) & 0x7) / 7.0f;
      The depth measurement can be extracted simply with
        uint16_t range = (depthSample & 0x1FFF);
   HAL_PIXEL_FORMAT_BLOB: A depth point cloud, as
      a variable-length float (x,y,z, confidence) coordinate point list.
      The point cloud will be represented with the android_depth_points
      structure.


Color transforms that may be applied by hardware composer to the whole
display.
"
      attribute 11736119 "HAL_COLOR_TRANSFORM_IDENTITY"
	public type class_ref 3105591 // android_color_transform
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11736247 "HAL_COLOR_TRANSFORM_ARBITRARY_MATRIX"
	public type class_ref 3105591 // android_color_transform
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11736375 "HAL_COLOR_TRANSFORM_VALUE_INVERSE"
	public type class_ref 3105591 // android_color_transform
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11736503 "HAL_COLOR_TRANSFORM_GRAYSCALE"
	public type class_ref 3105591 // android_color_transform
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11736631 "HAL_COLOR_TRANSFORM_CORRECT_PROTANOPIA"
	public type class_ref 3105591 // android_color_transform
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11736759 "HAL_COLOR_TRANSFORM_CORRECT_DEUTERANOPIA"
	public type class_ref 3105591 // android_color_transform
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11736887 "HAL_COLOR_TRANSFORM_CORRECT_TRITANOPIA"
	public type class_ref 3105591 // android_color_transform
	init_value " 6
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3105719 "android_color_transform_t"
      visibility package stereotype "typedef" base_type class_ref 3105591 // android_color_transform
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3105847 "android_hdr"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Applies no transform to the output color 
 Applies an arbitrary transform defined by a 4x4 affine matrix 
 Applies a transform that inverts the value or luminance of the color, but
does not modify hue or saturation 
 Applies a transform that maps all colors to shades of gray 
 Applies a transform which corrects for protanopic color blindness 
 Applies a transform which corrects for deuteranopic color blindness 
 Applies a transform which corrects for tritanopic color blindness 

Supported HDR formats. Must be kept in sync with equivalents in Display.java.
"
      attribute 11737015 "HAL_HDR_DOLBY_VISION"
	public type class_ref 3105847 // android_hdr
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11737143 "HAL_HDR_HDR10"
	public type class_ref 3105847 // android_hdr
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11737271 "HAL_HDR_HLG"
	public type class_ref 3105847 // android_hdr
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3105975 "android_hdr_t"
      visibility package stereotype "typedef" base_type class_ref 3105847 // android_hdr
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3106103 "radio_class_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Radio hardware module class. A given radio hardware module HAL is of one class
only. The platform can not have more than one hardware module of each class.
Current version of the framework only supports RADIO_CLASS_AM_FM.
"
      attribute 11737399 "RADIO_CLASS_AM_FM"
	public type class_ref 3106103 // radio_class_t
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11737527 "RADIO_CLASS_SAT"
	public type class_ref 3106103 // radio_class_t
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11737655 "RADIO_CLASS_DT"
	public type class_ref 3106103 // radio_class_t
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3106231 "radio_band_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " FM (including HD radio) and AM 
 Satellite Radio 
 Digital Radio (DAB) 
 value for field \"type\" of radio band described in struct radio_hal_band_config "
      attribute 11737783 "RADIO_BAND_AM"
	public type class_ref 3106231 // radio_band_t
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11737911 "RADIO_BAND_FM"
	public type class_ref 3106231 // radio_band_t
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11738039 "RADIO_BAND_FM_HD"
	public type class_ref 3106231 // radio_band_t
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11738167 "RADIO_BAND_AM_HD"
	public type class_ref 3106231 // radio_band_t
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3106359 "anonymous136"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Amplitude Modulation band: LW, MW, SW 
 Frequency Modulation band: FM 
 FM HD Radio / DRM (IBOC) 
 AM HD Radio / DRM (IBOC) 
 RDS variant implemented. A struct radio_hal_fm_band_config can list none or several. "
      attribute 11738295 "RADIO_RDS_NONE"
	public type class_ref 3106359 // anonymous136
	init_value " 0x0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11738423 "RADIO_RDS_WORLD"
	public type class_ref 3106359 // anonymous136
	init_value " 0x01"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11738551 "RADIO_RDS_US"
	public type class_ref 3106359 // anonymous136
	init_value " 0x02"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3106487 "radio_rds_t"
      visibility package stereotype "typedef" explicit_base_type "unsigned int"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3106615 "anonymous137"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " FM deemphasis variant implemented. A struct radio_hal_fm_band_config can list one or more. "
      attribute 11738679 "RADIO_DEEMPHASIS_50"
	public type class_ref 3106615 // anonymous137
	init_value " 0x1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11738807 "RADIO_DEEMPHASIS_75"
	public type class_ref 3106615 // anonymous137
	init_value " 0x2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3106743 "radio_deemphasis_t"
      visibility package stereotype "typedef" explicit_base_type "unsigned int"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3106871 "radio_region_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Region a particular radio band configuration corresponds to. Not used at the HAL.
Derived by the framework when converting the band descriptors retrieved from the HAL to
individual band descriptors for each supported region. "
      attribute 11738935 "RADIO_REGION_NONE"
	public type class_ref 3106871 // radio_region_t
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11739063 "RADIO_REGION_ITU_1"
	public type class_ref 3106871 // radio_region_t
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11739191 "RADIO_REGION_ITU_2"
	public type class_ref 3106871 // radio_region_t
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11739319 "RADIO_REGION_OIRT"
	public type class_ref 3106871 // radio_region_t
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11739447 "RADIO_REGION_JAPAN"
	public type class_ref 3106871 // radio_region_t
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11739575 "RADIO_REGION_KOREA"
	public type class_ref 3106871 // radio_region_t
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3106999 "radio_direction_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " scanning direction for scan() and step() tuner APIs "
      attribute 11739703 "RADIO_DIRECTION_UP"
	public type class_ref 3106999 // radio_direction_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11739831 "RADIO_DIRECTION_DOWN"
	public type class_ref 3106999 // radio_direction_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3107127 "radio_handle_t"
      visibility package stereotype "typedef" explicit_base_type "unsigned int"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " unique handle allocated to a radio module "
    end

    class 3107255 "radio_metadata_t"
      visibility package stereotype "typedef" explicit_base_type "radio_medtadata"
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Opaque meta data structure used by radio meta data API (see system/radio_metadata.h) "
    end

    class 3107383 "radio_hal_fm_band_config"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Additional attributes for an FM band configuration "
      classrelation 6496951 // deemphasis (<directional composition>)
	relation 6496951 *-->
	  a role_name "deemphasis" public
	    comment " deemphasis variant "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6496951 // deemphasis (<directional composition>)
	  b parent class_ref 3106743 // radio_deemphasis_t
      end

      attribute 11739959 "stereo"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " stereo supported "
      end

      classrelation 6497079 // rds (<directional composition>)
	relation 6497079 *-->
	  a role_name "rds" public
	    comment " RDS variants supported "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497079 // rds (<directional composition>)
	  b parent class_ref 3106487 // radio_rds_t
      end

      attribute 11740087 "ta"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Traffic Announcement supported "
      end

      attribute 11740215 "af"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Alternate Frequency supported "
      end

      attribute 11740343 "ea"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Emergency announcements supported "
      end
    end

    class 3107511 "radio_hal_fm_band_config_t"
      visibility package stereotype "typedef" base_type class_ref 3107383 // radio_hal_fm_band_config
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3107639 "radio_hal_am_band_config"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Additional attributes for an AM band configuration "
      attribute 11740471 "stereo"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " stereo supported "
      end
    end

    class 3107767 "radio_hal_am_band_config_t"
      visibility package stereotype "typedef" base_type class_ref 3107639 // radio_hal_am_band_config
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3107895 "radio_hal_band_config"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Radio band configuration. Describes a given band supported by the radio module.
The HAL can expose only one band per type with the the maximum range supported and all options.
THe framework will derive the actual regions were this module can operate and expose separate
band configurations for applications to chose from. "
      classrelation 6497207 // type (<directional composition>)
	relation 6497207 *-->
	  a role_name "type" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497207 // type (<directional composition>)
	  b parent class_ref 3106231 // radio_band_t
      end

      attribute 11740599 "antenna_connected"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11740727 "lower_limit"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11740855 "upper_limit"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11740983 "num_spacings"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11741111 "spacings"
	public explicit_type "uint"
	multiplicity "[RADIO_NUM_SPACINGS_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6497335 // fm (<directional composition>)
	relation 6497335 *-->
	  a role_name "fm" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497335 // fm (<directional composition>)
	  b parent class_ref 3107511 // radio_hal_fm_band_config_t
      end

      classrelation 6497463 // am (<directional composition>)
	relation 6497463 *-->
	  a role_name "am" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497463 // am (<directional composition>)
	  b parent class_ref 3107767 // radio_hal_am_band_config_t
      end
    end

    class 3108023 "radio_hal_band_config_t"
      visibility package stereotype "typedef" explicit_base_type ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3108151 "radio_band_config"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Used internally by the framework to represent a band for s specific region "
      classrelation 6497591 // region (<directional composition>)
	relation 6497591 *-->
	  a role_name "region" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497591 // region (<directional composition>)
	  b parent class_ref 3106871 // radio_region_t
      end

      classrelation 6497719 // band (<directional composition>)
	relation 6497719 *-->
	  a role_name "band" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497719 // band (<directional composition>)
	  b parent class_ref 3108023 // radio_hal_band_config_t
      end
    end

    class 3108279 "radio_band_config_t"
      visibility package stereotype "typedef" base_type class_ref 3108151 // radio_band_config
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3108407 "radio_hal_properties"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Exposes properties of a given hardware radio module.
NOTE: current framework implementation supports only one audio source (num_audio_sources = 1).
The source corresponds to AUDIO_DEVICE_IN_FM_TUNER.
If more than one tuner is supported (num_tuners > 1), only one can be connected to the audio
source. "
      classrelation 6497847 // class_id (<directional composition>)
	relation 6497847 *-->
	  a role_name "class_id" public
	    comment " Class of this module. E.g RADIO_CLASS_AM_FM "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497847 // class_id (<directional composition>)
	  b parent class_ref 3106103 // radio_class_t
      end

      attribute 11741239 "implementor"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " implementor name "
      end

      attribute 11741367 "product"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " product name "
      end

      attribute 11741495 "version"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " product version "
      end

      attribute 11741623 "serial"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " serial number (for subscription services) "
      end

      attribute 11741751 "num_tuners"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of tuners controllable independently "
      end

      attribute 11741879 "num_audio_sources"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of audio sources driven simultaneously "
      end

      attribute 11742007 "supports_capture"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the hardware supports capture of audio source audio HAL "
      end

      attribute 11742135 "num_bands"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of band descriptors "
      end

      classrelation 6497975 // bands (<directional composition>)
	relation 6497975 *-->
	  a role_name "bands" multiplicity "[RADIO_NUM_BANDS_MAX]" public
	    comment " band descriptors "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6497975 // bands (<directional composition>)
	  b parent class_ref 3108023 // radio_hal_band_config_t
      end
    end

    class 3108535 "radio_hal_properties_t"
      visibility package stereotype "typedef" base_type class_ref 3108407 // radio_hal_properties
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3108663 "radio_properties"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Used internally by the framework. Same information as in struct radio_hal_properties plus a
unique handle and one band configuration per region. "
      classrelation 6498103 // handle (<directional composition>)
	relation 6498103 *-->
	  a role_name "handle" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498103 // handle (<directional composition>)
	  b parent class_ref 3107127 // radio_handle_t
      end

      classrelation 6498231 // class_id (<directional composition>)
	relation 6498231 *-->
	  a role_name "class_id" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498231 // class_id (<directional composition>)
	  b parent class_ref 3106103 // radio_class_t
      end

      attribute 11742263 "implementor"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11742391 "product"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11742519 "version"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11742647 "serial"
	public explicit_type "char"
	multiplicity "[RADIO_STRING_LEN_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11742775 "num_tuners"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11742903 "num_audio_sources"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11743031 "supports_capture"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11743159 "num_bands"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6498359 // bands (<directional composition>)
	relation 6498359 *-->
	  a role_name "bands" multiplicity "[RADIO_NUM_BANDS_MAX]" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498359 // bands (<directional composition>)
	  b parent class_ref 3108279 // radio_band_config_t
      end
    end

    class 3108791 "radio_properties_t"
      visibility package stereotype "typedef" base_type class_ref 3108663 // radio_properties
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3108919 "radio_program_info"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Radio program information. Returned by the HAL with event RADIO_EVENT_TUNED.
Contains information on currently tuned channel.
"
      attribute 11743287 "channel"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current channel. (e.g kHz for band type RADIO_BAND_FM) "
      end

      attribute 11743415 "sub_channel"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current sub channel. (used for RADIO_BAND_FM_HD) "
      end

      attribute 11743543 "tuned"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " tuned to a program or not "
      end

      attribute 11743671 "stereo"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " program is stereo or not "
      end

      attribute 11743799 "digital"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " digital program or not (e.g HD Radio program) "
      end

      attribute 11743927 "signal_strength"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " signal strength from 0 to 100 "
      end

      classrelation 6498487 // metadata (<unidirectional association>)
	relation 6498487 --->
	  a role_name "metadata" public
	    comment " non null if meta data are present (e.g PTY, song title ...) "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498487 // metadata (<unidirectional association>)
	  b parent class_ref 3107255 // radio_metadata_t
      end
    end

    class 3109047 "radio_program_info_t"
      visibility package stereotype "typedef" base_type class_ref 3108919 // radio_program_info
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3109175 "anonymous138"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Events sent to the framework via the HAL callback. An event can notify the completion of an
asynchronous command (configuration, tune, scan ...) or a spontaneous change (antenna connection,
failure, AF switching, meta data reception... "
      attribute 11744055 "RADIO_EVENT_HW_FAILURE"
	public type class_ref 3109175 // anonymous138
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744183 "RADIO_EVENT_CONFIG"
	public type class_ref 3109175 // anonymous138
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744311 "RADIO_EVENT_ANTENNA"
	public type class_ref 3109175 // anonymous138
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744439 "RADIO_EVENT_TUNED"
	public type class_ref 3109175 // anonymous138
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744567 "RADIO_EVENT_METADATA"
	public type class_ref 3109175 // anonymous138
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744695 "RADIO_EVENT_TA"
	public type class_ref 3109175 // anonymous138
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744823 "RADIO_EVENT_AF_SWITCH"
	public type class_ref 3109175 // anonymous138
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11744951 "RADIO_EVENT_EA"
	public type class_ref 3109175 // anonymous138
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11745079 "RADIO_EVENT_CONTROL"
	public type class_ref 3109175 // anonymous138
	init_value " 100"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11745207 "RADIO_EVENT_SERVER_DIED"
	public type class_ref 3109175 // anonymous138
	init_value " 101"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3109303 "radio_event_type_t"
      visibility package stereotype "typedef" explicit_base_type "unsigned int"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " hardware module failure. Requires reopening the tuner 
 configuration change completed 
 Antenna connected, disconnected 
 tune, step, scan completed 
 New meta data received 
 Traffic announcement start or stop 
 Switch to Alternate Frequency 
 Emergency announcement start or stop 
 begin framework only events
 loss/gain of tuner control 
 radio service died "
    end

    class 3109431 "radio_hal_event"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Event passed to the framework by the HAL callback "
      classrelation 6498615 // type (<directional composition>)
	relation 6498615 *-->
	  a role_name "type" public
	    comment " event type "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498615 // type (<directional composition>)
	  b parent class_ref 3109303 // radio_event_type_t
      end

      attribute 11745335 "status"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " used by RADIO_EVENT_CONFIG, RADIO_EVENT_TUNED "
      end

      attribute 11745463 "on"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " RADIO_EVENT_ANTENNA, RADIO_EVENT_TA, RADIO_EVENT_EA 
"
      end

      classrelation 6498743 // config (<directional composition>)
	relation 6498743 *-->
	  a role_name "config" public
	    comment " RADIO_EVENT_CONFIG "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498743 // config (<directional composition>)
	  b parent class_ref 3108023 // radio_hal_band_config_t
      end

      classrelation 6498871 // info (<directional composition>)
	relation 6498871 *-->
	  a role_name "info" public
	    comment " RADIO_EVENT_TUNED, RADIO_EVENT_AF_SWITCH "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498871 // info (<directional composition>)
	  b parent class_ref 3109047 // radio_program_info_t
      end

      classrelation 6498999 // metadata (<unidirectional association>)
	relation 6498999 --->
	  a role_name "metadata" public
	    comment " RADIO_EVENT_METADATA "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6498999 // metadata (<unidirectional association>)
	  b parent class_ref 3107255 // radio_metadata_t
      end
    end

    class 3109559 "radio_hal_event_t"
      visibility package stereotype "typedef" explicit_base_type ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3109687 "radio_event"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Used internally by the framework. Same information as in struct radio_hal_event "
      classrelation 6499127 // type (<directional composition>)
	relation 6499127 *-->
	  a role_name "type" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6499127 // type (<directional composition>)
	  b parent class_ref 3109303 // radio_event_type_t
      end

      attribute 11745591 "status"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11745719 "on"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6499255 // config (<directional composition>)
	relation 6499255 *-->
	  a role_name "config" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6499255 // config (<directional composition>)
	  b parent class_ref 3108279 // radio_band_config_t
      end

      classrelation 6499383 // info (<directional composition>)
	relation 6499383 *-->
	  a role_name "info" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6499383 // info (<directional composition>)
	  b parent class_ref 3109047 // radio_program_info_t
      end

      classrelation 6499511 // metadata (<unidirectional association>)
	relation 6499511 --->
	  a role_name "metadata" public
	    comment " offset from start of struct when in shared memory "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6499511 // metadata (<unidirectional association>)
	  b parent class_ref 3107255 // radio_metadata_t
      end
    end

    class 3109815 "radio_event_t"
      visibility package stereotype "typedef" explicit_base_type ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3109943 "anonymous139"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 11745847 "ANDROID_PRIORITY_LOWEST"
	public type class_ref 3109943 // anonymous139
	init_value "  19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11745975 "ANDROID_PRIORITY_BACKGROUND"
	public type class_ref 3109943 // anonymous139
	init_value "  10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746103 "ANDROID_PRIORITY_NORMAL"
	public type class_ref 3109943 // anonymous139
	init_value "   0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746231 "ANDROID_PRIORITY_FOREGROUND"
	public type class_ref 3109943 // anonymous139
	init_value "  -2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746359 "ANDROID_PRIORITY_DISPLAY"
	public type class_ref 3109943 // anonymous139
	init_value "  -4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746487 "ANDROID_PRIORITY_URGENT_DISPLAY"
	public type class_ref 3109943 // anonymous139
	init_value "  HAL_PRIORITY_URGENT_DISPLAY"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746615 "ANDROID_PRIORITY_AUDIO"
	public type class_ref 3109943 // anonymous139
	init_value " -16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746743 "ANDROID_PRIORITY_URGENT_AUDIO"
	public type class_ref 3109943 // anonymous139
	init_value " -19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746871 "ANDROID_PRIORITY_HIGHEST"
	public type class_ref 3109943 // anonymous139
	init_value " -20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11746999 "ANDROID_PRIORITY_DEFAULT"
	public type class_ref 3109943 // anonymous139
	init_value " ANDROID_PRIORITY_NORMAL"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11747127 "ANDROID_PRIORITY_MORE_FAVORABLE"
	public type class_ref 3109943 // anonymous139
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11747255 "ANDROID_PRIORITY_LESS_FAVORABLE"
	public type class_ref 3109943 // anonymous139
	init_value " +1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3110071 "android_native_rect_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ---------------------------------------------------------------------------"
      attribute 11747383 "left"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11747511 "top"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11747639 "right"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11747767 "bottom"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3110199 "android_native_base_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ---------------------------------------------------------------------------"
      attribute 11747895 "magic"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " a magic value defined by the actual EGL native type 
"
      end

      attribute 11748023 "version"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the sizeof() of the actual EGL native type 
"
      end

      attribute 11748151 "reserved"
	public explicit_type "void"
	multiplicity "[4]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11748279 "incRef"
	public explicit_type "/* reference-counting interface */ void (*)(struct android_native_base_t* base)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /* reference-counting interface */
    void (*${name})(struct android_native_base_t* base)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " reference-counting interface 
"
      end

      attribute 11748407 "decRef"
	public explicit_type "void (*)(struct android_native_base_t* base)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    void (*${name})(struct android_native_base_t* base)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3110327 "ANativeWindowBuffer"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 42688439 "ANativeWindowBuffer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
        common.magic = ANDROID_NATIVE_BUFFER_MAGIC;
        common.version = sizeof(ANativeWindowBuffer);
        memset(common.reserved, 0, sizeof(common.reserved));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42688567 "incStrong"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        common.incRef(const_cast<android_native_base_t*>(&common));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the methods that sp<ANativeWindowBuffer> expects so that it
 can be used to automatically refcount ANativeWindowBuffer's."
      end

      operation 42688695 "decStrong"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        common.decRef(const_cast<android_native_base_t*>(&common));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6499639 // common (<directional composition>)
	relation 6499639 *-->
	  a role_name "common" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6499639 // common (<directional composition>)
	  b parent class_ref 3110199 // android_native_base_t
      end

      attribute 11748535 "width"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11748663 "height"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11748791 "stride"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11748919 "format"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749047 "usage"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749175 "reserved"
	public explicit_type "void"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749303 "handle"
	public explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749431 "reserved_proc"
	public explicit_type "void"
	multiplicity "[8]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3110455 "ANativeWindowBuffer_t"
      visibility package stereotype "typedef" base_type class_ref 3110327 // ANativeWindowBuffer
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3110583 "android_native_buffer_t"
      visibility package stereotype "typedef" base_type class_ref 3110455 // ANativeWindowBuffer_t
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Old typedef for backwards compatibility."
      classrelation 6499767 // <dependency>
	relation 6499767 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 6499767 // <dependency>
	  b parent class_ref 3110455 // ANativeWindowBuffer_t
      end
    end

    class 3110711 "anonymous140"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ---------------------------------------------------------------------------
 attributes queriable with query() "
      attribute 11749559 "NATIVE_WINDOW_WIDTH"
	public type class_ref 3110711 // anonymous140
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749687 "NATIVE_WINDOW_HEIGHT"
	public type class_ref 3110711 // anonymous140
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749815 "NATIVE_WINDOW_FORMAT"
	public type class_ref 3110711 // anonymous140
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11749943 "NATIVE_WINDOW_MIN_UNDEQUEUED_BUFFERS"
	public type class_ref 3110711 // anonymous140
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750071 "NATIVE_WINDOW_QUEUES_TO_WINDOW_COMPOSER"
	public type class_ref 3110711 // anonymous140
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750199 "NATIVE_WINDOW_CONCRETE_TYPE"
	public type class_ref 3110711 // anonymous140
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750327 "NATIVE_WINDOW_DEFAULT_WIDTH"
	public type class_ref 3110711 // anonymous140
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750455 "NATIVE_WINDOW_DEFAULT_HEIGHT"
	public type class_ref 3110711 // anonymous140
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750583 "NATIVE_WINDOW_TRANSFORM_HINT"
	public type class_ref 3110711 // anonymous140
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750711 "NATIVE_WINDOW_CONSUMER_RUNNING_BEHIND"
	public type class_ref 3110711 // anonymous140
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750839 "NATIVE_WINDOW_CONSUMER_USAGE_BITS"
	public type class_ref 3110711 // anonymous140
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11750967 "NATIVE_WINDOW_STICKY_TRANSFORM"
	public type class_ref 3110711 // anonymous140
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751095 "NATIVE_WINDOW_DEFAULT_DATASPACE"
	public type class_ref 3110711 // anonymous140
	init_value " 12"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751223 "NATIVE_WINDOW_BUFFER_AGE"
	public type class_ref 3110711 // anonymous140
	init_value " 13"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3110839 "anonymous141"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The minimum number of buffers that must remain un-dequeued after a buffer
has been queued.  This value applies only if set_buffer_count was used to
override the number of buffers and if a buffer has since been queued.
Users of the set_buffer_count ANativeWindow method should query this
value before calling set_buffer_count.  If it is necessary to have N
buffers simultaneously dequeued as part of the steady-state operation,
and this query returns M then N+M buffers should be requested via
native_window_set_buffer_count.

Note that this value does NOT apply until a single buffer has been
queued.  In particular this means that it is possible to:

1. Query M = min undequeued buffers
2. Set the buffer count to N + M
3. Dequeue all N + M buffers
4. Cancel M buffers
5. Queue, dequeue, queue, dequeue, ad infinitum

 Check whether queueBuffer operations on the ANativeWindow send the buffer
to the window compositor.  The query sets the returned 'value' argument
to 1 if the ANativeWindow DOES send queued buffers directly to the window
compositor and 0 if the buffers do not go directly to the window
compositor.

This can be used to determine whether protected buffer content should be
sent to the ANativeWindow.  Note, however, that a result of 1 does NOT
indicate that queued buffers will be protected from applications or users
capturing their contents.  If that behavior is desired then some other
mechanism (e.g. the GRALLOC_USAGE_PROTECTED flag) should be used in
conjunction with this query.

 Get the concrete type of a ANativeWindow.  See below for the list of
possible return values.

This query should not be used outside the Android framework and will
likely be removed in the near future.


Default width and height of ANativeWindow buffers, these are the
dimensions of the window buffers irrespective of the
NATIVE_WINDOW_SET_BUFFERS_DIMENSIONS call and match the native window
size unless overridden by NATIVE_WINDOW_SET_BUFFERS_USER_DIMENSIONS.


transformation that will most-likely be applied to buffers. This is only
a hint, the actual transformation applied might be different.

INTENDED USE:

The transform hint can be used by a producer, for instance the GLES
driver, to pre-rotate the rendering such that the final transformation
in the composer is identity. This can be very useful when used in
conjunction with the h/w composer HAL, in situations where it
cannot handle arbitrary rotations.

1. Before dequeuing a buffer, the GL driver (or any other ANW client)
   queries the ANW for NATIVE_WINDOW_TRANSFORM_HINT.

2. The GL driver overrides the width and height of the ANW to
   account for NATIVE_WINDOW_TRANSFORM_HINT. This is done by querying
   NATIVE_WINDOW_DEFAULT_{WIDTH | HEIGHT}, swapping the dimensions
   according to NATIVE_WINDOW_TRANSFORM_HINT and calling
   native_window_set_buffers_dimensions().

3. The GL driver dequeues a buffer of the new pre-rotated size.

4. The GL driver renders to the buffer such that the image is
   already transformed, that is applying NATIVE_WINDOW_TRANSFORM_HINT
   to the rendering.

5. The GL driver calls native_window_set_transform to apply
   inverse transformation to the buffer it just rendered.
   In order to do this, the GL driver needs
   to calculate the inverse of NATIVE_WINDOW_TRANSFORM_HINT, this is
   done easily:

       int hintTransform, inverseTransform;
       query(..., NATIVE_WINDOW_TRANSFORM_HINT, &hintTransform);
       inverseTransform = hintTransform;
       if (hintTransform & HAL_TRANSFORM_ROT_90)
           inverseTransform ^= HAL_TRANSFORM_ROT_180;


6. The GL driver queues the pre-transformed buffer.

7. The composer combines the buffer transform with the display
   transform.  If the buffer transform happens to cancel out the
   display transform then no rotation is needed.



Boolean that indicates whether the consumer is running more than
one buffer behind the producer.


The consumer gralloc usage bits currently set by the consumer.
The values are defined in hardware/libhardware/include/gralloc.h.


Transformation that will by applied to buffers by the hwcomposer.
This must not be set or checked by producer endpoints, and will
disable the transform hint set in SurfaceFlinger (see
NATIVE_WINDOW_TRANSFORM_HINT).

INTENDED USE:
Temporary - Please do not use this.  This is intended only to be used
by the camera's LEGACY mode.

In situations where a SurfaceFlinger client wishes to set a transform
that is not visible to the producer, and will always be applied in the
hardware composer, the client can set this flag with
native_window_set_buffers_sticky_transform.  This can be used to rotate
and flip buffers consumed by hardware composer without actually changing
the aspect ratio of the buffers produced.


The default data space for the buffers as set by the consumer.
The values are defined in graphics.h.


Returns the age of the contents of the most recently dequeued buffer as
the number of frames that have elapsed since it was last queued. For
example, if the window is double-buffered, the age of any given buffer in
steady state will be 2. If the dequeued buffer has never been queued, its
age will be 0.

 Valid operations for the (*perform)() hook.

Values marked as 'deprecated' are supported, but have been superceded by
other functionality.

Values marked as 'private' should be considered private to the framework.
HAL implementation code with access to an ANativeWindow should not use these,
as it may not interact properly with the framework's use of the
ANativeWindow.
"
      attribute 11751351 "NATIVE_WINDOW_SET_USAGE"
	public type class_ref 3110839 // anonymous141
	init_value "  0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751479 "NATIVE_WINDOW_CONNECT"
	public type class_ref 3110839 // anonymous141
	init_value "  1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751607 "NATIVE_WINDOW_DISCONNECT"
	public type class_ref 3110839 // anonymous141
	init_value "  2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751735 "NATIVE_WINDOW_SET_CROP"
	public type class_ref 3110839 // anonymous141
	init_value "  3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751863 "NATIVE_WINDOW_SET_BUFFER_COUNT"
	public type class_ref 3110839 // anonymous141
	init_value "  4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11751991 "NATIVE_WINDOW_SET_BUFFERS_GEOMETRY"
	public type class_ref 3110839 // anonymous141
	init_value "  5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752119 "NATIVE_WINDOW_SET_BUFFERS_TRANSFORM"
	public type class_ref 3110839 // anonymous141
	init_value "  6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752247 "NATIVE_WINDOW_SET_BUFFERS_TIMESTAMP"
	public type class_ref 3110839 // anonymous141
	init_value "  7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752375 "NATIVE_WINDOW_SET_BUFFERS_DIMENSIONS"
	public type class_ref 3110839 // anonymous141
	init_value "  8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752503 "NATIVE_WINDOW_SET_BUFFERS_FORMAT"
	public type class_ref 3110839 // anonymous141
	init_value "  9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752631 "NATIVE_WINDOW_SET_SCALING_MODE"
	public type class_ref 3110839 // anonymous141
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752759 "NATIVE_WINDOW_LOCK"
	public type class_ref 3110839 // anonymous141
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11752887 "NATIVE_WINDOW_UNLOCK_AND_POST"
	public type class_ref 3110839 // anonymous141
	init_value " 12"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753015 "NATIVE_WINDOW_API_CONNECT"
	public type class_ref 3110839 // anonymous141
	init_value " 13"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753143 "NATIVE_WINDOW_API_DISCONNECT"
	public type class_ref 3110839 // anonymous141
	init_value " 14"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753271 "NATIVE_WINDOW_SET_BUFFERS_USER_DIMENSIONS"
	public type class_ref 3110839 // anonymous141
	init_value " 15"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753399 "NATIVE_WINDOW_SET_POST_TRANSFORM_CROP"
	public type class_ref 3110839 // anonymous141
	init_value " 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753527 "NATIVE_WINDOW_SET_BUFFERS_STICKY_TRANSFORM"
	public type class_ref 3110839 // anonymous141
	init_value " 17"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753655 "NATIVE_WINDOW_SET_SIDEBAND_STREAM"
	public type class_ref 3110839 // anonymous141
	init_value " 18"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753783 "NATIVE_WINDOW_SET_BUFFERS_DATASPACE"
	public type class_ref 3110839 // anonymous141
	init_value " 19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11753911 "NATIVE_WINDOW_SET_SURFACE_DAMAGE"
	public type class_ref 3110839 // anonymous141
	init_value " 20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11754039 "NATIVE_WINDOW_SET_SHARED_BUFFER_MODE"
	public type class_ref 3110839 // anonymous141
	init_value " 21"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11754167 "NATIVE_WINDOW_SET_AUTO_REFRESH"
	public type class_ref 3110839 // anonymous141
	init_value " 22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3110967 "anonymous142"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " deprecated 
 deprecated 
 private 
 deprecated 
 private 
 private 
 private 
 private 
 private 
 private 
 private 
 private 
 private 
 parameter for NATIVE_WINDOW_[API_][DIS]CONNECT "
      attribute 11754295 "NATIVE_WINDOW_API_EGL"
	public type class_ref 3110967 // anonymous142
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11754423 "NATIVE_WINDOW_API_CPU"
	public type class_ref 3110967 // anonymous142
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11754551 "NATIVE_WINDOW_API_MEDIA"
	public type class_ref 3110967 // anonymous142
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11754679 "NATIVE_WINDOW_API_CAMERA"
	public type class_ref 3110967 // anonymous142
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3111095 "anonymous143"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Buffers will be queued by EGL via eglSwapBuffers after being filled using
OpenGL ES.

 Buffers will be queued after being filled using the CPU

 Buffers will be queued by Stagefright after being filled by a video
decoder.  The video decoder can either be a software or hardware decoder.

 Buffers will be queued by the the camera HAL.

 parameter for NATIVE_WINDOW_SET_BUFFERS_TRANSFORM "
      attribute 11754807 "NATIVE_WINDOW_TRANSFORM_FLIP_H"
	public type class_ref 3111095 // anonymous143
	init_value " HAL_TRANSFORM_FLIP_H "
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11754935 "NATIVE_WINDOW_TRANSFORM_FLIP_V"
	public type class_ref 3111095 // anonymous143
	init_value " HAL_TRANSFORM_FLIP_V"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755063 "NATIVE_WINDOW_TRANSFORM_ROT_90"
	public type class_ref 3111095 // anonymous143
	init_value " HAL_TRANSFORM_ROT_90"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755191 "NATIVE_WINDOW_TRANSFORM_ROT_180"
	public type class_ref 3111095 // anonymous143
	init_value " HAL_TRANSFORM_ROT_180"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755319 "NATIVE_WINDOW_TRANSFORM_ROT_270"
	public type class_ref 3111095 // anonymous143
	init_value " HAL_TRANSFORM_ROT_270"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755447 "NATIVE_WINDOW_TRANSFORM_INVERSE_DISPLAY"
	public type class_ref 3111095 // anonymous143
	init_value " 0x08
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3111223 "anonymous144"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " flip source image horizontally 
 flip source image vertically 
 rotate source image 90 degrees clock-wise, and is applied after TRANSFORM_FLIP_{H|V} 
 rotate source image 180 degrees 
 rotate source image 270 degrees clock-wise 
 transforms source by the inverse transform of the screen it is displayed onto. This
transform is applied last 
 parameter for NATIVE_WINDOW_SET_SCALING_MODE
keep in sync with Surface.java in frameworks/base "
      attribute 11755575 "NATIVE_WINDOW_SCALING_MODE_FREEZE"
	public type class_ref 3111223 // anonymous144
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755703 "NATIVE_WINDOW_SCALING_MODE_SCALE_TO_WINDOW"
	public type class_ref 3111223 // anonymous144
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755831 "NATIVE_WINDOW_SCALING_MODE_SCALE_CROP"
	public type class_ref 3111223 // anonymous144
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11755959 "NATIVE_WINDOW_SCALING_MODE_NO_SCALE_CROP"
	public type class_ref 3111223 // anonymous144
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3111351 "anonymous145"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " the window content is not updated (frozen) until a buffer of
the window size is received (enqueued)

 the buffer is scaled in both dimensions to match the window size 
 the buffer is scaled uniformly such that the smaller dimension
of the buffer matches the window size (cropping in the process)

 the window is clipped to the size of the buffer's crop rectangle; pixels
outside the crop rectangle are treated as if they are completely
transparent.

 values returned by the NATIVE_WINDOW_CONCRETE_TYPE query "
      attribute 11756087 "NATIVE_WINDOW_FRAMEBUFFER"
	public type class_ref 3111351 // anonymous145
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11756215 "NATIVE_WINDOW_SURFACE"
	public type class_ref 3111351 // anonymous145
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3111479 "ANativeWindow"
      visibility package stereotype "struct"
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link ANativeWindow} is opaque type that provides access to a native window.

A pointer can be obtained using ANativeWindow_fromSurface().
"
      operation 42688823 "ANativeWindow"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : flags(0), minSwapInterval(0), maxSwapInterval(0), xdpi(0), ydpi(0)
    {
        common.magic = ANDROID_NATIVE_WINDOW_MAGIC;
        common.version = sizeof(ANativeWindow);
        memset(common.reserved, 0, sizeof(common.reserved));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42688951 "incStrong"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        common.incRef(const_cast<android_native_base_t*>(&common));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the methods that sp<ANativeWindow> expects so that it
can be used to automatically refcount ANativeWindow's. "
      end

      operation 42689079 "decStrong"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        common.decRef(const_cast<android_native_base_t*>(&common));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6499895 // common (<directional composition>)
	relation 6499895 *-->
	  a role_name "common" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6499895 // common (<directional composition>)
	  b parent class_ref 3110199 // android_native_base_t
      end

      classrelation 6500023 // flags (<directional composition>)
	relation 6500023 *-->
	  a role_name "flags" const_relation public
	    comment " flags describing some attributes of this surface or its updater 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6500023 // flags (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 11756343 "minSwapInterval"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " min swap interval supported by this updated 
"
      end

      attribute 11756471 "maxSwapInterval"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " max swap interval supported by this updated 
"
      end

      attribute 11756599 "xdpi"
	const_attribute public explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " horizontal and vertical resolution in DPI 
"
      end

      attribute 11756727 "ydpi"
	const_attribute public explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11756855 "oem"
	public explicit_type "intptr_t"
	multiplicity "[4]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Some storage reserved for the OEM's driver. 
"
      end

      attribute 11756983 "setSwapInterval"
	public explicit_type "/* * Set the swap interval for this surface. * * Returns 0 on success or -errno on error. */ int (*)(struct ANativeWindow* window, int interval)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Set the swap interval for this surface.
     *
     * Returns 0 on success or -errno on error.
     */
    int     (*${name})(struct ANativeWindow* window,
                int interval)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set the swap interval for this surface.

Returns 0 on success or -errno on error.

"
      end

      attribute 11757111 "dequeueBuffer_DEPRECATED"
	public explicit_type "/* * Hook called by EGL to acquire a buffer. After this call, the buffer * is not locked, so its content cannot be modified. This call may block if * no buffers are available. * * The window holds a reference to the buffer between dequeueBuffer and * either queueBuffer or cancelBuffer, so clients only need their own * reference if they might use the buffer after queueing or canceling it. * Holding a reference to a buffer after queueing or canceling it is only * allowed if a specific buffer count has been set. * * Returns 0 on success or -errno on error. * * XXX: This function is deprecated. It will continue to work for some * time for binary compatibility, but the new dequeueBuffer function that * outputs a fence file descriptor should be used in its place. */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer** buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Hook called by EGL to acquire a buffer. After this call, the buffer
     * is not locked, so its content cannot be modified. This call may block if
     * no buffers are available.
     *
     * The window holds a reference to the buffer between dequeueBuffer and
     * either queueBuffer or cancelBuffer, so clients only need their own
     * reference if they might use the buffer after queueing or canceling it.
     * Holding a reference to a buffer after queueing or canceling it is only
     * allowed if a specific buffer count has been set.
     *
     * Returns 0 on success or -errno on error.
     *
     * XXX: This function is deprecated.  It will continue to work for some
     * time for binary compatibility, but the new dequeueBuffer function that
     * outputs a fence file descriptor should be used in its place.
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer** buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook called by EGL to acquire a buffer. After this call, the buffer
is not locked, so its content cannot be modified. This call may block if
no buffers are available.

The window holds a reference to the buffer between dequeueBuffer and
either queueBuffer or cancelBuffer, so clients only need their own
reference if they might use the buffer after queueing or canceling it.
Holding a reference to a buffer after queueing or canceling it is only
allowed if a specific buffer count has been set.

Returns 0 on success or -errno on error.

XXX: This function is deprecated.  It will continue to work for some
time for binary compatibility, but the new dequeueBuffer function that
outputs a fence file descriptor should be used in its place.

"
      end

      attribute 11757239 "lockBuffer_DEPRECATED"
	public explicit_type "/* * hook called by EGL to lock a buffer. This MUST be called before modifying * the content of a buffer. The buffer must have been acquired with * dequeueBuffer first. * * Returns 0 on success or -errno on error. * * XXX: This function is deprecated. It will continue to work for some * time for binary compatibility, but it is essentially a no-op, and calls * to it should be removed. */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer* buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * hook called by EGL to lock a buffer. This MUST be called before modifying
     * the content of a buffer. The buffer must have been acquired with
     * dequeueBuffer first.
     *
     * Returns 0 on success or -errno on error.
     *
     * XXX: This function is deprecated.  It will continue to work for some
     * time for binary compatibility, but it is essentially a no-op, and calls
     * to it should be removed.
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer* buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "hook called by EGL to lock a buffer. This MUST be called before modifying
the content of a buffer. The buffer must have been acquired with
dequeueBuffer first.

Returns 0 on success or -errno on error.

XXX: This function is deprecated.  It will continue to work for some
time for binary compatibility, but it is essentially a no-op, and calls
to it should be removed.

"
      end

      attribute 11757367 "queueBuffer_DEPRECATED"
	public explicit_type "/* * Hook called by EGL when modifications to the render buffer are done. * This unlocks and post the buffer. * * The window holds a reference to the buffer between dequeueBuffer and * either queueBuffer or cancelBuffer, so clients only need their own * reference if they might use the buffer after queueing or canceling it. * Holding a reference to a buffer after queueing or canceling it is only * allowed if a specific buffer count has been set. * * Buffers MUST be queued in the same order than they were dequeued. * * Returns 0 on success or -errno on error. * * XXX: This function is deprecated. It will continue to work for some * time for binary compatibility, but the new queueBuffer function that * takes a fence file descriptor should be used in its place (pass a value * of -1 for the fence file descriptor if there is no valid one to pass). */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer* buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Hook called by EGL when modifications to the render buffer are done.
     * This unlocks and post the buffer.
     *
     * The window holds a reference to the buffer between dequeueBuffer and
     * either queueBuffer or cancelBuffer, so clients only need their own
     * reference if they might use the buffer after queueing or canceling it.
     * Holding a reference to a buffer after queueing or canceling it is only
     * allowed if a specific buffer count has been set.
     *
     * Buffers MUST be queued in the same order than they were dequeued.
     *
     * Returns 0 on success or -errno on error.
     *
     * XXX: This function is deprecated.  It will continue to work for some
     * time for binary compatibility, but the new queueBuffer function that
     * takes a fence file descriptor should be used in its place (pass a value
     * of -1 for the fence file descriptor if there is no valid one to pass).
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer* buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook called by EGL when modifications to the render buffer are done.
This unlocks and post the buffer.

The window holds a reference to the buffer between dequeueBuffer and
either queueBuffer or cancelBuffer, so clients only need their own
reference if they might use the buffer after queueing or canceling it.
Holding a reference to a buffer after queueing or canceling it is only
allowed if a specific buffer count has been set.

Buffers MUST be queued in the same order than they were dequeued.

Returns 0 on success or -errno on error.

XXX: This function is deprecated.  It will continue to work for some
time for binary compatibility, but the new queueBuffer function that
takes a fence file descriptor should be used in its place (pass a value
of -1 for the fence file descriptor if there is no valid one to pass).

"
      end

      attribute 11757495 "query"
	public explicit_type "/* * hook used to retrieve information about the native window. * * Returns 0 on success or -errno on error. */ int (*)(const struct ANativeWindow* window, int what, int* value)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * hook used to retrieve information about the native window.
     *
     * Returns 0 on success or -errno on error.
     */
    int     (*${name})(const struct ANativeWindow* window,
                int what, int* value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "hook used to retrieve information about the native window.

Returns 0 on success or -errno on error.

"
      end

      attribute 11757623 "perform"
	public explicit_type "/* * hook used to perform various operations on the surface. * (*perform)() is a generic mechanism to add functionality to * ANativeWindow while keeping backward binary compatibility. * * DO NOT CALL THIS HOOK DIRECTLY. Instead, use the helper functions * defined below. * * (*perform)() returns -ENOENT if the 'what' parameter is not supported * by the surface's implementation. * * See above for a list of valid operations, such as * NATIVE_WINDOW_SET_USAGE or NATIVE_WINDOW_CONNECT */ int (*)(struct ANativeWindow* window, int operation, ... )"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * hook used to perform various operations on the surface.
     * (*perform)() is a generic mechanism to add functionality to
     * ANativeWindow while keeping backward binary compatibility.
     *
     * DO NOT CALL THIS HOOK DIRECTLY.  Instead, use the helper functions
     * defined below.
     *
     * (*perform)() returns -ENOENT if the 'what' parameter is not supported
     * by the surface's implementation.
     *
     * See above for a list of valid operations, such as
     * NATIVE_WINDOW_SET_USAGE or NATIVE_WINDOW_CONNECT
     */
    int     (*${name})(struct ANativeWindow* window,
                int operation, ... )${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "hook used to perform various operations on the surface.
(*perform)() is a generic mechanism to add functionality to
ANativeWindow while keeping backward binary compatibility.

DO NOT CALL THIS HOOK DIRECTLY.  Instead, use the helper functions
defined below.

(*perform)() returns -ENOENT if the 'what' parameter is not supported
by the surface's implementation.

See above for a list of valid operations, such as
NATIVE_WINDOW_SET_USAGE or NATIVE_WINDOW_CONNECT

"
      end

      attribute 11757751 "cancelBuffer_DEPRECATED"
	public explicit_type "/* * Hook used to cancel a buffer that has been dequeued. * No synchronization is performed between dequeue() and cancel(), so * either external synchronization is needed, or these functions must be * called from the same thread. * * The window holds a reference to the buffer between dequeueBuffer and * either queueBuffer or cancelBuffer, so clients only need their own * reference if they might use the buffer after queueing or canceling it. * Holding a reference to a buffer after queueing or canceling it is only * allowed if a specific buffer count has been set. * * XXX: This function is deprecated. It will continue to work for some * time for binary compatibility, but the new cancelBuffer function that * takes a fence file descriptor should be used in its place (pass a value * of -1 for the fence file descriptor if there is no valid one to pass). */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer* buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Hook used to cancel a buffer that has been dequeued.
     * No synchronization is performed between dequeue() and cancel(), so
     * either external synchronization is needed, or these functions must be
     * called from the same thread.
     *
     * The window holds a reference to the buffer between dequeueBuffer and
     * either queueBuffer or cancelBuffer, so clients only need their own
     * reference if they might use the buffer after queueing or canceling it.
     * Holding a reference to a buffer after queueing or canceling it is only
     * allowed if a specific buffer count has been set.
     *
     * XXX: This function is deprecated.  It will continue to work for some
     * time for binary compatibility, but the new cancelBuffer function that
     * takes a fence file descriptor should be used in its place (pass a value
     * of -1 for the fence file descriptor if there is no valid one to pass).
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer* buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook used to cancel a buffer that has been dequeued.
No synchronization is performed between dequeue() and cancel(), so
either external synchronization is needed, or these functions must be
called from the same thread.

The window holds a reference to the buffer between dequeueBuffer and
either queueBuffer or cancelBuffer, so clients only need their own
reference if they might use the buffer after queueing or canceling it.
Holding a reference to a buffer after queueing or canceling it is only
allowed if a specific buffer count has been set.

XXX: This function is deprecated.  It will continue to work for some
time for binary compatibility, but the new cancelBuffer function that
takes a fence file descriptor should be used in its place (pass a value
of -1 for the fence file descriptor if there is no valid one to pass).

"
      end

      attribute 11757879 "dequeueBuffer"
	public explicit_type "/* * Hook called by EGL to acquire a buffer. This call may block if no * buffers are available. * * The window holds a reference to the buffer between dequeueBuffer and * either queueBuffer or cancelBuffer, so clients only need their own * reference if they might use the buffer after queueing or canceling it. * Holding a reference to a buffer after queueing or canceling it is only * allowed if a specific buffer count has been set. * * The libsync fence file descriptor returned in the int pointed to by the * fenceFd argument will refer to the fence that must signal before the * dequeued buffer may be written to. A value of -1 indicates that the * caller may access the buffer immediately without waiting on a fence. If * a valid file descriptor is returned (i.e. any value except -1) then the * caller is responsible for closing the file descriptor. * * Returns 0 on success or -errno on error. */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer** buffer, int* fenceFd)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Hook called by EGL to acquire a buffer. This call may block if no
     * buffers are available.
     *
     * The window holds a reference to the buffer between dequeueBuffer and
     * either queueBuffer or cancelBuffer, so clients only need their own
     * reference if they might use the buffer after queueing or canceling it.
     * Holding a reference to a buffer after queueing or canceling it is only
     * allowed if a specific buffer count has been set.
     *
     * The libsync fence file descriptor returned in the int pointed to by the
     * fenceFd argument will refer to the fence that must signal before the
     * dequeued buffer may be written to.  A value of -1 indicates that the
     * caller may access the buffer immediately without waiting on a fence.  If
     * a valid file descriptor is returned (i.e. any value except -1) then the
     * caller is responsible for closing the file descriptor.
     *
     * Returns 0 on success or -errno on error.
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer** buffer, int* fenceFd)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook called by EGL to acquire a buffer. This call may block if no
buffers are available.

The window holds a reference to the buffer between dequeueBuffer and
either queueBuffer or cancelBuffer, so clients only need their own
reference if they might use the buffer after queueing or canceling it.
Holding a reference to a buffer after queueing or canceling it is only
allowed if a specific buffer count has been set.

The libsync fence file descriptor returned in the int pointed to by the
fenceFd argument will refer to the fence that must signal before the
dequeued buffer may be written to.  A value of -1 indicates that the
caller may access the buffer immediately without waiting on a fence.  If
a valid file descriptor is returned (i.e. any value except -1) then the
caller is responsible for closing the file descriptor.

Returns 0 on success or -errno on error.

"
      end

      attribute 11758007 "queueBuffer"
	public explicit_type "/* * Hook called by EGL when modifications to the render buffer are done. * This unlocks and post the buffer. * * The window holds a reference to the buffer between dequeueBuffer and * either queueBuffer or cancelBuffer, so clients only need their own * reference if they might use the buffer after queueing or canceling it. * Holding a reference to a buffer after queueing or canceling it is only * allowed if a specific buffer count has been set. * * The fenceFd argument specifies a libsync fence file descriptor for a * fence that must signal before the buffer can be accessed. If the buffer * can be accessed immediately then a value of -1 should be used. The * caller must not use the file descriptor after it is passed to * queueBuffer, and the ANativeWindow implementation is responsible for * closing it. * * Returns 0 on success or -errno on error. */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer* buffer, int fenceFd)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Hook called by EGL when modifications to the render buffer are done.
     * This unlocks and post the buffer.
     *
     * The window holds a reference to the buffer between dequeueBuffer and
     * either queueBuffer or cancelBuffer, so clients only need their own
     * reference if they might use the buffer after queueing or canceling it.
     * Holding a reference to a buffer after queueing or canceling it is only
     * allowed if a specific buffer count has been set.
     *
     * The fenceFd argument specifies a libsync fence file descriptor for a
     * fence that must signal before the buffer can be accessed.  If the buffer
     * can be accessed immediately then a value of -1 should be used.  The
     * caller must not use the file descriptor after it is passed to
     * queueBuffer, and the ANativeWindow implementation is responsible for
     * closing it.
     *
     * Returns 0 on success or -errno on error.
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer* buffer, int fenceFd)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook called by EGL when modifications to the render buffer are done.
This unlocks and post the buffer.

The window holds a reference to the buffer between dequeueBuffer and
either queueBuffer or cancelBuffer, so clients only need their own
reference if they might use the buffer after queueing or canceling it.
Holding a reference to a buffer after queueing or canceling it is only
allowed if a specific buffer count has been set.

The fenceFd argument specifies a libsync fence file descriptor for a
fence that must signal before the buffer can be accessed.  If the buffer
can be accessed immediately then a value of -1 should be used.  The
caller must not use the file descriptor after it is passed to
queueBuffer, and the ANativeWindow implementation is responsible for
closing it.

Returns 0 on success or -errno on error.

"
      end

      attribute 11758135 "cancelBuffer"
	public explicit_type "/* * Hook used to cancel a buffer that has been dequeued. * No synchronization is performed between dequeue() and cancel(), so * either external synchronization is needed, or these functions must be * called from the same thread. * * The window holds a reference to the buffer between dequeueBuffer and * either queueBuffer or cancelBuffer, so clients only need their own * reference if they might use the buffer after queueing or canceling it. * Holding a reference to a buffer after queueing or canceling it is only * allowed if a specific buffer count has been set. * * The fenceFd argument specifies a libsync fence file decsriptor for a * fence that must signal before the buffer can be accessed. If the buffer * can be accessed immediately then a value of -1 should be used. * * Note that if the client has not waited on the fence that was returned * from dequeueBuffer, that same fence should be passed to cancelBuffer to * ensure that future uses of the buffer are preceded by a wait on that * fence. The caller must not use the file descriptor after it is passed * to cancelBuffer, and the ANativeWindow implementation is responsible for * closing it. * * Returns 0 on success or -errno on error. */ int (*)(struct ANativeWindow* window, struct ANativeWindowBuffer* buffer, int fenceFd)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /*
     * Hook used to cancel a buffer that has been dequeued.
     * No synchronization is performed between dequeue() and cancel(), so
     * either external synchronization is needed, or these functions must be
     * called from the same thread.
     *
     * The window holds a reference to the buffer between dequeueBuffer and
     * either queueBuffer or cancelBuffer, so clients only need their own
     * reference if they might use the buffer after queueing or canceling it.
     * Holding a reference to a buffer after queueing or canceling it is only
     * allowed if a specific buffer count has been set.
     *
     * The fenceFd argument specifies a libsync fence file decsriptor for a
     * fence that must signal before the buffer can be accessed.  If the buffer
     * can be accessed immediately then a value of -1 should be used.
     *
     * Note that if the client has not waited on the fence that was returned
     * from dequeueBuffer, that same fence should be passed to cancelBuffer to
     * ensure that future uses of the buffer are preceded by a wait on that
     * fence.  The caller must not use the file descriptor after it is passed
     * to cancelBuffer, and the ANativeWindow implementation is responsible for
     * closing it.
     *
     * Returns 0 on success or -errno on error.
     */
    int     (*${name})(struct ANativeWindow* window,
                struct ANativeWindowBuffer* buffer, int fenceFd)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook used to cancel a buffer that has been dequeued.
No synchronization is performed between dequeue() and cancel(), so
either external synchronization is needed, or these functions must be
called from the same thread.

The window holds a reference to the buffer between dequeueBuffer and
either queueBuffer or cancelBuffer, so clients only need their own
reference if they might use the buffer after queueing or canceling it.
Holding a reference to a buffer after queueing or canceling it is only
allowed if a specific buffer count has been set.

The fenceFd argument specifies a libsync fence file decsriptor for a
fence that must signal before the buffer can be accessed.  If the buffer
can be accessed immediately then a value of -1 should be used.

Note that if the client has not waited on the fence that was returned
from dequeueBuffer, that same fence should be passed to cancelBuffer to
ensure that future uses of the buffer are preceded by a wait on that
fence.  The caller must not use the file descriptor after it is passed
to cancelBuffer, and the ANativeWindow implementation is responsible for
closing it.

Returns 0 on success or -errno on error.

"
      end

      classrelation 11115063 // <dependency>
	relation 11115063 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 11115063 // <dependency>
	  b parent class_ref 3111479 // ANativeWindow
      end
    end

    class 3111607 "android_native_window_t"
      visibility package stereotype "typedef" base_type class_ref 3111479 // ANativeWindow
      cpp_decl "${comment}typedef struct ${type} ${name} __deprecated;
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6500151 // <dependency>
	relation 6500151 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 6500151 // <dependency>
	  b parent class_ref 3111479 // ANativeWindow
      end
    end
  end

  deploymentview 274999 "system"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1551159 "camera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3103415 // anonymous131
	class_ref 3103543 // anonymous132
	class_ref 3103671 // anonymous133
	class_ref 3103799 // anonymous134
	class_ref 3103927 // anonymous135
	class_ref 3104055 // camera_face
	class_ref 3104183 // camera_face_t
	class_ref 3104311 // camera_frame_metadata
	class_ref 3104439 // camera_frame_metadata_t
      end
    end

    artifact 1551287 "graphics"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3104567 // android_pixel_format
	class_ref 3104695 // android_pixel_format_t
	class_ref 3104823 // android_ycbcr
	class_ref 3104951 // android_depth_points
	class_ref 3105079 // android_transform
	class_ref 3105207 // android_transform_t
	class_ref 3105335 // android_dataspace
	class_ref 3105463 // android_dataspace_t
	class_ref 3105591 // android_color_transform
	class_ref 3105719 // android_color_transform_t
	class_ref 3105847 // android_hdr
	class_ref 3105975 // android_hdr_t
      end
    end

    artifact 1551415 "radio"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3106103 // radio_class_t
	class_ref 3106231 // radio_band_t
	class_ref 3106359 // anonymous136
	class_ref 3106487 // radio_rds_t
	class_ref 3106615 // anonymous137
	class_ref 3106743 // radio_deemphasis_t
	class_ref 3106871 // radio_region_t
	class_ref 3106999 // radio_direction_t
	class_ref 3107127 // radio_handle_t
	class_ref 3107255 // radio_metadata_t
	class_ref 3107383 // radio_hal_fm_band_config
	class_ref 3107511 // radio_hal_fm_band_config_t
	class_ref 3107639 // radio_hal_am_band_config
	class_ref 3107767 // radio_hal_am_band_config_t
	class_ref 3107895 // radio_hal_band_config
	class_ref 3108151 // radio_band_config
	class_ref 3108279 // radio_band_config_t
	class_ref 3108407 // radio_hal_properties
	class_ref 3108535 // radio_hal_properties_t
	class_ref 3108663 // radio_properties
	class_ref 3108791 // radio_properties_t
	class_ref 3108919 // radio_program_info
	class_ref 3109047 // radio_program_info_t
	class_ref 3109175 // anonymous138
	class_ref 3109303 // radio_event_type_t
	class_ref 3109431 // radio_hal_event
	class_ref 3109687 // radio_event
      end
    end

    artifact 1551543 "thread_defs"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3109943 // anonymous139
      end
    end

    artifact 1551671 "window"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3110071 // android_native_rect_t
	class_ref 3110199 // android_native_base_t
	class_ref 3110327 // ANativeWindowBuffer
	class_ref 3110455 // ANativeWindowBuffer_t
	class_ref 3110583 // android_native_buffer_t
	class_ref 3110711 // anonymous140
	class_ref 3110839 // anonymous141
	class_ref 3110967 // anonymous142
	class_ref 3111095 // anonymous143
	class_ref 3111223 // anonymous144
	class_ref 3111351 // anonymous145
	class_ref 3111479 // ANativeWindow
	class_ref 3111607 // android_native_window_t
      end
    end
  end
end
