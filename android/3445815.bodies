class HelpCommand
!!!43823159.cpp!!!	Run(in args : std::vector<std::string>) : bool
  if (args.empty()) {
    PrintShortHelp();
  } else {
    std::unique_ptr<Command> cmd = CreateCommandInstance(args[0]);
    if (cmd == nullptr) {
      LOG(ERROR) << "malformed command line: can't find help string for unknown command " << args[0];
      LOG(ERROR) << "try using \"--help\"";
      return false;
    } else {
      PrintLongHelpForOneCommand(*cmd);
    }
  }
  return true;
!!!43823287.cpp!!!	PrintShortHelp() : void
  printf(
      "Usage: simpleperf [common options] subcommand [args_for_subcommand]\n"
      "common options:\n"
      "    -h/--help     Print this help information.\n"
      "    --log <severity> Set the minimum severity of logging. Possible severities\n"
      "                     include verbose, debug, warning, error, fatal. Default is\n"
      "                     warning.\n"
      "subcommands:\n");
  for (auto& cmd_name : GetAllCommandNames()) {
    std::unique_ptr<Command> cmd = CreateCommandInstance(cmd_name);
    printf("    %-20s%s\n", cmd_name.c_str(), cmd->ShortHelpString().c_str());
  }
!!!43823415.cpp!!!	PrintLongHelpForOneCommand(in command : Command) : void
  printf("%s\n", command.LongHelpString().c_str());
