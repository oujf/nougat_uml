format 213
"tests" // android::system::core::liblog::tests
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/liblog/tests/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/liblog/tests/"
  cpp_namespace "testing"
  classview 315831 "tests"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3145015 "Benchmark"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 42830519 "Benchmark"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "fn" explicit_type "void (*)(int)"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, void (*${p1})(int)${v1}${)}${volatile}${throw}${abstract} : name_(strdup(name)), fn_(fn) {
    BenchmarkRegister(this);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42830647 "Benchmark"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract} : name_(strdup(name)), fn_(NULL) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42830775 "~Benchmark"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
    free(name_);
  };
"
	
	
	
	
      end

      operation 42830903 "Name"
	cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return name_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42831031 "ArgName"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return NULL; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42831159 "RunFn"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "iterations" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { fn_(iterations); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11809079 "name_"
	protected explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11809207 "fn_"
	private explicit_type "void (*)(int)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
  void (*${name})(int)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3145143 "BenchmarkWantsArgBase"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6526519 // <generalisation>
	relation 6526519 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6526519 // <generalisation>
	  b parent class_ref 3145015 // Benchmark
      end

      operation 42831287 "BenchmarkWantsArgBase"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "fn" explicit_type "void (*)(int, T)"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, void (*${p1})(int, T)${v1}${)}${volatile}${throw}${abstract} : Benchmark(name) {
    fn_arg_ = fn;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42831415 "Arg"
	cpp_inline public return_type class_ref 3145143 // BenchmarkWantsArgBase
	nparams 2
	  param in name "arg_name" explicit_type "char"
	  param in name "arg" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    BenchmarkRegister(new BenchmarkWithArg<T>(name_, fn_arg_, arg_name, arg));
    return this;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42831543 "RunFn"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { printf(\"can't run arg benchmark %s without arg\\n\", Name()); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11809335 "fn_arg_"
	protected explicit_type "void (*)(int, T)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}  void (*${name})(int, T)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3145271 "BenchmarkWithArg"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 3145399 // BenchmarkWantsArg
        rank 0 explicit_value "T"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6526647 // <realization>
	relation 6526647 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6526647 // <realization>
	  b parent class_ref 3145399 // BenchmarkWantsArg
      end

      operation 42831671 "BenchmarkWithArg"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "name" explicit_type "char"
	  param in name "fn" explicit_type "void (*)(int, T)"
	  param in name "arg_name" explicit_type "char"
	  param in name "arg" explicit_type "T"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, void (*${p1})(int, T)${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw}${abstract} :
      BenchmarkWantsArg<T>(name, fn), arg_(arg) {
    arg_name_ = strdup(arg_name);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42831799 "~BenchmarkWithArg"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
    free(arg_name_);
  };
"
	
	
	
	
      end

      operation 42831927 "ArgName"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return arg_name_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 42832055 "RunFn"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 1
	  param in name "iterations" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { BenchmarkWantsArg<T>::fn_arg_(iterations, arg_); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 11809463 "arg_"
	private explicit_type "T"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 11809591 "arg_name_"
	private explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3145399 "BenchmarkWantsArg"
      visibility package 
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 3145143 // BenchmarkWantsArgBase
        rank 0 explicit_value "T"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6526775 // <realization>
	relation 6526775 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6526775 // <realization>
	  b parent class_ref 3145143 // BenchmarkWantsArgBase
      end

      operation 42832183 "BenchmarkWantsArg<T>"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "fn" explicit_type "void (*)(int, T)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, void (*${p1})(int, T)${v1}${)}${const}${volatile}${throw}${abstract} :
    BenchmarkWantsArgBase<T>(name, fn) { };
"
	
	
	
	
      end
    end

    class 3145527 "BenchmarkWantsArg<int>"
      visibility package 
      nactuals 1
      actual class class_ref 3145143 // BenchmarkWantsArgBase
        rank 0 explicit_value "int"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6526903 // <realization>
	relation 6526903 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6526903 // <realization>
	  b parent class_ref 3145143 // BenchmarkWantsArgBase
      end

      operation 42832311 "BenchmarkWantsArg<int>"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "fn" explicit_type "void (*)(int, int)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, void (*${p1})(int, int)${v1}${)}${const}${volatile}${throw}${abstract} :
    BenchmarkWantsArgBase<int>(name, fn) { };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 42832439 "Arg"
	cpp_inline public return_type class_ref 3145527 // BenchmarkWantsArg<int>
	nparams 1
	  param in name "arg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    char arg_name[100];
    PrettyPrintInt(arg_name, sizeof(arg_name), arg);
    BenchmarkRegister(new BenchmarkWithArg<int>(name_, fn_arg_, arg_name, arg));
    return this;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 276791 "tests"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1561527 "benchmark"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3145015 // Benchmark
	class_ref 3145143 // BenchmarkWantsArgBase
	class_ref 3145271 // BenchmarkWithArg
	class_ref 3145399 // BenchmarkWantsArg
	class_ref 3145527 // BenchmarkWantsArg<int>
      end
    end
  end

  package_ref 370359 // tests
end
