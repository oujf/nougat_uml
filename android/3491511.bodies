class EmulatedCamera2
!!!43923255.cpp!!!	EmulatedCamera2(in cameraId : int, inout module : hw_module_t)
    common.close = EmulatedCamera2::close;
    ops = &sDeviceOps;
    priv = this;

    mNotifyCb = NULL;

    mRequestQueueSrc = NULL;
    mFrameQueueDst = NULL;

    mVendorTagOps.get_camera_vendor_section_name =
            EmulatedCamera2::get_camera_vendor_section_name;
    mVendorTagOps.get_camera_vendor_tag_name =
            EmulatedCamera2::get_camera_vendor_tag_name;
    mVendorTagOps.get_camera_vendor_tag_type =
            EmulatedCamera2::get_camera_vendor_tag_type;
    mVendorTagOps.parent = this;

    mStatusPresent = true;
!!!43923511.cpp!!!	Initialize() : status_t
    return NO_ERROR;
!!!43923639.cpp!!!	connectCamera(inout device : hw_device_t) : status_t
    *device = &common;
    return NO_ERROR;
!!!43923767.cpp!!!	closeCamera() : status_t
    return NO_ERROR;
!!!43923895.cpp!!!	getCameraInfo(inout info : camera_info) : status_t
    return EmulatedBaseCamera::getCameraInfo(info);
!!!43924023.cpp!!!	requestQueueNotify() : int
    return INVALID_OPERATION;
!!!43924151.cpp!!!	getInProgressCount() : int
    return INVALID_OPERATION;
!!!43924279.cpp!!!	flushCapturesInProgress() : int
    return INVALID_OPERATION;
!!!43924407.cpp!!!	constructDefaultRequest(in request_template : int, inout request : camera_metadata_t) : int
    return INVALID_OPERATION;
!!!43924535.cpp!!!	allocateStream(in width : uint32_t, in height : uint32_t, in format : int, in stream_ops : camera2_stream_ops_t, inout stream_id : uint32_t, inout format_actual : uint32_t, inout usage : uint32_t, inout max_buffers : uint32_t) : int
    return INVALID_OPERATION;
!!!43924663.cpp!!!	registerStreamBuffers(in stream_id : uint32_t, in num_buffers : int, inout buffers : buffer_handle_t) : int
    return INVALID_OPERATION;
!!!43924791.cpp!!!	releaseStream(in stream_id : uint32_t) : int
    return INVALID_OPERATION;
!!!43924919.cpp!!!	allocateReprocessStream(in width : uint32_t, in height : uint32_t, in format : uint32_t, in reprocess_stream_ops : camera2_stream_in_ops_t, inout stream_id : uint32_t, inout consumer_usage : uint32_t, inout max_buffers : uint32_t) : int
    return INVALID_OPERATION;
!!!43925047.cpp!!!	allocateReprocessStreamFromStream(in output_stream_id : uint32_t, in reprocess_stream_ops : camera2_stream_in_ops_t, inout stream_id : uint32_t) : int
    return INVALID_OPERATION;
!!!43925175.cpp!!!	releaseReprocessStream(in stream_id : uint32_t) : int
    return INVALID_OPERATION;
!!!43925431.cpp!!!	getVendorSectionName(in tag : uint32_t) : char
    return NULL;
!!!43925559.cpp!!!	getVendorTagName(in tag : uint32_t) : char
    return NULL;
!!!43925687.cpp!!!	getVendorTagType(in tag : uint32_t) : int
    return -1;
!!!43925815.cpp!!!	dump(in fd : int) : int
    return INVALID_OPERATION;
!!!43925943.cpp!!!	set_request_queue_src_ops(in d : camera2_device_t, in queue_src_ops : camera2_request_queue_src_ops) : int
    EmulatedCamera2* ec = getInstance(d);
    ec->mRequestQueueSrc = queue_src_ops;
    return NO_ERROR;
!!!43926071.cpp!!!	notify_request_queue_not_empty(in d : camera2_device_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->requestQueueNotify();
!!!43926199.cpp!!!	set_frame_queue_dst_ops(in d : camera2_device_t, in queue_dst_ops : camera2_frame_queue_dst_ops) : int
    EmulatedCamera2* ec = getInstance(d);
    ec->mFrameQueueDst = queue_dst_ops;
    return NO_ERROR;
!!!43926327.cpp!!!	get_in_progress_count(in d : camera2_device_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->getInProgressCount();
!!!43926455.cpp!!!	flush_captures_in_progress(in d : camera2_device_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->flushCapturesInProgress();
!!!43926583.cpp!!!	construct_default_request(in d : camera2_device_t, in request_template : int, inout request : camera_metadata_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->constructDefaultRequest(request_template, request);
!!!43926711.cpp!!!	allocate_stream(in d : camera2_device_t, in width : uint32_t, in height : uint32_t, in format : int, in stream_ops : camera2_stream_ops_t, inout stream_id : uint32_t, inout format_actual : uint32_t, inout usage : uint32_t, inout max_buffers : uint32_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->allocateStream(width, height, format, stream_ops,
            stream_id, format_actual, usage, max_buffers);
!!!43926839.cpp!!!	register_stream_buffers(in d : camera2_device_t, in stream_id : uint32_t, in num_buffers : int, inout buffers : buffer_handle_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->registerStreamBuffers(stream_id,
            num_buffers,
            buffers);
!!!43926967.cpp!!!	release_stream(in d : camera2_device_t, in stream_id : uint32_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->releaseStream(stream_id);
!!!43927095.cpp!!!	allocate_reprocess_stream(in d : camera2_device_t, in width : uint32_t, in height : uint32_t, in format : uint32_t, in reprocess_stream_ops : camera2_stream_in_ops_t, inout stream_id : uint32_t, inout consumer_usage : uint32_t, inout max_buffers : uint32_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->allocateReprocessStream(width, height, format,
            reprocess_stream_ops, stream_id, consumer_usage, max_buffers);
!!!43927223.cpp!!!	allocate_reprocess_stream_from_stream(in d : camera2_device_t, in output_stream_id : uint32_t, in reprocess_stream_ops : camera2_stream_in_ops_t, inout stream_id : uint32_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->allocateReprocessStreamFromStream(output_stream_id,
            reprocess_stream_ops, stream_id);
!!!43927351.cpp!!!	release_reprocess_stream(in d : camera2_device_t, in stream_id : uint32_t) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->releaseReprocessStream(stream_id);
!!!43927479.cpp!!!	trigger_action(in d : camera2_device_t, in trigger_id : uint32_t, in ext1 : int, in ext2 : int) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->triggerAction(trigger_id, ext1, ext2);
!!!43927607.cpp!!!	set_notify_callback(in d : camera2_device_t, in notify_cb : camera2_notify_callback, inout user : void) : int
    EmulatedCamera2* ec = getInstance(d);
    Mutex::Autolock l(ec->mMutex);
    ec->mNotifyCb = notify_cb;
    ec->mNotifyUserPtr = user;
    return NO_ERROR;
!!!43927735.cpp!!!	get_metadata_vendor_tag_ops(in d : camera2_device_t, inout ops : vendor_tag_query_ops_t) : int
    EmulatedCamera2* ec = getInstance(d);
    *ops = static_cast<vendor_tag_query_ops_t*>(
            &ec->mVendorTagOps);
    return NO_ERROR;
!!!43927863.cpp!!!	get_camera_vendor_section_name(in v : vendor_tag_query_ops_t, in tag : uint32_t) : char
    EmulatedCamera2* ec = static_cast<const TagOps*>(v)->parent;
    return ec->getVendorSectionName(tag);
!!!43927991.cpp!!!	get_camera_vendor_tag_name(in v : vendor_tag_query_ops_t, in tag : uint32_t) : char
    EmulatedCamera2* ec = static_cast<const TagOps*>(v)->parent;
    return ec->getVendorTagName(tag);
!!!43928119.cpp!!!	get_camera_vendor_tag_type(in v : vendor_tag_query_ops_t, in tag : uint32_t) : int
    EmulatedCamera2* ec = static_cast<const TagOps*>(v)->parent;
    return ec->getVendorTagType(tag);
!!!43928247.cpp!!!	dump(in d : camera2_device_t, in fd : int) : int
    EmulatedCamera2* ec = getInstance(d);
    return ec->dump(fd);
!!!43928375.cpp!!!	close(inout device : hw_device_t) : int
    EmulatedCamera2* ec =
            static_cast<EmulatedCamera2*>(
                reinterpret_cast<camera2_device_t*>(device) );
    if (ec == NULL) {
        ALOGE("%s: Unexpected NULL camera2 device", __FUNCTION__);
        return -EINVAL;
    }
    return ec->closeCamera();
!!!43928503.cpp!!!	sendNotification(in msgType : int32_t, in ext1 : int32_t, in ext2 : int32_t, in ext3 : int32_t) : void
    camera2_notify_callback notifyCb;
    {
        Mutex::Autolock l(mMutex);
        notifyCb = mNotifyCb;
    }
    if (notifyCb != NULL) {
        notifyCb(msgType, ext1, ext2, ext3, mNotifyUserPtr);
    }
