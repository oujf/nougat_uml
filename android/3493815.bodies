class EmulatedFakeCamera
!!!43941303.cpp!!!	Initialize() : status_t
    status_t res = mFakeCameraDevice.Initialize();
    if (res != NO_ERROR) {
        return res;
    }

    const char* facing = mFacingBack ? EmulatedCamera::FACING_BACK :
                                       EmulatedCamera::FACING_FRONT;

    mParameters.set(EmulatedCamera::FACING_KEY, facing);
    ALOGD("%s: Fake camera is facing %s", __FUNCTION__, facing);

    mParameters.set(EmulatedCamera::ORIENTATION_KEY,
                    gEmulatedCameraFactory.getFakeCameraOrientation());

    res = EmulatedCamera::Initialize();
    if (res != NO_ERROR) {
        return res;
    }

    /*
     * Parameters provided by the camera device.
     */

    /* 352x288 and 320x240 frame dimensions are required by the framework for
     * video mode preview and video recording. */
    mParameters.set(CameraParameters::KEY_SUPPORTED_PICTURE_SIZES,
                    "640x480,352x288,320x240");
    mParameters.set(CameraParameters::KEY_SUPPORTED_PREVIEW_SIZES,
                    "640x480,352x288,320x240");
    mParameters.setPreviewSize(640, 480);
    mParameters.setPictureSize(640, 480);

    return NO_ERROR;
!!!43941431.cpp!!!	getCameraDevice() : EmulatedCameraDevice
    return &mFakeCameraDevice;
