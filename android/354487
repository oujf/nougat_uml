format 213
"base" // android::system::extras::perfprofd::quipper::base::base
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/extras/perfprofd/quipper/base/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/extras/perfprofd/quipper/base/"
  cpp_namespace "base"
  classview 322359 "base"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3202103 "LinkerInitialized"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The following enum should be used only as a constructor argument to indicate
 that the variable has static storage class, and that the constructor should
 do nothing to its state.  It indicates to the reader that it is legal to
 declare a static instance of the class, provided the constructor is given
 the base::LINKER_INITIALIZED argument.  Normally, it is unsafe to declare a
 static variable that has a constructor or a destructor because invocation
 order is undefined.  However, IF the type can be initialized by filling with
 zeroes (which the loader does for static variables), AND the destructor also
 does nothing to the storage, AND there are no virtual methods, then a
 constructor declared as
       explicit MyClass(base::LinkerInitialized x) {}
 and invoked as
       static MyClass my_variable_name(base::LINKER_INITIALIZED);"
      attribute 12011063 "LINKER_INITIALIZED"
	public type class_ref 3202103 // LinkerInitialized
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 283319 "base"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1577271 "macros"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3202103 // LinkerInitialized
      end
    end
  end
end
