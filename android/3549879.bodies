class ServerConnection
!!!44055991.cpp!!!	~ServerConnection()
    delete m_ut_enc;
    delete m_glEnc;
    delete m_stream;
!!!44056119.cpp!!!	create(in bufsize : size_t = 4 * 1024 * 1024, in defaultServer : char = RGL_DEFAULT_SERVER) : int
    /* XXX: Make configurable through system property */
    int useQemuPipe = 1;

    if (m_stream != NULL) delete(m_stream);

    if (useQemuPipe) {
        QemuPipeStream*  pipeStream = new QemuPipeStream(bufsize);

        if (pipeStream->connect() < 0) {
            ALOGE("couldn't connect to host server\n");
            delete pipeStream;
            return -1;
        }
        m_stream = pipeStream;
    }
    else /* !useQemuPipe */
    {
        TcpStream*  tcpStream = new TcpStream(bufsize);

        char *s = getenv(ENV_RGL_SERVER);
        char *hostname;
        if (s == NULL) {
            hostname = strdup(defaultServer);
        } else {
            hostname = strdup(s);
        }

        if (tcpStream->connect(hostname, CODEC_SERVER_PORT) < 0) {
            ALOGE("couldn't connect to %s\n", hostname);
            free(hostname);
            delete tcpStream;
            return -1;
        }
        LOGI("connecting to server %s\n", hostname);
        free(hostname);

        m_stream = tcpStream;
    }

    m_glEnc = new GLEncoder(m_stream);
    m_glEnc->setContextAccessor(s_getGlContext);

    m_gl2Enc = new GL2Encoder(m_stream);
    m_gl2Enc->setContextAccessor(s_getGl2Context);

    m_ut_enc = new ut_rendercontrol_encoder_context_t(m_stream);
    return 0;
!!!44056247.cpp!!!	s_getGlContext() : gl_client_context_t
    EGLThreadInfo *ti = getEGLThreadInfo();
    if (ti->serverConn) {
        return ti->serverConn->m_glEnc;
    }
    return NULL;
!!!44056375.cpp!!!	s_getServerConnection() : ServerConnection
    EGLThreadInfo *ti = getEGLThreadInfo();
    if (!ti->serverConn)
    {
        ti->serverConn = new ServerConnection();
        if (ti->serverConn->create() < 0) {
            delete ti->serverConn;
            ti->serverConn = NULL;
        }
    }

    return ti->serverConn;
!!!44056503.cpp!!!	s_getGl2Context() : gl2_client_context_t
    EGLThreadInfo *ti = getEGLThreadInfo();
    if (ti->serverConn) {
        return ti->serverConn->m_gl2Enc;
    }
    return NULL;
