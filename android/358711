format 213
"audio_utils" // android::system::media::audio_utils::include::audio_utils
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/media/audio_utils/include/audio_utils/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/media/audio_utils/include/audio_utils/"
  classview 325175 "audio_utils"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3258679 "echo_reference_itfe"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "+ as input:
     - delay_ns is the delay introduced by playback buffers
     - time_stamp is the time stamp corresponding to the delay calculation
+ as output:
     unused
when used for EchoReference::read():
+ as input:
     - delay_ns is the delay introduced by capture buffers
     - time_stamp is the time stamp corresponding to the delay calculation
+ as output:
     - delay_ns is the delay between the returned frames and the capture time derived from
     delay and time stamp indicated as input. This delay is to be communicated to the AEC.
     - frame_count is updated with the actual number of frames returned
"
      attribute 12152247 "read"
	public explicit_type "int (*)(struct echo_reference_itfe *echo_reference, struct echo_reference_buffer *buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    int (*${name})(struct echo_reference_itfe *echo_reference, struct echo_reference_buffer *buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12152375 "write"
	public explicit_type "int (*)(struct echo_reference_itfe *echo_reference, struct echo_reference_buffer *buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    int (*${name})(struct echo_reference_itfe *echo_reference, struct echo_reference_buffer *buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3258807 "audio_utils_fifo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Single writer, single reader non-blocking FIFO.
 Writer and reader must be in same process.
 No user-serviceable parts within."
      attribute 12152503 "mFrameCount"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are const after initialization
 max number of significant frames to be stored in the FIFO > 0"
      end

      attribute 12152631 "mFrameCountP2"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " roundup(mFrameCount)"
      end

      attribute 12152759 "mFudgeFactor"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mFrameCountP2 - mFrameCount, the number of \"wasted\" frames after"
      end

      attribute 12152887 "mFrameSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the end of mBuffer.  Only the indices are wasted, not any memory.
 size of each frame in bytes"
      end

      attribute 12153015 "mBuffer"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " pointer to caller-allocated buffer of size mFrameCount frames"
      end

      attribute 12153143 "mFront"
	volatile public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " frame index of first frame slot available to read, or read index"
      end

      attribute 12153271 "mRear"
	volatile public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " frame index of next frame slot available to write, or write index"
      end
    end

    class 3258935 "gain_minifloat_packed_t"
      visibility package stereotype "typedef" base_type class_ref 2810935 // uint32_t
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A pair of gain_minifloat_t packed into a single word "
      classrelation 6666679 // <dependency>
	relation 6666679 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 6666679 // <dependency>
	  b parent class_ref 2810935 // uint32_t
      end
    end

    class 3259063 "resampler_buffer_provider"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " call back interface used by the resampler to get new data "
      attribute 12153399 "get_next_buffer"
	public explicit_type "/** * get a new buffer of data: * as input: buffer->frame_count is the number of frames requested * as output: buffer->frame_count is the number of frames returned * buffer->raw points to data returned */ int (*)(struct resampler_buffer_provider *provider, struct resampler_buffer *buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /**
     *  get a new buffer of data:
     *   as input: buffer->frame_count is the number of frames requested
     *   as output: buffer->frame_count is the number of frames returned
     *              buffer->raw points to data returned
     */
    int (*${name})(struct resampler_buffer_provider *provider,
            struct resampler_buffer *buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " get a new buffer of data:
  as input: buffer->frame_count is the number of frames requested
  as output: buffer->frame_count is the number of frames returned
             buffer->raw points to data returned

"
      end

      attribute 12153527 "release_buffer"
	public explicit_type "/** * release a consumed buffer of data: * as input: buffer->frame_count is the number of frames released * buffer->raw points to data released */ void (*)(struct resampler_buffer_provider *provider, struct resampler_buffer *buffer)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    /**
     *  release a consumed buffer of data:
     *   as input: buffer->frame_count is the number of frames released
     *             buffer->raw points to data released
     */
    void (*${name})(struct resampler_buffer_provider *provider,
            struct resampler_buffer *buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " release a consumed buffer of data:
  as input: buffer->frame_count is the number of frames released
            buffer->raw points to data released

"
      end
    end

    class 3259191 "resampler_itfe"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " resampler interface "
      attribute 12153655 "reset"
	public explicit_type "/** * reset resampler state */ void (*)(struct resampler_itfe *resampler)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    /**
     * reset resampler state
     */
    void (*${name})(struct resampler_itfe *resampler)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "reset resampler state

"
      end

      attribute 12153783 "resample_from_provider"
	public explicit_type "/** * resample input from buffer provider and output at most *outFrameCount to out buffer. * *outFrameCount is updated with the actual number of frames produced. */ int (*)(struct resampler_itfe *resampler, int16_t *out, size_t *outFrameCount)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    /**
     * resample input from buffer provider and output at most *outFrameCount to out buffer.
     * *outFrameCount is updated with the actual number of frames produced.
     */
    int (*${name})(struct resampler_itfe *resampler,
                    int16_t *out,
                    size_t *outFrameCount)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "resample input from buffer provider and output at most *outFrameCount to out buffer.
*outFrameCount is updated with the actual number of frames produced.

"
      end

      attribute 12153911 "resample_from_input"
	public explicit_type "/** * resample at most *inFrameCount frames from in buffer and output at most * *outFrameCount to out buffer. *inFrameCount and *outFrameCount are updated respectively * with the number of frames remaining in input and written to output. */ int (*)(struct resampler_itfe *resampler, int16_t *in, size_t *inFrameCount, int16_t *out, size_t *outFrameCount)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    /**
     * resample at most *inFrameCount frames from in buffer and output at most
     * *outFrameCount to out buffer. *inFrameCount and *outFrameCount are updated respectively
     * with the number of frames remaining in input and written to output.
     */
    int (*${name})(struct resampler_itfe *resampler,
                    int16_t *in,
                    size_t *inFrameCount,
                    int16_t *out,
                    size_t *outFrameCount)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "resample at most *inFrameCount frames from in buffer and output at most
*outFrameCount to out buffer. *inFrameCount and *outFrameCount are updated respectively
with the number of frames remaining in input and written to output.

"
      end

      attribute 12154039 "delay_ns"
	public explicit_type "/** * \\return the latency introduced by the resampler in ns. */ int32_t (*)(struct resampler_itfe *resampler)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    /**
     * \\return the latency introduced by the resampler in ns.
     */
    int32_t (*${name})(struct resampler_itfe *resampler)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "\\return the latency introduced by the resampler in ns.

"
      end
    end

    class 3259319 "SF_INFO"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 12154167 "frames"
	public explicit_type "sf_count_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12154295 "samplerate"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12154423 "channels"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12154551 "format"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3259447 "SNDFILE"
      visibility package stereotype "typedef" explicit_base_type "SNDFILE_"
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " opaque to clients"
    end
  end

  deploymentview 286519 "audio_utils"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1591223 "echo_reference"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3258679 // echo_reference_itfe
      end
    end

    artifact 1591351 "fifo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3258807 // audio_utils_fifo
      end
    end

    artifact 1591479 "minifloat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3258935 // gain_minifloat_packed_t
      end
    end

    artifact 1591607 "resampler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3259063 // resampler_buffer_provider
	class_ref 3259191 // resampler_itfe
      end
    end

    artifact 1591735 "sndfile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3259319 // SF_INFO
	class_ref 3259447 // SNDFILE
      end
    end
  end

  package_ref 358839 // spdif
end
