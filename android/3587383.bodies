class ReadEventResponse
!!!44104631.cpp!!!	ToString() : std::string
    char buffer[32];
    snprintf(buffer, sizeof(buffer), "ReadEventResponse %u\n", GetEventType());
    return std::string(buffer);
!!!44104759.cpp!!!	FromBytes(in buffer : std::vector<uint8_t>) : std::unique_ptr<ReadEventResponse>
    // The first 4 bytes of any event must be the event type - use it to figure
    // out which class to construct
    uint32_t event_type = ReadEventResponse::EventTypeFromBuffer(buffer);
    if (ReadEventResponse::IsSensorEvent(event_type)) {
        return SensorEvent::FromBytes(buffer);
    } else if (ReadEventResponse::IsAppToHostEvent(event_type)) {
        return AppToHostEvent::FromBytes(buffer);
    } else if (ReadEventResponse::IsResetReasonEvent(event_type)) {
        return ResetReasonEvent::FromBytes(buffer);
    } else {
        LOGW("Received unexpected/unsupported event type %u", event_type);
        return nullptr;
    }
!!!44104887.cpp!!!	Populate(in buffer : std::vector<uint8_t>) : bool
    if (buffer.size() < sizeof(Event)) {
        return false;
    }

    event_data.resize(buffer.size());
    std::copy(buffer.begin(), buffer.end(), event_data.begin());
    return true;
!!!44105015.cpp!!!	IsAppToHostEvent() : bool
    return ReadEventResponse::IsAppToHostEvent(GetEventType());
!!!44105143.cpp!!!	IsSensorEvent() : bool
    return ReadEventResponse::IsSensorEvent(GetEventType());
!!!44105271.cpp!!!	IsResetReasonEvent() : bool
    return ReadEventResponse::IsResetReasonEvent(GetEventType());
!!!44105399.cpp!!!	GetEventType() : uint32_t
    return ReadEventResponse::EventTypeFromBuffer(event_data);
!!!44105527.cpp!!!	EventTypeFromBuffer(in buffer : std::vector<uint8_t>) : uint32_t
    if (buffer.size() < sizeof(uint32_t)) {
        LOGW("Invalid/short event of size %zu", buffer.size());
        return 0;
    }
    return *reinterpret_cast<const uint32_t *>(buffer.data());
!!!44105655.cpp!!!	IsAppToHostEvent(in event_type : uint32_t) : bool
    return (event_type == static_cast<uint32_t>(EventType::AppToHostEvent));
!!!44105783.cpp!!!	IsSensorEvent(in event_type : uint32_t) : bool
    return (event_type >= static_cast<uint32_t>(EventType::FirstSensorEvent) &&
            event_type <= static_cast<uint32_t>(EventType::LastSensorEvent));
!!!44105911.cpp!!!	IsResetReasonEvent(in event_type : uint32_t) : bool
    return (event_type == static_cast<uint32_t>(EventType::ResetReasonEvent));
