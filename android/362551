format 213
"keystore" // android::system::security::keystore::include::keystore::keystore
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/security/keystore/include/keystore/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/security/keystore/include/keystore/"
  cpp_namespace "keystore"
  classview 327735 "keystore"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3298487 "KeystoreClient"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An abstract class providing a convenient interface to keystore services. This
 interface is designed to:
   - hide details of the IPC mechanism (e.g. binder)
   - use std data types
   - encourage the use of keymaster::AuthorizationSet[Builder]
   - be convenient for native services integrating with keystore
   - be safely mocked for unit testing (e.g. pure virtual methods)

 Example usage:
   KeystoreClient* keystore = new KeyStoreClientImpl();
   keystore->AddRandomNumberGeneratorEntropy(\"unpredictable\");

 Notes on error codes:
   Keystore binder methods return a variety of values including ResponseCode
   values defined in keystore.h, keymaster_error_t values defined in
   keymaster_defs.h, or just 0 or -1 (both of which conflict with
   keymaster_error_t). The methods in this class converge on a single success
   indicator for convenience. KM_ERROR_OK was chosen over ::NO_ERROR for two
   reasons:
   1) KM_ERROR_OK is 0, which is a common convention for success, is the gmock
      default, and allows error checks like 'if (error) {...'.
   2) Although both pollute the global namespace, KM_ERROR_OK has a prefix per
      C convention and hopefully clients can use this interface without
      needing to include 'keystore.h' directly."
      operation 43311927 "KeystoreClient"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43312055 "~KeystoreClient"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43312183 "encryptWithAuthentication"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "key_name" explicit_type "std::string"
	  param in name "data" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts and authenticates |data| with minimal configuration for local
 decryption. If a key identified by |key_name| does not already exist it
 will be generated. On success returns true and populates |encrypted_data|.
 Note: implementations may generate more than one key but they will always
 have |key_name| as a prefix."
      end

      operation 43312311 "decryptWithAuthentication"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "key_name" explicit_type "std::string"
	  param in name "encrypted_data" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Decrypts and authenticates |encrypted_data| as output by
 EncryptWithAuthentication using the key(s) identified by |key_name|. On
 success returns true and populates |data|."
      end

      operation 43312439 "oneShotOperation"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 7
	  param in name "purpose" explicit_type "keymaster_purpose_t"
	  param in name "key_name" explicit_type "std::string"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "input_data" explicit_type "std::string"
	  param in name "signature_to_verify" explicit_type "std::string"
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Performs a Begin/Update/Finish sequence for an operation. The |purpose|,
 |key_name|, |input_parameters|, and |output_parameters| are as in
 BeginOperation. The |input_data| is as in UpdateOperation. The
 |signature_to_verify| and |output_data| are as in FinishOperation. On
 success returns true."
      end

      operation 43312567 "addRandomNumberGeneratorEntropy"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "entropy" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds |entropy| to the random number generator. Returns KM_ERROR_OK on
 success and a Keystore ResponseCode or keymaster_error_t on failure."
      end

      operation 43312695 "generateKey"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 4
	  param in name "key_name" explicit_type "std::string"
	  param in name "key_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "hardware_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	  param inout name "software_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generates a key according to the given |key_parameters| and stores it with
 the given |key_name|. The [hardware|software]_enforced_characteristics of
 the key are provided on success. Returns KM_ERROR_OK on success. Returns
 KM_ERROR_OK on success and a Keystore ResponseCode or keymaster_error_t on
 failure."
      end

      operation 43312823 "getKeyCharacteristics"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 3
	  param in name "key_name" explicit_type "std::string"
	  param inout name "hardware_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	  param inout name "software_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Provides the [hardware|software]_enforced_characteristics of a key
 identified by |key_name|. Returns KM_ERROR_OK on success and a Keystore
 ResponseCode or keymaster_error_t on failure."
      end

      operation 43312951 "importKey"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 6
	  param in name "key_name" explicit_type "std::string"
	  param in name "key_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "key_format" explicit_type "keymaster_key_format_t"
	  param in name "key_data" explicit_type "std::string"
	  param inout name "hardware_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	  param inout name "software_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Imports |key_data| in the given |key_format|, applies the given
 |key_parameters|, and stores it with the given |key_name|. The
 [hardware|software]_enforced_characteristics of the key are provided on
 success. Returns KM_ERROR_OK on success and a Keystore ResponseCode or
 keymaster_error_t on failure."
      end

      operation 43313079 "exportKey"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 3
	  param in name "export_format" explicit_type "keymaster_key_format_t"
	  param in name "key_name" explicit_type "std::string"
	  param inout name "export_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Exports the public key identified by |key_name| to |export_data| using
 |export_format|. Returns KM_ERROR_OK on success and a Keystore ResponseCode
 or keymaster_error_t on failure."
      end

      operation 43313207 "deleteKey"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes the key identified by |key_name|. Returns KM_ERROR_OK on success
 and a Keystore ResponseCode or keymaster_error_t on failure."
      end

      operation 43313335 "deleteAllKeys"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes all keys owned by the caller. Returns KM_ERROR_OK on success and a
 Keystore ResponseCode or keymaster_error_t on failure."
      end

      operation 43313463 "beginOperation"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 5
	  param in name "purpose" explicit_type "keymaster_purpose_t"
	  param in name "key_name" explicit_type "std::string"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "handle" explicit_type "keymaster_operation_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Begins a cryptographic operation (e.g. encrypt, sign) identified by
 |purpose| using the key identified by |key_name| and the given
 |input_parameters|. On success, any |output_parameters| and an operation
 |handle| are populated. Returns KM_ERROR_OK on success and a Keystore
 ResponseCode or keymaster_error_t on failure."
      end

      operation 43313591 "updateOperation"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 6
	  param in name "handle" explicit_type "keymaster_operation_handle_t"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "input_data" explicit_type "std::string"
	  param inout name "num_input_bytes_consumed" explicit_type "size_t"
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Continues the operation associated with |handle| using the given
 |input_parameters| and |input_data|. On success, the
 |num_input_bytes_consumed| and any |output_parameters| are populated. Any
 |output_data| will be appended. Returns KM_ERROR_OK on success and a
 Keystore ResponseCode or keymaster_error_t on failure."
      end

      operation 43313719 "finishOperation"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 5
	  param in name "handle" explicit_type "keymaster_operation_handle_t"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "signature_to_verify" explicit_type "std::string"
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finishes the operation associated with |handle| using the given
 |input_parameters| and, if necessary, a |signature_to_verify|. On success,
 any |output_parameters| are populated and |output_data| is appended.
 Returns KM_ERROR_OK on success and a Keystore ResponseCode or
 keymaster_error_t on failure."
      end

      operation 43313847 "abortOperation"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "handle" explicit_type "keymaster_operation_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Aborts the operation associated with |handle|. Returns KM_ERROR_OK on
 success and a Keystore ResponseCode or keymaster_error_t on failure."
      end

      operation 43313975 "doesKeyExist"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if a key identified by |key_name| exists in the caller's
 key store. Returns false if an error occurs."
      end

      operation 43314103 "listKeys"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "prefix" explicit_type "std::string"
	  param inout name "key_name_list" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Provides a |key_name_list| containing all existing key names in the
 caller's key store starting with |prefix|. Returns true on success."
      end
    end

    class 3298615 "KeystoreClientImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6686007 // <generalisation>
	relation 6686007 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6686007 // <generalisation>
	  b parent class_ref 3298487 // KeystoreClient
      end

      operation 43314231 "KeystoreClientImpl"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "// namespace

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43314359 "~KeystoreClientImpl"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43314487 "encryptWithAuthentication"
	preserve_cpp_body_indent cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "key_name" explicit_type "std::string"
	  param in name "data" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " KeystoreClient methods."
      end

      operation 43314615 "decryptWithAuthentication"
	preserve_cpp_body_indent cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "key_name" explicit_type "std::string"
	  param in name "encrypted_data" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43314743 "oneShotOperation"
	preserve_cpp_body_indent cpp_override public explicit_return_type "bool"
	nparams 7
	  param in name "purpose" explicit_type "keymaster_purpose_t"
	  param in name "key_name" explicit_type "std::string"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "input_data" explicit_type "std::string"
	  param in name "signature_to_verify" explicit_type "std::string"
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, ${t5} * ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43314871 "addRandomNumberGeneratorEntropy"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 1
	  param in name "entropy" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43314999 "generateKey"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 4
	  param in name "key_name" explicit_type "std::string"
	  param in name "key_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "hardware_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	  param inout name "software_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315127 "getKeyCharacteristics"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 3
	  param in name "key_name" explicit_type "std::string"
	  param inout name "hardware_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	  param inout name "software_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315255 "importKey"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 6
	  param in name "key_name" explicit_type "std::string"
	  param in name "key_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "key_format" explicit_type "keymaster_key_format_t"
	  param in name "key_data" explicit_type "std::string"
	  param inout name "hardware_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	  param inout name "software_enforced_characteristics" type class_ref 3221431 // AuthorizationSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315383 "exportKey"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 3
	  param in name "export_format" explicit_type "keymaster_key_format_t"
	  param in name "key_name" explicit_type "std::string"
	  param inout name "export_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315511 "deleteKey"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 1
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315639 "deleteAllKeys"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315767 "beginOperation"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 5
	  param in name "purpose" explicit_type "keymaster_purpose_t"
	  param in name "key_name" explicit_type "std::string"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "handle" explicit_type "keymaster_operation_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43315895 "updateOperation"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 6
	  param in name "handle" explicit_type "keymaster_operation_handle_t"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "input_data" explicit_type "std::string"
	  param inout name "num_input_bytes_consumed" explicit_type "size_t"
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43316023 "finishOperation"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 5
	  param in name "handle" explicit_type "keymaster_operation_handle_t"
	  param in name "input_parameters" type class_ref 3221431 // AuthorizationSet
	  param in name "signature_to_verify" explicit_type "std::string"
	  param inout name "output_parameters" type class_ref 3221431 // AuthorizationSet
	  param inout name "output_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43316151 "abortOperation"
	preserve_cpp_body_indent cpp_override public explicit_return_type "int32_t"
	nparams 1
	  param in name "handle" explicit_type "keymaster_operation_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43316279 "doesKeyExist"
	preserve_cpp_body_indent cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43316407 "listKeys"
	preserve_cpp_body_indent cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "prefix" explicit_type "std::string"
	  param inout name "key_name_list" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43316535 "getNextVirtualHandle"
	preserve_cpp_body_indent private explicit_return_type "keymaster_operation_handle_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns an available virtual operation handle."
      end

      operation 43316663 "mapKeystoreError"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "keystore_error" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Maps a keystore error code to a code where all success cases use
 KM_ERROR_OK (not keystore's NO_ERROR)."
      end

      operation 43316791 "createOrVerifyEncryptionKey"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an encryption key suitable for EncryptWithAuthentication or
 verifies attributes if the key already exists. Returns true on success."
      end

      operation 43316919 "createOrVerifyAuthenticationKey"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an authentication key suitable for EncryptWithAuthentication or
 verifies attributes if the key already exists. Returns true on success."
      end

      operation 43317047 "verifyEncryptionKeyAttributes"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "key_name" explicit_type "std::string"
	  param inout name "verified" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Verifies attributes of an encryption key suitable for
 EncryptWithAuthentication. Returns true on success and populates |verified|
 with the result of the verification."
      end

      operation 43317175 "verifyAuthenticationKeyAttributes"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "key_name" explicit_type "std::string"
	  param inout name "verified" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Verifies attributes of an authentication key suitable for
 EncryptWithAuthentication. Returns true on success and populates |verified|
 with the result of the verification."
      end

      attribute 12288055 "service_manager_"
	private explicit_type "android::IServiceManager"
	stereotype "android::sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12288183 "keystore_binder_"
	private explicit_type "android::IBinder"
	stereotype "android::sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6686135 // keystore_ (<directional composition>)
	relation 6686135 *-->
	  stereotype "android::sp"
	  a role_name "keystore_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6686135 // keystore_ (<directional composition>)
	  b parent class_ref 3297847 // IKeystoreService
      end

      attribute 12288311 "next_virtual_handle_"
	private explicit_type "keymaster_operation_handle_t"
	init_value "=  1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12288439 "active_operations_"
	private explicit_type "keymaster_operation_handle_t, android::sp<android::IBinder>"
	stereotype "std::map"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3298743 "KeystoreClientMock"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A mock implementation of KeystoreClient. By default all methods do nothing
 and return KM_ERROR_OK (or false)."
      classrelation 6686263 // <generalisation>
	relation 6686263 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6686263 // <generalisation>
	  b parent class_ref 3298487 // KeystoreClient
      end

      operation 43317303 "KeystoreClientMock"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43317431 "~KeystoreClientMock"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end
  end

  deploymentview 289335 "keystore"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1601463 "keystore_client"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3298487 // KeystoreClient
      end
    end

    artifact 1601591 "keystore_client_impl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3298615 // KeystoreClientImpl
      end
    end

    artifact 1601719 "keystore_client_mock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3298743 // KeystoreClientMock
      end
    end
  end
end
