format 213
"common" // android::system::tpm::attestation::common
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/tpm/attestation/common/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/tpm/attestation/common/"
  cpp_namespace "attestation"
  classview 328759 "common"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3314999 "AttestationInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The main attestation interface implemented by proxies and services. The
 anticipated flow looks like this:
   [APP] -> AttestationInterface -> [IPC] -> AttestationInterface"
      operation 43390263 "~AttestationInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43390391 "Initialize"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Performs initialization tasks that may take a long time. This method must
 be successfully called before calling any other method. Returns true on
 success."
      end

      class 3315127 "CreateGoogleAttestedKeyCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a CreateGoogleAttestedKeyRequest and responds with a
 CreateGoogleAttestedKeyReply."
	classrelation 6711095 // <generalisation>
	  relation 6711095 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711095 // <generalisation>
	    b parent class_ref 3315255 // typedef163
	end
      end

      class 3315255 "typedef163"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const CreateGoogleAttestedKeyReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43390519 "CreateGoogleAttestedKey"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "CreateGoogleAttestedKeyRequest"
	  param in name "callback" type class_ref 3315127 // CreateGoogleAttestedKeyCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3315383 "GetKeyInfoCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a GetKeyInfoRequest and responds with a GetKeyInfoReply."
	classrelation 6711223 // <generalisation>
	  relation 6711223 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711223 // <generalisation>
	    b parent class_ref 3315511 // typedef164
	end
      end

      class 3315511 "typedef164"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const GetKeyInfoReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43390647 "GetKeyInfo"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetKeyInfoRequest"
	  param in name "callback" type class_ref 3315383 // GetKeyInfoCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3315639 "GetEndorsementInfoCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a GetEndorsementInfoRequest and responds with a
 GetEndorsementInfoReply."
	classrelation 6711351 // <generalisation>
	  relation 6711351 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711351 // <generalisation>
	    b parent class_ref 3315767 // typedef165
	end
      end

      class 3315767 "typedef165"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const GetEndorsementInfoReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43390775 "GetEndorsementInfo"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetEndorsementInfoRequest"
	  param in name "callback" type class_ref 3315639 // GetEndorsementInfoCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3315895 "GetAttestationKeyInfoCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a GetAttestationKeyInfoRequest and responds with a
 GetAttestationKeyInfoReply."
	classrelation 6711479 // <generalisation>
	  relation 6711479 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711479 // <generalisation>
	    b parent class_ref 3316023 // typedef166
	end
      end

      class 3316023 "typedef166"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const GetAttestationKeyInfoReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43390903 "GetAttestationKeyInfo"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetAttestationKeyInfoRequest"
	  param in name "callback" type class_ref 3315895 // GetAttestationKeyInfoCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3316151 "ActivateAttestationKeyCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a ActivateAttestationKeyRequest and responds with a
 ActivateAttestationKeyReply."
	classrelation 6711607 // <generalisation>
	  relation 6711607 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711607 // <generalisation>
	    b parent class_ref 3316279 // typedef167
	end
      end

      class 3316279 "typedef167"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const ActivateAttestationKeyReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43391031 "ActivateAttestationKey"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "ActivateAttestationKeyRequest"
	  param in name "callback" type class_ref 3316151 // ActivateAttestationKeyCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3316407 "CreateCertifiableKeyCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a CreateCertifiableKeyRequest and responds with a
 CreateCertifiableKeyReply."
	classrelation 6711735 // <generalisation>
	  relation 6711735 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711735 // <generalisation>
	    b parent class_ref 3316535 // typedef168
	end
      end

      class 3316535 "typedef168"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const CreateCertifiableKeyReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43391159 "CreateCertifiableKey"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "CreateCertifiableKeyRequest"
	  param in name "callback" type class_ref 3316407 // CreateCertifiableKeyCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3316663 "DecryptCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a DecryptRequest and responds with a DecryptReply."
	classrelation 6711863 // <generalisation>
	  relation 6711863 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711863 // <generalisation>
	    b parent class_ref 3316791 // typedef169
	end
      end

      class 3316791 "typedef169"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const DecryptReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43391287 "Decrypt"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "DecryptRequest"
	  param in name "callback" type class_ref 3316663 // DecryptCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3316919 "SignCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a SignRequest and responds with a SignReply."
	classrelation 6711991 // <generalisation>
	  relation 6711991 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6711991 // <generalisation>
	    b parent class_ref 3317047 // typedef170
	end
      end

      class 3317047 "typedef170"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const SignReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43391415 "Sign"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "SignRequest"
	  param in name "callback" type class_ref 3316919 // SignCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3317175 "RegisterKeyWithChapsTokenCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " Processes a RegisterKeyWithChapsTokenRequest and responds with a
 RegisterKeyWithChapsTokenReply."
	classrelation 6712119 // <generalisation>
	  relation 6712119 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6712119 // <generalisation>
	    b parent class_ref 3317303 // typedef171
	end
      end

      class 3317303 "typedef171"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const RegisterKeyWithChapsTokenReply&)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43391543 "RegisterKeyWithChapsToken"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "RegisterKeyWithChapsTokenRequest"
	  param in name "callback" type class_ref 3317175 // RegisterKeyWithChapsTokenCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3317431 "CryptoUtility"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A class which provides helpers for cryptography-related tasks."
      operation 43391671 "~CryptoUtility"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43391799 "GetRandom"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "num_bytes" explicit_type "size_t"
	  param inout name "random_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generates |num_bytes| of |random_data|. Returns true on success."
      end

      operation 43391927 "CreateSealedKey"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param inout name "aes_key" explicit_type "std::string"
	  param inout name "sealed_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a random |aes_key| and seals it to the TPM's PCR0, producing a
 |sealed_key|. Returns true on success."
      end

      operation 43392055 "EncryptData"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 4
	  param in name "data" explicit_type "std::string"
	  param in name "aes_key" explicit_type "std::string"
	  param in name "sealed_key" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts the given |data| using the |aes_key|. The |sealed_key| will be
 embedded in the |encrypted_data| to assist with decryption. It can be
 extracted from the |encrypted_data| using UnsealKey(). Returns true on
 success."
      end

      operation 43392183 "UnsealKey"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "encrypted_data" explicit_type "std::string"
	  param inout name "aes_key" explicit_type "std::string"
	  param inout name "sealed_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Extracts and unseals the |aes_key| from the |sealed_key| embedded in
 the given |encrypted_data|. The |sealed_key| is also provided as an output
 so callers can make subsequent calls to EncryptData() with the same key.
 Returns true on success."
      end

      operation 43392311 "DecryptData"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "encrypted_data" explicit_type "std::string"
	  param in name "aes_key" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Decrypts |encrypted_data| using |aes_key|, producing the decrypted |data|.
 Returns true on success."
      end

      operation 43392439 "GetRSASubjectPublicKeyInfo"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "public_key" explicit_type "std::string"
	  param inout name "public_key_info" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convert |public_key| from PKCS #1 RSAPublicKey to X.509
 SubjectPublicKeyInfo. On success returns true and provides the
 |public_key_info|."
      end

      operation 43392567 "GetRSAPublicKey"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "public_key_info" explicit_type "std::string"
	  param inout name "public_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convert |public_key_info| from X.509 SubjectPublicKeyInfo to PKCS #1
 RSAPublicKey. On success returns true and provides the |public_key|."
      end

      operation 43392695 "EncryptIdentityCredential"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 4
	  param in name "credential" explicit_type "std::string"
	  param in name "ek_public_key_info" explicit_type "std::string"
	  param in name "aik_public_key" explicit_type "std::string"
	  param inout name "encrypted" explicit_type "EncryptedIdentityCredential"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts a |credential| in a format compatible with TPM attestation key
 activation. The |ek_public_key_info| must be provided in X.509
 SubjectPublicKeyInfo format and the |aik_public_key| must be provided in
 TPM_PUBKEY format."
      end

      operation 43392823 "EncryptForUnbind"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "public_key" explicit_type "std::string"
	  param in name "data" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts |data| in a format compatible with the TPM unbind operation. The
 |public_key| must be provided in X.509 SubjectPublicKeyInfo format."
      end

      operation 43392951 "VerifySignature"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "public_key" explicit_type "std::string"
	  param in name "data" explicit_type "std::string"
	  param in name "signature" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Verifies a PKCS #1 v1.5 SHA-256 |signature| over |data|. The |public_key|
 must be provided in X.509 SubjectPublicKeyInfo format."
      end
    end

    class 3317559 "CryptoUtilityImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An implementation of CryptoUtility."
      classrelation 6712247 // <generalisation>
	relation 6712247 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6712247 // <generalisation>
	  b parent class_ref 3317431 // CryptoUtility
      end

      operation 43393079 "CryptoUtilityImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "tpm_utility" type class_ref 3317687 // TpmUtility
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Does not take ownership of pointers."
      end

      operation 43393207 "~CryptoUtilityImpl"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43393335 "GetRandom"
	const cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "num_bytes" explicit_type "size_t"
	  param inout name "random_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CryptoUtility methods."
      end

      operation 43393463 "CreateSealedKey"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "aes_key" explicit_type "std::string"
	  param inout name "sealed_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43393591 "EncryptData"
	cpp_override public explicit_return_type "bool"
	nparams 4
	  param in name "data" explicit_type "std::string"
	  param in name "aes_key" explicit_type "std::string"
	  param in name "sealed_key" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43393719 "UnsealKey"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "encrypted_data" explicit_type "std::string"
	  param inout name "aes_key" explicit_type "std::string"
	  param inout name "sealed_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43393847 "DecryptData"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "encrypted_data" explicit_type "std::string"
	  param in name "aes_key" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43393975 "GetRSASubjectPublicKeyInfo"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "public_key" explicit_type "std::string"
	  param inout name "spki" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43394103 "GetRSAPublicKey"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "public_key_info" explicit_type "std::string"
	  param inout name "public_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43394231 "EncryptIdentityCredential"
	cpp_override public explicit_return_type "bool"
	nparams 4
	  param in name "credential" explicit_type "std::string"
	  param in name "ek_public_key_info" explicit_type "std::string"
	  param in name "aik_public_key" explicit_type "std::string"
	  param inout name "encrypted" explicit_type "EncryptedIdentityCredential"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43394359 "EncryptForUnbind"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "public_key" explicit_type "std::string"
	  param in name "data" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43394487 "VerifySignature"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "public_key" explicit_type "std::string"
	  param in name "data" explicit_type "std::string"
	  param in name "signature" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43394615 "AesEncrypt"
	private explicit_return_type "bool"
	nparams 4
	  param in name "data" explicit_type "std::string"
	  param in name "key" explicit_type "std::string"
	  param in name "iv" explicit_type "std::string"
	  param inout name "encrypted_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts |data| using |key| and |iv| for AES in CBC mode with PKCS #5
 padding and produces the |encrypted_data|. Returns true on success."
      end

      operation 43394743 "AesDecrypt"
	private explicit_return_type "bool"
	nparams 4
	  param in name "encrypted_data" explicit_type "std::string"
	  param in name "key" explicit_type "std::string"
	  param in name "iv" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Decrypts |encrypted_data| using |key| and |iv| for AES in CBC mode with
 PKCS #5 padding and produces the decrypted |data|. Returns true on success."
      end

      operation 43394871 "HmacSha512"
	private explicit_return_type "std::string"
	nparams 2
	  param in name "data" explicit_type "std::string"
	  param in name "key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Computes and returns an HMAC of |data| using |key| and SHA-512."
      end

      operation 43394999 "TssCompatibleEncrypt"
	private explicit_return_type "bool"
	nparams 3
	  param in name "input" explicit_type "std::string"
	  param in name "key" explicit_type "std::string"
	  param inout name "output" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypt like trousers does. This is like AesEncrypt but a random IV is
 included in the output."
      end

      operation 43395127 "TpmCompatibleOAEPEncrypt"
	private explicit_return_type "bool"
	nparams 3
	  param in name "input" explicit_type "std::string"
	  param inout name "key" explicit_type "RSA"
	  param inout name "output" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts using RSA-OAEP and the TPM-specific OAEP parameter."
      end

      classrelation 6712375 // tpm_utility_ (<unidirectional association>)
	relation 6712375 --->
	  a role_name "tpm_utility_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6712375 // tpm_utility_ (<unidirectional association>)
	  b parent class_ref 3317687 // TpmUtility
      end
    end

    class 3317687 "TpmUtility"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A class which provides helpers for TPM-related tasks."
      operation 43396151 "~TpmUtility"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43396279 "IsTpmReady"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff the TPM is enabled, owned, and ready for attestation."
      end

      operation 43396407 "ActivateIdentity"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 6
	  param in name "delegate_blob" explicit_type "std::string"
	  param in name "delegate_secret" explicit_type "std::string"
	  param in name "identity_key_blob" explicit_type "std::string"
	  param in name "asym_ca_contents" explicit_type "std::string"
	  param in name "sym_ca_attestation" explicit_type "std::string"
	  param inout name "credential" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Activates an attestation identity key. Effectively this decrypts a
 certificate or some other type of credential with the endorsement key. The
 |delegate_blob| and |delegate_secret| must be authorized to activate with
 owner privilege. The |identity_key_blob| is the key to which the credential
 is bound. The |asym_ca_contents| and |sym_ca_attestation| parameters are
 encrypted TPM structures, typically created by a CA (TPM_ASYM_CA_CONTENTS
 and TPM_SYM_CA_ATTESTATION respectively). On success returns true and
 populates the decrypted |credential|."
      end

      operation 43396535 "CreateCertifiedKey"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 9
	  param in name "key_type" explicit_type "KeyType"
	  param in name "key_usage" explicit_type "KeyUsage"
	  param in name "identity_key_blob" explicit_type "std::string"
	  param in name "external_data" explicit_type "std::string"
	  param inout name "key_blob" explicit_type "std::string"
	  param inout name "public_key" explicit_type "std::string"
	  param inout name "public_key_tpm_format" explicit_type "std::string"
	  param inout name "key_info" explicit_type "std::string"
	  param inout name "proof" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generates and certifies a non-migratable key in the TPM. The new key will
 correspond to |key_type| and |key_usage|. The parent key will be the
 storage root key. The new key will be certified with the attestation
 identity key represented by |identity_key_blob|. The |external_data| will
 be included in the |key_info|. On success, returns true and populates
 |public_key_tpm_format| with the public key of |key_blob| in TPM_PUBKEY
 format, |key_info| with the TPM_CERTIFY_INFO that was signed, and |proof|
 with the signature of |key_info| by the identity key."
      end

      operation 43396663 "SealToPCR0"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "data" explicit_type "std::string"
	  param inout name "sealed_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Seals |data| to the current value of PCR0 with the SRK and produces the
 |sealed_data|. Returns true on success."
      end

      operation 43396791 "Unseal"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "sealed_data" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unseals |sealed_data| previously sealed with the SRK and produces the
 unsealed |data|. Returns true on success."
      end

      operation 43396919 "GetEndorsementPublicKey"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "public_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads the endorsement public key from the TPM."
      end

      operation 43397047 "Unbind"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "key_blob" explicit_type "std::string"
	  param in name "bound_data" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unbinds |bound_data| with the key loaded from |key_blob| by decrypting
 using the TPM_ES_RSAESOAEP_SHA1_MGF1 scheme. The input must be in the
 format of a TPM_BOUND_DATA structure. On success returns true and provides
 the decrypted |data|."
      end

      operation 43397175 "Sign"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "key_blob" explicit_type "std::string"
	  param in name "data_to_sign" explicit_type "std::string"
	  param inout name "signature" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Signs |data_to_sign| with the key loaded from |key_blob| using the
 TPM_SS_RSASSAPKCS1v15_DER scheme with SHA-256. On success returns true and
 provides the |signature|."
      end
    end

    class 3317815 "MockAttestationInterface"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6712503 // <generalisation>
	relation 6712503 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6712503 // <generalisation>
	  b parent class_ref 3314999 // AttestationInterface
      end

      operation 43395255 "MockAttestationInterface"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43395383 "~MockAttestationInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3317943 "MockCryptoUtility"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6712631 // <generalisation>
	relation 6712631 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6712631 // <generalisation>
	  b parent class_ref 3317431 // CryptoUtility
      end

      operation 43395511 "MockCryptoUtility"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43395639 "~MockCryptoUtility"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3318071 "MockTpmUtility"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6712759 // <generalisation>
	relation 6712759 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6712759 // <generalisation>
	  b parent class_ref 3317687 // TpmUtility
      end

      operation 43395767 "MockTpmUtility"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43395895 "~MockTpmUtility"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43396023 "Transform"
	class_operation public explicit_return_type "std::string"
	nparams 2
	  param in name "method" explicit_type "std::string"
	  param in name "input" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " By default this class will fake seal/unbind/sign operations by passing the
 input through Transform(<method>). E.g. The expected output of a fake Sign
 operation on \"foo\" can be computed by calling
 MockTpmUtility::Transform(\"Sign\", \"foo\")."
      end
    end

    class 3318199 "TpmUtilityV1"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A TpmUtility implementation for TPM v1.2 modules."
      classrelation 6712887 // <generalisation>
	relation 6712887 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6712887 // <generalisation>
	  b parent class_ref 3317687 // TpmUtility
      end

      operation 43397303 "TpmUtilityV1"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43397431 "~TpmUtilityV1"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43397559 "Initialize"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes a TpmUtilityV1 instance. This method must be called
 successfully before calling any other methods."
      end

      operation 43397687 "IsTpmReady"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TpmUtility methods."
      end

      operation 43397815 "ActivateIdentity"
	cpp_override public explicit_return_type "bool"
	nparams 6
	  param in name "delegate_blob" explicit_type "std::string"
	  param in name "delegate_secret" explicit_type "std::string"
	  param in name "identity_key_blob" explicit_type "std::string"
	  param in name "asym_ca_contents" explicit_type "std::string"
	  param in name "sym_ca_attestation" explicit_type "std::string"
	  param inout name "credential" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, const ${t4} & ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43397943 "CreateCertifiedKey"
	cpp_override public explicit_return_type "bool"
	nparams 9
	  param in name "key_type" explicit_type "KeyType"
	  param in name "key_usage" explicit_type "KeyUsage"
	  param in name "identity_key_blob" explicit_type "std::string"
	  param in name "external_data" explicit_type "std::string"
	  param inout name "key_blob" explicit_type "std::string"
	  param inout name "public_key" explicit_type "std::string"
	  param inout name "public_key_tpm_format" explicit_type "std::string"
	  param inout name "key_info" explicit_type "std::string"
	  param inout name "proof" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} * ${p7}, ${t8} * ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43398071 "SealToPCR0"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "data" explicit_type "std::string"
	  param inout name "sealed_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43398199 "Unseal"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "sealed_data" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43398327 "GetEndorsementPublicKey"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "public_key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43398455 "Unbind"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "key_blob" explicit_type "std::string"
	  param in name "bound_data" explicit_type "std::string"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43398583 "Sign"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "key_blob" explicit_type "std::string"
	  param in name "data_to_sign" explicit_type "std::string"
	  param inout name "signature" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43398711 "ConnectContext"
	private explicit_return_type "bool"
	nparams 2
	  param inout name "context_handle" explicit_type "trousers::ScopedTssContext"
	  param inout name "tpm_handle" explicit_type "TSS_HTPM"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Populates |context_handle| with a valid TSS_HCONTEXT and |tpm_handle| with
 its matching TPM object iff the context can be created and a TPM object
 exists in the TSS. Returns true on success."
      end

      operation 43398839 "ConnectContextAsDelegate"
	private explicit_return_type "bool"
	nparams 4
	  param in name "delegate_blob" explicit_type "std::string"
	  param in name "delegate_secret" explicit_type "std::string"
	  param inout name "context" explicit_type "trousers::ScopedTssContext"
	  param inout name "tpm" explicit_type "TSS_HTPM"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Populates |context_handle| with a valid TSS_HCONTEXT and |tpm_handle| with
 its matching TPM object authorized by the given |delegate_blob| and
 |delegate_secret|. Returns true on success."
      end

      operation 43398967 "SetupSrk"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets up srk_handle_ if necessary. Returns true iff the SRK is ready."
      end

      operation 43399095 "LoadSrk"
	private explicit_return_type "bool"
	nparams 2
	  param in name "context_handle" explicit_type "TSS_HCONTEXT"
	  param inout name "srk_handle" explicit_type "trousers::ScopedTssKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the storage root key (SRK) and populates |srk_handle|. The
 |context_handle| must be connected and valid. Returns true on success."
      end

      operation 43399223 "LoadKeyFromBlob"
	private explicit_return_type "bool"
	nparams 4
	  param in name "key_blob" explicit_type "std::string"
	  param in name "context_handle" explicit_type "TSS_HCONTEXT"
	  param in name "parent_key_handle" explicit_type "TSS_HKEY"
	  param inout name "key_handle" explicit_type "trousers::ScopedTssKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads a key in the TPM given a |key_blob| and a |parent_key_handle|. The
 |context_handle| must be connected and valid. Returns true and populates
 |key_handle| on success."
      end

      operation 43399351 "GetDataAttribute"
	private explicit_return_type "bool"
	nparams 5
	  param in name "context_handle" explicit_type "TSS_HCONTEXT"
	  param in name "object_handle" explicit_type "TSS_HOBJECT"
	  param in name "flag" explicit_type "TSS_FLAG"
	  param in name "sub_flag" explicit_type "TSS_FLAG"
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieves a |data| attribute defined by |flag| and |sub_flag| from a TSS
 |object_handle|. The |context_handle| is only used for TSS memory
 management."
      end

      operation 43399479 "ConvertPublicKeyToDER"
	private explicit_return_type "bool"
	nparams 2
	  param in name "public_key" explicit_type "std::string"
	  param inout name "public_key_der" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts a public in TPM_PUBKEY format to a DER-encoded RSAPublicKey."
      end

      attribute 12310199 "is_ready_"
	private explicit_type "bool"
	init_value " {false}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12310327 "context_handle_"
	private explicit_type "trousers::ScopedTssContext"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12310455 "tpm_handle_"
	private explicit_type "TSS_HTPM"
	init_value " {0}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12310583 "srk_handle_"
	private explicit_type "trousers::ScopedTssKey"
	init_value " {0}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 290487 "common"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1604151 "attestation_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3314999 // AttestationInterface
      end
    end

    artifact 1604279 "crypto_utility"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3317431 // CryptoUtility
      end
    end

    artifact 1604407 "crypto_utility_impl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3317559 // CryptoUtilityImpl
      end
    end

    artifact 1604535 "mock_attestation_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3317815 // MockAttestationInterface
      end
    end

    artifact 1604663 "mock_crypto_utility"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3317943 // MockCryptoUtility
      end
    end

    artifact 1604791 "mock_tpm_utility"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3318071 // MockTpmUtility
      end
    end

    artifact 1604919 "tpm_utility"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3317687 // TpmUtility
      end
    end

    artifact 1605047 "tpm_utility_v1"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3318199 // TpmUtilityV1
      end
    end
  end
end
