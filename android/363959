format 213
"server" // android::system::tpm::attestation::server
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/tpm/attestation/server/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/tpm/attestation/server/"
  cpp_namespace "attestation"
  classview 328887 "server"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3318327 "AttestationService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An implementation of AttestationInterface for the core attestation service.
 Access to TPM, network and local file-system resources occurs asynchronously
 with the exception of Initialize(). All methods must be called on the same
 thread that originally called Initialize().
 Usage:
   std::unique_ptr<AttestationInterface> attestation =
       new AttestationService();
   CHECK(attestation->Initialize());
   attestation->CreateGoogleAttestedKey(...);

 THREADING NOTES:
 This class runs a worker thread and delegates all calls to it. This keeps the
 public methods non-blocking while allowing complex implementation details
 with dependencies on the TPM, network, and filesystem to be coded in a more
 readable way. It also serves to serialize method execution which reduces
 complexity with TPM state.

 Tasks that run on the worker thread are bound with base::Unretained which is
 safe because the thread is owned by this class (so it is guaranteed not to
 process a task after destruction). Weak pointers are used to post replies
 back to the main thread."
      classrelation 6713015 // <generalisation>
	relation 6713015 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6713015 // <generalisation>
	  b parent class_ref 3314999 // AttestationInterface
      end

      operation 43399607 "AttestationService"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43399735 "~AttestationService"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43399863 "Initialize"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " AttestationInterface methods."
      end

      operation 43399991 "CreateGoogleAttestedKey"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "CreateGoogleAttestedKeyRequest"
	  param in name "callback" explicit_type "CreateGoogleAttestedKeyCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400119 "GetKeyInfo"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetKeyInfoRequest"
	  param in name "callback" explicit_type "GetKeyInfoCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400247 "GetEndorsementInfo"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetEndorsementInfoRequest"
	  param in name "callback" explicit_type "GetEndorsementInfoCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400375 "GetAttestationKeyInfo"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetAttestationKeyInfoRequest"
	  param in name "callback" explicit_type "GetAttestationKeyInfoCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400503 "ActivateAttestationKey"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "ActivateAttestationKeyRequest"
	  param in name "callback" explicit_type "ActivateAttestationKeyCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400631 "CreateCertifiableKey"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "CreateCertifiableKeyRequest"
	  param in name "callback" explicit_type "CreateCertifiableKeyCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400759 "Decrypt"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "DecryptRequest"
	  param in name "callback" explicit_type "DecryptCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43400887 "Sign"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "SignRequest"
	  param in name "callback" explicit_type "SignCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43401015 "RegisterKeyWithChapsToken"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "RegisterKeyWithChapsTokenRequest"
	  param in name "callback" explicit_type "RegisterKeyWithChapsTokenCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43401143 "set_crypto_utility"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "crypto_utility" type class_ref 3317431 // CryptoUtility
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    crypto_utility_ = crypto_utility;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Mutators useful for testing."
      end

      operation 43401271 "set_database"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "database" type class_ref 3318455 // Database
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    database_ = database;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43401399 "set_http_transport"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "transport" explicit_type "std::shared_ptr<brillo::http::Transport>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    http_transport_ = transport;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43401527 "set_key_store"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "key_store" type class_ref 3318583 // KeyStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    key_store_ = key_store;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43401655 "set_tpm_utility"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "tpm_utility" type class_ref 3317687 // TpmUtility
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    tpm_utility_ = tpm_utility;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43401783 "attestation_ca_origin"
	cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return attestation_ca_origin_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " So tests don't need to duplicate URL decisions."
      end

      class 3318711 "ACARequestType"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12310711 "kEnroll"
	  public type class_ref 3318711 // ACARequestType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12310839 "kGetCertificate"
	  public type class_ref 3318711 // ACARequestType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 43401911 "TaskRelayCallback"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "callback" explicit_type "base::Callback<void(const ReplyProtobufType&)>"
	  param in name "reply" explicit_type "std::shared_ptr<ReplyProtobufType>"
	cpp_decl "    ${comment}template<typename ReplyProtobufType>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    callback.Run(*reply);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A relay callback which allows the use of weak pointer semantics for a reply
 to TaskRunner::PostTaskAndReply."
      end

      operation 43402039 "CreateGoogleAttestedKeyTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "CreateGoogleAttestedKeyRequest"
	  param in name "result" explicit_type "std::shared_ptr<CreateGoogleAttestedKeyReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of CreateGoogleAttestedKey appropriate to run on
 the worker thread."
      end

      operation 43402167 "GetKeyInfoTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetKeyInfoRequest"
	  param in name "result" explicit_type "std::shared_ptr<GetKeyInfoReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of GetKeyInfo."
      end

      operation 43402295 "GetEndorsementInfoTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetEndorsementInfoRequest"
	  param in name "result" explicit_type "std::shared_ptr<GetEndorsementInfoReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of GetEndorsementInfo."
      end

      operation 43402423 "GetAttestationKeyInfoTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "GetAttestationKeyInfoRequest"
	  param in name "result" explicit_type "std::shared_ptr<GetAttestationKeyInfoReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of GetAttestationKeyInfo."
      end

      operation 43402551 "ActivateAttestationKeyTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "ActivateAttestationKeyRequest"
	  param in name "result" explicit_type "std::shared_ptr<ActivateAttestationKeyReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of ActivateAttestationKey."
      end

      operation 43402679 "CreateCertifiableKeyTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "CreateCertifiableKeyRequest"
	  param in name "result" explicit_type "std::shared_ptr<CreateCertifiableKeyReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of CreateCertifiableKey."
      end

      operation 43402807 "DecryptTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "DecryptRequest"
	  param in name "result" explicit_type "std::shared_ptr<DecryptReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of Decrypt."
      end

      operation 43402935 "SignTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "SignRequest"
	  param in name "result" explicit_type "std::shared_ptr<SignReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A blocking implementation of Sign."
      end

      operation 43403063 "RegisterKeyWithChapsTokenTask"
	private explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "RegisterKeyWithChapsTokenRequest"
	  param in name "result" explicit_type "std::shared_ptr<RegisterKeyWithChapsTokenReply>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A synchronous implementation of RegisterKeyWithChapsToken."
      end

      operation 43403191 "IsPreparedForEnrollment"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff all information required for enrollment with the Google
 Attestation CA is available."
      end

      operation 43403319 "IsEnrolled"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff enrollment with the Google Attestation CA has been
 completed."
      end

      operation 43403447 "CreateEnrollRequest"
	private explicit_return_type "bool"
	nparams 1
	  param inout name "enroll_request" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an enrollment request compatible with the Google Attestation CA.
 Returns true on success."
      end

      operation 43403575 "FinishEnroll"
	private explicit_return_type "bool"
	nparams 2
	  param in name "enroll_response" explicit_type "std::string"
	  param inout name "server_error" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finishes enrollment given an |enroll_response| from the Google Attestation
 CA. Returns true on success. On failure, returns false and sets
 |server_error| to the error string from the CA."
      end

      operation 43403703 "CreateCertificateRequest"
	private explicit_return_type "bool"
	nparams 6
	  param in name "username" explicit_type "std::string"
	  param in name "key" explicit_type "CertifiedKey"
	  param in name "profile" explicit_type "CertificateProfile"
	  param in name "origin" explicit_type "std::string"
	  param inout name "certificate_request" explicit_type "std::string"
	  param inout name "message_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a |certificate_request| compatible with the Google Attestation CA
 for the given |key|, according to the given |profile|, |username| and
 |origin|."
      end

      operation 43403831 "FinishCertificateRequest"
	private explicit_return_type "bool"
	nparams 7
	  param in name "certificate_response" explicit_type "std::string"
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	  param in name "message_id" explicit_type "std::string"
	  param inout name "key" explicit_type "CertifiedKey"
	  param inout name "certificate_chain" explicit_type "std::string"
	  param inout name "server_error" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finishes a certificate request by decoding the |certificate_response| to
 recover the |certificate_chain| and storing it in association with the
 |key| identified by |username| and |key_label|. Returns true on success. On
 failure, returns false and sets |server_error| to the error string from the
 CA."
      end

      operation 43403959 "SendACARequestAndBlock"
	private explicit_return_type "bool"
	nparams 3
	  param in name "request_type" type class_ref 3318711 // ACARequestType
	  param in name "request" explicit_type "std::string"
	  param inout name "reply" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends a |request_type| |request| to the Google Attestation CA and waits for
 the |reply|. Returns true on success."
      end

      operation 43404087 "CreateKey"
	private explicit_return_type "bool"
	nparams 5
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	  param in name "key_type" explicit_type "KeyType"
	  param in name "key_usage" explicit_type "KeyUsage"
	  param inout name "key" explicit_type "CertifiedKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates, certifies, and saves a new |key| for |username| with the given
 |key_label|, |key_type|, and |key_usage|. Returns true on success."
      end

      operation 43404215 "FindKeyByLabel"
	private explicit_return_type "bool"
	nparams 3
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	  param inout name "key" explicit_type "CertifiedKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finds the |key| associated with |username| and |key_label|. Returns false
 if such a key does not exist."
      end

      operation 43404343 "SaveKey"
	private explicit_return_type "bool"
	nparams 3
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	  param in name "key" explicit_type "CertifiedKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Saves the |key| associated with |username| and |key_label|. Returns true on
 success."
      end

      operation 43404471 "DeleteKey"
	private explicit_return_type "void"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes the key associated with |username| and |key_label|."
      end

      operation 43404599 "AddDeviceKey"
	private explicit_return_type "bool"
	nparams 2
	  param in name "key_label" explicit_type "std::string"
	  param in name "key" explicit_type "CertifiedKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds named device-wide key to the attestation database."
      end

      operation 43404727 "RemoveDeviceKey"
	private explicit_return_type "void"
	nparams 1
	  param in name "key_label" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Removes a device-wide key from the attestation database."
      end

      operation 43404855 "CreatePEMCertificateChain"
	private explicit_return_type "std::string"
	nparams 1
	  param in name "key" explicit_type "CertifiedKey"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a PEM certificate chain from the credential fields of a |key|."
      end

      operation 43404983 "CreatePEMCertificate"
	private explicit_return_type "std::string"
	nparams 1
	  param in name "certificate" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a certificate in PEM format from a DER encoded X.509 certificate."
      end

      operation 43405111 "ChooseTemporalIndex"
	private explicit_return_type "int"
	nparams 2
	  param in name "user" explicit_type "std::string"
	  param in name "origin" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Chooses a temporal index which will be used by the ACA to create a
 certificate.  This decision factors in the currently signed-in |user| and
 the |origin| of the certificate request.  The strategy is to find an index
 which has not already been used by another user for the same origin."
      end

      operation 43405239 "GetACAURL"
	const private explicit_return_type "std::string"
	nparams 1
	  param in name "request_type" type class_ref 3318711 // ACARequestType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a Google Attestation CA URL for the given |request_type|."
      end

      operation 43405367 "GetSubjectPublicKeyInfo"
	const private explicit_return_type "bool"
	nparams 3
	  param in name "key_type" explicit_type "KeyType"
	  param in name "public_key" explicit_type "std::string"
	  param inout name "public_key_info" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a X.509/DER SubjectPublicKeyInfo for the given |key_type| and
 |public_key|. On success returns true and provides |public_key_info|."
      end

      operation 43405495 "GetWeakPtr"
	private explicit_return_type "base::WeakPtr<AttestationService>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12310967 "attestation_ca_origin_"
	const_attribute private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6713143 // crypto_utility_ (<unidirectional association>)
	relation 6713143 --->
	  a role_name "crypto_utility_" init_value " {nullptr}" private
	    comment " Other than initialization and destruction, these are used only by the
 worker thread.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713143 // crypto_utility_ (<unidirectional association>)
	  b parent class_ref 3317431 // CryptoUtility
      end

      classrelation 6713271 // database_ (<unidirectional association>)
	relation 6713271 --->
	  a role_name "database_" init_value " {nullptr}" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713271 // database_ (<unidirectional association>)
	  b parent class_ref 3318455 // Database
      end

      attribute 12311095 "http_transport_"
	private explicit_type "brillo::http::Transport"
	stereotype "std::shared_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6713399 // key_store_ (<unidirectional association>)
	relation 6713399 --->
	  a role_name "key_store_" init_value " {nullptr}" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713399 // key_store_ (<unidirectional association>)
	  b parent class_ref 3318583 // KeyStore
      end

      classrelation 6713527 // tpm_utility_ (<unidirectional association>)
	relation 6713527 --->
	  a role_name "tpm_utility_" init_value " {nullptr}" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713527 // tpm_utility_ (<unidirectional association>)
	  b parent class_ref 3317687 // TpmUtility
      end

      classrelation 6713655 // default_crypto_utility_ (<directional composition>)
	relation 6713655 *-->
	  stereotype "std::unique_ptr"
	  a role_name "default_crypto_utility_" private
	    comment " Default implementations for the above interfaces. These will be setup
 during Initialize() if the corresponding interface has not been set with a
 mutator.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713655 // default_crypto_utility_ (<directional composition>)
	  b parent class_ref 3317559 // CryptoUtilityImpl
      end

      classrelation 6713783 // default_database_ (<directional composition>)
	relation 6713783 *-->
	  stereotype "std::unique_ptr"
	  a role_name "default_database_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713783 // default_database_ (<directional composition>)
	  b parent class_ref 3318839 // DatabaseImpl
      end

      classrelation 6713911 // default_key_store_ (<directional composition>)
	relation 6713911 *-->
	  stereotype "std::unique_ptr"
	  a role_name "default_key_store_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6713911 // default_key_store_ (<directional composition>)
	  b parent class_ref 3318967 // Pkcs11KeyStore
      end

      attribute 12311223 "pkcs11_token_manager_"
	private explicit_type "chaps::TokenManagerClient"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6714039 // default_tpm_utility_ (<directional composition>)
	relation 6714039 *-->
	  stereotype "std::unique_ptr"
	  a role_name "default_tpm_utility_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6714039 // default_tpm_utility_ (<directional composition>)
	  b parent class_ref 3318199 // TpmUtilityV1
      end

      attribute 12311351 "worker_thread_"
	private explicit_type "base::Thread"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " All work is done in the background. This serves to serialize requests and
 allow synchronous implementation of complex methods. This is intentionally
 declared after the thread-owned members.
"
      end

      classrelation 6714167 // weak_factory_ (<directional composition>)
	relation 6714167 *-->
	  stereotype "base::WeakPtrFactory"
	  a role_name "weak_factory_" private
	    comment " Declared last so any weak pointers are destroyed first.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6714167 // weak_factory_ (<directional composition>)
	  b parent class_ref 3318327 // AttestationService
      end
    end

    class 3318455 "Database"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Manages a persistent database of attestation-related data."
      operation 43405623 "~Database"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43405751 "GetProtobuf"
	abstract const cpp_virtual public explicit_return_type "AttestationDatabase"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Const access to the database protobuf."
      end

      operation 43405879 "GetMutableProtobuf"
	abstract cpp_virtual public explicit_return_type "AttestationDatabase"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Mutable access to the database protobuf. Changes made to the protobuf will
 be reflected immediately by GetProtobuf() but will not be persisted to disk
 until SaveChanges is called successfully."
      end

      operation 43406007 "SaveChanges"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes the current database protobuf to disk."
      end

      operation 43406135 "Reload"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reloads the database protobuf from disk."
      end
    end

    class 3318583 "KeyStore"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A mock-able key storage interface."
      operation 43409975 "KeyStore"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43410103 "~KeyStore"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 43410231 "Read"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	  param inout name "key_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads key data from the store for the key identified by |key_label| and by
 |username|. On success true is returned and |key_data| is populated."
      end

      operation 43410359 "Write"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	  param in name "key_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes key data to the store for the key identified by |key_label| and by
 |username|. If such a key already exists the existing data will be
 overwritten."
      end

      operation 43410487 "Delete"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "key_label" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes key data for the key identified by |key_label| and by |username|.
 Returns false if key data exists but could not be deleted."
      end

      operation 43410615 "DeleteByPrefix"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "key_prefix" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes key data for all keys identified by |key_prefix| and by |username|
 Returns false if key data exists but could not be deleted."
      end

      operation 43410743 "Register"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 7
	  param in name "username" explicit_type "std::string"
	  param in name "label" explicit_type "std::string"
	  param in name "key_type" explicit_type "KeyType"
	  param in name "key_usage" explicit_type "KeyUsage"
	  param in name "private_key_blob" explicit_type "std::string"
	  param in name "public_key_der" explicit_type "std::string"
	  param in name "certificate" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Registers a key to be associated with |username|.
 The provided |label| will be associated with all registered objects.
 |private_key_blob| holds the private key in some opaque format and
 |public_key_der| holds the public key in PKCS #1 RSAPublicKey format.
 If a non-empty |certificate| is provided it will be registered along with
 the key. Returns true on success."
      end

      operation 43410871 "RegisterCertificate"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "certificate" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Registers a |certificate| that is not associated to a registered key. The
 certificate will be associated with |username|."
      end
    end

    class 3318839 "DatabaseImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An implementation of Database backed by an ordinary file. Not thread safe.
 All methods must be called on the same thread as the Initialize() call."
      classrelation 6714295 // <generalisation>
	relation 6714295 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6714295 // <generalisation>
	  b parent class_ref 3318455 // Database
      end

      classrelation 6714423 // <generalisation>
	relation 6714423 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6714423 // <generalisation>
	  b parent class_ref 3319095 // DatabaseIO
      end

      operation 43406647 "DatabaseImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "crypto" type class_ref 3317431 // CryptoUtility
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Does not take ownership of pointers."
      end

      operation 43406775 "~DatabaseImpl"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43406903 "Initialize"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads and decrypts any existing database on disk synchronously. Must be
 called before calling other methods."
      end

      operation 43407031 "GetProtobuf"
	const cpp_override public explicit_return_type "AttestationDatabase"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Database methods."
      end

      operation 43407159 "GetMutableProtobuf"
	cpp_override public explicit_return_type "AttestationDatabase"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43407287 "SaveChanges"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43407415 "Reload"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43407543 "Read"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DatabaseIO methods."
      end

      operation 43407671 "Write"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43407799 "Watch"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "callback" explicit_type "base::Closure"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43407927 "set_io"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "io" type class_ref 3319095 // DatabaseIO
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    io_ = io;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Useful for testing."
      end

      operation 43408055 "EncryptProtobuf"
	private explicit_return_type "bool"
	nparams 1
	  param inout name "encrypted_output" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypts |protobuf_| into |encrypted_output|. Returns true on success."
      end

      operation 43408183 "DecryptProtobuf"
	private explicit_return_type "bool"
	nparams 1
	  param in name "encrypted_input" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Decrypts |encrypted_input| as output by EncryptProtobuf into |protobuf_|.
 Returns true on success."
      end

      attribute 12311479 "protobuf_"
	private explicit_type "AttestationDatabase"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6714551 // io_ (<unidirectional association>)
	relation 6714551 --->
	  a role_name "io_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6714551 // io_ (<unidirectional association>)
	  b parent class_ref 3319095 // DatabaseIO
      end

      classrelation 6714679 // crypto_ (<unidirectional association>)
	relation 6714679 --->
	  a role_name "crypto_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6714679 // crypto_ (<unidirectional association>)
	  b parent class_ref 3317431 // CryptoUtility
      end

      attribute 12311607 "database_key_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12311735 "sealed_database_key_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12311863 "file_watcher_"
	private explicit_type "base::FilePathWatcher"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12311991 "thread_checker_"
	private explicit_type "base::ThreadChecker"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3318967 "Pkcs11KeyStore"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class uses a PKCS #11 token as storage for key data.  The key data is
 stored in data objects with the following attributes:
 CKA_CLASS - CKO_DATA
 CKA_LABEL - A key name.
 CKA_VALUE - Binary key data (opaque to this class and the PKCS #11 token).
 CKA_APPLICATION - A constant value associated with this class.
 CKA_TOKEN - True
 CKA_PRIVATE - True
 CKA_MODIFIABLE - False
 There is no barrier between the objects created by this class and any other
 objects residing in the same token.  In practice, this means that any
 component with access to the PKCS #11 token also has access to read or delete
 key data."
      classrelation 6715319 // <generalisation>
	relation 6715319 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6715319 // <generalisation>
	  b parent class_ref 3318583 // KeyStore
      end

      operation 43411511 "Pkcs11KeyStore"
	public explicit_return_type ""
	nparams 1
	  param inout name "token_manager" explicit_type "chaps::TokenManagerClient"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Does not take ownership of pointers."
      end

      operation 43411639 "~Pkcs11KeyStore"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43411767 "Read"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "username" explicit_type "std::string"
	  param in name "key_name" explicit_type "std::string"
	  param inout name "key_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " KeyStore interface."
      end

      operation 43411895 "Write"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "username" explicit_type "std::string"
	  param in name "key_name" explicit_type "std::string"
	  param in name "key_data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43412023 "Delete"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43412151 "DeleteByPrefix"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "key_prefix" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43412279 "Register"
	cpp_override public explicit_return_type "bool"
	nparams 7
	  param in name "username" explicit_type "std::string"
	  param in name "label" explicit_type "std::string"
	  param in name "key_type" explicit_type "KeyType"
	  param in name "key_usage" explicit_type "KeyUsage"
	  param in name "private_key_blob" explicit_type "std::string"
	  param in name "public_key_der" explicit_type "std::string"
	  param in name "certificate" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, const ${t4} & ${p4}, const ${t5} & ${p5}, const ${t6} & ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43412407 "RegisterCertificate"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "certificate" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3319863 "EnumObjectsCallback"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6715447 // <generalisation>
	  relation 6715447 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6715447 // <generalisation>
	    b parent class_ref 3319991 // typedef173
	end
      end

      class 3319991 "typedef173"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<bool(const std::string& key_name,
                          CK_OBJECT_HANDLE object_handle)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43412535 "FindObject"
	private explicit_return_type "CK_OBJECT_HANDLE"
	nparams 2
	  param in name "session_handle" explicit_type "CK_SESSION_HANDLE"
	  param in name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Searches for a PKCS #11 object for a given key name.  If one exists, the
 object handle is returned, otherwise CK_INVALID_HANDLE is returned."
      end

      operation 43412663 "GetUserSlot"
	private explicit_return_type "bool"
	nparams 2
	  param in name "username" explicit_type "std::string"
	  param in name "slot" explicit_type "CK_SLOT_ID_PTR"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets a slot for the given |username| if |is_user_specific| or the system
 slot otherwise. Returns false if no appropriate slot is found."
      end

      operation 43412791 "EnumObjects"
	private explicit_return_type "bool"
	nparams 2
	  param in name "session_handle" explicit_type "CK_SESSION_HANDLE"
	  param in name "callback" type class_ref 3319863 // EnumObjectsCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enumerates all PKCS #11 objects associated with keys.  The |callback| is
 called once for each object."
      end

      operation 43412919 "GetKeyName"
	private explicit_return_type "bool"
	nparams 3
	  param in name "session_handle" explicit_type "CK_SESSION_HANDLE"
	  param in name "object_handle" explicit_type "CK_OBJECT_HANDLE"
	  param inout name "key_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Looks up the key name for the given |object_handle| which is associated
 with a key.  Returns true on success."
      end

      operation 43413047 "DeleteIfMatchesPrefix"
	private explicit_return_type "bool"
	nparams 4
	  param in name "session_handle" explicit_type "CK_SESSION_HANDLE"
	  param in name "key_prefix" explicit_type "std::string"
	  param in name "key_name" explicit_type "std::string"
	  param in name "object_handle" explicit_type "CK_OBJECT_HANDLE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " An EnumObjectsCallback for use with DeleteByPrefix.  Destroys the key
 object identified by |object_handle| if |key_name| matches |key_prefix|.
 Returns true on success."
      end

      operation 43413175 "GetCertificateFields"
	private explicit_return_type "bool"
	nparams 4
	  param in name "certificate" explicit_type "std::string"
	  param inout name "subject" explicit_type "std::string"
	  param inout name "issuer" explicit_type "std::string"
	  param inout name "serial_number" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Extracts the |subject|, |issuer|, and |serial_number| information from an
 X.509 |certificate|. Returns false if the value cannot be determined."
      end

      operation 43413303 "DoesCertificateExist"
	private explicit_return_type "bool"
	nparams 2
	  param in name "session_handle" explicit_type "CK_SESSION_HANDLE"
	  param in name "certificate" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff the given certificate already exists in the token."
      end

      attribute 12312375 "token_manager_"
	private explicit_type "chaps::TokenManagerClient"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3319095 "DatabaseIO"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An I/O abstraction to help with testing."
      operation 43406263 "Read"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reads the persistent database blob."
      end

      operation 43406391 "Write"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "data" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes the persistent database blob."
      end

      operation 43406519 "Watch"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "callback" explicit_type "base::Closure"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Watch for external changes to the database."
      end
    end

    class 3319223 "CompletionAction"
      visibility package stereotype "template_typedef"
      cpp_decl "${comment}${template}using ${name} = ${inherit};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6714807 // <generalisation>
	relation 6714807 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6714807 // <generalisation>
	  b parent class_ref 3319351 // typedef172
      end
    end

    class 3319351 "typedef172"
      visibility package stereotype "typedef" explicit_base_type "brillo::dbus_utils::AsyncEventSequencer::CompletionAction"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3319479 "DBusService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Handles D-Bus calls to the attestation daemon."
      operation 43408311 "DBusService"
	public explicit_return_type ""
	nparams 2
	  param in name "bus" explicit_type "scoped_refptr<dbus::Bus>"
	  param inout name "service" type class_ref 3314999 // AttestationInterface
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " DBusService does not take ownership of |service|; it must remain valid for
 the lifetime of the DBusService instance."
      end

      operation 43408439 "~DBusService"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43408567 "Register"
	public explicit_return_type "void"
	nparams 1
	  param in name "callback" type class_ref 3319223 // CompletionAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Connects to D-Bus system bus and exports methods."
      end

      operation 43408695 "set_service"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 3314999 // AttestationInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    service_ = service;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Useful for testing."
      end

      extra_member 221239 "friend"
	
	cpp "
  friend class DBusServiceTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 43408823 "HandleCreateGoogleAttestedKey"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const CreateGoogleAttestedKeyReply&>>"
	  param in name "request" explicit_type "CreateGoogleAttestedKeyRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a CreateGoogleAttestedKey D-Bus call."
      end

      operation 43408951 "HandleGetKeyInfo"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const GetKeyInfoReply&>>"
	  param in name "request" explicit_type "GetKeyInfoRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a GetKeyInfo D-Bus call."
      end

      operation 43409079 "HandleGetEndorsementInfo"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const GetEndorsementInfoReply&>>"
	  param in name "request" explicit_type "GetEndorsementInfoRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a GetEndorsementInfo D-Bus call."
      end

      operation 43409207 "HandleGetAttestationKeyInfo"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const GetAttestationKeyInfoReply&>>"
	  param in name "request" explicit_type "GetAttestationKeyInfoRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a GetAttestationKeyInfo D-Bus call."
      end

      operation 43409335 "HandleActivateAttestationKey"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const ActivateAttestationKeyReply&>>"
	  param in name "request" explicit_type "ActivateAttestationKeyRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a ActivateAttestationKey D-Bus call."
      end

      operation 43409463 "HandleCreateCertifiableKey"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const CreateCertifiableKeyReply&>>"
	  param in name "request" explicit_type "CreateCertifiableKeyRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a CreateCertifiableKey D-Bus call."
      end

      operation 43409591 "HandleDecrypt"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const DecryptReply&>>"
	  param in name "request" explicit_type "DecryptRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a Decrypt D-Bus call."
      end

      operation 43409719 "HandleSign"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const SignReply&>>"
	  param in name "request" explicit_type "SignRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a Sign D-Bus call."
      end

      operation 43409847 "HandleRegisterKeyWithChapsToken"
	private explicit_return_type "void"
	nparams 2
	  param in name "response" explicit_type "std::unique_ptr<brillo::dbus_utils::DBusMethodResponse<
          const RegisterKeyWithChapsTokenReply&>>"
	  param in name "request" explicit_type "RegisterKeyWithChapsTokenRequest"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handles a RegisterKeyWithChapsToken D-Bus call."
      end

      attribute 12312119 "dbus_object_"
	private explicit_type "brillo::dbus_utils::DBusObject"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6714935 // service_ (<unidirectional association>)
	relation 6714935 --->
	  a role_name "service_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6714935 // service_ (<unidirectional association>)
	  b parent class_ref 3314999 // AttestationInterface
      end
    end

    class 3319607 "MockDatabase"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6715063 // <generalisation>
	relation 6715063 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6715063 // <generalisation>
	  b parent class_ref 3318455 // Database
      end

      operation 43410999 "MockDatabase"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43411127 "~MockDatabase"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 12312247 "fake_"
	private explicit_type "AttestationDatabase"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3319735 "MockKeyStore"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6715191 // <generalisation>
	relation 6715191 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6715191 // <generalisation>
	  b parent class_ref 3318583 // KeyStore
      end

      operation 43411255 "MockKeyStore"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43411383 "~MockKeyStore"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end
    end
  end

  deploymentview 290615 "server"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1605175 "attestation_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3318327 // AttestationService
      end
    end

    artifact 1605303 "database"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3318455 // Database
      end
    end

    artifact 1605431 "database_impl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3319095 // DatabaseIO
	class_ref 3318839 // DatabaseImpl
      end
    end

    artifact 1605559 "dbus_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3319351 // typedef172
	class_ref 3319223 // CompletionAction
	class_ref 3319479 // DBusService
      end
    end

    artifact 1605687 "key_store"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3318583 // KeyStore
      end
    end

    artifact 1605815 "mock_database"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3319607 // MockDatabase
      end
    end

    artifact 1605943 "mock_key_store"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3319735 // MockKeyStore
      end
    end

    artifact 1606071 "pkcs11_key_store"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3318967 // Pkcs11KeyStore
      end
    end
  end
end
