format 213
"update_engine" // android::system::update_engine
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/update_engine/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/update_engine/"
  cpp_namespace "chromeos_update_engine"
  classview 329399 "update_engine"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3356215 "BinderUpdateEngineAndroidService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6777143 // <generalisation>
	relation 6777143 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6777143 // <generalisation>
	  b parent class_ref 3356343 // typedef187
      end

      classrelation 6777271 // <generalisation>
	relation 6777271 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6777271 // <generalisation>
	  b parent class_ref 3356471 // ServiceObserverInterface
      end

      operation 43449527 "BinderUpdateEngineAndroidService"
	public explicit_return_type ""
	nparams 1
	  param inout name "service_delegate" type class_ref 3356599 // ServiceDelegateAndroidInterface
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43449655 "~BinderUpdateEngineAndroidService"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43449783 "ServiceName"
	const cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return \"android.os.UpdateEngineService\";
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43449911 "SendStatusUpdate"
	cpp_override public explicit_return_type "void"
	nparams 5
	  param in name "last_checked_time" explicit_type "int64_t"
	  param in name "progress" explicit_type "double"
	  param in name "status" type class_ref 3356727 // UpdateStatus
	  param in name "new_version" explicit_type "std::string"
	  param in name "new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ServiceObserverInterface overrides."
      end

      operation 43450039 "SendPayloadApplicationComplete"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43450167 "SendChannelChangeUpdate"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "tracking_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Channel tracking changes are ignored."
      end

      operation 43450295 "applyPayload"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 4
	  param in name "url" type class_ref 3024823 // String16
	  param in name "payload_offset" explicit_type "int64_t"
	  param in name "payload_size" explicit_type "int64_t"
	  param in name "header_kv_pairs" explicit_type "std::vector<android::String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " android::os::BnUpdateEngine overrides."
      end

      operation 43450423 "bind"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 2
	  param in name "callback" explicit_type "android::sp<android::os::IUpdateEngineCallback>"
	  param inout name "return_value" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43450551 "suspend"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43450679 "resume"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43450807 "cancel"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43450935 "resetStatus"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43451063 "UnbindCallback"
	private explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "android::os::IUpdateEngineCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove the passed |callback| from the list of registered callbacks. Called
 whenever the callback object is destroyed."
      end

      attribute 12328503 "callbacks_"
	private explicit_type "android::sp<android::os::IUpdateEngineCallback>"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " List of currently bound callbacks.
"
      end

      attribute 12328631 "last_status_"
	private explicit_type "int"
	init_value " {-1}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached copy of the last status update sent. Used to send an initial
 notification when bind() is called from the client.
"
      end

      attribute 12328759 "last_progress_"
	private explicit_type "double"
	init_value " {0.0}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6777399 // service_delegate_ (<unidirectional association>)
	relation 6777399 --->
	  a role_name "service_delegate_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777399 // service_delegate_ (<unidirectional association>)
	  b parent class_ref 3356599 // ServiceDelegateAndroidInterface
      end
    end

    class 3356343 "typedef187"
      visibility package stereotype "typedef" explicit_base_type "android::os::BnUpdateEngine"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3356471 "ServiceObserverInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 43519031 "~ServiceObserverInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43519159 "SendStatusUpdate"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 5
	  param in name "last_checked_time" explicit_type "int64_t"
	  param in name "progress" explicit_type "double"
	  param in name "status" type class_ref 3356727 // UpdateStatus
	  param in name "new_version" explicit_type "std::string"
	  param in name "new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called whenever the value of these parameters changes. For |progress|
 value changes, this method will be called only if it changes significantly."
      end

      operation 43519287 "SendPayloadApplicationComplete"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called whenever an update attempt is completed."
      end

      operation 43519415 "SendChannelChangeUpdate"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "tracking_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called whenever the channel we are tracking changes."
      end

      operation 43519543 "ServiceObserverInterface"
	cpp_defaulted protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3356599 "ServiceDelegateAndroidInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class defines the interface exposed by the Android version of the
 daemon service. This interface only includes the method calls that such
 daemon exposes. For asynchronous events initiated by a class implementing
 this interface see the ServiceObserverInterface class."
      operation 43518135 "~ServiceDelegateAndroidInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43518263 "ApplyPayload"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 5
	  param in name "payload_url" explicit_type "std::string"
	  param in name "payload_offset" explicit_type "int64_t"
	  param in name "payload_size" explicit_type "int64_t"
	  param in name "key_value_pair_headers" explicit_type "std::vector<std::string>"
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start an update attempt to download an apply the provided |payload_url| if
 no other update is running. The extra |key_value_pair_headers| will be
 included when fetching the payload. Returns whether the update was started
 successfully, which means that no other update was running and the passed
 parameters were correct, but not necessarily that the update finished
 correctly."
      end

      operation 43518391 "SuspendUpdate"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suspend an ongoing update. Returns true if there was an update ongoing and
 it was suspended. In case of failure, it returns false and sets |error|
 accordingly."
      end

      operation 43518519 "ResumeUpdate"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resumes an update suspended with SuspendUpdate(). The update can't be
 suspended after it finished and this method will fail in that case.
 Returns whether the resume operation was successful, which only implies
 that there was a suspended update. In case of error, returns false and sets
 |error| accordingly."
      end

      operation 43518647 "CancelUpdate"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cancel the ongoing update. The update could be running or suspended, but it
 can't be canceled after it was done. In case of error, returns false and
 sets |error| accordingly."
      end

      operation 43518775 "ResetStatus"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reset the already applied update back to an idle state. This method can
 only be called when no update attempt is going on, and it will reset the
 status back to idle, deleting the currently applied update if any. In case
 of error, returns false and sets |error| accordingly."
      end

      operation 43518903 "ServiceDelegateAndroidInterface"
	cpp_defaulted protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3356983 "BinderUpdateEngineBrilloService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6777527 // <generalisation>
	relation 6777527 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6777527 // <generalisation>
	  b parent class_ref 3357111 // typedef188
      end

      classrelation 6777655 // <generalisation>
	relation 6777655 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6777655 // <generalisation>
	  b parent class_ref 3356471 // ServiceObserverInterface
      end

      operation 43451191 "BinderUpdateEngineBrilloService"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract} : common_(new UpdateEngineService(system_state)) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43451319 "~BinderUpdateEngineBrilloService"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43451447 "ServiceName"
	const cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return \"android.brillo.UpdateEngineService\";
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43451575 "SendStatusUpdate"
	cpp_override public explicit_return_type "void"
	nparams 5
	  param in name "last_checked_time" explicit_type "int64_t"
	  param in name "progress" explicit_type "double"
	  param in name "status" type class_ref 3356727 // UpdateStatus
	  param in name "new_version" explicit_type "std::string"
	  param in name "new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ServiceObserverInterface overrides."
      end

      operation 43451703 "SendPayloadApplicationComplete"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43451831 "SendChannelChangeUpdate"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "tracking_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Channel tracking changes are ignored."
      end

      operation 43451959 "AttemptUpdate"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 3
	  param in name "app_version" type class_ref 3024823 // String16
	  param in name "omaha_url" type class_ref 3024823 // String16
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " android::brillo::BnUpdateEngine overrides."
      end

      operation 43452087 "AttemptRollback"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param in name "powerwash" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452215 "CanRollback"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_can_rollback" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452343 "ResetStatus"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452471 "GetStatus"
	public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "status" type class_ref 3357367 // ParcelableUpdateEngineStatus
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452599 "RebootIfNeeded"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452727 "SetChannel"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 2
	  param in name "target_channel" type class_ref 3024823 // String16
	  param in name "powerwash" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452855 "GetChannel"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 2
	  param in name "get_current_channel" explicit_type "bool"
	  param inout name "out_channel" type class_ref 3024823 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43452983 "SetP2PUpdatePermission"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453111 "GetP2PUpdatePermission"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_p2p_permission" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453239 "SetUpdateOverCellularPermission"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453367 "GetUpdateOverCellularPermission"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_cellular_permission" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453495 "GetDurationSinceUpdate"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_duration" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453623 "GetPrevVersion"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_prev_version" type class_ref 3024823 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453751 "GetRollbackPartition"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_rollback_partition" type class_ref 3024823 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43453879 "RegisterStatusCallback"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param in name "callback" explicit_type "android::sp<android::brillo::IUpdateEngineStatusCallback>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43454007 "GetLastAttemptError"
	cpp_override public explicit_return_type "android::binder::Status"
	nparams 1
	  param inout name "out_last_attempt_error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43454135 "UnregisterStatusCallback"
	private explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "android::brillo::IUpdateEngineStatusCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be used as a death notification handler only."
      end

      classrelation 6777783 // common_ (<directional composition>)
	relation 6777783 *-->
	  stereotype "std::unique_ptr"
	  a role_name "common_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777783 // common_ (<directional composition>)
	  b parent class_ref 3357495 // UpdateEngineService
      end

      attribute 12328887 "callbacks_"
	private explicit_type "android::sp<android::brillo::IUpdateEngineStatusCallback>"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3357111 "typedef188"
      visibility package stereotype "typedef" explicit_base_type "android::brillo::BnUpdateEngine"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3357239 "SystemState"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An interface to global system context, including platform resources,
 the current state of the system, high-level objects whose lifetime is same
 as main, system interfaces, etc.
 Carved out separately so it can be mocked for unit tests.
 Currently it has only one method, but we should start migrating other
 methods to use this as and when needed to unit test them.
 TODO(jaysri): Consider renaming this to something like GlobalContext."
      operation 43520823 "~SystemState"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
	comment " Destructs this object."
      end

      operation 43520951 "set_device_policy"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "device_policy" explicit_type "policy::DevicePolicy"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets or gets the latest device policy."
      end

      operation 43521079 "device_policy"
	abstract cpp_virtual public explicit_return_type "policy::DevicePolicy"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43521207 "boot_control"
	abstract cpp_virtual public return_type class_ref 3357751 // BootControlInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the interface object for the bootloader control interface."
      end

      operation 43521335 "clock"
	abstract cpp_virtual public return_type class_ref 3362359 // ClockInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the interface object for the clock."
      end

      operation 43521463 "connection_manager"
	abstract cpp_virtual public return_type class_ref 3359031 // ConnectionManagerInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the connection manager object."
      end

      operation 43521591 "hardware"
	abstract cpp_virtual public return_type class_ref 3360311 // HardwareInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the hardware interface object."
      end

      operation 43521719 "metrics_lib"
	abstract cpp_virtual public return_type class_ref 3001655 // MetricsLibraryInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the Metrics Library interface for reporting UMA stats."
      end

      operation 43521847 "prefs"
	abstract cpp_virtual public return_type class_ref 3360439 // PrefsInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the interface object for persisted store."
      end

      operation 43521975 "powerwash_safe_prefs"
	abstract cpp_virtual public return_type class_ref 3360439 // PrefsInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the interface object for the persisted store that persists across
 powerwashes. Please note that this should be used very seldomly and must
 be forwards and backwards compatible as powerwash is used to go back and
 forth in system versions."
      end

      operation 43522103 "payload_state"
	abstract cpp_virtual public return_type class_ref 3362487 // PayloadStateInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the interface for the payload state object."
      end

      operation 43522231 "update_attempter"
	abstract cpp_virtual public return_type class_ref 3362615 // UpdateAttempter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a pointer to the update attempter object."
      end

      operation 43522359 "weave_service"
	abstract cpp_virtual public return_type class_ref 3362743 // WeaveServiceInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a pointer to the WeaveServiceInterface class or nullptr if none."
      end

      operation 43522487 "request_params"
	abstract cpp_virtual public return_type class_ref 3362871 // OmahaRequestParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a pointer to the object that stores the parameters that are
 common to all Omaha requests."
      end

      operation 43522615 "p2p_manager"
	abstract cpp_virtual public return_type class_ref 3361591 // P2PManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a pointer to the P2PManager singleton."
      end

      operation 43522743 "update_manager"
	abstract cpp_virtual public return_type class_ref 3362999 // UpdateManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a pointer to the UpdateManager singleton."
      end

      operation 43522871 "power_manager_proxy"
	abstract cpp_virtual public return_type class_ref 3363127 // PowerManagerProxyInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DBus proxies. Mocked during test."
      end

      operation 43522999 "system_rebooted"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If true, this is the first instance of the update engine since the system
 restarted. Important for tracking whether you are running instance of the
 update engine on first boot or due to a crash/restart."
      end
    end

    class 3357495 "UpdateEngineService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 3358775 "AttemptUpdateFlags"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12329527 "kAttemptUpdateFlagNonInteractive"
	  public type class_ref 3358775 // AttemptUpdateFlags
	  init_value " (1<<0)
  "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      attribute 12329655 "kErrorDomain"
	class_attribute const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * const ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Error domain for all the service errors.
"
      end

      attribute 12329783 "kErrorFailed"
	class_attribute const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * const ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Generic service error.
"
      end

      operation 43458487 "UpdateEngineService"
	public explicit_return_type ""
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43458615 "~UpdateEngineService"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43458743 "AttemptUpdate"
	public explicit_return_type "bool"
	nparams 4
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_app_version" explicit_type "std::string"
	  param in name "in_omaha_url" explicit_type "std::string"
	  param in name "in_flags_as_int" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43458871 "AttemptRollback"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_powerwash" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43458999 "CanRollback"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_can_rollback" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if the system rollback is available by verifying if the secondary
 system partition is valid and bootable."
      end

      operation 43459127 "ResetStatus"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resets the status of the update_engine to idle, ignoring any applied
 update. This is used for development only."
      end

      operation 43459255 "GetStatus"
	public explicit_return_type "bool"
	nparams 6
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_last_checked_time" explicit_type "int64_t"
	  param inout name "out_progress" explicit_type "double"
	  param inout name "out_current_operation" explicit_type "std::string"
	  param inout name "out_new_version" explicit_type "std::string"
	  param inout name "out_new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current status of the Update Engine. If an update is in
 progress, the number of operations, size to download and overall progress
 is reported."
      end

      operation 43459383 "RebootIfNeeded"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reboots the device if an update is applied and a reboot is required."
      end

      operation 43459511 "SetChannel"
	public explicit_return_type "bool"
	nparams 3
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_target_channel" explicit_type "std::string"
	  param in name "in_is_powerwash_allowed" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Changes the current channel of the device to the target channel. If the
 target channel is a less stable channel than the current channel, then the
 channel change happens immediately (at the next update check).  If the
 target channel is a more stable channel, then if is_powerwash_allowed is
 set to true, then also the change happens immediately but with a powerwash
 if required. Otherwise, the change takes effect eventually (when the
 version on the target channel goes above the version number of what the
 device currently has)."
      end

      operation 43459639 "GetChannel"
	public explicit_return_type "bool"
	nparams 3
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_get_current_channel" explicit_type "bool"
	  param inout name "out_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If get_current_channel is set to true, populates |channel| with the name of
 the channel that the device is currently on. Otherwise, it populates it
 with the name of the channel the device is supposed to be (in case of a
 pending channel change)."
      end

      operation 43459767 "SetP2PUpdatePermission"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables or disables the sharing and consuming updates over P2P feature
 according to the |enabled| argument passed."
      end

      operation 43459895 "GetP2PUpdatePermission"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current value for the P2P enabled setting. This involves both
 sharing and consuming updates over P2P."
      end

      operation 43460023 "SetUpdateOverCellularPermission"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_allowed" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If there's no device policy installed, sets the update over cellular
 networks permission to the |allowed| value. Otherwise, this method returns
 with an error since this setting is overridden by the applied policy."
      end

      operation 43460151 "GetUpdateOverCellularPermission"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_allowed" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current value of the update over cellular network setting,
 either forced by the device policy if the device is enrolled or the current
 user preference otherwise."
      end

      operation 43460279 "GetDurationSinceUpdate"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_usec_wallclock" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the duration since the last successful update, as the
 duration on the wallclock. Returns an error if the device has not
 updated."
      end

      operation 43460407 "GetPrevVersion"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_prev_version" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the version string of OS that was used before the last reboot
 into an updated version. This is available only when rebooting into an
 update from previous version, otherwise an empty string is returned."
      end

      operation 43460535 "GetRollbackPartition"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_rollback_partition_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the name of kernel partition that can be rolled back into."
      end

      operation 43460663 "GetLastAttemptError"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_last_attempt_error" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the last UpdateAttempt error."
      end

      classrelation 6778807 // system_state_ (<unidirectional association>)
	relation 6778807 --->
	  a role_name "system_state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778807 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end
    end

    class 3357623 "BootControlAndroid"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The Android implementation of the BootControlInterface. This implementation
 uses the libhardware's boot_control HAL to access the bootloader."
      classrelation 6777911 // <generalisation>
	relation 6777911 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6777911 // <generalisation>
	  b parent class_ref 3357751 // BootControlInterface
      end

      operation 43454263 "BootControlAndroid"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43454391 "~BootControlAndroid"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43454519 "Init"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Load boot_control HAL implementation using libhardware and
 initializes it. Returns false if an error occurred."
      end

      operation 43454647 "GetNumSlots"
	const cpp_override public explicit_return_type "uint"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " BootControlInterface overrides."
      end

      operation 43454775 "GetCurrentSlot"
	const cpp_override public return_type class_ref 3357879 // Slot
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43454903 "GetPartitionDevice"
	const cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "partition_name" explicit_type "std::string"
	  param in name "slot" type class_ref 3357879 // Slot
	  param inout name "device" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43455031 "IsSlotBootable"
	const cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43455159 "MarkSlotUnbootable"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43455287 "SetActiveBootSlot"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43455415 "MarkBootSuccessfulAsync"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "callback" explicit_type "base::Callback<void(bool)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12329015 "module_"
	private explicit_type "boot_control_module_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NOTE: There is no way to release/unload HAL implementations so
 this is essentially leaked on object destruction.
"
      end
    end

    class 3358007 "BootControlChromeOS"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The Chrome OS implementation of the BootControlInterface. This interface
 assumes the partition names and numbers used in Chrome OS devices."
      classrelation 6778039 // <generalisation>
	relation 6778039 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6778039 // <generalisation>
	  b parent class_ref 3357751 // BootControlInterface
      end

      operation 43455543 "BootControlChromeOS"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43455671 "~BootControlChromeOS"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43455799 "Init"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize the BootControl instance loading the constant values. Returns
 whether the operation succeeded. In case of failure, normally meaning
 some critical failure such as we couldn't determine the slot that we
 booted from, the implementation will pretend that there's only one slot and
 therefore A/B updates are disabled."
      end

      operation 43455927 "GetNumSlots"
	const cpp_override public explicit_return_type "uint"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " BootControlInterface overrides."
      end

      operation 43456055 "GetCurrentSlot"
	const cpp_override public return_type class_ref 3357879 // Slot
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43456183 "GetPartitionDevice"
	const cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "partition_name" explicit_type "std::string"
	  param in name "slot" type class_ref 3357879 // Slot
	  param inout name "device" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43456311 "IsSlotBootable"
	const cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43456439 "MarkSlotUnbootable"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43456567 "SetActiveBootSlot"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43456695 "MarkBootSuccessfulAsync"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param in name "callback" explicit_type "base::Callback<void(bool)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 221623 "friend"
	
	cpp "
  friend class BootControlChromeOSTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 43456823 "SysfsBlockDevice"
	class_operation private explicit_return_type "std::string"
	nparams 1
	  param in name "device" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the sysfs block device for a root block device. For example,
 SysfsBlockDevice(\"/dev/sda\") returns \"/sys/block/sda\". Returns an empty
 string if the input device is not of the \"/dev/xyz\" form."
      end

      operation 43456951 "IsRemovableDevice"
	class_operation private explicit_return_type "bool"
	nparams 1
	  param in name "device" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the root |device| (e.g., \"/dev/sdb\") is known to be
 removable, false otherwise."
      end

      operation 43457079 "GetPartitionNumber"
	const private explicit_return_type "int"
	nparams 2
	  param in name "partition_name" explicit_type "std::string"
	  param in name "slot" type class_ref 3357879 // Slot
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the hard-coded partition number used in Chrome OS for the passed
 |partition_name| and |slot|. In case of invalid data, returns -1."
      end

      classrelation 6778167 // num_slots_ (<directional composition>)
	relation 6778167 *-->
	  a role_name "num_slots_" init_value " {1}" private
	    comment " Cached values for GetNumSlots() and GetCurrentSlot().
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778167 // num_slots_ (<directional composition>)
	  b parent class_ref 3357879 // Slot
      end

      classrelation 6778295 // current_slot_ (<directional composition>)
	relation 6778295 *-->
	  a role_name "current_slot_" init_value " {BootControlInterface::kInvalidSlot}" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778295 // current_slot_ (<directional composition>)
	  b parent class_ref 3357879 // Slot
      end

      attribute 12329143 "boot_disk_name_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The block device of the disk we booted from, without the partition number.
"
      end
    end

    class 3358135 "ChromeBrowserProxyResolver"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6778423 // <generalisation>
	relation 6778423 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6778423 // <generalisation>
	  b parent class_ref 3358263 // ProxyResolver
      end

      operation 43457207 "ChromeBrowserProxyResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "libcros_proxy" explicit_type "LibCrosProxy"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43457335 "~ChromeBrowserProxyResolver"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43457463 "Init"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize the ProxyResolver using the provided DBus proxies."
      end

      operation 43457591 "GetProxiesForUrl"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "url" explicit_type "std::string"
	  param in name "callback" type class_ref 3358391 // ProxiesResolvedFn
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3358519 "CallbacksMap"
	visibility package stereotype "typedef" explicit_base_type "std::multimap<std::string, std::pair<ProxiesResolvedFn, void*>>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3358647 "TimeoutsMap"
	visibility package stereotype "typedef" explicit_base_type "std::multimap<std::string, brillo::MessageLoop::TaskId>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43457719 "OnSignalConnected"
	private explicit_return_type "void"
	nparams 3
	  param in name "interface_name" explicit_type "std::string"
	  param in name "signal_name" explicit_type "std::string"
	  param in name "successful" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when the signal in UpdateEngineLibcrosProxyResolvedInterface is
 connected."
      end

      operation 43457847 "OnProxyResolvedSignal"
	private explicit_return_type "void"
	nparams 3
	  param in name "source_url" explicit_type "std::string"
	  param in name "proxy_info" explicit_type "std::string"
	  param in name "error_message" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle a reply from Chrome:"
      end

      operation 43457975 "HandleTimeout"
	private explicit_return_type "void"
	nparams 1
	  param in name "source_url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle no reply:"
      end

      operation 43458103 "ParseProxyString"
	class_operation private explicit_return_type "std::deque<std::string>"
	nparams 1
	  param in name "input" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses a string-encoded list of proxies and returns a deque
 of individual proxies. The last one will always be kNoProxy."
      end

      operation 43458231 "DeleteUrlState"
	private explicit_return_type "bool"
	nparams 3
	  param in name "url" explicit_type "std::string"
	  param in name "delete_timer" explicit_type "bool"
	  param inout name "callback" explicit_type "std::pair<ProxiesResolvedFn, void*>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes internal state for the first instance of url in the state.
 If delete_timer is set, calls CancelTask on the timer id.
 Returns the callback in an out parameter. Returns true on success."
      end

      operation 43458359 "Shutdown"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Shutdown the dbus proxy object."
      end

      attribute 12329271 "libcros_proxy_"
	private explicit_type "LibCrosProxy"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DBus proxies to request a HTTP proxy resolution. The request is done in the
 service_interface_proxy() interface and the response is received as a
 signal in the ue_proxy_resolved_interface().
"
      end

      attribute 12329399 "timeout_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6778551 // timers_ (<directional composition>)
	relation 6778551 *-->
	  a role_name "timers_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778551 // timers_ (<directional composition>)
	  b parent class_ref 3358647 // TimeoutsMap
      end

      classrelation 6778679 // callbacks_ (<directional composition>)
	relation 6778679 *-->
	  a role_name "callbacks_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778679 // callbacks_ (<directional composition>)
	  b parent class_ref 3358519 // CallbacksMap
      end
    end

    class 3358263 "ProxyResolver"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 43514167 "ProxyResolver"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43514295 "~ProxyResolver"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 43514423 "GetProxiesForUrl"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "url" explicit_type "std::string"
	  param in name "callback" type class_ref 3358391 // ProxiesResolvedFn
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finds proxies for the given URL and returns them via the callback.
 |data| will be passed to the callback.
 Returns true on success."
      end
    end

    class 3358391 "ProxiesResolvedFn"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(const std::deque<std::string>& proxies,
                                  void* data);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Callback for a call to GetProxiesForUrl().
 Resultant proxies are in |out_proxy|. Each will be in one of the
 following forms:
 http://<host>[:<port>] - HTTP proxy
 socks{4,5}://<host>[:<port>] - SOCKS4/5 proxy
 kNoProxy - no proxy"
    end

    class 3358903 "ConnectionManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class implements the concrete class that talks with the connection
 manager (shill) over DBus.
 TODO(deymo): Remove this class and use ShillProvider from the UpdateManager."
      classrelation 6778935 // <generalisation>
	relation 6778935 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6778935 // <generalisation>
	  b parent class_ref 3359031 // ConnectionManagerInterface
      end

      operation 43460791 "StringForConnectionType"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "type" type class_ref 3359159 // NetworkConnectionType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the string representation corresponding to the given
 connection type."
      end

      operation 43460919 "ConnectionManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "shill_proxy" type class_ref 3359287 // ShillProxyInterface
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs a new ConnectionManager object initialized with the
 given system state."
      end

      operation 43461047 "~ConnectionManager"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43461175 "GetConnectionProperties"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "out_type" type class_ref 3359159 // NetworkConnectionType
	  param inout name "out_tethering" type class_ref 3359415 // NetworkTethering
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ConnectionManagerInterface overrides."
      end

      operation 43461303 "IsUpdateAllowedOver"
	const cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "type" type class_ref 3359159 // NetworkConnectionType
	  param in name "tethering" type class_ref 3359415 // NetworkTethering
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43461431 "GetDefaultServicePath"
	private explicit_return_type "bool"
	nparams 1
	  param inout name "out_path" explicit_type "dbus::ObjectPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns (via out_path) the default network path, or empty string if
 there's no network up. Returns true on success."
      end

      operation 43461559 "GetServicePathProperties"
	private explicit_return_type "bool"
	nparams 3
	  param in name "path" explicit_type "dbus::ObjectPath"
	  param inout name "out_type" type class_ref 3359159 // NetworkConnectionType
	  param inout name "out_tethering" type class_ref 3359415 // NetworkTethering
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6779063 // shill_proxy_ (<unidirectional association>)
	relation 6779063 --->
	  a role_name "shill_proxy_" private
	    comment " The mockable interface to access the shill DBus proxies.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779063 // shill_proxy_ (<unidirectional association>)
	  b parent class_ref 3359287 // ShillProxyInterface
      end

      classrelation 6779191 // system_state_ (<unidirectional association>)
	relation 6779191 --->
	  a role_name "system_state_" private
	    comment " The global context for update_engine.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779191 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end
    end

    class 3359031 "ConnectionManagerInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class exposes a generic interface to the connection manager
 (e.g FlimFlam, Shill, etc.) to consolidate all connection-related
 logic in update_engine."
      operation 43461687 "~ConnectionManagerInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43461815 "GetConnectionProperties"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param inout name "out_type" type class_ref 3359159 // NetworkConnectionType
	  param inout name "out_tethering" type class_ref 3359415 // NetworkTethering
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Populates |out_type| with the type of the network connection
 that we are currently connected and |out_tethering| with the estimate of
 whether that network is being tethered."
      end

      operation 43461943 "IsUpdateAllowedOver"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "type" type class_ref 3359159 // NetworkConnectionType
	  param in name "tethering" type class_ref 3359415 // NetworkTethering
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if we're allowed to update the system when we're
 connected to the internet through the given network connection type and the
 given tethering state."
      end

      operation 43462071 "ConnectionManagerInterface"
	cpp_defaulted protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3359159 "NetworkConnectionType"
      visibility package stereotype "enum_class"
      cpp_decl "${comment}enum class ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 12329911 "kEthernet"
	public type class_ref 3359159 // NetworkConnectionType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330039 "kWifi"
	public type class_ref 3359159 // NetworkConnectionType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330167 "kWimax"
	public type class_ref 3359159 // NetworkConnectionType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330295 "kBluetooth"
	public type class_ref 3359159 // NetworkConnectionType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330423 "kCellular"
	public type class_ref 3359159 // NetworkConnectionType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330551 "kUnknown"
	public type class_ref 3359159 // NetworkConnectionType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3359287 "ShillProxyInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class handles the DBus connection with shill daemon. The DBus interface
 with shill requires to monitor or request the current service by interacting
 with the org::chromium::flimflam::ManagerProxy and then request or monitor
 properties on the selected org::chromium::flimflam::ServiceProxy. This class
 provides a mockable way to access that."
      operation 43520311 "~ShillProxyInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43520439 "GetManagerProxy"
	abstract cpp_virtual public explicit_return_type "org::chromium::flimflam::ManagerProxyInterface"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the ManagerProxy instance of the shill daemon. The instance is owned
 by this ShillProxyInterface instance."
      end

      operation 43520567 "GetServiceForPath"
	abstract cpp_virtual public explicit_return_type "std::unique_ptr<org::chromium::flimflam::ServiceProxyInterface>"
	nparams 1
	  param in name "path" explicit_type "dbus::ObjectPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a ServiceProxy for the given path. The ownership of the returned
 instance is transferred to the caller."
      end

      operation 43520695 "ShillProxyInterface"
	cpp_defaulted protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3359415 "NetworkTethering"
      visibility package stereotype "enum_class"
      cpp_decl "${comment}enum class ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 12330679 "kNotDetected"
	public type class_ref 3359415 // NetworkTethering
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330807 "kSuspected"
	public type class_ref 3359415 // NetworkTethering
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12330935 "kConfirmed"
	public type class_ref 3359415 // NetworkTethering
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12331063 "kUnknown"
	public type class_ref 3359415 // NetworkTethering
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3359543 "UpdateEngineDaemon"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6779319 // <generalisation>
	relation 6779319 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6779319 // <generalisation>
	  b parent class_ref 3359671 // typedef189
      end

      operation 43462199 "UpdateEngineDaemon"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43462327 "OnInit"
	cpp_override protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43462455 "OnDBusRegistered"
	private explicit_return_type "void"
	nparams 1
	  param in name "succeeded" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Run from the main loop when the |dbus_adaptor_| object is registered. At
 this point we can request ownership of the DBus service name and continue
 initialization."
      end

      attribute 12331191 "dbus_connection_"
	private explicit_type "brillo::DBusConnection"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Main D-Bus connection and service adaptor.
"
      end

      classrelation 6779447 // dbus_adaptor_ (<directional composition>)
	relation 6779447 *-->
	  stereotype "std::unique_ptr"
	  a role_name "dbus_adaptor_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779447 // dbus_adaptor_ (<directional composition>)
	  b parent class_ref 3359799 // UpdateEngineAdaptor
      end

      classrelation 6779575 // subprocess_ (<directional composition>)
	relation 6779575 *-->
	  a role_name "subprocess_" private
	    comment " The Subprocess singleton class requires a brillo::MessageLoop in the
 current thread, so we need to initialize it from this class instead of
 the main() function.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779575 // subprocess_ (<directional composition>)
	  b parent class_ref 3359927 // Subprocess
      end

      attribute 12331319 "binder_watcher_"
	private explicit_type "brillo::BinderWatcher"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6779703 // binder_service_ (<directional composition>)
	relation 6779703 *-->
	  stereotype "android::sp"
	  a role_name "binder_service_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779703 // binder_service_ (<directional composition>)
	  b parent class_ref 3356983 // BinderUpdateEngineBrilloService
      end

      classrelation 6779831 // <directional composition>
	relation 6779831 *-->
	  stereotype "android::sp"
	  a role_name "" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779831 // <directional composition>
	  b parent class_ref 3356215 // BinderUpdateEngineAndroidService
      end

      classrelation 6779959 // daemon_state_ (<directional composition>)
	relation 6779959 *-->
	  stereotype "std::unique_ptr"
	  a role_name "daemon_state_" private
	    comment " The daemon state with all the required daemon classes for the configured
 platform.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779959 // daemon_state_ (<directional composition>)
	  b parent class_ref 3360055 // DaemonStateInterface
      end
    end

    class 3359671 "typedef189"
      visibility package stereotype "typedef" explicit_base_type "brillo::Daemon"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3359799 "UpdateEngineAdaptor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The UpdateEngineAdaptor class runs the UpdateEngineInterface in the fixed
 object path, without an ObjectManager notifying the interfaces, since it is
 all static and clients don't expect it to be implemented."
      classrelation 6781111 // <generalisation>
	relation 6781111 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6781111 // <generalisation>
	  b parent class_ref 3360951 // typedef191
      end

      classrelation 6781239 // <generalisation>
	relation 6781239 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6781239 // <generalisation>
	  b parent class_ref 3356471 // ServiceObserverInterface
      end

      operation 43466679 "UpdateEngineAdaptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "system_state" type class_ref 3357239 // SystemState
	  param in name "bus" explicit_type "scoped_refptr<dbus::Bus>"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43466807 "~UpdateEngineAdaptor"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43466935 "RegisterAsync"
	public explicit_return_type "void"
	nparams 1
	  param in name "completion_callback" explicit_type "base::Callback<void(bool)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Register the DBus object with the update engine service asynchronously.
 Calls |copmletion_callback| when done passing a boolean indicating if the
 registration succeeded."
      end

      operation 43467063 "RequestOwnership"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Takes ownership of the well-known DBus name and returns whether it
 succeeded."
      end

      operation 43467191 "SendStatusUpdate"
	cpp_override public explicit_return_type "void"
	nparams 5
	  param in name "last_checked_time" explicit_type "int64_t"
	  param in name "progress" explicit_type "double"
	  param in name "status" type class_ref 3356727 // UpdateStatus
	  param in name "new_version" explicit_type "std::string"
	  param in name "new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ServiceObserverInterface overrides."
      end

      operation 43467319 "SendPayloadApplicationComplete"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43467447 "SendChannelChangeUpdate"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "tracking_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Channel tracking changes are ignored."
      end

      attribute 12331447 "bus_"
	private explicit_type "dbus::Bus"
	stereotype "scoped_refptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6781367 // dbus_service_ (<directional composition>)
	relation 6781367 *-->
	  a role_name "dbus_service_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781367 // dbus_service_ (<directional composition>)
	  b parent class_ref 3360695 // DBusUpdateEngineService
      end

      attribute 12331575 "dbus_object_"
	private explicit_type "brillo::dbus_utils::DBusObject"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3360055 "DaemonStateInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 43463607 "~DaemonStateInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43463735 "StartUpdater"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start the daemon loop. Should be called only once to start the daemon's
 main functionality."
      end

      operation 43463863 "AddObserver"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Add and remove an observer. All the registered observers will be called
 whenever there's a new status to update."
      end

      operation 43463991 "RemoveObserver"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43464119 "DaemonStateInterface"
	cpp_defaulted protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3360183 "DaemonStateAndroid"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6780087 // <generalisation>
	relation 6780087 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6780087 // <generalisation>
	  b parent class_ref 3360055 // DaemonStateInterface
      end

      operation 43462583 "DaemonStateAndroid"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43462711 "~DaemonStateAndroid"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43462839 "Initialize"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43462967 "StartUpdater"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DaemonStateInterface overrides."
      end

      operation 43463095 "AddObserver"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43463223 "RemoveObserver"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43463351 "service_observers"
	cpp_inline public explicit_return_type "std::set<ServiceObserverInterface*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return service_observers_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43463479 "service_delegate"
	public return_type class_ref 3356599 // ServiceDelegateAndroidInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a pointer to the service delegate."
      end

      classrelation 6780215 // service_observers_ (<unidirectional association>)
	relation 6780215 --->
	  stereotype "std::set"
	  a role_name "service_observers_" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780215 // service_observers_ (<unidirectional association>)
	  b parent class_ref 3356471 // ServiceObserverInterface
      end

      classrelation 6780343 // boot_control_ (<directional composition>)
	relation 6780343 *-->
	  stereotype "std::unique_ptr"
	  a role_name "boot_control_" protected
	    comment " Interface for the boot control functions.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780343 // boot_control_ (<directional composition>)
	  b parent class_ref 3357751 // BootControlInterface
      end

      classrelation 6780471 // hardware_ (<directional composition>)
	relation 6780471 *-->
	  stereotype "std::unique_ptr"
	  a role_name "hardware_" protected
	    comment " Interface for the hardware functions.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780471 // hardware_ (<directional composition>)
	  b parent class_ref 3360311 // HardwareInterface
      end

      classrelation 6780599 // prefs_ (<directional composition>)
	relation 6780599 *-->
	  stereotype "std::unique_ptr"
	  a role_name "prefs_" protected
	    comment " Interface for persisted store.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780599 // prefs_ (<directional composition>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6780727 // update_attempter_ (<directional composition>)
	relation 6780727 *-->
	  stereotype "std::unique_ptr"
	  a role_name "update_attempter_" protected
	    comment " The main class handling the updates.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780727 // update_attempter_ (<directional composition>)
	  b parent class_ref 3360567 // UpdateAttempterAndroid
      end
    end

    class 3360567 "UpdateAttempterAndroid"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6796471 // <generalisation>
	relation 6796471 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6796471 // <generalisation>
	  b parent class_ref 3356599 // ServiceDelegateAndroidInterface
      end

      classrelation 6796599 // <generalisation>
	relation 6796599 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6796599 // <generalisation>
	  b parent class_ref 3370551 // ActionProcessorDelegate
      end

      classrelation 6796727 // <generalisation>
	relation 6796727 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6796727 // <generalisation>
	  b parent class_ref 3370679 // DownloadActionDelegate
      end

      classrelation 6796855 // <generalisation>
	relation 6796855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6796855 // <generalisation>
	  b parent class_ref 3371191 // DelegateInterface
      end

      class 3372727 "UpdateStatus"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6796983 // <generalisation>
	  relation 6796983 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6796983 // <generalisation>
	    b parent class_ref 3356727 // UpdateStatus
	end
      end

      operation 43531831 "UpdateAttempterAndroid"
	public explicit_return_type ""
	nparams 4
	  param inout name "daemon_state" type class_ref 3360183 // DaemonStateAndroid
	  param inout name "prefs" type class_ref 3360439 // PrefsInterface
	  param inout name "boot_control_" type class_ref 3357751 // BootControlInterface
	  param inout name "hardware_" type class_ref 3360311 // HardwareInterface
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43531959 "~UpdateAttempterAndroid"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43532087 "Init"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Further initialization to be done post construction."
      end

      operation 43532215 "ApplyPayload"
	cpp_override public explicit_return_type "bool"
	nparams 5
	  param in name "payload_url" explicit_type "std::string"
	  param in name "payload_offset" explicit_type "int64_t"
	  param in name "payload_size" explicit_type "int64_t"
	  param in name "key_value_pair_headers" explicit_type "std::vector<std::string>"
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ServiceDelegateAndroidInterface overrides."
      end

      operation 43532343 "SuspendUpdate"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43532471 "ResumeUpdate"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43532599 "CancelUpdate"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43532727 "ResetStatus"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43532855 "ProcessingDone"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "processor" type class_ref 3371575 // ActionProcessor
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ActionProcessorDelegate methods:"
      end

      operation 43532983 "ProcessingStopped"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "processor" type class_ref 3371575 // ActionProcessor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43533111 "ActionCompleted"
	cpp_override public explicit_return_type "void"
	nparams 3
	  param inout name "processor" type class_ref 3371575 // ActionProcessor
	  param inout name "action" type class_ref 3371703 // AbstractAction
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43533239 "BytesReceived"
	cpp_override public explicit_return_type "void"
	nparams 3
	  param in name "bytes_progressed" explicit_type "uint64_t"
	  param in name "bytes_received" explicit_type "uint64_t"
	  param in name "total" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DownloadActionDelegate overrides."
      end

      operation 43533367 "ShouldCancel"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "cancel_reason" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43533495 "DownloadComplete"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43533623 "ProgressUpdate"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "progress" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PostinstallRunnerAction::DelegateInterface"
      end

      operation 43533751 "UpdateBootFlags"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Asynchronously marks the current slot as successful if needed. If already
 marked as good, CompleteUpdateBootFlags() is called starting the action
 processor."
      end

      operation 43533879 "CompleteUpdateBootFlags"
	private explicit_return_type "void"
	nparams 1
	  param in name "success" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when the boot flags have been updated."
      end

      operation 43534007 "ScheduleProcessingStart"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Schedules an event loop callback to start the action processor. This is
 scheduled asynchronously to unblock the event loop."
      end

      operation 43534135 "TerminateUpdateAndNotify"
	private explicit_return_type "void"
	nparams 1
	  param in name "error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Notifies an update request completed with the given error |code| to all
 observers."
      end

      operation 43534263 "SetStatusAndNotify"
	private explicit_return_type "void"
	nparams 1
	  param in name "status" type class_ref 3372727 // UpdateStatus
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the status to the given |status| and notifies a status update to
 all observers."
      end

      operation 43534391 "BuildUpdateActions"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper method to construct the sequence of actions to be performed for
 applying an update."
      end

      operation 43534519 "SetupDownload"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets up the download parameters based on the update requested on the
 |install_plan_|."
      end

      operation 43534647 "WriteUpdateCompletedMarker"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes to the processing completed marker. Does nothing if
 |update_completed_marker_| is empty."
      end

      operation 43534775 "UpdateCompletedOnThisBoot"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns whether an update was completed in the current boot."
      end

      classrelation 6797111 // daemon_state_ (<unidirectional association>)
	relation 6797111 --->
	  a role_name "daemon_state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797111 // daemon_state_ (<unidirectional association>)
	  b parent class_ref 3360183 // DaemonStateAndroid
      end

      classrelation 6797239 // prefs_ (<unidirectional association>)
	relation 6797239 --->
	  a role_name "prefs_" private
	    comment " DaemonStateAndroid pointers.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797239 // prefs_ (<unidirectional association>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6797367 // boot_control_ (<unidirectional association>)
	relation 6797367 --->
	  a role_name "boot_control_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797367 // boot_control_ (<unidirectional association>)
	  b parent class_ref 3357751 // BootControlInterface
      end

      classrelation 6797495 // hardware_ (<unidirectional association>)
	relation 6797495 --->
	  a role_name "hardware_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797495 // hardware_ (<unidirectional association>)
	  b parent class_ref 3360311 // HardwareInterface
      end

      attribute 12358071 "last_notify_time_"
	private explicit_type "base::TimeTicks"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Last status notification timestamp used for throttling. Use monotonic
 TimeTicks to ensure that notifications are sent even if the system clock is
 set back in the middle of an update.
"
      end

      attribute 12358199 "actions_"
	private explicit_type "std::shared_ptr<AbstractAction>"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The list of actions and action processor that runs them asynchronously.
 Only used when |ongoing_update_| is true.
"
      end

      classrelation 6797623 // processor_ (<directional composition>)
	relation 6797623 *-->
	  stereotype "std::unique_ptr"
	  a role_name "processor_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797623 // processor_ (<directional composition>)
	  b parent class_ref 3371575 // ActionProcessor
      end

      classrelation 6797751 // download_action_ (<directional composition>)
	relation 6797751 *-->
	  stereotype "std::shared_ptr"
	  a role_name "download_action_" private
	    comment " Pointer to the DownloadAction in the actions_ vector.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797751 // download_action_ (<directional composition>)
	  b parent class_ref 3372471 // DownloadAction
      end

      attribute 12358327 "ongoing_update_"
	private explicit_type "bool"
	init_value " {false}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether there is an ongoing update. This implies that an update was started
 but not finished yet. This value will be true even if the update was
 suspended.
"
      end

      classrelation 6797879 // install_plan_ (<directional composition>)
	relation 6797879 *-->
	  a role_name "install_plan_" private
	    comment " The InstallPlan used during the ongoing update.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6797879 // install_plan_ (<directional composition>)
	  b parent class_ref 3368375 // InstallPlan
      end

      classrelation 6798007 // status_ (<directional composition>)
	relation 6798007 *-->
	  a role_name "status_" init_value " {UpdateStatus::IDLE}" private
	    comment " For status:
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6798007 // status_ (<directional composition>)
	  b parent class_ref 3372727 // UpdateStatus
      end

      attribute 12358455 "download_progress_"
	private explicit_type "double"
	init_value " {0.0}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12358583 "base_offset_"
	private explicit_type "int64_t"
	init_value " {0}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The offset in the payload file where the CrAU part starts.
"
      end

      classrelation 6798135 // proxy_resolver_ (<directional composition>)
	relation 6798135 *-->
	  a role_name "proxy_resolver_" private
	    comment " Only direct proxy supported.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6798135 // proxy_resolver_ (<directional composition>)
	  b parent class_ref 3369783 // DirectProxyResolver
      end

      classrelation 6798263 // cpu_limiter_ (<directional composition>)
	relation 6798263 *-->
	  a role_name "cpu_limiter_" private
	    comment " CPU limiter during the update.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6798263 // cpu_limiter_ (<directional composition>)
	  b parent class_ref 3372599 // CPULimiter
      end

      attribute 12358711 "updated_boot_flags_"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether we have marked the current slot as good. This step is required
 before applying an update to the other slot.
"
      end
    end

    class 3360695 "DBusUpdateEngineService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6780855 // <generalisation>
	relation 6780855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6780855 // <generalisation>
	  b parent class_ref 3360823 // typedef190
      end

      operation 43464247 "DBusUpdateEngineService"
	public explicit_return_type ""
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43464375 "~DBusUpdateEngineService"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43464503 "AttemptUpdate"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_app_version" explicit_type "std::string"
	  param in name "in_omaha_url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation of org::chromium::UpdateEngineInterfaceInterface."
      end

      operation 43464631 "AttemptUpdateWithFlags"
	cpp_override public explicit_return_type "bool"
	nparams 4
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_app_version" explicit_type "std::string"
	  param in name "in_omaha_url" explicit_type "std::string"
	  param in name "in_flags_as_int" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43464759 "AttemptRollback"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_powerwash" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43464887 "CanRollback"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_can_rollback" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if the system rollback is available by verifying if the secondary
 system partition is valid and bootable."
      end

      operation 43465015 "ResetStatus"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resets the status of the update_engine to idle, ignoring any applied
 update. This is used for development only."
      end

      operation 43465143 "GetStatus"
	cpp_override public explicit_return_type "bool"
	nparams 6
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_last_checked_time" explicit_type "int64_t"
	  param inout name "out_progress" explicit_type "double"
	  param inout name "out_current_operation" explicit_type "std::string"
	  param inout name "out_new_version" explicit_type "std::string"
	  param inout name "out_new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current status of the Update Engine. If an update is in
 progress, the number of operations, size to download and overall progress
 is reported."
      end

      operation 43465271 "RebootIfNeeded"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reboots the device if an update is applied and a reboot is required."
      end

      operation 43465399 "SetChannel"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_target_channel" explicit_type "std::string"
	  param in name "in_is_powerwash_allowed" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Changes the current channel of the device to the target channel. If the
 target channel is a less stable channel than the current channel, then the
 channel change happens immediately (at the next update check).  If the
 target channel is a more stable channel, then if is_powerwash_allowed is
 set to true, then also the change happens immediately but with a powerwash
 if required. Otherwise, the change takes effect eventually (when the
 version on the target channel goes above the version number of what the
 device currently has)."
      end

      operation 43465527 "GetChannel"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_get_current_channel" explicit_type "bool"
	  param inout name "out_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If get_current_channel is set to true, populates |channel| with the name of
 the channel that the device is currently on. Otherwise, it populates it
 with the name of the channel the device is supposed to be (in case of a
 pending channel change)."
      end

      operation 43465655 "SetP2PUpdatePermission"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables or disables the sharing and consuming updates over P2P feature
 according to the |enabled| argument passed."
      end

      operation 43465783 "GetP2PUpdatePermission"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current value for the P2P enabled setting. This involves both
 sharing and consuming updates over P2P."
      end

      operation 43465911 "SetUpdateOverCellularPermission"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param in name "in_allowed" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If there's no device policy installed, sets the update over cellular
 networks permission to the |allowed| value. Otherwise, this method returns
 with an error since this setting is overridden by the applied policy."
      end

      operation 43466039 "GetUpdateOverCellularPermission"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_allowed" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current value of the update over cellular network setting,
 either forced by the device policy if the device is enrolled or the current
 user preference otherwise."
      end

      operation 43466167 "GetDurationSinceUpdate"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_usec_wallclock" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the duration since the last successful update, as the
 duration on the wallclock. Returns an error if the device has not
 updated."
      end

      operation 43466295 "GetPrevVersion"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_prev_version" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the version string of OS that was used before the last reboot
 into an updated version. This is available only when rebooting into an
 update from previous version, otherwise an empty string is returned."
      end

      operation 43466423 "GetRollbackPartition"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_rollback_partition_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the name of kernel partition that can be rolled back into."
      end

      operation 43466551 "GetLastAttemptError"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	  param inout name "out_last_attempt_error" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the last UpdateAttempt error. If not updated yet, default success
 ErrorCode will be returned."
      end

      classrelation 6780983 // common_ (<directional composition>)
	relation 6780983 *-->
	  stereotype "std::unique_ptr"
	  a role_name "common_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780983 // common_ (<directional composition>)
	  b parent class_ref 3357495 // UpdateEngineService
      end
    end

    class 3360823 "typedef190"
      visibility package stereotype "typedef" explicit_base_type "org::chromium::UpdateEngineInterfaceInterface"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3360951 "typedef191"
      visibility package stereotype "typedef" explicit_base_type "org::chromium::UpdateEngineInterfaceAdaptor"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3361207 "FakeFileWriter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " FakeFileWriter is an implementation of FileWriter. It will succeed
 calls to Open(), Close(), but not do any work. All calls to Write()
 will append the passed data to an internal vector."
      classrelation 6781495 // <generalisation>
	relation 6781495 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6781495 // <generalisation>
	  b parent class_ref 3361335 // FileWriter
      end

      operation 43468343 "FakeFileWriter"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : was_opened_(false), was_closed_(false) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43468471 "Open"
	cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 3
	  param in name "path" explicit_type "char"
	  param in name "flags" explicit_type "int"
	  param in name "mode" explicit_type "mode_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
    CHECK(!was_opened_);
    CHECK(!was_closed_);
    was_opened_ = true;
    return 0;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43468599 "Write"
	cpp_virtual cpp_inline public explicit_return_type "ssize_t"
	nparams 2
	  param in name "bytes" explicit_type "void"
	  param in name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    CHECK(was_opened_);
    CHECK(!was_closed_);
    const char* char_bytes = reinterpret_cast<const char*>(bytes);
    bytes_.insert(bytes_.end(), char_bytes, char_bytes + count);
    return count;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43468727 "Close"
	cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(was_opened_);
    CHECK(!was_closed_);
    was_closed_ = true;
    return 0;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43468855 "bytes"
	cpp_inline public explicit_return_type "brillo::Blob"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return bytes_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12332087 "bytes_"
	private explicit_type "brillo::Blob"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The internal store of all bytes that have been written
"
      end

      attribute 12332215 "was_opened_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These are just to ensure FileWriter methods are called properly.
"
      end

      attribute 12332343 "was_closed_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3361463 "FakeP2PManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A fake implementation of P2PManager."
      classrelation 6781623 // <generalisation>
	relation 6781623 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6781623 // <generalisation>
	  b parent class_ref 3361591 // P2PManager
      end

      operation 43468983 "FakeP2PManager"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} :
    is_p2p_enabled_(false),
    ensure_p2p_running_result_(false),
    ensure_p2p_not_running_result_(false),
    perform_housekeeping_result_(false),
    count_shared_files_result_(0) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43469111 "SetDevicePolicy"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "device_policy" explicit_type "policy::DevicePolicy"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " P2PManager overrides."
      end

      operation 43469239 "IsP2PEnabled"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return is_p2p_enabled_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43469367 "EnsureP2PRunning"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return ensure_p2p_running_result_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43469495 "EnsureP2PNotRunning"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return ensure_p2p_not_running_result_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43469623 "PerformHousekeeping"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return perform_housekeeping_result_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43469751 "LookupUrlForFile"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "file_id" explicit_type "std::string"
	  param in name "minimum_size" explicit_type "size_t"
	  param in name "max_time_to_wait" explicit_type "base::TimeDelta"
	  param in name "callback" explicit_type "LookupCallback"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
    callback.Run(lookup_url_for_file_result_);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43469879 "FileShare"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "file_id" explicit_type "std::string"
	  param in name "expected_size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    return false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470007 "FileGetPath"
	cpp_override cpp_inline public explicit_return_type "base::FilePath"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return base::FilePath();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470135 "FileGetSize"
	cpp_override cpp_inline public explicit_return_type "ssize_t"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return -1;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470263 "FileGetExpectedSize"
	cpp_override cpp_inline public explicit_return_type "ssize_t"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return -1;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470391 "FileGetVisible"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "file_id" explicit_type "std::string"
	  param inout name "out_result" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    return false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470519 "FileMakeVisible"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470647 "CountSharedFiles"
	cpp_override cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return count_shared_files_result_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43470775 "SetP2PEnabled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "is_p2p_enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    is_p2p_enabled_ = is_p2p_enabled;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods for controlling what the fake returns and how it acts."
      end

      operation 43470903 "SetEnsureP2PRunningResult"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ensure_p2p_running_result" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    ensure_p2p_running_result_ = ensure_p2p_running_result;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43471031 "SetEnsureP2PNotRunningResult"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ensure_p2p_not_running_result" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    ensure_p2p_not_running_result_ = ensure_p2p_not_running_result;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43471159 "SetPerformHousekeepingResult"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "perform_housekeeping_result" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    perform_housekeeping_result_ = perform_housekeeping_result;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43471287 "SetCountSharedFilesResult"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "count_shared_files_result" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    count_shared_files_result_ = count_shared_files_result;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43471415 "SetLookupUrlForFileResult"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    lookup_url_for_file_result_ = url;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12332471 "is_p2p_enabled_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12332599 "ensure_p2p_running_result_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12332727 "ensure_p2p_not_running_result_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12332855 "perform_housekeeping_result_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12332983 "count_shared_files_result_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12333111 "lookup_url_for_file_result_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3361591 "P2PManager"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Interface for sharing and discovering files via p2p."
      class 3361847 "Configuration"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 43492791 "~Configuration"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	  
	  
	  
	  
	end

	operation 43492919 "GetP2PDir"
	  abstract cpp_virtual public explicit_return_type "base::FilePath"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Gets the path to the p2p dir being used, e.g. /var/cache/p2p."
	end

	operation 43493047 "GetInitctlArgs"
	  abstract cpp_virtual public explicit_return_type "std::vector<std::string>"
	  nparams 1
	    param in name "is_start" explicit_type "bool"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Gets the argument vector for starting (if |is_start| is True)
 resp. stopping (if |is_start| is False) the p2p service
 e.g. [\"initctl\", \"start\", \"p2p\"] or [\"initctl\", \"stop\", \"p2p\"]."
	end

	operation 43493175 "GetP2PClientArgs"
	  abstract cpp_virtual public explicit_return_type "std::vector<std::string>"
	  nparams 2
	    param in name "file_id" explicit_type "std::string"
	    param in name "minimum_size" explicit_type "size_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Gets the argument vector for invoking p2p-client, e.g.
 \"p2p-client --get-url=file_id_we_want --minimum-size=42123\"."
	end
      end

      operation 43493303 "~P2PManager"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      class 3369015 "LookupCallback"
	visibility package stereotype "typedef" explicit_base_type "base::Callback<void(const std::string& url)>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43493431 "SetDevicePolicy"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "device_policy" explicit_type "policy::DevicePolicy"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use the device policy specified by |device_policy|. If this is
 null, then no device policy is used."
      end

      operation 43493559 "IsP2PEnabled"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff P2P is currently allowed for use on this device. This
 value is determined and maintained by the Update Manager."
      end

      operation 43493687 "EnsureP2PRunning"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Ensures that the p2p subsystem is running (e.g. starts it if it's
 not already running) and blocks until this is so. Returns false
 if an error occurred."
      end

      operation 43493815 "EnsureP2PNotRunning"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Ensures that the p2p subsystem is not running (e.g. stops it if
 it's running) and blocks until this is so. Returns false if an
 error occurred."
      end

      operation 43493943 "PerformHousekeeping"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cleans up files in /var/cache/p2p owned by this application as
 per the |file_extension| and |num_files_to_keep| values passed
 when the object was constructed. This may be called even if
 the p2p subsystem is not running."
      end

      operation 43494071 "LookupUrlForFile"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param in name "file_id" explicit_type "std::string"
	  param in name "minimum_size" explicit_type "size_t"
	  param in name "max_time_to_wait" explicit_type "base::TimeDelta"
	  param in name "callback" type class_ref 3369015 // LookupCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Asynchronously finds a peer that serves the file identified by
 |file_id|. If |minimum_size| is non-zero, will find a peer that
 has at least that many bytes. When the result is ready |callback|
 is called from the current message loop.

 This operation may take a very long time to complete because part
 of the p2p protocol involves waiting for the LAN-wide sum of all
 num-connections to drop below a given threshold. However, if
 |max_time_to_wait| is non-zero, the operation is guaranteed to
 not exceed this duration.

 If the file is not available on the LAN (or if mDNS/DNS-SD is
 filtered), this is guaranteed to not take longer than 5 seconds."
      end

      operation 43494199 "FileShare"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "file_id" explicit_type "std::string"
	  param in name "expected_size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Shares a file identified by |file_id| in the directory
 /var/cache/p2p. Initially the file will not be visible, that is,
 it will have a .tmp extension and not be shared via p2p. Use the
 FileMakeVisible() method to change this.

 If you know the final size of the file, pass it in the
 |expected_size| parameter. Otherwise pass zero. If non-zero, the
 amount of free space in /var/cache/p2p is checked and if there is
 less than twice the amount of space available, this method
 fails. Additionally, disk space will be reserved via fallocate(2)
 and |expected_size| is written to the user.cros-p2p-filesize
 xattr of the created file.

 If the file already exists, true is returned. Any on-disk xattr
 is not updated."
      end

      operation 43494327 "FileGetPath"
	abstract cpp_virtual public explicit_return_type "base::FilePath"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets a fully qualified path for the file identified by |file_id|.
 If the file has not been shared already using the FileShare()
 method, an empty base::FilePath is returned - use FilePath::empty() to
 find out."
      end

      operation 43494455 "FileGetSize"
	abstract cpp_virtual public explicit_return_type "ssize_t"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the actual size of the file identified by |file_id|. This is
 equivalent to reading the value of the st_size field of the
 struct stat on the file given by FileGetPath(). Returns -1 if an
 error occurs.

 For a file just created with FileShare() this will return 0."
      end

      operation 43494583 "FileGetExpectedSize"
	abstract cpp_virtual public explicit_return_type "ssize_t"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the expected size of the file identified by |file_id|. This
 is equivalent to reading the value of the user.cros-p2p-filesize
 xattr on the file given by FileGetPath(). Returns -1 if an error
 occurs.

 For a file just created with FileShare() this will return the
 value of the |expected_size| parameter passed to that method."
      end

      operation 43494711 "FileGetVisible"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "file_id" explicit_type "std::string"
	  param inout name "out_result" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets whether the file identified by |file_id| is publicly
 visible. If |out_result| is not null, the result is returned
 there. Returns false if an error occurs."
      end

      operation 43494839 "FileMakeVisible"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "file_id" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Makes the file identified by |file_id| publicly visible
 (e.g. removes the .tmp extension). If the file is already
 visible, this method does nothing. Returns False if
 the method fails or there is no file for |file_id|."
      end

      operation 43494967 "CountSharedFiles"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Counts the number of shared files used by this application
 (cf. the |file_extension parameter|. Returns -1 if an error
 occurred."
      end

      operation 43495095 "Construct"
	class_operation public return_type class_ref 3361591 // P2PManager
	nparams 6
	  param inout name "configuration" type class_ref 3361847 // Configuration
	  param inout name "clock" type class_ref 3362359 // ClockInterface
	  param inout name "update_manager" type class_ref 3362999 // UpdateManager
	  param in name "file_extension" explicit_type "std::string"
	  param in name "num_files_to_keep" explicit_type "int"
	  param in name "max_file_age" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} ${p4}${v4}, const ${t5} & ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, const ${t3} & ${p3}, const ${t4} ${p4}, const ${t5} & ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a suitable P2PManager instance and initializes the object
 so it's ready for use. The |file_extension| parameter is used to
 identify your application, use e.g. \"cros_au\".  If
 |configuration| is non-null, the P2PManager will take ownership
 of the Configuration object and use it (hence, it must be
 heap-allocated).

 The |num_files_to_keep| parameter specifies how many files to
 keep after performing housekeeping (cf. the PerformHousekeeping()
 method) - pass zero to allow infinitely many files. The
 |max_file_age| parameter specifies the maximum file age after
 performing housekeeping (pass zero to allow files of any age)."
      end
    end

    class 3361719 "FakeP2PManagerConfiguration"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Configuration for P2PManager for use in unit tests. Instead of
 /var/cache/p2p, a temporary directory is used."
      classrelation 6781751 // <generalisation>
	relation 6781751 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6781751 // <generalisation>
	  b parent class_ref 3361847 // Configuration
      end

      operation 43471543 "FakeP2PManagerConfiguration"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
    EXPECT_TRUE(utils::MakeTempDirectory(\"p2p-tc.XXXXXX\", &p2p_dir_));
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43471671 "~FakeP2PManagerConfiguration"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
    if (p2p_dir_.size() > 0 &&
        !base::DeleteFile(base::FilePath(p2p_dir_), true)) {
      PLOG(ERROR) << \"Unable to unlink files and directory in \" << p2p_dir_;
    }
  };
"
	
	
	
	
      end

      operation 43471799 "GetP2PDir"
	cpp_override cpp_inline public explicit_return_type "base::FilePath"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return base::FilePath(p2p_dir_);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " P2PManager::Configuration override"
      end

      operation 43471927 "GetInitctlArgs"
	cpp_override cpp_inline public explicit_return_type "std::vector<std::string>"
	nparams 1
	  param in name "is_start" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return is_start ? initctl_start_args_ : initctl_stop_args_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " P2PManager::Configuration override"
      end

      operation 43472055 "GetP2PClientArgs"
	cpp_override cpp_inline public explicit_return_type "std::vector<std::string>"
	nparams 2
	  param in name "file_id" explicit_type "std::string"
	  param in name "minimum_size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    std::vector<std::string> formatted_command = p2p_client_cmd_format_;
    // Replace {variable} on the passed string.
    std::string str_minimum_size = std::to_string(minimum_size);
    for (std::string& arg : formatted_command) {
      base::ReplaceSubstringsAfterOffset(&arg, 0, \"{file_id}\", file_id);
      base::ReplaceSubstringsAfterOffset(&arg, 0, \"{minsize}\",
                                         str_minimum_size);
    }
    return formatted_command;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " P2PManager::Configuration override"
      end

      operation 43472183 "SetInitctlStartCommand"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "command" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    initctl_start_args_ = command;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use |command_line| instead of \"initctl start p2p\" when attempting
 to start the p2p service."
      end

      operation 43472311 "SetInitctlStopCommand"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "command" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    initctl_stop_args_ = command;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use |command_line| instead of \"initctl stop p2p\" when attempting
 to stop the p2p service."
      end

      operation 43472439 "SetP2PClientCommand"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "command_format" explicit_type "std::vector<std::string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    p2p_client_cmd_format_ = command_format;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use |command_format| instead of \"p2p-client --get-url={file_id}
 --minimum-size={minsize}\" when attempting to look up a file using
 p2p-client(1).

 The passed |command_format| argument can have \"{file_id}\" and \"{minsize}\"
 as substrings of any of its elements, that will be replaced by the
 corresponding values passed to GetP2PClientArgs()."
      end

      attribute 12333239 "p2p_dir_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The temporary directory used for p2p.
"
      end

      attribute 12333367 "initctl_start_args_"
	private explicit_type "std::string"
	init_value " {\"initctl\", \"start\", \"p2p\"}"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Argument vector for starting p2p.
"
      end

      attribute 12333495 "initctl_stop_args_"
	private explicit_type "std::string"
	init_value " {\"initctl\", \"stop\", \"p2p\"}"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Argument vector for stopping p2p.
"
      end

      attribute 12333623 "p2p_client_cmd_format_"
	private explicit_type "std::string"
	init_value " {
      \"p2p-client\", \"--get-url={file_id}\", \"--minimum-size={minsize}\"}"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A string for generating the p2p-client command. See the
 SetP2PClientCommandLine() for details.
"
      end
    end

    class 3361975 "FakeShillProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class implements the connection to shill using real DBus calls."
      classrelation 6781879 // <generalisation>
	relation 6781879 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6781879 // <generalisation>
	  b parent class_ref 3359287 // ShillProxyInterface
      end

      operation 43472567 "FakeShillProxy"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43472695 "~FakeShillProxy"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43472823 "GetManagerProxy"
	cpp_override public return_type class_ref 3362103 // ManagerProxyMock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ShillProxyInterface overrides.
 GetManagerProxy returns the subclass ManagerProxyMock so tests can easily
 use it. Mocks for the return value of GetServiceForPath() can be provided
 with SetServiceForPath()."
      end

      operation 43472951 "GetServiceForPath"
	cpp_override public explicit_return_type "std::unique_ptr<org::chromium::flimflam::ServiceProxyInterface>"
	nparams 1
	  param in name "path" explicit_type "dbus::ObjectPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43473079 "SetServiceForPath"
	public explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "dbus::ObjectPath"
	  param in name "service_proxy" explicit_type "std::unique_ptr<org::chromium::flimflam::ServiceProxyInterface>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the service_proxy that will be returned by GetServiceForPath()."
      end

      classrelation 6782007 // manager_proxy_mock_ (<directional composition>)
	relation 6782007 *-->
	  stereotype "std::unique_ptr"
	  a role_name "manager_proxy_mock_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782007 // manager_proxy_mock_ (<directional composition>)
	  b parent class_ref 3362103 // ManagerProxyMock
      end

      attribute 12333751 "service_proxy_mocks_"
	private explicit_type "std::string,
           std::unique_ptr<org::chromium::flimflam::ServiceProxyInterface>"
	stereotype "std::map"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3362231 "FakeSystemState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Mock the SystemStateInterface so that we could lie that
 OOBE is completed even when there's no such marker file, etc."
      classrelation 6782135 // <generalisation>
	relation 6782135 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6782135 // <generalisation>
	  b parent class_ref 3357239 // SystemState
      end

      operation 43473207 "FakeSystemState"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43473335 "boot_control"
	cpp_override cpp_inline public return_type class_ref 3357751 // BootControlInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return boot_control_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Base class overrides. All getters return the current implementation of
 various members, either the default (fake/mock) or the one set to override
 it by client code."
      end

      operation 43473463 "clock"
	cpp_override cpp_inline public return_type class_ref 3362359 // ClockInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return clock_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43473591 "set_device_policy"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "device_policy" explicit_type "policy::DevicePolicy"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    device_policy_ = device_policy;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43473719 "device_policy"
	cpp_override cpp_inline public explicit_return_type "policy::DevicePolicy"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return device_policy_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43473847 "connection_manager"
	cpp_override cpp_inline public return_type class_ref 3359031 // ConnectionManagerInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return connection_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43473975 "hardware"
	cpp_override cpp_inline public return_type class_ref 3360311 // HardwareInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return hardware_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474103 "metrics_lib"
	cpp_override cpp_inline public return_type class_ref 3001655 // MetricsLibraryInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return metrics_lib_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474231 "prefs"
	cpp_override cpp_inline public return_type class_ref 3360439 // PrefsInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return prefs_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474359 "powerwash_safe_prefs"
	cpp_override cpp_inline public return_type class_ref 3360439 // PrefsInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return powerwash_safe_prefs_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474487 "payload_state"
	cpp_override cpp_inline public return_type class_ref 3362487 // PayloadStateInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return payload_state_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474615 "update_attempter"
	cpp_override cpp_inline public return_type class_ref 3362615 // UpdateAttempter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return update_attempter_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474743 "weave_service"
	cpp_override cpp_inline public return_type class_ref 3362743 // WeaveServiceInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return nullptr; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474871 "request_params"
	cpp_override cpp_inline public return_type class_ref 3362871 // OmahaRequestParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return request_params_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43474999 "p2p_manager"
	cpp_override cpp_inline public return_type class_ref 3361591 // P2PManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return p2p_manager_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43475127 "update_manager"
	cpp_override cpp_inline public return_type class_ref 3362999 // UpdateManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return update_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43475255 "power_manager_proxy"
	cpp_override cpp_inline public return_type class_ref 3363127 // PowerManagerProxyInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return power_manager_proxy_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43475383 "system_rebooted"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fake_system_rebooted_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43475511 "set_boot_control"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "boot_control" type class_ref 3357751 // BootControlInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    boot_control_ = boot_control ? boot_control : &fake_boot_control_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setters for the various members, can be used for overriding the default
 implementations. For convenience, setting to a null pointer will restore
 the default implementation."
      end

      operation 43475639 "set_clock"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "clock" type class_ref 3362359 // ClockInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    clock_ = clock ? clock : &fake_clock_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43475767 "set_connection_manager"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "connection_manager" type class_ref 3359031 // ConnectionManagerInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    connection_manager_ = (connection_manager ? connection_manager :
                           &mock_connection_manager_);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43475895 "set_hardware"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "hardware" type class_ref 3360311 // HardwareInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    hardware_ = hardware ? hardware : &fake_hardware_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476023 "set_metrics_lib"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "metrics_lib" type class_ref 3001655 // MetricsLibraryInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    metrics_lib_ = metrics_lib ? metrics_lib : &mock_metrics_lib_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476151 "set_prefs"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "prefs" type class_ref 3360439 // PrefsInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    prefs_ = prefs ? prefs : &mock_prefs_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476279 "set_powerwash_safe_prefs"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "powerwash_safe_prefs" type class_ref 3360439 // PrefsInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    powerwash_safe_prefs_ = (powerwash_safe_prefs ? powerwash_safe_prefs :
                             &mock_powerwash_safe_prefs_);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476407 "set_payload_state"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "payload_state" type class_ref 3362487 // PayloadStateInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    payload_state_ = payload_state ? payload_state : &mock_payload_state_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476535 "set_update_attempter"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "update_attempter" type class_ref 3362615 // UpdateAttempter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    update_attempter_ = (update_attempter ? update_attempter :
                         &mock_update_attempter_);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476663 "set_request_params"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "request_params" type class_ref 3362871 // OmahaRequestParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    request_params_ = (request_params ? request_params :
                       &mock_request_params_);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476791 "set_p2p_manager"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "p2p_manager" type class_ref 3361591 // P2PManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    p2p_manager_ = p2p_manager ? p2p_manager : &mock_p2p_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43476919 "set_update_manager"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "update_manager" type class_ref 3362999 // UpdateManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    update_manager_ = update_manager ? update_manager : &fake_update_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477047 "set_system_rebooted"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "system_rebooted" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    fake_system_rebooted_ = system_rebooted;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477175 "fake_boot_control"
	cpp_inline public return_type class_ref 3363255 // FakeBootControl
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(boot_control_ == &fake_boot_control_);
    return &fake_boot_control_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Getters for the built-in default implementations. These return the actual
 concrete type of each implementation. For additional safety, they will fail
 whenever the requested default was overridden by a different
 implementation."
      end

      operation 43477303 "fake_clock"
	cpp_inline public return_type class_ref 3363383 // FakeClock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(clock_ == &fake_clock_);
    return &fake_clock_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477431 "mock_connection_manager"
	cpp_inline public explicit_return_type "testing::NiceMock<MockConnectionManager>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(connection_manager_ == &mock_connection_manager_);
    return &mock_connection_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477559 "fake_hardware"
	cpp_inline public return_type class_ref 3363511 // FakeHardware
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(hardware_ == &fake_hardware_);
    return &fake_hardware_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477687 "mock_metrics_lib"
	cpp_inline public explicit_return_type "testing::NiceMock<MetricsLibraryMock>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(metrics_lib_ == &mock_metrics_lib_);
    return &mock_metrics_lib_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477815 "mock_prefs"
	cpp_inline public explicit_return_type "testing::NiceMock<MockPrefs>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(prefs_ == &mock_prefs_);
    return &mock_prefs_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43477943 "mock_powerwash_safe_prefs"
	cpp_inline public explicit_return_type "testing::NiceMock<MockPrefs>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(powerwash_safe_prefs_ == &mock_powerwash_safe_prefs_);
    return &mock_powerwash_safe_prefs_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43478071 "mock_payload_state"
	cpp_inline public explicit_return_type "testing::NiceMock<MockPayloadState>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(payload_state_ == &mock_payload_state_);
    return &mock_payload_state_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43478199 "mock_update_attempter"
	cpp_inline public explicit_return_type "testing::NiceMock<MockUpdateAttempter>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(update_attempter_ == &mock_update_attempter_);
    return &mock_update_attempter_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43478327 "mock_request_params"
	cpp_inline public explicit_return_type "testing::NiceMock<MockOmahaRequestParams>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(request_params_ == &mock_request_params_);
    return &mock_request_params_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43478455 "mock_p2p_manager"
	cpp_inline public explicit_return_type "testing::NiceMock<MockP2PManager>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(p2p_manager_ == &mock_p2p_manager_);
    return &mock_p2p_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43478583 "fake_update_manager"
	cpp_inline public return_type class_ref 3363639 // FakeUpdateManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    CHECK(update_manager_ == &fake_update_manager_);
    return &fake_update_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6782263 // fake_boot_control_ (<directional composition>)
	relation 6782263 *-->
	  a role_name "fake_boot_control_" private
	    comment " Default mock/fake implementations (owned).
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782263 // fake_boot_control_ (<directional composition>)
	  b parent class_ref 3363255 // FakeBootControl
      end

      classrelation 6782391 // fake_clock_ (<directional composition>)
	relation 6782391 *-->
	  a role_name "fake_clock_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782391 // fake_clock_ (<directional composition>)
	  b parent class_ref 3363383 // FakeClock
      end

      classrelation 6782519 // mock_connection_manager_ (<directional composition>)
	relation 6782519 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_connection_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782519 // mock_connection_manager_ (<directional composition>)
	  b parent class_ref 3363767 // MockConnectionManager
      end

      classrelation 6782647 // fake_hardware_ (<directional composition>)
	relation 6782647 *-->
	  a role_name "fake_hardware_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782647 // fake_hardware_ (<directional composition>)
	  b parent class_ref 3363511 // FakeHardware
      end

      classrelation 6782775 // mock_metrics_lib_ (<directional composition>)
	relation 6782775 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_metrics_lib_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782775 // mock_metrics_lib_ (<directional composition>)
	  b parent class_ref 3179063 // MetricsLibraryMock
      end

      classrelation 6782903 // mock_prefs_ (<directional composition>)
	relation 6782903 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_prefs_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782903 // mock_prefs_ (<directional composition>)
	  b parent class_ref 3363895 // MockPrefs
      end

      classrelation 6783031 // mock_powerwash_safe_prefs_ (<directional composition>)
	relation 6783031 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_powerwash_safe_prefs_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783031 // mock_powerwash_safe_prefs_ (<directional composition>)
	  b parent class_ref 3363895 // MockPrefs
      end

      classrelation 6783159 // mock_payload_state_ (<directional composition>)
	relation 6783159 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_payload_state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783159 // mock_payload_state_ (<directional composition>)
	  b parent class_ref 3364023 // MockPayloadState
      end

      classrelation 6783287 // mock_update_attempter_ (<directional composition>)
	relation 6783287 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_update_attempter_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783287 // mock_update_attempter_ (<directional composition>)
	  b parent class_ref 3364151 // MockUpdateAttempter
      end

      classrelation 6783415 // mock_request_params_ (<directional composition>)
	relation 6783415 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_request_params_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783415 // mock_request_params_ (<directional composition>)
	  b parent class_ref 3364279 // MockOmahaRequestParams
      end

      classrelation 6783543 // mock_p2p_manager_ (<directional composition>)
	relation 6783543 *-->
	  stereotype "testing::NiceMock"
	  a role_name "mock_p2p_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783543 // mock_p2p_manager_ (<directional composition>)
	  b parent class_ref 3364407 // MockP2PManager
      end

      classrelation 6783671 // fake_update_manager_ (<directional composition>)
	relation 6783671 *-->
	  a role_name "fake_update_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783671 // fake_update_manager_ (<directional composition>)
	  b parent class_ref 3363639 // FakeUpdateManager
      end

      classrelation 6783799 // mock_power_manager_ (<directional composition>)
	relation 6783799 *-->
	  a role_name "mock_power_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783799 // mock_power_manager_ (<directional composition>)
	  b parent class_ref 3364535 // PowerManagerProxyMock
      end

      classrelation 6783927 // boot_control_ (<unidirectional association>)
	relation 6783927 --->
	  a role_name "boot_control_" init_value " {&fake_boot_control_}" private
	    comment " Pointers to objects that client code can override. They are initialized to
 the default implementations above.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783927 // boot_control_ (<unidirectional association>)
	  b parent class_ref 3357751 // BootControlInterface
      end

      classrelation 6784055 // clock_ (<unidirectional association>)
	relation 6784055 --->
	  a role_name "clock_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784055 // clock_ (<unidirectional association>)
	  b parent class_ref 3362359 // ClockInterface
      end

      classrelation 6784183 // connection_manager_ (<unidirectional association>)
	relation 6784183 --->
	  a role_name "connection_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784183 // connection_manager_ (<unidirectional association>)
	  b parent class_ref 3359031 // ConnectionManagerInterface
      end

      classrelation 6784311 // hardware_ (<unidirectional association>)
	relation 6784311 --->
	  a role_name "hardware_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784311 // hardware_ (<unidirectional association>)
	  b parent class_ref 3360311 // HardwareInterface
      end

      classrelation 6784439 // metrics_lib_ (<unidirectional association>)
	relation 6784439 --->
	  a role_name "metrics_lib_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784439 // metrics_lib_ (<unidirectional association>)
	  b parent class_ref 3001655 // MetricsLibraryInterface
      end

      classrelation 6784567 // prefs_ (<unidirectional association>)
	relation 6784567 --->
	  a role_name "prefs_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784567 // prefs_ (<unidirectional association>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6784695 // powerwash_safe_prefs_ (<unidirectional association>)
	relation 6784695 --->
	  a role_name "powerwash_safe_prefs_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784695 // powerwash_safe_prefs_ (<unidirectional association>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6784823 // payload_state_ (<unidirectional association>)
	relation 6784823 --->
	  a role_name "payload_state_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784823 // payload_state_ (<unidirectional association>)
	  b parent class_ref 3362487 // PayloadStateInterface
      end

      classrelation 6784951 // update_attempter_ (<unidirectional association>)
	relation 6784951 --->
	  a role_name "update_attempter_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784951 // update_attempter_ (<unidirectional association>)
	  b parent class_ref 3362615 // UpdateAttempter
      end

      classrelation 6785079 // request_params_ (<unidirectional association>)
	relation 6785079 --->
	  a role_name "request_params_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785079 // request_params_ (<unidirectional association>)
	  b parent class_ref 3362871 // OmahaRequestParams
      end

      classrelation 6785207 // p2p_manager_ (<unidirectional association>)
	relation 6785207 --->
	  a role_name "p2p_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785207 // p2p_manager_ (<unidirectional association>)
	  b parent class_ref 3361591 // P2PManager
      end

      classrelation 6785335 // update_manager_ (<unidirectional association>)
	relation 6785335 --->
	  a role_name "update_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785335 // update_manager_ (<unidirectional association>)
	  b parent class_ref 3362999 // UpdateManager
      end

      classrelation 6785463 // power_manager_proxy_ (<unidirectional association>)
	relation 6785463 --->
	  a role_name "power_manager_proxy_" init_value " {
      &mock_power_manager_}" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785463 // power_manager_proxy_ (<unidirectional association>)
	  b parent class_ref 3363127 // PowerManagerProxyInterface
      end

      attribute 12333879 "device_policy_"
	const_attribute private explicit_type "policy::DevicePolicy"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Other object pointers (not preinitialized).
"
      end

      attribute 12334007 "fake_system_rebooted_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Other data members.
"
      end
    end

    class 3362487 "PayloadStateInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Describes the methods that need to be implemented by the PayloadState class.
 This interface has been carved out to support mocking of the PayloadState
 object."
      operation 43509047 "~PayloadStateInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43509175 "SetResponse"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "response" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the internal payload state based on the given Omaha response. This
 response could be the same or different from the one for which we've stored
 the internal state. If it's different, then this method resets all the
 internal state corresponding to the old response. Since the Omaha response
 has a lot of fields that are not related to payload state, it uses only
 a subset of the fields in the Omaha response to compare equality."
      end

      operation 43509303 "DownloadComplete"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called whenever we have completed downloading all
 the bytes of a payload and have verified that its size and hash match the
 expected values. We use this notificaiton to increment the payload attempt
 number so that the throttle the next attempt to download the same payload
 (in case there's an error in subsequent steps such as post-install)
 appropriately."
      end

      operation 43509431 "DownloadProgress"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called whenever we receive new bytes from the
 network for the current payload. We use this notification to reset the
 failure count for a given URL since receipt of some bytes means we are
 able to make forward progress with the current URL."
      end

      operation 43509559 "UpdateResumed"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called every time we resume an update attempt."
      end

      operation 43509687 "UpdateRestarted"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called every time we begin a new update. This method
 should not be called when we resume an update from the previously
 downloaded point. This is used to reset the metrics for each new update."
      end

      operation 43509815 "UpdateSucceeded"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called once after an update attempt succeeds. This
 is when the relevant UMA metrics that are tracked on a per-update-basis
 are uploaded to the UMA server."
      end

      operation 43509943 "UpdateFailed"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "error" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called whenever an update attempt fails with the
 given error code. We use this notification to update the payload state
 depending on the type of the error that happened."
      end

      operation 43510071 "ResetUpdateStatus"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called whenever a succeeded update is canceled, and
 thus can only be called after UpdateSucceeded(). This is currently used
 only for manual testing using the update_engine_client."
      end

      operation 43510199 "Rollback"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method should be called every time we initiate a Rollback."
      end

      operation 43510327 "ExpectRebootInNewVersion"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "target_version_uid" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the expectations to boot into the new version in the next reboot.
 This function is called every time a new update is marked as ready by
 UpdateSuccess(). |target_version_uid| is an unique identifier of the
 applied payload. It can be any string, as long as the same string is used
 for the same payload."
      end

      operation 43510455 "SetUsingP2PForDownloading"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets whether P2P is being used to download the update payload. This
 is used to keep track of download sources being used and should be called
 before the transfer begins."
      end

      operation 43510583 "SetUsingP2PForSharing"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets whether P2P is being used for sharing the update payloads."
      end

      operation 43510711 "ShouldBackoffDownload"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if we should backoff the current download attempt.
 False otherwise."
      end

      operation 43510839 "GetResponseSignature"
	abstract cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the currently stored response \"signature\". The signature  is a
 subset of fields that are of interest to the PayloadState behavior."
      end

      operation 43510967 "GetPayloadAttemptNumber"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the payload attempt number."
      end

      operation 43511095 "GetFullPayloadAttemptNumber"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the payload attempt number of the attempted full payload. Returns
 0 for delta payloads."
      end

      operation 43511223 "GetCurrentUrl"
	abstract cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current URL. Returns an empty string if there's no valid URL."
      end

      operation 43511351 "GetUrlFailureCount"
	abstract cpp_virtual public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current URL's failure count."
      end

      operation 43511479 "GetUrlSwitchCount"
	abstract cpp_virtual public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the total number of times a new URL has been switched to
 for the current response."
      end

      operation 43511607 "GetNumResponsesSeen"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the total number of different responses seen since the
 last successful update."
      end

      operation 43511735 "GetBackoffExpiryTime"
	abstract cpp_virtual public explicit_return_type "base::Time"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the expiry time for the current backoff period."
      end

      operation 43511863 "GetUpdateDuration"
	abstract cpp_virtual public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the elapsed time used for this update, including time
 where the device is powered off and sleeping. If the
 update has not completed, returns the time spent so far."
      end

      operation 43511991 "GetUpdateDurationUptime"
	abstract cpp_virtual public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the time used for this update not including time when
 the device is powered off or sleeping. If the update has not
 completed, returns the time spent so far."
      end

      operation 43512119 "GetCurrentBytesDownloaded"
	abstract cpp_virtual public explicit_return_type "uint64_t"
	nparams 1
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the number of bytes that have been downloaded for each source for
 each new update attempt. If we resume an update, we'll continue from the
 previous value, but if we get a new response or if the previous attempt
 failed, we'll reset this to 0 to start afresh."
      end

      operation 43512247 "GetTotalBytesDownloaded"
	abstract cpp_virtual public explicit_return_type "uint64_t"
	nparams 1
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the total number of bytes that have been downloaded for each
 source since the the last successful update. This is used to compute the
 overhead we incur."
      end

      operation 43512375 "GetNumReboots"
	abstract cpp_virtual public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the reboot count for this update attempt."
      end

      operation 43512503 "UpdateEngineStarted"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called at update_engine startup to do various house-keeping."
      end

      operation 43512631 "GetRollbackVersion"
	abstract cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the version from before a rollback if our last update was a
 rollback."
      end

      operation 43512759 "GetP2PNumAttempts"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the value of number of attempts we've attempted to
 download the payload via p2p."
      end

      operation 43512887 "GetP2PFirstAttemptTimestamp"
	abstract cpp_virtual public explicit_return_type "base::Time"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the value of timestamp of the first time we've attempted
 to download the payload via p2p."
      end

      operation 43513015 "P2PNewAttempt"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should be called every time we decide to use p2p for an update
 attempt. This is used to increase the p2p attempt counter and
 set the timestamp for first attempt."
      end

      operation 43513143 "P2PAttemptAllowed"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns |true| if we are allowed to continue using p2p for
 downloading and |false| otherwise. This is done by recording
 and examining how many attempts have been done already as well
 as when the first attempt was."
      end

      operation 43513271 "GetUsingP2PForDownloading"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the values previously set with SetUsingP2PForDownloading() and
 SetUsingP2PForSharing()."
      end

      operation 43513399 "GetUsingP2PForSharing"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43513527 "GetScatteringWaitPeriod"
	abstract cpp_virtual public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current (persisted) scattering wallclock-based wait period."
      end

      operation 43513655 "SetScatteringWaitPeriod"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "wait_period" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets and persists the scattering wallclock-based wait period."
      end

      operation 43513783 "SetP2PUrl"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets/gets the P2P download URL, if one is to be used."
      end

      operation 43513911 "GetP2PUrl"
	abstract const cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43514039 "GetAttemptErrorCode"
	abstract const cpp_virtual public return_type class_ref 3356855 // ErrorCode
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3362615 "UpdateAttempter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6793911 // <generalisation>
	relation 6793911 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6793911 // <generalisation>
	  b parent class_ref 3370551 // ActionProcessorDelegate
      end

      classrelation 6794039 // <generalisation>
	relation 6794039 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6794039 // <generalisation>
	  b parent class_ref 3370679 // DownloadActionDelegate
      end

      classrelation 6794167 // <generalisation>
	relation 6794167 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6794167 // <generalisation>
	  b parent class_ref 3370807 // Observer
      end

      classrelation 6794295 // <generalisation>
	relation 6794295 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6794295 // <generalisation>
	  b parent class_ref 3370935 // DelegateInterface
      end

      classrelation 6794423 // <generalisation>
	relation 6794423 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6794423 // <generalisation>
	  b parent class_ref 3371191 // DelegateInterface
      end

      class 3371319 "UpdateStatus"
	visibility package stereotype "template_typedef"
	cpp_decl "${comment}${template}using ${name} = ${inherit};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6794551 // <generalisation>
	  relation 6794551 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6794551 // <generalisation>
	    b parent class_ref 3356727 // UpdateStatus
	end
      end

      attribute 12354999 "kMaxDeltaUpdateFailures"
	class_attribute const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 43523127 "UpdateAttempter"
	public explicit_return_type ""
	nparams 4
	  param inout name "system_state" type class_ref 3357239 // SystemState
	  param inout name "cert_checker" type class_ref 3370423 // CertificateChecker
	  param inout name "libcros_proxy" explicit_type "LibCrosProxy"
	  param inout name "debugd_proxy" type class_ref 3371447 // debugdProxyInterface
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43523255 "~UpdateAttempter"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43523383 "Init"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Further initialization to be done post construction."
      end

      operation 43523511 "ScheduleUpdates"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initiates scheduling of update checks."
      end

      operation 43523639 "Update"
	cpp_virtual public explicit_return_type "void"
	nparams 6
	  param in name "app_version" explicit_type "std::string"
	  param in name "omaha_url" explicit_type "std::string"
	  param in name "target_channel" explicit_type "std::string"
	  param in name "target_version_prefix" explicit_type "std::string"
	  param in name "obey_proxies" explicit_type "bool"
	  param in name "interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks for update and, if a newer version is available, attempts to update
 the system. Non-empty |in_app_version| or |in_update_url| prevents
 automatic detection of the parameter.  |target_channel| denotes a
 policy-mandated channel we are updating to, if not empty. If |obey_proxies|
 is true, the update will likely respect Chrome's proxy setting. For
 security reasons, we may still not honor them. |interactive| should be true
 if this was called from the user (ie dbus)."
      end

      operation 43523767 "ProcessingDone"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param in name "processor" type class_ref 3371575 // ActionProcessor
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ActionProcessorDelegate methods:"
      end

      operation 43523895 "ProcessingStopped"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "processor" type class_ref 3371575 // ActionProcessor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43524023 "ActionCompleted"
	cpp_override public explicit_return_type "void"
	nparams 3
	  param inout name "processor" type class_ref 3371575 // ActionProcessor
	  param inout name "action" type class_ref 3371703 // AbstractAction
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43524151 "OnCheckForUpdates"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " WeaveServiceInterface::DelegateInterface overrides."
      end

      operation 43524279 "OnTrackChannel"
	cpp_override public explicit_return_type "bool"
	nparams 2
	  param in name "channel" explicit_type "std::string"
	  param inout name "error" type class_ref 2955319 // ErrorPtr
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43524407 "GetWeaveState"
	cpp_override public explicit_return_type "bool"
	nparams 5
	  param inout name "last_checked_time" explicit_type "int64_t"
	  param inout name "progress" explicit_type "double"
	  param inout name "update_status" type class_ref 3371319 // UpdateStatus
	  param inout name "current_channel" explicit_type "std::string"
	  param inout name "tracking_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43524535 "ProgressUpdate"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "progress" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PostinstallRunnerAction::DelegateInterface"
      end

      operation 43524663 "ResetStatus"
	cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resets the current state to UPDATE_STATUS_IDLE.
 Used by update_engine_client for restarting a new update without
 having to reboot once the previous update has reached
 UPDATE_STATUS_UPDATED_NEED_REBOOT state. This is used only
 for testing purposes."
      end

      operation 43524791 "GetStatus"
	cpp_virtual public explicit_return_type "bool"
	nparams 5
	  param inout name "last_checked_time" explicit_type "int64_t"
	  param inout name "progress" explicit_type "double"
	  param inout name "current_operation" explicit_type "std::string"
	  param inout name "new_version" explicit_type "std::string"
	  param inout name "new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current status in the out params. Returns true on success."
      end

      operation 43524919 "UpdateBootFlags"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Runs chromeos-setgoodkernel, whose responsibility it is to mark the
 currently booted partition has high priority/permanent/etc. The execution
 is asynchronous. On completion, the action processor may be started
 depending on the |start_action_processor_| field. Note that every update
 attempt goes through this method."
      end

      operation 43525047 "CompleteUpdateBootFlags"
	public explicit_return_type "void"
	nparams 1
	  param in name "success" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when the boot flags have been updated."
      end

      operation 43525175 "status"
	const cpp_inline public return_type class_ref 3371319 // UpdateStatus
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return status_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43525303 "http_response_code"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return http_response_code_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43525431 "set_http_response_code"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { http_response_code_ = code; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43525559 "CheckForUpdate"
	cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "app_version" explicit_type "std::string"
	  param in name "omaha_url" explicit_type "std::string"
	  param in name "is_interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is the internal entry point for going through an
 update. If the current status is idle invokes Update.
 This is called by the DBus implementation."
      end

      operation 43525687 "Rollback"
	public explicit_return_type "bool"
	nparams 1
	  param in name "powerwash" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is the internal entry point for going through a rollback. This will
 attempt to run the postinstall on the non-active partition and set it as
 the partition to boot from. If |powerwash| is True, perform a powerwash
 as part of rollback. Returns True on success."
      end

      operation 43525815 "CanRollback"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is the internal entry point for checking if we can rollback."
      end

      operation 43525943 "GetRollbackSlot"
	const public return_type class_ref 3357879 // Slot
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is the internal entry point for getting a rollback partition name,
 if one exists. It returns the bootable rollback kernel device partition
 name or empty string if none is available."
      end

      operation 43526071 "RebootIfNeeded"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initiates a reboot if the current state is
 UPDATED_NEED_REBOOT. Returns true on sucess, false otherwise."
      end

      operation 43526199 "BytesReceived"
	cpp_override public explicit_return_type "void"
	nparams 3
	  param in name "bytes_progressed" explicit_type "uint64_t"
	  param in name "bytes_received" explicit_type "uint64_t"
	  param in name "total" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DownloadActionDelegate methods:"
      end

      operation 43526327 "ShouldCancel"
	cpp_override public explicit_return_type "bool"
	nparams 1
	  param inout name "cancel_reason" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns that the update should be canceled when the download channel was
 changed."
      end

      operation 43526455 "DownloadComplete"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43526583 "BroadcastStatus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Broadcasts the current status to all observers."
      end

      operation 43526711 "BroadcastChannel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Broadcasts the current tracking channel to all observers."
      end

      operation 43526839 "GetErrorCodeFlags"
	public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the special flags to be added to ErrorCode values based on the
 parameters used in the current update attempt."
      end

      operation 43526967 "UpdateEngineStarted"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called at update_engine startup to do various house-keeping."
      end

      operation 43527095 "RefreshDevicePolicy"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reloads the device policy from libbrillo. Note: This method doesn't
 cause a real-time policy fetch from the policy server. It just reloads the
 latest value that libbrillo has cached. libbrillo fetches the policies
 from the server asynchronously at its own frequency."
      end

      operation 43527223 "GetBootTimeAtUpdate"
	cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "out_boot_time" explicit_type "base::Time"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stores in |out_boot_time| the boottime (CLOCK_BOOTTIME) recorded at the
 time of the last successful update in the current boot. Returns false if
 there wasn't a successful update in the current boot."
      end

      operation 43527351 "GetPrevVersion"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return prev_version_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a version OS version that was being used before the last reboot,
 and if that reboot happended to be into an update (current version).
 This will return an empty string otherwise."
      end

      operation 43527479 "consecutive_failed_update_checks"
	const cpp_virtual cpp_inline public explicit_return_type "uint"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return consecutive_failed_update_checks_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the number of consecutive failed update checks."
      end

      operation 43527607 "server_dictated_poll_interval"
	const cpp_virtual cpp_inline public explicit_return_type "uint"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return server_dictated_poll_interval_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the poll interval dictated by Omaha, if provided; zero otherwise."
      end

      operation 43527735 "set_forced_update_pending_callback"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "base::Callback<void(bool, bool)>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    forced_update_pending_callback_.reset(callback);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets a callback to be used when either a forced update request is received
 (first argument set to true) or cleared by an update attempt (first
 argument set to false). The callback further encodes whether the forced
 check is an interactive one (second argument set to true). Takes ownership
 of the callback object. A null value disables callback on these events.
 Note that only one callback can be set, so effectively at most one client
 can be notified."
      end

      operation 43527863 "IsAnyUpdateSourceAllowed"
	cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if we should allow updates from any source. In official builds
 we want to restrict updates to known safe sources, but under certain
 conditions it's useful to allow updating from anywhere (e.g. to allow
 'cros flash' to function properly)."
      end

      operation 43527991 "AddObserver"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    service_observers_.insert(observer);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Add and remove a service observer."
      end

      operation 43528119 "RemoveObserver"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    service_observers_.erase(observer);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43528247 "ClearObservers"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { service_observers_.clear(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove all the observers."
      end

      attribute 12355127 "kTestUpdateUrl"
	class_attribute const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * const ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Update server URL for automated lab test.
"
      end

      extra_member 222135 "friend"
	
	cpp "
  // Friend declarations for testing purposes.
  friend class UpdateAttempterUnderTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 222263 "friend"
	
	cpp "  friend class UpdateAttempterTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 43528375 "CertificateChecked"
	cpp_override private explicit_return_type "void"
	nparams 2
	  param in name "server_to_check" type class_ref 3371831 // ServerToCheck
	  param in name "result" type class_ref 3371959 // CertificateCheckResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CertificateChecker::Observer method.
 Report metrics about the certificate being checked."
      end

      operation 43528503 "CheckAndReportDailyMetrics"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if it's more than 24 hours since daily metrics were last
 reported and, if so, reports daily metrics. Returns |true| if
 metrics were reported, |false| otherwise."
      end

      operation 43528631 "ReportOSAge"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculates and reports the age of the currently running OS. This
 is defined as the age of the /etc/lsb-release file."
      end

      operation 43528759 "SetStatusAndNotify"
	private explicit_return_type "void"
	nparams 1
	  param in name "status" type class_ref 3371319 // UpdateStatus
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the status to the given status and notifies a status update over dbus."
      end

      operation 43528887 "SetupDownload"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets up the download parameters after receiving the update check response."
      end

      operation 43529015 "CreatePendingErrorEvent"
	private explicit_return_type "void"
	nparams 2
	  param inout name "action" type class_ref 3371703 // AbstractAction
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an error event object in |error_event_| to be included in an
 OmahaRequestAction once the current action processor is done."
      end

      operation 43529143 "ScheduleErrorEventAction"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If there's a pending error event allocated in |error_event_|, schedules an
 OmahaRequestAction with that event in the current processor, clears the
 pending event, updates the status and returns true. Returns false
 otherwise."
      end

      operation 43529271 "ScheduleProcessingStart"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Schedules an event loop callback to start the action processor. This is
 scheduled asynchronously to unblock the event loop."
      end

      operation 43529399 "DisableDeltaUpdateIfNeeded"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if a full update is needed and forces it by updating the Omaha
 request params."
      end

      operation 43529527 "MarkDeltaUpdateFailure"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If this was a delta update attempt that failed, count it so that a full
 update can be tried when needed."
      end

      operation 43529655 "GetProxyResolver"
	cpp_inline private return_type class_ref 3358263 // ProxyResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
#if USE_LIBCROS
    return obeying_proxies_ ?
        reinterpret_cast<ProxyResolver*>(&chrome_proxy_resolver_) :
        reinterpret_cast<ProxyResolver*>(&direct_proxy_resolver_);
#else
    return &direct_proxy_resolver_;
#endif  // USE_LIBCROS
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43529783 "PingOmaha"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends a ping to Omaha.
 This is used after an update has been applied and we're waiting for the
 user to reboot.  This ping helps keep the number of actives count
 accurate in case a user takes a long time to reboot the device after an
 update has been applied."
      end

      operation 43529911 "CalculateUpdateParams"
	private explicit_return_type "bool"
	nparams 6
	  param in name "app_version" explicit_type "std::string"
	  param in name "omaha_url" explicit_type "std::string"
	  param in name "target_channel" explicit_type "std::string"
	  param in name "target_version_prefix" explicit_type "std::string"
	  param in name "obey_proxies" explicit_type "bool"
	  param in name "interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper method of Update() to calculate the update-related parameters
 from various sources and set the appropriate state. Please refer to
 Update() method for the meaning of the parametes."
      end

      operation 43530039 "CalculateScatteringParams"
	private explicit_return_type "void"
	nparams 1
	  param in name "is_interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculates all the scattering related parameters (such as waiting period,
 which type of scattering is enabled, etc.) and also updates/deletes
 the corresponding prefs file used in scattering. Should be called
 only after the device policy has been loaded and set in the system_state_."
      end

      operation 43530167 "GenerateNewWaitingPeriod"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets a random value for the waiting period to wait for before downloading
 an update, if one available. This value will be upperbounded by the
 scatter factor value specified from policy."
      end

      operation 43530295 "BuildPostInstallActions"
	private explicit_return_type "void"
	nparams 1
	  param inout name "previous_action" type class_ref 3372087 // InstallPlanAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper method of Update() and Rollback() to construct the sequence of
 actions to be performed for the postinstall.
 |previous_action| is the previous action to get
 bonded with the install_plan that gets passed to postinstall."
      end

      operation 43530423 "BuildUpdateActions"
	private explicit_return_type "void"
	nparams 1
	  param in name "interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper method of Update() to construct the sequence of actions to
 be performed for an update check. Please refer to
 Update() method for the meaning of the parameters."
      end

      operation 43530551 "DecrementUpdateCheckCount"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Decrements the count in the kUpdateCheckCountFilePath.
 Returns True if successfully decremented, false otherwise."
      end

      operation 43530679 "StartP2PAndPerformHousekeeping"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts p2p and performs housekeeping. Returns true only if p2p is
 running and housekeeping was done."
      end

      operation 43530807 "CalculateP2PParams"
	private explicit_return_type "void"
	nparams 1
	  param in name "interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculates whether peer-to-peer should be used. Sets the
 |use_p2p_to_download_| and |use_p2p_to_share_| parameters
 on the |omaha_request_params_| object."
      end

      operation 43530935 "StartP2PAtStartup"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts P2P if it's enabled and there are files to actually share.
 Called only at program startup. Returns true only if p2p was
 started and housekeeping was performed."
      end

      operation 43531063 "WriteUpdateCompletedMarker"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes to the processing completed marker. Does nothing if
 |update_completed_marker_| is empty."
      end

      operation 43531191 "RequestPowerManagerReboot"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends a D-Bus message to the Chrome OS power manager asking it to reboot
 the system. Returns true on success."
      end

      operation 43531319 "RebootDirectly"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reboots the system directly by calling /sbin/shutdown. Returns true on
 success."
      end

      operation 43531447 "OnUpdateScheduled"
	private explicit_return_type "void"
	nparams 2
	  param in name "status" type class_ref 3372215 // EvalStatus
	  param in name "params" type class_ref 3372343 // UpdateCheckParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback for the async UpdateCheckAllowed policy request. If |status| is
 |EvalStatus::kSucceeded|, either runs or suppresses periodic update checks,
 based on the content of |params|. Otherwise, retries the policy request."
      end

      operation 43531575 "UpdateLastCheckedTime"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Updates the time an update was last attempted to the current time."
      end

      operation 43531703 "IsUpdateRunningOrScheduled"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns whether an update is currently running or scheduled."
      end

      attribute 12355255 "last_notify_time_"
	private explicit_type "base::TimeTicks"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Last status notification timestamp used for throttling. Use monotonic
 TimeTicks to ensure that notifications are sent even if the system clock is
 set back in the middle of an update.
"
      end

      attribute 12355383 "actions_"
	private explicit_type "std::shared_ptr<AbstractAction>"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6794679 // processor_ (<directional composition>)
	relation 6794679 *-->
	  stereotype "std::unique_ptr"
	  a role_name "processor_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6794679 // processor_ (<directional composition>)
	  b parent class_ref 3371575 // ActionProcessor
      end

      classrelation 6794807 // system_state_ (<unidirectional association>)
	relation 6794807 --->
	  a role_name "system_state_" private
	    comment " External state of the system outside the update_engine process
 carved out separately to mock out easily in unit tests.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6794807 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end

      classrelation 6794935 // cert_checker_ (<unidirectional association>)
	relation 6794935 --->
	  a role_name "cert_checker_" private
	    comment " Pointer to the certificate checker instance to use.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6794935 // cert_checker_ (<unidirectional association>)
	  b parent class_ref 3370423 // CertificateChecker
      end

      classrelation 6795063 // service_observers_ (<unidirectional association>)
	relation 6795063 --->
	  stereotype "std::set"
	  a role_name "service_observers_" private
	    comment " The list of services observing changes in the updater.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795063 // service_observers_ (<unidirectional association>)
	  b parent class_ref 3356471 // ServiceObserverInterface
      end

      classrelation 6795191 // response_handler_action_ (<directional composition>)
	relation 6795191 *-->
	  stereotype "std::shared_ptr"
	  a role_name "response_handler_action_" private
	    comment " Pointer to the OmahaResponseHandlerAction in the actions_ vector.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795191 // response_handler_action_ (<directional composition>)
	  b parent class_ref 3368631 // OmahaResponseHandlerAction
      end

      classrelation 6795319 // download_action_ (<directional composition>)
	relation 6795319 *-->
	  stereotype "std::shared_ptr"
	  a role_name "download_action_" private
	    comment " Pointer to the DownloadAction in the actions_ vector.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795319 // download_action_ (<directional composition>)
	  b parent class_ref 3372471 // DownloadAction
      end

      classrelation 6795447 // prefs_ (<unidirectional association>)
	relation 6795447 --->
	  a role_name "prefs_" init_value "=  nullptr" private
	    comment " Pointer to the preferences store interface. This is just a cached
 copy of system_state->prefs() because it's used in many methods and
 is convenient this way.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795447 // prefs_ (<unidirectional association>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6795575 // error_event_ (<directional composition>)
	relation 6795575 *-->
	  stereotype "std::unique_ptr"
	  a role_name "error_event_" private
	    comment " Pending error event, if any.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795575 // error_event_ (<directional composition>)
	  b parent class_ref 3365943 // OmahaEvent
      end

      attribute 12355511 "fake_update_success_"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If we should request a reboot even tho we failed the update
"
      end

      attribute 12355639 "http_response_code_"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " HTTP server response code from the last HTTP request action.
"
      end

      classrelation 6795703 // cpu_limiter_ (<directional composition>)
	relation 6795703 *-->
	  a role_name "cpu_limiter_" private
	    comment " CPU limiter during the update.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795703 // cpu_limiter_ (<directional composition>)
	  b parent class_ref 3372599 // CPULimiter
      end

      classrelation 6795831 // status_ (<directional composition>)
	relation 6795831 *-->
	  a role_name "status_" init_value " {UpdateStatus::IDLE}" private
	    comment " For status:
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795831 // status_ (<directional composition>)
	  b parent class_ref 3371319 // UpdateStatus
      end

      attribute 12355767 "download_progress_"
	private explicit_type "double"
	init_value "=  0.0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12355895 "last_checked_time_"
	private explicit_type "int64_t"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12356023 "prev_version_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12356151 "new_version_"
	private explicit_type "std::string"
	init_value "=  \"0.0.0.0\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12356279 "new_payload_size_"
	private explicit_type "int64_t"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6795959 // omaha_request_params_ (<unidirectional association>)
	relation 6795959 --->
	  a role_name "omaha_request_params_" init_value "=  nullptr" private
	    comment " Common parameters for all Omaha requests.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795959 // omaha_request_params_ (<unidirectional association>)
	  b parent class_ref 3362871 // OmahaRequestParams
      end

      attribute 12356407 "proxy_manual_checks_"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of consecutive manual update checks we've had where we obeyed
 Chrome's proxy settings.
"
      end

      attribute 12356535 "obeying_proxies_"
	private explicit_type "bool"
	init_value "=  true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, this update cycle we are obeying proxies
"
      end

      classrelation 6796087 // direct_proxy_resolver_ (<directional composition>)
	relation 6796087 *-->
	  a role_name "direct_proxy_resolver_" private
	    comment " Our two proxy resolvers
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6796087 // direct_proxy_resolver_ (<directional composition>)
	  b parent class_ref 3369783 // DirectProxyResolver
      end

      classrelation 6796215 // chrome_proxy_resolver_ (<directional composition>)
	relation 6796215 *-->
	  a role_name "chrome_proxy_resolver_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6796215 // chrome_proxy_resolver_ (<directional composition>)
	  b parent class_ref 3358135 // ChromeBrowserProxyResolver
      end

      attribute 12356663 "updated_boot_flags_"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Originally, both of these flags are false. Once UpdateBootFlags is called,
 |update_boot_flags_running_| is set to true. As soon as UpdateBootFlags
 completes its asynchronous run, |update_boot_flags_running_| is reset to
 false and |updated_boot_flags_| is set to true. From that point on there
 will be no more changes to these flags.

 True if UpdateBootFlags has completed.
"
      end

      attribute 12356791 "update_boot_flags_running_"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if UpdateBootFlags is running.
"
      end

      attribute 12356919 "start_action_processor_"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the action processor needs to be started by the boot flag updater.
"
      end

      attribute 12357047 "policy_provider_"
	private explicit_type "policy::PolicyProvider"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used for fetching information about the device policy.
"
      end

      attribute 12357175 "scatter_factor_"
	private explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current scatter factor as found in the policy setting.
"
      end

      attribute 12357303 "consecutive_failed_update_checks_"
	private explicit_type "uint"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of consecutive failed update checks. Needed for calculating the
 next update check interval.
"
      end

      attribute 12357431 "server_dictated_poll_interval_"
	private explicit_type "uint"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The poll interval (in seconds) that was dictated by Omaha, if any; zero
 otherwise. This is needed for calculating the update check interval.
"
      end

      attribute 12357559 "waiting_for_scheduled_check_"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Tracks whether we have scheduled update checks.
"
      end

      attribute 12357687 "forced_update_pending_callback_"
	private explicit_type "base::Callback<void(bool, bool)>"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A callback to use when a forced update request is either received (true) or
 cleared by an update attempt (false). The second argument indicates whether
 this is an interactive update, and its value is significant iff the first
 argument is true.
"
      end

      attribute 12357815 "forced_app_version_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The |app_version| and |omaha_url| parameters received during the latest
 forced update request. They are retrieved for use once the update is
 actually scheduled.
"
      end

      attribute 12357943 "forced_omaha_url_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6796343 // debugd_proxy_ (<unidirectional association>)
	relation 6796343 --->
	  a role_name "debugd_proxy_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6796343 // debugd_proxy_ (<unidirectional association>)
	  b parent class_ref 3371447 // debugdProxyInterface
      end
    end

    class 3362743 "WeaveServiceInterface"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A WeaveServiceInterface instance allows to register the daemon with weaved,
 handle commands and update the weave status. This class only handles the
 registration with weaved and the connection, the actual work to handle the
 commands is implemented by the DelegateInterface, which will be called from
 this class."
      class 3370935 "DelegateInterface"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 43536183 "~DelegateInterface"
	  cpp_virtual cpp_defaulted public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 43536311 "OnCheckForUpdates"
	  abstract cpp_virtual public explicit_return_type "bool"
	  nparams 1
	    param inout name "error" type class_ref 2955319 // ErrorPtr
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43536439 "OnTrackChannel"
	  abstract cpp_virtual public explicit_return_type "bool"
	  nparams 2
	    param in name "channel" explicit_type "std::string"
	    param inout name "error" type class_ref 2955319 // ErrorPtr
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43536567 "GetWeaveState"
	  abstract cpp_virtual public explicit_return_type "bool"
	  nparams 5
	    param inout name "last_checked_time" explicit_type "int64_t"
	    param inout name "progress" explicit_type "double"
	    param inout name "update_status" type class_ref 3356727 // UpdateStatus
	    param inout name "current_channel" explicit_type "std::string"
	    param inout name "tracking_channel" explicit_type "std::string"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Return the current status."
	end
      end

      classrelation 6798647 // <generalisation>
	relation 6798647 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6798647 // <generalisation>
	  b parent class_ref 3356471 // ServiceObserverInterface
      end

      operation 43536695 "~WeaveServiceInterface"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43536823 "WeaveServiceInterface"
	cpp_defaulted protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3362871 "OmahaRequestParams"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class encapsulates the data Omaha gets for the request, along with
 essential state needed for the processing of the request/response.  The
 strings in this struct should not be XML escaped.

 TODO(jaysri): chromium-os:39752 tracks the need to rename this class to
 reflect its lifetime more appropriately."
      operation 43484599 "OmahaRequestParams"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract} : system_state_(system_state),
        os_platform_(constants::kOmahaPlatformName),
        os_version_(kOsVersion),
        delta_okay_(true),
        interactive_(false),
        wall_clock_based_wait_enabled_(false),
        update_check_count_wait_enabled_(false),
        min_update_checks_needed_(kDefaultMinUpdateChecks),
        max_update_checks_allowed_(kDefaultMaxUpdateChecks) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43484727 "OmahaRequestParams"
	cpp_inline public explicit_return_type ""
	nparams 16
	  param inout name "system_state" type class_ref 3357239 // SystemState
	  param in name "in_os_platform" explicit_type "std::string"
	  param in name "in_os_version" explicit_type "std::string"
	  param in name "in_os_sp" explicit_type "std::string"
	  param in name "in_os_board" explicit_type "std::string"
	  param in name "in_app_id" explicit_type "std::string"
	  param in name "in_app_version" explicit_type "std::string"
	  param in name "in_app_lang" explicit_type "std::string"
	  param in name "in_target_channel" explicit_type "std::string"
	  param in name "in_hwid" explicit_type "std::string"
	  param in name "in_fw_version" explicit_type "std::string"
	  param in name "in_ec_version" explicit_type "std::string"
	  param in name "in_delta_okay" explicit_type "bool"
	  param in name "in_interactive" explicit_type "bool"
	  param in name "in_update_url" explicit_type "std::string"
	  param in name "in_target_version_prefix" explicit_type "std::string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, const ${t8} & ${p8}${v8}, const ${t9} & ${p9}${v9}, const ${t10} & ${p10}${v10}, const ${t11} & ${p11}${v11}, ${t12} ${p12}${v12}, ${t13} ${p13}${v13}, const ${t14} & ${p14}${v14}, const ${t15} & ${p15}${v15}${)}${volatile}${throw}${abstract} : system_state_(system_state),
        os_platform_(in_os_platform),
        os_version_(in_os_version),
        os_sp_(in_os_sp),
        app_lang_(in_app_lang),
        hwid_(in_hwid),
        fw_version_(in_fw_version),
        ec_version_(in_ec_version),
        delta_okay_(in_delta_okay),
        interactive_(in_interactive),
        update_url_(in_update_url),
        target_version_prefix_(in_target_version_prefix),
        wall_clock_based_wait_enabled_(false),
        update_check_count_wait_enabled_(false),
        min_update_checks_needed_(kDefaultMinUpdateChecks),
        max_update_checks_allowed_(kDefaultMaxUpdateChecks) {
    image_props_.board = in_os_board;
    image_props_.product_id = in_app_id;
    image_props_.canary_product_id = in_app_id;
    image_props_.version = in_app_version;
    image_props_.current_channel = in_target_channel;
    mutable_image_props_.target_channel = in_target_channel;
    mutable_image_props_.is_powerwash_allowed = false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43484855 "~OmahaRequestParams"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43484983 "os_platform"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return os_platform_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setters and getters for the various properties."
      end

      operation 43485111 "os_version"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return os_version_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43485239 "os_sp"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return os_sp_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43485367 "os_board"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return image_props_.board; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43485495 "board_app_id"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return image_props_.product_id; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43485623 "canary_app_id"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return image_props_.canary_product_id;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43485751 "app_lang"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return app_lang_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43485879 "hwid"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return hwid_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486007 "fw_version"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fw_version_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486135 "ec_version"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return ec_version_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486263 "set_app_version"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "version" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    image_props_.version = version;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486391 "app_version"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return image_props_.version; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486519 "current_channel"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return image_props_.current_channel;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486647 "target_channel"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return mutable_image_props_.target_channel;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486775 "download_channel"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return download_channel_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43486903 "set_delta_okay"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ok" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { delta_okay_ = ok; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Can client accept a delta ?"
      end

      operation 43487031 "delta_okay"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return delta_okay_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43487159 "set_interactive"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { interactive_ = interactive; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " True if this is a user-initiated update check."
      end

      operation 43487287 "interactive"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return interactive_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43487415 "set_update_url"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { update_url_ = url; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43487543 "update_url"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return update_url_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43487671 "set_target_version_prefix"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "prefix" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    target_version_prefix_ = prefix;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43487799 "target_version_prefix"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return target_version_prefix_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43487927 "set_wall_clock_based_wait_enabled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    wall_clock_based_wait_enabled_ = enabled;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488055 "wall_clock_based_wait_enabled"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return wall_clock_based_wait_enabled_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488183 "set_waiting_period"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    waiting_period_ = period;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488311 "waiting_period"
	const cpp_inline public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return waiting_period_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488439 "set_update_check_count_wait_enabled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    update_check_count_wait_enabled_ = enabled;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488567 "update_check_count_wait_enabled"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return update_check_count_wait_enabled_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488695 "set_min_update_checks_needed"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "min" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    min_update_checks_needed_ = min;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488823 "min_update_checks_needed"
	const cpp_inline public explicit_return_type "int64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return min_update_checks_needed_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43488951 "set_max_update_checks_allowed"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "max" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    max_update_checks_allowed_ = max;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43489079 "max_update_checks_allowed"
	const cpp_inline public explicit_return_type "int64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return max_update_checks_allowed_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43489207 "to_more_stable_channel"
	const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " True if we're trying to update to a more stable channel.
 i.e. index(target_channel) > index(current_channel)."
      end

      operation 43489335 "GetAppId"
	const cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the app id corresponding to the current value of the
 download channel."
      end

      attribute 12343991 "kOsVersion"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Suggested defaults
"
      end

      attribute 12344119 "kIsPowerwashAllowedKey"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12344247 "kDefaultMinUpdateChecks"
	class_attribute const_attribute public explicit_type "int64_t"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12344375 "kDefaultMaxUpdateChecks"
	class_attribute const_attribute public explicit_type "int64_t"
	init_value "=  8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 43489463 "Init"
	public explicit_return_type "bool"
	nparams 3
	  param in name "in_app_version" explicit_type "std::string"
	  param in name "in_update_url" explicit_type "std::string"
	  param in name "in_interactive" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes all the data in the object. Non-empty
 |in_app_version| or |in_update_url| prevents automatic detection
 of the parameter. Returns true on success, false otherwise."
      end

      operation 43489591 "SetTargetChannel"
	cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "channel" explicit_type "std::string"
	  param in name "is_powerwash_allowed" explicit_type "bool"
	  param inout name "error_message" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Permanently changes the release channel to |channel|. Performs a
 powerwash, if required and allowed.
 Returns true on success, false otherwise. Note: This call will fail if
 there's a channel change pending already. This is to serialize all the
 channel changes done by the user in order to avoid having to solve
 numerous edge cases around ensuring the powerwash happens as intended in
 all such cases."
      end

      operation 43489719 "UpdateDownloadChannel"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Updates the download channel for this particular attempt from the current
 value of target channel.  This method takes a \"snapshot\" of the current
 value of target channel and uses it for all subsequent Omaha requests for
 this attempt (i.e. initial request as well as download progress/error
 event requests). The snapshot will be updated only when either this method
 or Init is called again."
      end

      operation 43489847 "is_powerwash_allowed"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return mutable_image_props_.is_powerwash_allowed;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43489975 "IsUpdateUrlOfficial"
	const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check if the provided update URL is official, meaning either the default
 autoupdate server or the autoupdate autotest server."
      end

      operation 43490103 "set_root"
	public explicit_return_type "void"
	nparams 1
	  param in name "root" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For unit-tests."
      end

      operation 43490231 "set_current_channel"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    image_props_.current_channel = channel;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43490359 "set_target_channel"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    mutable_image_props_.target_channel = channel;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43490487 "IsValidChannel"
	const private explicit_return_type "bool"
	nparams 1
	  param in name "channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if |channel| is a valid channel, false otherwise."
      end

      operation 43490615 "GetChannelIndex"
	const private explicit_return_type "int"
	nparams 1
	  param in name "channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the index of the given channel."
      end

      operation 43490743 "CollectECFWVersions"
	const private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns True if we should store the fw/ec versions based on our hwid_.
 Compares hwid to a set of whitelisted prefixes."
      end

      operation 43490871 "SetTargetChannelFromLsbValue"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These are individual helper methods to initialize the said properties from
 the LSB value."
      end

      operation 43490999 "SetCurrentChannelFromLsbValue"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43491127 "SetIsPowerwashAllowedFromLsbValue"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43491255 "InitFromLsbValue"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the required properties from the LSB value."
      end

      operation 43491383 "GetMachineType"
	const private explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the machine type (e.g. \"i686\")."
      end

      classrelation 6788279 // system_state_ (<unidirectional association>)
	relation 6788279 --->
	  a role_name "system_state_" private
	    comment " Global system context.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788279 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end

      classrelation 6788407 // image_props_ (<directional composition>)
	relation 6788407 *-->
	  a role_name "image_props_" private
	    comment " The system image properties.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788407 // image_props_ (<directional composition>)
	  b parent class_ref 3364663 // ImageProperties
      end

      classrelation 6788535 // mutable_image_props_ (<directional composition>)
	relation 6788535 *-->
	  a role_name "mutable_image_props_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788535 // mutable_image_props_ (<directional composition>)
	  b parent class_ref 3364791 // MutableImageProperties
      end

      attribute 12344503 "os_platform_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Basic properties of the OS and Application that go into the Omaha request.
"
      end

      attribute 12344631 "os_version_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12344759 "os_sp_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12344887 "app_lang_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12345015 "download_channel_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " There are three channel values we deal with:
 * The channel we got the image we are running from or \"current channel\"
   stored in |image_props_.current_channel|.

 * The release channel we are tracking, where we should get updates from,
   stored in |mutable_image_props_.target_channel|. This channel is
   normally the same as the current_channel, except when the user changes
   the channel. In that case it'll have the release channel the user
   switched to, regardless of whether we downloaded an update from that
   channel or not, or if we are in the middle of a download from a
   previously selected channel  (as opposed to download channel
   which gets updated only at the start of next download).

 * The channel from which we're downloading the payload. This should
   normally be the same as target channel. But if the user made another
   channel change after we started the download, then they'd be different,
   in which case, we'd detect elsewhere that the target channel has been
   changed and cancel the current download attempt.
"
      end

      attribute 12345143 "hwid_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Hardware Qualification ID of the client"
      end

      attribute 12345271 "fw_version_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chrome OS Firmware Version."
      end

      attribute 12345399 "ec_version_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chrome OS EC Version."
      end

      attribute 12345527 "delta_okay_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If this client can accept a delta"
      end

      attribute 12345655 "interactive_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether this is a user-initiated update check"
      end

      attribute 12345783 "update_url_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The URL to send the Omaha request to.
"
      end

      attribute 12345911 "target_version_prefix_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Prefix of the target OS version that the enterprise wants this device
 to be pinned to. It's empty otherwise.
"
      end

      attribute 12346039 "wall_clock_based_wait_enabled_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if scattering is enabled, in which case waiting_period_ specifies the
 amount of absolute time that we've to wait for before sending a request to
 Omaha.
"
      end

      attribute 12346167 "waiting_period_"
	private explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12346295 "update_check_count_wait_enabled_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if scattering is enabled to denote the number of update checks
 we've to skip before we can send a request to Omaha. The min and max
 values establish the bounds for a random number to be chosen within that
 range to enable such a wait.
"
      end

      attribute 12346423 "min_update_checks_needed_"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12346551 "max_update_checks_allowed_"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12346679 "root_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " When reading files, prepend root_ to the paths. Useful for testing.
"
      end
    end

    class 3363767 "MockConnectionManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class mocks the generic interface to the connection manager
 (e.g FlimFlam, Shill, etc.) to consolidate all connection-related
 logic in update_engine."
      classrelation 6785591 // <generalisation>
	relation 6785591 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6785591 // <generalisation>
	  b parent class_ref 3359031 // ConnectionManagerInterface
      end

      operation 43478711 "MockConnectionManager"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3364023 "MockPayloadState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6786231 // <generalisation>
	relation 6786231 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6786231 // <generalisation>
	  b parent class_ref 3362487 // PayloadStateInterface
      end

      operation 43479991 "Initialize"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return true;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3364151 "MockUpdateAttempter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6786487 // <generalisation>
	relation 6786487 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6786487 // <generalisation>
	  b parent class_ref 3362615 // UpdateAttempter
      end

      extra_member 221751 "using"
	
	cpp "  using UpdateAttempter::UpdateAttempter;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 3364279 "MockOmahaRequestParams"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6785847 // <generalisation>
	relation 6785847 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6785847 // <generalisation>
	  b parent class_ref 3362871 // OmahaRequestParams
      end

      operation 43478839 "MockOmahaRequestParams"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract} : OmahaRequestParams(system_state) {
    // Delegate all calls to the parent instance by default. This helps the
    // migration from tests using the real RequestParams when they should have
    // use a fake or mock.
    ON_CALL(*this, to_more_stable_channel())
        .WillByDefault(testing::Invoke(
            this, &MockOmahaRequestParams::fake_to_more_stable_channel));
    ON_CALL(*this, GetAppId())
        .WillByDefault(testing::Invoke(
            this, &MockOmahaRequestParams::FakeGetAppId));
    ON_CALL(*this, SetTargetChannel(testing::_, testing::_, testing::_))
        .WillByDefault(testing::Invoke(
            this, &MockOmahaRequestParams::FakeSetTargetChannel));
    ON_CALL(*this, UpdateDownloadChannel())
        .WillByDefault(testing::Invoke(
            this, &MockOmahaRequestParams::FakeUpdateDownloadChannel));
    ON_CALL(*this, is_powerwash_allowed())
        .WillByDefault(testing::Invoke(
            this, &MockOmahaRequestParams::fake_is_powerwash_allowed));
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43478967 "fake_to_more_stable_channel"
	const cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return OmahaRequestParams::to_more_stable_channel();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wrappers to call the parent class and behave like the real object by
 default. See \"Delegating Calls to a Parent Class\" in gmock's documentation."
      end

      operation 43479095 "FakeGetAppId"
	const cpp_inline private explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return OmahaRequestParams::GetAppId();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43479223 "FakeSetTargetChannel"
	cpp_inline private explicit_return_type "bool"
	nparams 3
	  param in name "channel" explicit_type "std::string"
	  param in name "is_powerwash_allowed" explicit_type "bool"
	  param inout name "error" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
    return OmahaRequestParams::SetTargetChannel(channel,
                                                is_powerwash_allowed,
                                                error);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43479351 "FakeUpdateDownloadChannel"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return OmahaRequestParams::UpdateDownloadChannel();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43479479 "fake_is_powerwash_allowed"
	const cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return OmahaRequestParams::is_powerwash_allowed();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3364407 "MockP2PManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A mocked, fake implementation of P2PManager."
      classrelation 6785975 // <generalisation>
	relation 6785975 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6785975 // <generalisation>
	  b parent class_ref 3361591 // P2PManager
      end

      operation 43479607 "MockP2PManager"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
    // Delegate all calls to the fake instance
    ON_CALL(*this, SetDevicePolicy(testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::SetDevicePolicy));
    ON_CALL(*this, IsP2PEnabled())
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::IsP2PEnabled));
    ON_CALL(*this, EnsureP2PRunning())
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::EnsureP2PRunning));
    ON_CALL(*this, EnsureP2PNotRunning())
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::EnsureP2PNotRunning));
    ON_CALL(*this, PerformHousekeeping())
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::PerformHousekeeping));
    ON_CALL(*this, LookupUrlForFile(testing::_, testing::_, testing::_,
                                    testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::LookupUrlForFile));
    ON_CALL(*this, FileShare(testing::_, testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::FileShare));
    ON_CALL(*this, FileGetPath(testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::FileGetPath));
    ON_CALL(*this, FileGetSize(testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::FileGetSize));
    ON_CALL(*this, FileGetExpectedSize(testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::FileGetExpectedSize));
    ON_CALL(*this, FileGetVisible(testing::_, testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::FileGetVisible));
    ON_CALL(*this, FileMakeVisible(testing::_))
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::FileMakeVisible));
    ON_CALL(*this, CountSharedFiles())
      .WillByDefault(testing::Invoke(&fake_,
            &FakeP2PManager::CountSharedFiles));
  };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43479735 "~MockP2PManager"
	cpp_override cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 43479863 "fake"
	cpp_inline public return_type class_ref 3361463 // FakeP2PManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return fake_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a reference to the underlying FakeP2PManager."
      end

      classrelation 6786103 // fake_ (<directional composition>)
	relation 6786103 *-->
	  a role_name "fake_" private
	    comment " The underlying FakeP2PManager.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786103 // fake_ (<directional composition>)
	  b parent class_ref 3361463 // FakeP2PManager
      end
    end

    class 3364663 "ImageProperties"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The read-only system properties of the running image."
      attribute 12334135 "product_id"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The product id of the image used for all channels, except canary.
"
      end

      attribute 12334263 "canary_product_id"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The canary-channel product id.
"
      end

      attribute 12334391 "version"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The product version of this image.
"
      end

      attribute 12334519 "board"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The board name this image was built for.
"
      end

      attribute 12334647 "current_channel"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The release channel this image was obtained from.
"
      end

      attribute 12334775 "omaha_url"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The Omaha URL this image should get updates from.
"
      end
    end

    class 3364791 "MutableImageProperties"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The mutable image properties are read-write image properties, initialized
 with values from the image but can be modified by storing them in the
 stateful partition."
      attribute 12334903 "target_channel"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The release channel we are tracking.
"
      end

      attribute 12335031 "is_powerwash_allowed"
	public explicit_type "bool"
	init_value " {false}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether powerwash is allowed when downloading an update for the selected
 target_channel.
"
      end
    end

    class 3365687 "MockFileWriter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6785719 // <generalisation>
	relation 6785719 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6785719 // <generalisation>
	  b parent class_ref 3361335 // FileWriter
      end
    end

    class 3365815 "MockProxyResolver"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6786359 // <generalisation>
	relation 6786359 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6786359 // <generalisation>
	  b parent class_ref 3358263 // ProxyResolver
      end
    end

    class 3365943 "OmahaEvent"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This struct encapsulates the Omaha event information. For a
 complete list of defined event types and results, see
 http://code.google.com/p/omaha/wiki/ServerProtocol#event"
      class 3366071 "Type"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12341047 "kTypeUnknown"
	  public type class_ref 3366071 // Type
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12341175 "kTypeDownloadComplete"
	  public type class_ref 3366071 // Type
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12341303 "kTypeInstallComplete"
	  public type class_ref 3366071 // Type
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12341431 "kTypeUpdateComplete"
	  public type class_ref 3366071 // Type
	  init_value " 3"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12341559 "kTypeUpdateDownloadStarted"
	  public type class_ref 3366071 // Type
	  init_value " 13"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12341687 "kTypeUpdateDownloadFinished"
	  public type class_ref 3366071 // Type
	  init_value " 14"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12341815 "kTypeRebootedAfterUpdate"
	  public type class_ref 3366071 // Type
	  init_value " 54"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3366199 "Result"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12341943 "kResultError"
	  public type class_ref 3366199 // Result
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12342071 "kResultSuccess"
	  public type class_ref 3366199 // Result
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12342199 "kResultUpdateDeferred"
	  public type class_ref 3366199 // Result
	  init_value " 9"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 43480119 "OmahaEvent"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : type(kTypeUnknown),
        result(kResultError),
        error_code(ErrorCode::kError) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43480247 "OmahaEvent"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "in_type" type class_ref 3366071 // Type
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract} : type(in_type),
        result(kResultSuccess),
        error_code(ErrorCode::kSuccess) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43480375 "OmahaEvent"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "in_type" type class_ref 3366071 // Type
	  param in name "in_result" type class_ref 3366199 // Result
	  param in name "in_error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw}${abstract} : type(in_type),
        result(in_result),
        error_code(in_error_code) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      classrelation 6786615 // type (<directional composition>)
	relation 6786615 *-->
	  a role_name "type" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786615 // type (<directional composition>)
	  b parent class_ref 3366071 // Type
      end

      classrelation 6786743 // result (<directional composition>)
	relation 6786743 *-->
	  a role_name "result" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786743 // result (<directional composition>)
	  b parent class_ref 3366199 // Result
      end

      classrelation 6786871 // error_code (<directional composition>)
	relation 6786871 *-->
	  a role_name "error_code" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786871 // error_code (<directional composition>)
	  b parent class_ref 3356855 // ErrorCode
      end
    end

    class 3366327 "ActionTraits<OmahaRequestAction>"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 3366583 "InputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3366455 // NoneType
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6786999 // <dependency>
	  relation 6786999 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6786999 // <dependency>
	    b parent class_ref 3366455 // NoneType
	end
      end

      class 3366839 "OutputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3366711 // OmahaResponse
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6787127 // <dependency>
	  relation 6787127 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6787127 // <dependency>
	    b parent class_ref 3366711 // OmahaResponse
	end
      end
    end

    class 3366711 "OmahaResponse"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This struct encapsulates the data Omaha's response for the request.
 The strings in this struct are not XML escaped."
      attribute 12346807 "update_exists"
	public explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True iff there is an update to be downloaded.
"
      end

      attribute 12346935 "poll_interval"
	public explicit_type "int"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If non-zero, server-dictated poll interval in seconds.
"
      end

      attribute 12347063 "version"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These are only valid if update_exists is true:
"
      end

      attribute 12347191 "payload_urls"
	public explicit_type "std::string"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The ordered list of URLs in the Omaha response. Each item is a complete
 URL (i.e. in terms of Omaha XML, each value is a urlBase + packageName)
"
      end

      attribute 12347319 "more_info_url"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12347447 "hash"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12347575 "metadata_signature"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12347703 "deadline"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12347831 "size"
	public explicit_type "off_t"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12347959 "metadata_size"
	public explicit_type "off_t"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12348087 "max_days_to_scatter"
	public explicit_type "int"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6788663 // max_failure_count_per_url (<directional composition>)
	relation 6788663 *-->
	  a role_name "max_failure_count_per_url" init_value "=  0" public
	    comment " The number of URL-related failures to tolerate before moving on to the
 next URL in the current pass. This is a configurable value from the
 Omaha Response attribute, if ever we need to fine tune the behavior.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788663 // max_failure_count_per_url (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 12348215 "prompt"
	public explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12348343 "is_delta_payload"
	public explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the payload described in this response is a delta payload.
 False if it's a full payload.
"
      end

      attribute 12348471 "disable_payload_backoff"
	public explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the Omaha rule instructs us to disable the back-off logic
 on the client altogether. False otherwise.
"
      end

      attribute 12348599 "disable_p2p_for_downloading"
	public explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the Omaha rule instructs us to disable p2p for downloading.
"
      end

      attribute 12348727 "disable_p2p_for_sharing"
	public explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if the Omaha rule instructs us to disable p2p for sharing.
"
      end

      attribute 12348855 "public_key_rsa"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If not blank, a base-64 encoded representation of the PEM-encoded
 public key in the response.
"
      end

      attribute 12348983 "install_date_days"
	public explicit_type "int"
	init_value "=  -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If not -1, the number of days since the epoch Jan 1, 2007 0:00
 PST, according to the Omaha Server's clock and timezone (PST8PDT,
 aka \"Pacific Time\".)
"
      end
    end

    class 3366967 "OmahaRequestAction"
      visibility package 
      nactuals 1
      actual class class_ref 3367095 // Action
        rank 0 value class_ref 3366967 // OmahaRequestAction
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6787255 // <realization>
	relation 6787255 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6787255 // <realization>
	  b parent class_ref 3367095 // Action
      end

      classrelation 6787383 // <generalisation>
	relation 6787383 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6787383 // <generalisation>
	  b parent class_ref 3367223 // HttpFetcherDelegate
      end

      attribute 12342327 "kNeverPinged"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12342455 "kPingTimeJump"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12342583 "kDefaultMaxFailureCountPerUrl"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " We choose this value of 10 as a heuristic for a work day in trying
 each URL, assuming we check roughly every 45 mins. This is a good time to
 wait - neither too long nor too little - so we don't give up the preferred
 URLs that appear earlier in list too quickly before moving on to the
 fallback ones.
"
      end

      class 3367351 "WallClockWaitResult"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12342711 "kWallClockWaitNotSatisfied"
	  public type class_ref 3367351 // WallClockWaitResult
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12342839 "kWallClockWaitDoneButUpdateCheckWaitRequired"
	  public type class_ref 3367351 // WallClockWaitResult
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12342967 "kWallClockWaitDoneAndUpdateCheckWaitNotRequired"
	  public type class_ref 3367351 // WallClockWaitResult
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 43480503 "OmahaRequestAction"
	public explicit_return_type ""
	nparams 4
	  param inout name "system_state" type class_ref 3357239 // SystemState
	  param inout name "event" type class_ref 3365943 // OmahaEvent
	  param in name "http_fetcher" explicit_type "std::unique_ptr<HttpFetcher>"
	  param in name "ping_only" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " The ctor takes in all the parameters that will be used for making
 the request to Omaha. For some of them we have constants that
 should be used.

 Takes ownership of the passed in HttpFetcher. Useful for testing.

 Takes ownership of the passed in OmahaEvent. If |event| is null,
 this is an UpdateCheck request, otherwise it's an Event request.
 Event requests always succeed.

 A good calling pattern is:
 OmahaRequestAction(..., new OmahaEvent(...), new WhateverHttpFetcher);
 or
 OmahaRequestAction(..., nullptr, new WhateverHttpFetcher);"
      end

      operation 43480631 "~OmahaRequestAction"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 3367479 "InputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3366967 // OmahaRequestAction
	cpp_decl "${comment}typedef ActionTraits<${type}>::InputObjectType ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6787511 // <dependency>
	  relation 6787511 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6787511 // <dependency>
	    b parent class_ref 3366967 // OmahaRequestAction
	end
      end

      class 3367607 "OutputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3366967 // OmahaRequestAction
	cpp_decl "${comment}typedef ActionTraits<${type}>::OutputObjectType ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6787639 // <dependency>
	  relation 6787639 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6787639 // <dependency>
	    b parent class_ref 3366967 // OmahaRequestAction
	end
      end

      operation 43480759 "PerformAction"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43480887 "TerminateProcessing"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43481015 "ActionCompleted"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43481143 "GetHTTPResponseCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return http_fetcher_->http_response_code(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43481271 "StaticType"
	class_operation cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"OmahaRequestAction\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Debugging/logging"
      end

      operation 43481399 "Type"
	const cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return StaticType(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43481527 "ReceivedBytes"
	cpp_override public explicit_return_type "void"
	nparams 3
	  param inout name "fetcher" type class_ref 3367735 // HttpFetcher
	  param in name "bytes" explicit_type "void"
	  param in name "length" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Delegate methods (see http_fetcher.h)"
      end

      operation 43481655 "TransferComplete"
	cpp_override public explicit_return_type "void"
	nparams 2
	  param inout name "fetcher" type class_ref 3367735 // HttpFetcher
	  param in name "successful" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43481783 "IsEvent"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return event_.get() != nullptr; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if this is an Event request, false if it's an UpdateCheck."
      end

      class 3367863 "InstallDateProvisioningSource"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12343095 "kProvisionedFromOmahaResponse"
	  public type class_ref 3367863 // InstallDateProvisioningSource
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12343223 "kProvisionedFromOOBEMarker"
	  public type class_ref 3367863 // InstallDateProvisioningSource
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12343351 "kProvisionedMax"
	  public type class_ref 3367863 // InstallDateProvisioningSource
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 43481911 "GetInstallDate"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the install date, expressed as the number of PST8PDT
 calendar weeks since January 1st 2007, times seven. Returns -1 if
 unknown. See http://crbug.com/336838 for details about this value."
      end

      operation 43482039 "ParseInstallDate"
	class_operation private explicit_return_type "bool"
	nparams 2
	  param inout name "parser_data" explicit_type "OmahaParserData"
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the Omaha Response in |doc| and sets the
 |install_date_days| field of |output_object| to the value of the
 elapsed_days attribute of the daystart element. Returns True if
 the value was set, False if it wasn't found."
      end

      operation 43482167 "HasInstallDate"
	class_operation private explicit_return_type "bool"
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns True if the kPrefsInstallDateDays state variable is set,
 False otherwise."
      end

      operation 43482295 "PersistInstallDate"
	class_operation private explicit_return_type "bool"
	nparams 3
	  param inout name "system_state" type class_ref 3357239 // SystemState
	  param in name "install_date_days" explicit_type "int"
	  param in name "source" type class_ref 3367863 // InstallDateProvisioningSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes |install_date_days| into the kPrefsInstallDateDays state
 variable and emits an UMA stat for the |source| used. Returns
 True if the value was written, False if an error occurred."
      end

      operation 43482423 "PersistCohortData"
	private explicit_return_type "bool"
	nparams 2
	  param in name "prefs_key" explicit_type "std::string"
	  param in name "new_value" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Persist the new cohort* value received in the XML file in the |prefs_key|
 preference file. If the |new_value| is empty, the currently stored value
 will be deleted. Don't call this function with an empty |new_value| if the
 value was not set in the XML, since that would delete the stored value."
      end

      operation 43482551 "InitPingDays"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If this is an update check request, initializes
 |ping_active_days_| and |ping_roll_call_days_| to values that may
 be sent as pings to Omaha."
      end

      operation 43482679 "CalculatePingDays"
	private explicit_return_type "int"
	nparams 1
	  param in name "key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Based on the persistent preference store values, calculates the
 number of days since the last ping sent for |key|."
      end

      operation 43482807 "ShouldPing"
	const private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns whether we have \"active_days\" or \"roll_call_days\" ping values to
 send to Omaha and thus we should include them in the response."
      end

      operation 43482935 "ShouldDeferDownload"
	private explicit_return_type "bool"
	nparams 1
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the download of a new update should be deferred.
 False if the update can be downloaded."
      end

      operation 43483063 "IsWallClockBasedWaitingSatisfied"
	private return_type class_ref 3367351 // WallClockWaitResult
	nparams 1
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the basic wall-clock-based waiting period has been
 satisfied based on the scattering policy setting. False otherwise.
 If true, it also indicates whether the additional update-check-count-based
 waiting period also needs to be satisfied before the download can begin."
      end

      operation 43483191 "IsUpdateCheckCountBasedWaitingSatisfied"
	private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the update-check-count-based waiting period has been
 satisfied. False otherwise."
      end

      operation 43483319 "ParseResponse"
	private explicit_return_type "bool"
	nparams 3
	  param inout name "parser_data" explicit_type "OmahaParserData"
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	  param inout name "completer" type class_ref 3367991 // ScopedActionCompleter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the response from Omaha that's available in |doc| using the other
 helper methods below and populates the |output_object| with the relevant
 values. Returns true if we should continue the parsing.  False otherwise,
 in which case it sets any error code using |completer|."
      end

      operation 43483447 "ParseStatus"
	private explicit_return_type "bool"
	nparams 3
	  param inout name "parser_data" explicit_type "OmahaParserData"
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	  param inout name "completer" type class_ref 3367991 // ScopedActionCompleter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the status property in the given update_check_node and populates
 |output_object| if valid. Returns true if we should continue the parsing.
 False otherwise, in which case it sets any error code using |completer|."
      end

      operation 43483575 "ParseUrls"
	private explicit_return_type "bool"
	nparams 3
	  param inout name "parser_data" explicit_type "OmahaParserData"
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	  param inout name "completer" type class_ref 3367991 // ScopedActionCompleter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the URL nodes in the given XML document and populates
 |output_object| if valid. Returns true if we should continue the parsing.
 False otherwise, in which case it sets any error code using |completer|."
      end

      operation 43483703 "ParsePackage"
	private explicit_return_type "bool"
	nparams 3
	  param inout name "parser_data" explicit_type "OmahaParserData"
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	  param inout name "completer" type class_ref 3367991 // ScopedActionCompleter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the package node in the given XML document and populates
 |output_object| if valid. Returns true if we should continue the parsing.
 False otherwise, in which case it sets any error code using |completer|."
      end

      operation 43483831 "ParseParams"
	private explicit_return_type "bool"
	nparams 3
	  param inout name "parser_data" explicit_type "OmahaParserData"
	  param inout name "output_object" type class_ref 3366711 // OmahaResponse
	  param inout name "completer" type class_ref 3367991 // ScopedActionCompleter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the other parameters in the given XML document and populates
 |output_object| if valid. Returns true if we should continue the parsing.
 False otherwise, in which case it sets any error code using |completer|."
      end

      operation 43483959 "CompleteProcessing"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by TransferComplete() to complete processing, either
 asynchronously after looking up resources via p2p or directly."
      end

      operation 43484087 "LookupPayloadViaP2P"
	private explicit_return_type "void"
	nparams 1
	  param in name "response" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper to asynchronously look up payload on the LAN."
      end

      operation 43484215 "OnLookupPayloadViaP2PCompleted"
	private explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Callback used by LookupPayloadViaP2P()."
      end

      operation 43484343 "ShouldIgnoreUpdate"
	const private explicit_return_type "bool"
	nparams 1
	  param in name "response" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the current update should be ignored."
      end

      operation 43484471 "IsUpdateAllowedOverCurrentConnection"
	const private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if updates are allowed over the current type of connection.
 False otherwise."
      end

      classrelation 6787767 // system_state_ (<unidirectional association>)
	relation 6787767 --->
	  a role_name "system_state_" private
	    comment " Global system context.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6787767 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end

      classrelation 6787895 // params_ (<unidirectional association>)
	relation 6787895 --->
	  a role_name "params_" private
	    comment " Contains state that is relevant in the processing of the Omaha request.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6787895 // params_ (<unidirectional association>)
	  b parent class_ref 3362871 // OmahaRequestParams
      end

      classrelation 6788023 // event_ (<directional composition>)
	relation 6788023 *-->
	  stereotype "std::unique_ptr"
	  a role_name "event_" private
	    comment " Pointer to the OmahaEvent info. This is an UpdateCheck request if null.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788023 // event_ (<directional composition>)
	  b parent class_ref 3365943 // OmahaEvent
      end

      classrelation 6788151 // http_fetcher_ (<directional composition>)
	relation 6788151 *-->
	  stereotype "std::unique_ptr"
	  a role_name "http_fetcher_" private
	    comment " pointer to the HttpFetcher that does the http work
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788151 // http_fetcher_ (<directional composition>)
	  b parent class_ref 3367735 // HttpFetcher
      end

      attribute 12343479 "ping_only_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, only include the <ping> element in the request.
"
      end

      attribute 12343607 "response_buffer_"
	private explicit_type "brillo::Blob"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stores the response from the omaha server
"
      end

      attribute 12343735 "ping_active_days_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initialized by InitPingDays to values that may be sent to Omaha
 as part of a ping message. Note that only positive values and -1
 are sent to Omaha.
"
      end

      attribute 12343863 "ping_roll_call_days_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3368119 "ActionTraits<OmahaResponseHandlerAction>"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 3368247 "InputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3366711 // OmahaResponse
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6788791 // <dependency>
	  relation 6788791 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6788791 // <dependency>
	    b parent class_ref 3366711 // OmahaResponse
	end
      end

      class 3368503 "OutputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3368375 // InstallPlan
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6788919 // <dependency>
	  relation 6788919 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6788919 // <dependency>
	    b parent class_ref 3368375 // InstallPlan
	end
      end
    end

    class 3368631 "OmahaResponseHandlerAction"
      visibility package 
      nactuals 1
      actual class class_ref 3367095 // Action
        rank 0 value class_ref 3368631 // OmahaResponseHandlerAction
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6789047 // <realization>
	relation 6789047 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6789047 // <realization>
	  b parent class_ref 3367095 // Action
      end

      operation 43491511 "OmahaResponseHandlerAction"
	public explicit_return_type ""
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      class 3368759 "InputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3368631 // OmahaResponseHandlerAction
	cpp_decl "${comment}typedef ActionTraits<${type}>::InputObjectType ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6789175 // <dependency>
	  relation 6789175 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6789175 // <dependency>
	    b parent class_ref 3368631 // OmahaResponseHandlerAction
	end
      end

      class 3368887 "OutputObjectType"
	visibility package stereotype "typedef" base_type class_ref 3368631 // OmahaResponseHandlerAction
	cpp_decl "${comment}typedef ActionTraits<${type}>::OutputObjectType ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6789303 // <dependency>
	  relation 6789303 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 6789303 // <dependency>
	    b parent class_ref 3368631 // OmahaResponseHandlerAction
	end
      end

      operation 43491639 "PerformAction"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43491767 "TerminateProcessing"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { CHECK(false); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is a synchronous action, and thus TerminateProcessing() should
 never be called"
      end

      operation 43491895 "GotNoUpdateResponse"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return got_no_update_response_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43492023 "install_plan"
	const cpp_inline public return_type class_ref 3368375 // InstallPlan
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return install_plan_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43492151 "StaticType"
	class_operation cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"OmahaResponseHandlerAction\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Debugging/logging"
      end

      operation 43492279 "Type"
	const cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return StaticType(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43492407 "set_key_path"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "path" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { key_path_ = path; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43492535 "AreHashChecksMandatory"
	private explicit_return_type "bool"
	nparams 1
	  param in name "response" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if payload hash checks are mandatory based on the state
 of the system and the contents of the Omaha response. False otherwise."
      end

      classrelation 6789431 // system_state_ (<unidirectional association>)
	relation 6789431 --->
	  a role_name "system_state_" private
	    comment " Global system context.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6789431 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end

      classrelation 6789559 // install_plan_ (<directional composition>)
	relation 6789559 *-->
	  a role_name "install_plan_" private
	    comment " The install plan, if we have an update.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6789559 // install_plan_ (<directional composition>)
	  b parent class_ref 3368375 // InstallPlan
      end

      attribute 12349111 "got_no_update_response_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True only if we got a response and the response said no updates
"
      end

      attribute 12349239 "key_path_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Public key path to use for payload verification.
"
      end

      attribute 12349367 "deadline_file_"
	const_attribute private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " File used for communication deadline to Chrome.
"
      end

      operation 43492663 "OmahaResponseHandlerAction"
	private explicit_return_type ""
	nparams 2
	  param inout name "system_state" type class_ref 3357239 // SystemState
	  param in name "deadline_file" explicit_type "std::string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Special ctor + friend declarations for testing purposes."
      end

      extra_member 221879 "friend"
	
	cpp "
  friend class OmahaResponseHandlerActionTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 3369271 "PayloadState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates all the payload state required for download. This includes the
 state necessary for handling multiple URLs in Omaha response, the backoff
 state, etc. All state is persisted so that we use the most recently saved
 value when resuming the update_engine process. All state is also cached in
 memory so that we ensure we always make progress based on last known good
 state even when there's any issue in reading/writing from the file system."
      classrelation 6790071 // <generalisation>
	relation 6790071 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6790071 // <generalisation>
	  b parent class_ref 3362487 // PayloadStateInterface
      end

      operation 43495735 "PayloadState"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43495863 "~PayloadState"
	cpp_override cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 43495991 "Initialize"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "system_state" type class_ref 3357239 // SystemState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes a payload state object using the given global system state.
 It performs the initial loading of all persisted state into memory and
 dumps the initial state for debugging purposes.  Note: the other methods
 should be called only after calling Initialize on this object."
      end

      operation 43496119 "SetResponse"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "response" type class_ref 3366711 // OmahaResponse
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation of PayloadStateInterface methods."
      end

      operation 43496247 "DownloadComplete"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43496375 "DownloadProgress"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43496503 "UpdateResumed"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43496631 "UpdateRestarted"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43496759 "UpdateSucceeded"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43496887 "UpdateFailed"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "error" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497015 "ResetUpdateStatus"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497143 "ShouldBackoffDownload"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497271 "Rollback"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497399 "ExpectRebootInNewVersion"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "target_version_uid" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497527 "SetUsingP2PForDownloading"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497655 "SetUsingP2PForSharing"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    using_p2p_for_sharing_ = value;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497783 "GetResponseSignature"
	cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return response_signature_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43497911 "GetFullPayloadAttemptNumber"
	cpp_override cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return full_payload_attempt_number_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498039 "GetPayloadAttemptNumber"
	cpp_override cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return payload_attempt_number_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498167 "GetCurrentUrl"
	cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return candidate_urls_.size() ? candidate_urls_[url_index_] : \"\";
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498295 "GetUrlFailureCount"
	cpp_override cpp_inline public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return url_failure_count_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498423 "GetUrlSwitchCount"
	cpp_override cpp_inline public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return url_switch_count_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498551 "GetNumResponsesSeen"
	cpp_override cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return num_responses_seen_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498679 "GetBackoffExpiryTime"
	cpp_override cpp_inline public explicit_return_type "base::Time"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return backoff_expiry_time_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498807 "GetUpdateDuration"
	cpp_override public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43498935 "GetUpdateDurationUptime"
	cpp_override public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499063 "GetCurrentBytesDownloaded"
	cpp_override cpp_inline public explicit_return_type "uint64_t"
	nparams 1
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return source < kNumDownloadSources ? current_bytes_downloaded_[source] : 0;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499191 "GetTotalBytesDownloaded"
	cpp_override cpp_inline public explicit_return_type "uint64_t"
	nparams 1
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return source < kNumDownloadSources ? total_bytes_downloaded_[source] : 0;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499319 "GetNumReboots"
	cpp_override cpp_inline public return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return num_reboots_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499447 "UpdateEngineStarted"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499575 "GetRollbackVersion"
	cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return rollback_version_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499703 "GetP2PNumAttempts"
	cpp_override public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499831 "GetP2PFirstAttemptTimestamp"
	cpp_override public explicit_return_type "base::Time"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43499959 "P2PNewAttempt"
	cpp_override public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500087 "P2PAttemptAllowed"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500215 "GetUsingP2PForDownloading"
	const cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return using_p2p_for_downloading_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500343 "GetUsingP2PForSharing"
	const cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return using_p2p_for_sharing_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500471 "GetScatteringWaitPeriod"
	cpp_override cpp_inline public explicit_return_type "base::TimeDelta"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return scattering_wait_period_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500599 "SetScatteringWaitPeriod"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "wait_period" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500727 "SetP2PUrl"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    p2p_url_ = url;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500855 "GetP2PUrl"
	const cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return p2p_url_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43500983 "GetAttemptErrorCode"
	const cpp_override cpp_inline public return_type class_ref 3356855 // ErrorCode
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return attempt_error_code_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3369527 "AttemptType"
	visibility package stereotype "enum_class"
	cpp_decl "${comment}enum class ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12349879 "kUpdate"
	  public type class_ref 3369527 // AttemptType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12350007 "kRollback"
	  public type class_ref 3369527 // AttemptType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      extra_member 222007 "friend"
	
	cpp "

  friend class PayloadStateTest;" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 43501111 "AttemptStarted"
	private explicit_return_type "void"
	nparams 1
	  param in name "attempt_type" type class_ref 3369527 // AttemptType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper called when an attempt has begun, is called by
 UpdateResumed(), UpdateRestarted() and Rollback()."
      end

      operation 43501239 "IncrementPayloadAttemptNumber"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Increments the payload attempt number used for metrics."
      end

      operation 43501367 "IncrementFullPayloadAttemptNumber"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Increments the payload attempt number which governs the backoff behavior
 at the time of the next update check."
      end

      operation 43501495 "IncrementUrlIndex"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Advances the current URL index to the next available one. If all URLs have
 been exhausted during the current payload download attempt (as indicated
 by the payload attempt number), then it will increment the payload attempt
 number and wrap around again with the first URL in the list. This also
 updates the URL switch count, if needed."
      end

      operation 43501623 "IncrementFailureCount"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Increments the failure count of the current URL. If the configured max
 failure count is reached for this URL, it advances the current URL index
 to the next URL and resets the failure count for that URL."
      end

      operation 43501751 "UpdateBackoffExpiryTime"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Updates the backoff expiry time exponentially based on the current
 payload attempt number."
      end

      operation 43501879 "UpdateCurrentDownloadSource"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Updates the value of current download source based on the current URL
 index. If the download source is not one of the known sources, it's set
 to kNumDownloadSources."
      end

      operation 43502007 "UpdateBytesDownloaded"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Updates the various metrics corresponding with the given number of bytes
 that were downloaded recently."
      end

      operation 43502135 "CalculatePayloadType"
	private return_type class_ref 3369655 // PayloadType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculates the PayloadType we're using."
      end

      operation 43502263 "CollectAndReportAttemptMetrics"
	private explicit_return_type "void"
	nparams 1
	  param in name "code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Collects and reports the various metrics related to an update attempt."
      end

      operation 43502391 "PersistAttemptMetrics"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Persists values related to the UpdateEngine.Attempt.* metrics so
 we can identify later if an update attempt ends abnormally."
      end

      operation 43502519 "ClearPersistedAttemptMetrics"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clears persistent state previously set using AttemptMetricsPersist()."
      end

      operation 43502647 "ReportAndClearPersistedAttemptMetrics"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if persistent state previously set using AttemptMetricsPersist()
 exists and, if so, emits it with |attempt_result| set to
 metrics::AttemptResult::kAbnormalTermination."
      end

      operation 43502775 "CollectAndReportSuccessfulUpdateMetrics"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Collects and reports the various metrics related to a successful update."
      end

      operation 43502903 "ReportFailedBootIfNeeded"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if we were expecting to be running in the new version but the
 boot into the new version failed for some reason. If that's the case, an
 UMA metric is sent reporting the number of attempts the same applied
 payload was attempted to reboot. This function is called by UpdateAttempter
 every time the update engine starts and there's no reboot pending."
      end

      operation 43503031 "ResetPersistedState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resets all the persisted state values which are maintained relative to the
 current response signature. The response signature itself is not reset."
      end

      operation 43503159 "ResetDownloadSourcesOnNewUpdate"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resets the appropriate state related to download sources that need to be
 reset on a new update."
      end

      operation 43503287 "GetPersistedValue"
	private explicit_return_type "int64_t"
	nparams 1
	  param in name "key" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the persisted value from prefs_ for the given key. It also
 validates that the value returned is non-negative."
      end

      operation 43503415 "CalculateResponseSignature"
	private explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculates the response \"signature\", which is basically a string composed
 of the subset of the fields in the current response that affect the
 behavior of the PayloadState."
      end

      operation 43503543 "LoadResponseSignature"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the current response signature from the persisted state."
      end

      operation 43503671 "SetResponseSignature"
	private explicit_return_type "void"
	nparams 1
	  param in name "response_signature" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the response signature to the given value. Also persists the value
 being set so that we resume from the save value in case of a process
 restart."
      end

      operation 43503799 "LoadPayloadAttemptNumber"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the payload attempt number from the persisted state."
      end

      operation 43503927 "LoadFullPayloadAttemptNumber"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the payload attempt number for full payloads from the persisted
 state."
      end

      operation 43504055 "SetPayloadAttemptNumber"
	private explicit_return_type "void"
	nparams 1
	  param in name "payload_attempt_number" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the payload attempt number to the given value. Also persists the
 value being set so that we resume from the same value in case of a process
 restart."
      end

      operation 43504183 "SetFullPayloadAttemptNumber"
	private explicit_return_type "void"
	nparams 1
	  param in name "payload_attempt_number" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the payload attempt number for full updates to the given value. Also
 persists the value being set so that we resume from the same value in case
 of a process restart."
      end

      operation 43504311 "LoadUrlIndex"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the current URL index from the persisted state."
      end

      operation 43504439 "SetUrlIndex"
	private explicit_return_type "void"
	nparams 1
	  param in name "url_index" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the current URL index to the given value. Also persists the value
 being set so that we resume from the same value in case of a process
 restart."
      end

      operation 43504567 "LoadUrlFailureCount"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the current URL's failure count from the persisted stae."
      end

      operation 43504695 "SetUrlFailureCount"
	private explicit_return_type "void"
	nparams 1
	  param in name "url_failure_count" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the current URL's failure count to the given value. Also persists the
 value being set so that we resume from the same value in case of a process
 restart."
      end

      operation 43504823 "SetUrlSwitchCount"
	private explicit_return_type "void"
	nparams 1
	  param in name "url_switch_count" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets |url_switch_count_| to the given value and persists the value."
      end

      operation 43504951 "LoadUrlSwitchCount"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes |url_switch_count_| from the persisted stae."
      end

      operation 43505079 "LoadBackoffExpiryTime"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the backoff expiry time from the persisted state."
      end

      operation 43505207 "SetBackoffExpiryTime"
	private explicit_return_type "void"
	nparams 1
	  param in name "new_time" explicit_type "base::Time"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the backoff expiry time to the given value. Also persists the value
 being set so that we resume from the same value in case of a process
 restart."
      end

      operation 43505335 "LoadUpdateTimestampStart"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes |update_timestamp_start_| from the persisted state."
      end

      operation 43505463 "SetUpdateTimestampStart"
	private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "base::Time"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets |update_timestamp_start_| to the given value and persists the value."
      end

      operation 43505591 "SetUpdateTimestampEnd"
	private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "base::Time"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets |update_timestamp_end_| to the given value. This is not persisted
 as it happens at the end of the update process where state is deleted
 anyway."
      end

      operation 43505719 "LoadUpdateDurationUptime"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes |update_duration_uptime_| from the persisted state."
      end

      operation 43505847 "SetUpdateDurationUptimeExtended"
	private explicit_return_type "void"
	nparams 3
	  param in name "value" explicit_type "base::TimeDelta"
	  param in name "timestamp" explicit_type "base::Time"
	  param in name "use_logging" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper method used in SetUpdateDurationUptime() and
 CalculateUpdateDurationUptime()."
      end

      operation 43505975 "SetUpdateDurationUptime"
	private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets |update_duration_uptime_| to the given value and persists
 the value and sets |update_duration_uptime_timestamp_| to the
 current monotonic time."
      end

      operation 43506103 "CalculateUpdateDurationUptime"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds the difference between current monotonic time and
 |update_duration_uptime_timestamp_| to |update_duration_uptime_| and
 sets |update_duration_uptime_timestamp_| to current monotonic time."
      end

      operation 43506231 "GetPrefsKey"
	private explicit_return_type "std::string"
	nparams 2
	  param in name "prefix" explicit_type "std::string"
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the full key for a download source given the prefix."
      end

      operation 43506359 "LoadCurrentBytesDownloaded"
	private explicit_return_type "void"
	nparams 1
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the number of bytes that have been currently downloaded through the
 previous attempts from the persisted state for the given source. It's
 reset to 0 everytime we begin a full update and is continued from previous
 attempt if we're resuming the update."
      end

      operation 43506487 "SetCurrentBytesDownloaded"
	private explicit_return_type "void"
	nparams 3
	  param in name "source" type class_ref 3369399 // DownloadSource
	  param in name "current_bytes_downloaded" explicit_type "uint64_t"
	  param in name "log" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the number of bytes that have been currently downloaded for the
 given source. This value is also persisted."
      end

      operation 43506615 "LoadTotalBytesDownloaded"
	private explicit_return_type "void"
	nparams 1
	  param in name "source" type class_ref 3369399 // DownloadSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the total number of bytes that have been downloaded (since the last
 successful update) from the persisted state for the given source. It's
 reset to 0 everytime we successfully apply an update and counts the bytes
 downloaded for both successful and failed attempts since then."
      end

      operation 43506743 "SetTotalBytesDownloaded"
	private explicit_return_type "void"
	nparams 3
	  param in name "source" type class_ref 3369399 // DownloadSource
	  param in name "total_bytes_downloaded" explicit_type "uint64_t"
	  param in name "log" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the total number of bytes that have been downloaded so far for the
 given source. This value is also persisted."
      end

      operation 43506871 "LoadRollbackVersion"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the blacklisted version from our prefs file."
      end

      operation 43506999 "SetRollbackVersion"
	private explicit_return_type "void"
	nparams 1
	  param in name "rollback_version" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Blacklists this version from getting AU'd to until we receive a new update
 response."
      end

      operation 43507127 "ResetRollbackVersion"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clears any blacklisted version."
      end

      operation 43507255 "GetUrlIndex"
	cpp_inline private return_type class_ref 2810935 // uint32_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return url_index_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43507383 "ComputeCandidateUrls"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Computes the list of candidate URLs from the total list of payload URLs in
 the Omaha response."
      end

      operation 43507511 "SetNumResponsesSeen"
	private explicit_return_type "void"
	nparams 1
	  param in name "num_responses_seen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets |num_responses_seen_| and persist it to disk."
      end

      operation 43507639 "LoadNumResponsesSeen"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes |num_responses_seen_| from persisted state."
      end

      operation 43507767 "LoadNumReboots"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes |num_reboots_| from the persisted state."
      end

      operation 43507895 "SetNumReboots"
	private explicit_return_type "void"
	nparams 1
	  param in name "num_reboots" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets |num_reboots| for the update attempt. Also persists the
 value being set so that we resume from the same value in case of a process
 restart."
      end

      operation 43508023 "UpdateNumReboots"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks to see if the device rebooted since the last call and if so
 increments num_reboots."
      end

      operation 43508151 "CreateSystemUpdatedMarkerFile"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Writes the current wall-clock time to the kPrefsSystemUpdatedMarker
 state variable."
      end

      operation 43508279 "BootedIntoUpdate"
	private explicit_return_type "void"
	nparams 1
	  param in name "time_to_reboot" explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called at program startup if the device booted into a new update.
 The |time_to_reboot| parameter contains the (wall-clock) duration
 from when the update successfully completed (the value written
 into the kPrefsSystemUpdatedMarker state variable) until the device
 was booted into the update (current wall-clock time)."
      end

      operation 43508407 "LoadP2PFirstAttemptTimestamp"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the |kPrefsP2PFirstAttemptTimestamp| state variable from disk
 into |p2p_first_attempt_timestamp_|."
      end

      operation 43508535 "LoadP2PNumAttempts"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the |kPrefsP2PNumAttempts| state variable into |p2p_num_attempts_|."
      end

      operation 43508663 "SetP2PNumAttempts"
	private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the |kPrefsP2PNumAttempts| state variable to |value|."
      end

      operation 43508791 "SetP2PFirstAttemptTimestamp"
	private explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "base::Time"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the |kPrefsP2PFirstAttemptTimestamp| state variable to |time|."
      end

      operation 43508919 "LoadScatteringWaitPeriod"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Loads the persisted scattering wallclock-based wait period."
      end

      classrelation 6790199 // system_state_ (<unidirectional association>)
	relation 6790199 --->
	  a role_name "system_state_" private
	    comment " The global state of the system.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790199 // system_state_ (<unidirectional association>)
	  b parent class_ref 3357239 // SystemState
      end

      classrelation 6790327 // prefs_ (<unidirectional association>)
	relation 6790327 --->
	  a role_name "prefs_" private
	    comment " Interface object with which we read/write persisted state. This must
 be set by calling the Initialize method before calling any other method.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790327 // prefs_ (<unidirectional association>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6790455 // powerwash_safe_prefs_ (<unidirectional association>)
	relation 6790455 --->
	  a role_name "powerwash_safe_prefs_" private
	    comment " Interface object with which we read/write persisted state. This must
 be set by calling the Initialize method before calling any other method.
 This object persists across powerwashes.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790455 // powerwash_safe_prefs_ (<unidirectional association>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6790583 // response_ (<directional composition>)
	relation 6790583 *-->
	  a role_name "response_" private
	    comment " This is the current response object from Omaha.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790583 // response_ (<directional composition>)
	  b parent class_ref 3366711 // OmahaResponse
      end

      attribute 12350135 "using_p2p_for_downloading_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether P2P is being used for downloading and sharing.
"
      end

      attribute 12350263 "using_p2p_for_sharing_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12350391 "p2p_url_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stores the P2P download URL, if one is used.
"
      end

      attribute 12350519 "p2p_first_attempt_timestamp_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The cached value of |kPrefsP2PFirstAttemptTimestamp|.
"
      end

      attribute 12350647 "p2p_num_attempts_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The cached value of |kPrefsP2PNumAttempts|.
"
      end

      attribute 12350775 "response_signature_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This stores a \"signature\" of the current response. The signature here
 refers to a subset of the current response from Omaha.  Each update to
 this value is persisted so we resume from the same value in case of a
 process restart.
"
      end

      attribute 12350903 "payload_attempt_number_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of times we've tried to download the payload. This is
 incremented each time we download the payload successsfully or when we
 exhaust all failure limits for all URLs and are about to wrap around back
 to the first URL.  Each update to this value is persisted so we resume from
 the same value in case of a process restart.
"
      end

      attribute 12351031 "full_payload_attempt_number_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of times we've tried to download the payload in full. This is
 incremented each time we download the payload in full successsfully or
 when we exhaust all failure limits for all URLs and are about to wrap
 around back to the first URL.  Each update to this value is persisted so
 we resume from the same value in case of a process restart.
"
      end

      attribute 12351159 "url_index_"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The index of the current URL.  This type is different from the one in the
 accessor methods because PrefsInterface supports only int64_t but we want
 to provide a stronger abstraction of uint32_t.  Each update to this value
 is persisted so we resume from the same value in case of a process
 restart.
"
      end

      attribute 12351287 "url_failure_count_"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The count of failures encountered in the current attempt to download using
 the current URL (specified by url_index_).  Each update to this value is
 persisted so we resume from the same value in case of a process restart.
"
      end

      attribute 12351415 "url_switch_count_"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of times we've switched URLs.
"
      end

      classrelation 6790711 // current_download_source_ (<directional composition>)
	relation 6790711 *-->
	  a role_name "current_download_source_" private
	    comment " The current download source based on the current URL. This value is
 not persisted as it can be recomputed everytime we update the URL.
 We're storing this so as not to recompute this on every few bytes of
 data we read from the socket.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790711 // current_download_source_ (<directional composition>)
	  b parent class_ref 3369399 // DownloadSource
      end

      attribute 12351543 "num_responses_seen_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of different Omaha responses seen. Increases every time
 a new response is seen. Resets to 0 only when the system has been
 successfully updated.
"
      end

      classrelation 6790839 // num_reboots_ (<directional composition>)
	relation 6790839 *-->
	  a role_name "num_reboots_" private
	    comment " The number of system reboots during an update attempt. Technically since
 we don't go out of our way to not update it when not attempting an update,
 also records the number of reboots before the next update attempt starts.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790839 // num_reboots_ (<directional composition>)
	  b parent class_ref 2810935 // uint32_t
      end

      attribute 12351671 "backoff_expiry_time_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The timestamp until which we've to wait before attempting to download the
 payload again, so as to backoff repeated downloads.
"
      end

      attribute 12351799 "update_duration_current_"
	private explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The most recently calculated value of the update duration.
"
      end

      attribute 12351927 "update_timestamp_start_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The point in time (wall-clock) that the update was started.
"
      end

      attribute 12352055 "update_timestamp_end_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The point in time (wall-clock) that the update ended. If the update
 is still in progress, this is set to the Epoch (e.g. 0).
"
      end

      attribute 12352183 "update_duration_uptime_"
	private explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The update duration uptime
"
      end

      attribute 12352311 "update_duration_uptime_timestamp_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The monotonic time when |update_duration_uptime_| was last set
"
      end

      attribute 12352439 "current_bytes_downloaded_"
	private explicit_type "uint64_t"
	multiplicity "[kNumDownloadSources + 1]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of bytes that have been downloaded for each source for each new
 update attempt. If we resume an update, we'll continue from the previous
 value, but if we get a new response or if the previous attempt failed,
 we'll reset this to 0 to start afresh. Each update to this value is
 persisted so we resume from the same value in case of a process restart.
 The extra index in the array is to no-op accidental access in case the
 return value from GetCurrentDownloadSource is used without validation.
"
      end

      attribute 12352567 "total_bytes_downloaded_"
	private explicit_type "uint64_t"
	multiplicity "[kNumDownloadSources + 1]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of bytes that have been downloaded for each source since the
 the last successful update. This is used to compute the overhead we incur.
 Each update to this value is persisted so we resume from the same value in
 case of a process restart.
 The extra index in the array is to no-op accidental access in case the
 return value from GetCurrentDownloadSource is used without validation.
"
      end

      attribute 12352695 "kDurationSlack"
	class_attribute const_attribute private explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A small timespan used when comparing wall-clock times for coping
 with the fact that clocks drift and consequently are adjusted
 (either forwards or backwards) via NTP.
"
      end

      attribute 12352823 "candidate_urls_"
	private explicit_type "std::string"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The ordered list of the subset of payload URL candidates which are
 allowed as per device policy.
"
      end

      attribute 12352951 "rollback_version_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This stores a blacklisted version set as part of rollback. When we rollback
 we store the version of the os from which we are rolling back from in order
 to guarantee that we do not re-update to it on the next au attempt after
 reboot.
"
      end

      attribute 12353079 "attempt_num_bytes_downloaded_"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The number of bytes downloaded per attempt.
"
      end

      attribute 12353207 "attempt_start_time_boot_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The boot time when the attempt was started.
"
      end

      attribute 12353335 "attempt_start_time_monotonic_"
	private explicit_type "base::Time"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The monotonic time when the attempt was started.
"
      end

      classrelation 6790967 // attempt_connection_type_ (<directional composition>)
	relation 6790967 *-->
	  a role_name "attempt_connection_type_" private
	    comment " The connection type when the attempt started.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790967 // attempt_connection_type_ (<directional composition>)
	  b parent class_ref 3365431 // ConnectionType
      end

      classrelation 6791095 // attempt_error_code_ (<directional composition>)
	relation 6791095 *-->
	  a role_name "attempt_error_code_" private
	    comment " The attempt error code when the attempt finished.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791095 // attempt_error_code_ (<directional composition>)
	  b parent class_ref 3356855 // ErrorCode
      end

      classrelation 6791223 // attempt_type_ (<directional composition>)
	relation 6791223 *-->
	  a role_name "attempt_type_" private
	    comment " Whether we're currently rolling back.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791223 // attempt_type_ (<directional composition>)
	  b parent class_ref 3369527 // AttemptType
      end

      attribute 12353463 "scattering_wait_period_"
	private explicit_type "base::TimeDelta"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current scattering wallclock-based wait period.
"
      end
    end

    class 3369783 "DirectProxyResolver"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Always says to not use a proxy"
      classrelation 6791351 // <generalisation>
	relation 6791351 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6791351 // <generalisation>
	  b parent class_ref 3358263 // ProxyResolver
      end

      operation 43514551 "DirectProxyResolver"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43514679 "~DirectProxyResolver"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43514807 "GetProxiesForUrl"
	cpp_override public explicit_return_type "bool"
	nparams 3
	  param in name "url" explicit_type "std::string"
	  param in name "callback" type class_ref 3358391 // ProxiesResolvedFn
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43514935 "set_num_proxies"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "num_proxies" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    num_proxies_ = num_proxies;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the number of direct (non-) proxies to be returned by resolver.
 The default value is 1; higher numbers are currently used in testing."
      end

      attribute 12353591 "idle_callback_id_"
	private explicit_type "brillo::MessageLoop::TaskId"
	init_value " {
      brillo::MessageLoop::kTaskIdNull}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The ID of the main loop callback.
"
      end

      attribute 12353719 "num_proxies_"
	private explicit_type "size_t"
	init_value " {1}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of direct proxies to return on resolved list; currently used for
 testing.
"
      end

      operation 43515063 "ReturnCallback"
	private explicit_return_type "void"
	nparams 2
	  param in name "callback" type class_ref 3358391 // ProxiesResolvedFn
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The MainLoop callback, from here we return to the client."
      end
    end

    class 3369911 "RealSystemState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A real implementation of the SystemStateInterface which is
 used by the actual product code."
      classrelation 6791479 // <generalisation>
	relation 6791479 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6791479 // <generalisation>
	  b parent class_ref 3357239 // SystemState
      end

      classrelation 6791607 // <generalisation>
	relation 6791607 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6791607 // <generalisation>
	  b parent class_ref 3360055 // DaemonStateInterface
      end

      operation 43515191 "RealSystemState"
	public explicit_return_type ""
	nparams 1
	  param in name "bus" explicit_type "scoped_refptr<dbus::Bus>"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs all system objects that do not require separate initialization;
 see Initialize() below for the remaining ones."
      end

      operation 43515319 "~RealSystemState"
	cpp_override public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43515447 "Initialize"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes and sets systems objects that require an initialization
 separately from construction. Returns |true| on success."
      end

      operation 43515575 "StartUpdater"
	cpp_override public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DaemonStateInterface overrides.
 Start the periodic update attempts. Must be called at the beginning of the
 program to start the periodic update check process."
      end

      operation 43515703 "AddObserver"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43515831 "RemoveObserver"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3356471 // ServiceObserverInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43515959 "set_device_policy"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "device_policy" explicit_type "policy::DevicePolicy"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    device_policy_ = device_policy;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SystemState overrides."
      end

      operation 43516087 "device_policy"
	cpp_override cpp_inline public explicit_return_type "policy::DevicePolicy"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return device_policy_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516215 "boot_control"
	cpp_override cpp_inline public return_type class_ref 3357751 // BootControlInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return boot_control_.get();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516343 "clock"
	cpp_override cpp_inline public return_type class_ref 3362359 // ClockInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return &clock_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516471 "connection_manager"
	cpp_override cpp_inline public return_type class_ref 3359031 // ConnectionManagerInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return &connection_manager_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516599 "hardware"
	cpp_override cpp_inline public return_type class_ref 3360311 // HardwareInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return hardware_.get(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516727 "metrics_lib"
	cpp_override cpp_inline public return_type class_ref 3001655 // MetricsLibraryInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return &metrics_lib_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516855 "prefs"
	cpp_override cpp_inline public return_type class_ref 3360439 // PrefsInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return prefs_.get(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43516983 "powerwash_safe_prefs"
	cpp_override cpp_inline public return_type class_ref 3360439 // PrefsInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return powerwash_safe_prefs_.get();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517111 "payload_state"
	cpp_override cpp_inline public return_type class_ref 3362487 // PayloadStateInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return &payload_state_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517239 "update_attempter"
	cpp_override cpp_inline public return_type class_ref 3362615 // UpdateAttempter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return update_attempter_.get();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517367 "weave_service"
	cpp_override cpp_inline public return_type class_ref 3362743 // WeaveServiceInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return weave_service_.get();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517495 "request_params"
	cpp_override cpp_inline public return_type class_ref 3362871 // OmahaRequestParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return &request_params_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517623 "p2p_manager"
	cpp_override cpp_inline public return_type class_ref 3361591 // P2PManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return p2p_manager_.get(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517751 "update_manager"
	cpp_override cpp_inline public return_type class_ref 3362999 // UpdateManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return update_manager_.get();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43517879 "power_manager_proxy"
	cpp_override cpp_inline public return_type class_ref 3363127 // PowerManagerProxyInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return &power_manager_proxy_;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43518007 "system_rebooted"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return system_rebooted_; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12353847 "debugd_proxy_"
	private explicit_type "org::chromium::debugdProxy"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Real DBus proxies using the DBus connection.
"
      end

      attribute 12353975 "power_manager_proxy_"
	private explicit_type "org::chromium::PowerManagerProxy"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12354103 "session_manager_proxy_"
	private explicit_type "org::chromium::SessionManagerInterfaceProxy"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6791735 // shill_proxy_ (<directional composition>)
	relation 6791735 *-->
	  a role_name "shill_proxy_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791735 // shill_proxy_ (<directional composition>)
	  b parent class_ref 3370039 // ShillProxy
      end

      attribute 12354231 "libcros_proxy_"
	private explicit_type "LibCrosProxy"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6791863 // boot_control_ (<directional composition>)
	relation 6791863 *-->
	  stereotype "std::unique_ptr"
	  a role_name "boot_control_" private
	    comment " Interface for the clock.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791863 // boot_control_ (<directional composition>)
	  b parent class_ref 3357751 // BootControlInterface
      end

      classrelation 6791991 // clock_ (<directional composition>)
	relation 6791991 *-->
	  a role_name "clock_" private
	    comment " Interface for the clock.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791991 // clock_ (<directional composition>)
	  b parent class_ref 3370167 // Clock
      end

      attribute 12354359 "device_policy_"
	const_attribute private explicit_type "policy::DevicePolicy"
	init_value " {nullptr}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The latest device policy object from the policy provider.
"
      end

      classrelation 6792119 // connection_manager_ (<directional composition>)
	relation 6792119 *-->
	  a role_name "connection_manager_" init_value " {&shill_proxy_, this}" private
	    comment " The connection manager object that makes download decisions depending on
 the current type of connection.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792119 // connection_manager_ (<directional composition>)
	  b parent class_ref 3358903 // ConnectionManager
      end

      classrelation 6792247 // hardware_ (<directional composition>)
	relation 6792247 *-->
	  stereotype "std::unique_ptr"
	  a role_name "hardware_" private
	    comment " Interface for the hardware functions.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792247 // hardware_ (<directional composition>)
	  b parent class_ref 3360311 // HardwareInterface
      end

      classrelation 6792375 // metrics_lib_ (<directional composition>)
	relation 6792375 *-->
	  a role_name "metrics_lib_" private
	    comment " The Metrics Library interface for reporting UMA stats.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792375 // metrics_lib_ (<directional composition>)
	  b parent class_ref 3001911 // MetricsLibrary
      end

      classrelation 6792503 // prefs_ (<directional composition>)
	relation 6792503 *-->
	  stereotype "std::unique_ptr"
	  a role_name "prefs_" private
	    comment " Interface for persisted store.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792503 // prefs_ (<directional composition>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6792631 // powerwash_safe_prefs_ (<directional composition>)
	relation 6792631 *-->
	  stereotype "std::unique_ptr"
	  a role_name "powerwash_safe_prefs_" private
	    comment " Interface for persisted store that persists across powerwashes.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792631 // powerwash_safe_prefs_ (<directional composition>)
	  b parent class_ref 3360439 // PrefsInterface
      end

      classrelation 6792759 // payload_state_ (<directional composition>)
	relation 6792759 *-->
	  a role_name "payload_state_" private
	    comment " All state pertaining to payload state such as response, URL, backoff
 states.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792759 // payload_state_ (<directional composition>)
	  b parent class_ref 3369271 // PayloadState
      end

      classrelation 6792887 // openssl_wrapper_ (<directional composition>)
	relation 6792887 *-->
	  a role_name "openssl_wrapper_" private
	    comment " OpenSSLWrapper and CertificateChecker used for checking SSL certificates.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792887 // openssl_wrapper_ (<directional composition>)
	  b parent class_ref 3370295 // OpenSSLWrapper
      end

      classrelation 6793015 // certificate_checker_ (<directional composition>)
	relation 6793015 *-->
	  stereotype "std::unique_ptr"
	  a role_name "certificate_checker_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793015 // certificate_checker_ (<directional composition>)
	  b parent class_ref 3370423 // CertificateChecker
      end

      classrelation 6793143 // update_attempter_ (<directional composition>)
	relation 6793143 *-->
	  stereotype "std::unique_ptr"
	  a role_name "update_attempter_" private
	    comment " Pointer to the update attempter object.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793143 // update_attempter_ (<directional composition>)
	  b parent class_ref 3362615 // UpdateAttempter
      end

      classrelation 6793271 // request_params_ (<directional composition>)
	relation 6793271 *-->
	  a role_name "request_params_" init_value " {this}" private
	    comment " Common parameters for all Omaha requests.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793271 // request_params_ (<directional composition>)
	  b parent class_ref 3362871 // OmahaRequestParams
      end

      classrelation 6793399 // p2p_manager_ (<directional composition>)
	relation 6793399 *-->
	  stereotype "std::unique_ptr"
	  a role_name "p2p_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793399 // p2p_manager_ (<directional composition>)
	  b parent class_ref 3361591 // P2PManager
      end

      classrelation 6793527 // weave_service_ (<directional composition>)
	relation 6793527 *-->
	  stereotype "std::unique_ptr"
	  a role_name "weave_service_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793527 // weave_service_ (<directional composition>)
	  b parent class_ref 3362743 // WeaveServiceInterface
      end

      classrelation 6793655 // update_manager_ (<directional composition>)
	relation 6793655 *-->
	  stereotype "std::unique_ptr"
	  a role_name "update_manager_" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793655 // update_manager_ (<directional composition>)
	  b parent class_ref 3362999 // UpdateManager
      end

      attribute 12354487 "policy_provider_"
	private explicit_type "policy::PolicyProvider"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12354615 "system_rebooted_"
	private explicit_type "bool"
	init_value " {false}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, this is the first instance of the update engine since the system
 rebooted. Important for tracking whether you are running instance of the
 update engine on first boot or due to a crash/restart.
"
      end
    end

    class 3370039 "ShillProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class implements the connection to shill using real DBus calls."
      classrelation 6793783 // <generalisation>
	relation 6793783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6793783 // <generalisation>
	  b parent class_ref 3359287 // ShillProxyInterface
      end

      operation 43519671 "ShillProxy"
	public explicit_return_type ""
	nparams 1
	  param in name "bus" explicit_type "scoped_refptr<dbus::Bus>"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43519799 "~ShillProxy"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43519927 "Init"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the ShillProxy instance creating the manager proxy from the
 |bus_|."
      end

      operation 43520055 "GetManagerProxy"
	cpp_override public explicit_return_type "org::chromium::flimflam::ManagerProxyInterface"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ShillProxyInterface overrides."
      end

      operation 43520183 "GetServiceForPath"
	cpp_override public explicit_return_type "std::unique_ptr<org::chromium::flimflam::ServiceProxyInterface>"
	nparams 1
	  param in name "path" explicit_type "dbus::ObjectPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12354743 "bus_"
	private explicit_type "dbus::Bus"
	stereotype "scoped_refptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A reference to the main bus for creating new ServiceProxy instances.
"
      end

      attribute 12354871 "manager_proxy_"
	private explicit_type "org::chromium::flimflam::ManagerProxyInterface"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3372855 "WeaveService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6798391 // <generalisation>
	relation 6798391 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6798391 // <generalisation>
	  b parent class_ref 3362743 // WeaveServiceInterface
      end

      operation 43534903 "WeaveService"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43535031 "~WeaveService"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43535159 "Init"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "delegate" explicit_type "DelegateInterface"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43535287 "SendStatusUpdate"
	cpp_override public explicit_return_type "void"
	nparams 5
	  param in name "last_checked_time" explicit_type "int64_t"
	  param in name "progress" explicit_type "double"
	  param in name "status" type class_ref 3356727 // UpdateStatus
	  param in name "new_version" explicit_type "std::string"
	  param in name "new_size" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ServiceObserverInterface overrides."
      end

      operation 43535415 "SendChannelChangeUpdate"
	cpp_override public explicit_return_type "void"
	nparams 1
	  param in name "tracking_channel" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43535543 "SendPayloadApplicationComplete"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "error_code" type class_ref 3356855 // ErrorCode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43535671 "UpdateWeaveState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Force a weave update."
      end

      operation 43535799 "OnWeaveServiceConnected"
	private explicit_return_type "void"
	nparams 1
	  param in name "service" explicit_type "std::weak_ptr<weaved::Service>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43535927 "OnCheckForUpdates"
	private explicit_return_type "void"
	nparams 1
	  param in name "cmd" explicit_type "std::unique_ptr<weaved::Command>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Weave command handlers. These are called from the message loop whenever a
 command is received and dispatch the synchronous call to the |delegate_|."
      end

      operation 43536055 "OnTrackChannel"
	private explicit_return_type "void"
	nparams 1
	  param in name "cmd" explicit_type "std::unique_ptr<weaved::Command>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6798519 // delegate_ (<unidirectional association>)
	relation 6798519 --->
	  a role_name "delegate_" init_value " {nullptr}" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6798519 // delegate_ (<unidirectional association>)
	  b parent class_ref 3370935 // DelegateInterface
      end

      attribute 12358839 "weave_service_subscription_"
	private explicit_type "weaved::Service::Subscription"
	stereotype "std::unique_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12358967 "weave_service_"
	private explicit_type "weaved::Service"
	stereotype "std::weak_ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 291255 "update_engine"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1611831 "binder_service_android"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3356343 // typedef187
	class_ref 3356215 // BinderUpdateEngineAndroidService
      end
    end

    artifact 1611959 "binder_service_brillo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3357111 // typedef188
	class_ref 3356983 // BinderUpdateEngineBrilloService
      end
    end

    artifact 1612087 "boot_control_android"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3357623 // BootControlAndroid
      end
    end

    artifact 1612215 "boot_control_chromeos"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3358007 // BootControlChromeOS
      end
    end

    artifact 1612343 "chrome_browser_proxy_resolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3358135 // ChromeBrowserProxyResolver
      end
    end

    artifact 1612471 "common_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3357495 // UpdateEngineService
      end
    end

    artifact 1612599 "connection_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3358903 // ConnectionManager
      end
    end

    artifact 1612727 "connection_manager_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3359159 // NetworkConnectionType
	class_ref 3359415 // NetworkTethering
	class_ref 3359031 // ConnectionManagerInterface
      end
    end

    artifact 1612855 "daemon"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3359671 // typedef189
	class_ref 3359543 // UpdateEngineDaemon
      end
    end

    artifact 1612983 "daemon_state_android"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3360183 // DaemonStateAndroid
      end
    end

    artifact 1613111 "daemon_state_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3360055 // DaemonStateInterface
      end
    end

    artifact 1613239 "dbus_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3360823 // typedef190
	class_ref 3360695 // DBusUpdateEngineService
	class_ref 3360951 // typedef191
	class_ref 3359799 // UpdateEngineAdaptor
      end
    end

    artifact 1613495 "fake_file_writer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3361207 // FakeFileWriter
      end
    end

    artifact 1613623 "fake_p2p_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3361463 // FakeP2PManager
      end
    end

    artifact 1613751 "fake_p2p_manager_configuration"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3361719 // FakeP2PManagerConfiguration
      end
    end

    artifact 1613879 "fake_shill_proxy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3361975 // FakeShillProxy
      end
    end

    artifact 1614007 "fake_system_state"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3362231 // FakeSystemState
      end
    end

    artifact 1614135 "image_properties"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3364663 // ImageProperties
	class_ref 3364791 // MutableImageProperties
      end
    end

    artifact 1614391 "mock_connection_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3363767 // MockConnectionManager
      end
    end

    artifact 1614519 "mock_file_writer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3365687 // MockFileWriter
      end
    end

    artifact 1614647 "mock_omaha_request_params"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3364279 // MockOmahaRequestParams
      end
    end

    artifact 1614775 "mock_p2p_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3364407 // MockP2PManager
      end
    end

    artifact 1614903 "mock_payload_state"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3364023 // MockPayloadState
      end
    end

    artifact 1615031 "mock_proxy_resolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3365815 // MockProxyResolver
      end
    end

    artifact 1615159 "mock_update_attempter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3364151 // MockUpdateAttempter
      end
    end

    artifact 1615287 "omaha_request_action"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3365943 // OmahaEvent
	class_ref 3366327 // ActionTraits<OmahaRequestAction>
	class_ref 3366967 // OmahaRequestAction
      end
    end

    artifact 1615415 "omaha_request_params"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3362871 // OmahaRequestParams
      end
    end

    artifact 1615543 "omaha_response"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3366711 // OmahaResponse
      end
    end

    artifact 1615671 "omaha_response_handler_action"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3368119 // ActionTraits<OmahaResponseHandlerAction>
	class_ref 3368631 // OmahaResponseHandlerAction
      end
    end

    artifact 1615799 "p2p_manager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3361591 // P2PManager
      end
    end

    artifact 1616055 "payload_state"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3369271 // PayloadState
      end
    end

    artifact 1616183 "payload_state_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3362487 // PayloadStateInterface
      end
    end

    artifact 1616311 "proxy_resolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3358391 // ProxiesResolvedFn
	class_ref 3358263 // ProxyResolver
	class_ref 3369783 // DirectProxyResolver
      end
    end

    artifact 1616439 "real_system_state"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3369911 // RealSystemState
      end
    end

    artifact 1616567 "service_delegate_android_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3356599 // ServiceDelegateAndroidInterface
      end
    end

    artifact 1616695 "service_observer_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3356471 // ServiceObserverInterface
      end
    end

    artifact 1616823 "shill_proxy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3370039 // ShillProxy
      end
    end

    artifact 1616951 "shill_proxy_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3359287 // ShillProxyInterface
      end
    end

    artifact 1617079 "system_state"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3357239 // SystemState
      end
    end

    artifact 1617207 "update_attempter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3362615 // UpdateAttempter
      end
    end

    artifact 1617335 "update_attempter_android"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3360567 // UpdateAttempterAndroid
      end
    end

    artifact 1617463 "weave_service"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3372855 // WeaveService
      end
    end

    artifact 1617591 "weave_service_interface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3362743 // WeaveServiceInterface
      end
    end
  end

  package_ref 364599 // client_library

  package_ref 364983 // common

  package_ref 365111 // android brillo

  package_ref 365239 // chromeos_update_engine dbus_test_utils

  package_ref 365367 // payload_consumer

  package_ref 365495 // include

  package_ref 365751 // update_manager

  package_ref 366007 // chromeos_update_engine metrics

  package_ref 366647 // payload_generator
end
