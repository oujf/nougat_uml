format 213
"shill" // android::system::update_engine::include::shill
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/update_engine/include/shill/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/update_engine/include/shill/"
  cpp_namespace "org::chromium::flimflam"
  classview 330167 "shill"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3362103 "ManagerProxyMock"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Mock object for ManagerProxyInterface."
      classrelation 6807607 // <generalisation>
	relation 6807607 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6807607 // <generalisation>
	  b parent class_ref 3380279 // typedef198
      end

      operation 43619255 "ManagerProxyMock"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43619383 "VerifyAndEncryptCredentials"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 11
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "dbus::ObjectPath"
	  param inout name "" explicit_type "std::string"
	  param inout name "" type class_ref 2955319 // ErrorPtr
	  param in name "" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} * ${p9}${v9}, ${t10} ${p10}${v10}${)}${const}${volatile}${throw}${abstract} {
    LOG(WARNING) << \"VerifyAndEncryptCredentials(): gmock can't handle methods with 11 arguments. You can override this method in a subclass if you need to.\";
    return false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43619511 "VerifyAndEncryptCredentialsAsync"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 11
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "dbus::ObjectPath"
	  param in name "" explicit_type "base::Callback<void(const std::string&)>"
	  param in name "" explicit_type "base::Callback<void(brillo::Error*)>"
	  param in name "" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, const ${t8} & ${p8}${v8}, const ${t9} & ${p9}${v9}, ${t10} ${p10}${v10}${)}${const}${volatile}${throw}${abstract} {
    LOG(WARNING) << \"VerifyAndEncryptCredentialsAsync(): gmock can't handle methods with 11 arguments. You can override this method in a subclass if you need to.\";
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43619639 "VerifyAndEncryptData"
	cpp_override cpp_inline public explicit_return_type "bool"
	nparams 11
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param inout name "" explicit_type "std::string"
	  param inout name "" type class_ref 2955319 // ErrorPtr
	  param in name "" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} * ${p9}${v9}, ${t10} ${p10}${v10}${)}${const}${volatile}${throw}${abstract} {
    LOG(WARNING) << \"VerifyAndEncryptData(): gmock can't handle methods with 11 arguments. You can override this method in a subclass if you need to.\";
    return false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43619767 "VerifyAndEncryptDataAsync"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 11
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "std::string"
	  param in name "" explicit_type "base::Callback<void(const std::string&)>"
	  param in name "" explicit_type "base::Callback<void(brillo::Error*)>"
	  param in name "" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} & ${p5}${v5}, const ${t6} & ${p6}${v6}, const ${t7} & ${p7}${v7}, const ${t8} & ${p8}${v8}, const ${t9} & ${p9}${v9}, ${t10} ${p10}${v10}${)}${const}${volatile}${throw}${abstract} {
    LOG(WARNING) << \"VerifyAndEncryptDataAsync(): gmock can't handle methods with 11 arguments. You can override this method in a subclass if you need to.\";
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3380279 "typedef198"
      visibility package stereotype "typedef" explicit_base_type "ManagerProxyInterface"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3380407 "ServiceProxyMock"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " namespace flimflam
 namespace chromium
 namespace org
 Mock object for ServiceProxyInterface."
      classrelation 6807735 // <generalisation>
	relation 6807735 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6807735 // <generalisation>
	  b parent class_ref 3380535 // typedef199
      end

      operation 43619895 "ServiceProxyMock"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 3380535 "typedef199"
      visibility package stereotype "typedef" explicit_base_type "ServiceProxyInterface"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 292791 "shill"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1623735 "dbus-proxy-mocks"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3380279 // typedef198
	class_ref 3362103 // ManagerProxyMock
	class_ref 3380535 // typedef199
	class_ref 3380407 // ServiceProxyMock
      end
    end
  end
end
