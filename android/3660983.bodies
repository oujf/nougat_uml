class QCamera3StreamMem
!!!44275639.cpp!!!	~QCamera3StreamMem()
    clear();
!!!44275767.cpp!!!	getCnt() : uint32_t
    Mutex::Autolock lock(mLock);

    return (mHeapMem.getCnt() + mGrallocMem.getCnt());
!!!44275895.cpp!!!	getRegFlags(inout regFlags : uint8_t) : int
    // Assume that all buffers allocated can be queued.
    for (uint32_t i = 0; i < mHeapMem.getCnt(); i ++)
        regFlags[i] = (mQueueHeapBuffers ? 1 : 0);
    return NO_ERROR;
!!!44276023.cpp!!!	getFd(in index : uint32_t) : int
    Mutex::Autolock lock(mLock);

    if (index < mMaxHeapBuffers)
        return mHeapMem.getFd(index);
    else
        return mGrallocMem.getFd(index);
!!!44276151.cpp!!!	getSize(in index : uint32_t) : ssize_t
    Mutex::Autolock lock(mLock);

    if (index < mMaxHeapBuffers)
        return mHeapMem.getSize(index);
    else
        return mGrallocMem.getSize(index);
!!!44276279.cpp!!!	invalidateCache(in index : uint32_t) : int
    Mutex::Autolock lock(mLock);

    if (index < mMaxHeapBuffers)
        return mHeapMem.invalidateCache(index);
    else
        return mGrallocMem.invalidateCache(index);
!!!44276407.cpp!!!	cleanInvalidateCache(in index : uint32_t) : int
    Mutex::Autolock lock(mLock);

    if (index < mMaxHeapBuffers)
        return mHeapMem.cleanInvalidateCache(index);
    else
        return mGrallocMem.cleanInvalidateCache(index);
!!!44276535.cpp!!!	getBufDef(in offset : cam_frame_len_offset_t, inout bufDef : mm_camera_buf_def_t, in index : uint32_t) : int32_t
    int32_t ret = NO_ERROR;

    if (index < mMaxHeapBuffers)
        ret = mHeapMem.getBufDef(offset, bufDef, index);
    else
        ret = mGrallocMem.getBufDef(offset, bufDef, index);

    bufDef.mem_info = (void *)this;

    return ret;
!!!44276663.cpp!!!	getPtr(in index : uint32_t) : void
    Mutex::Autolock lock(mLock);

    if (index < mMaxHeapBuffers)
        return mHeapMem.getPtr(index);
    else
        return mGrallocMem.getPtr(index);
!!!44276791.cpp!!!	valid(in index : uint32_t) : bool
    Mutex::Autolock lock(mLock);

    if (index < mMaxHeapBuffers)
        return (mHeapMem.getSize(index) > 0);
    else
        return (mGrallocMem.getSize(index) > 0);
!!!44276919.cpp!!!	registerBuffer(inout buffer : buffer_handle_t, in type : cam_stream_type_t) : int
    Mutex::Autolock lock(mLock);
    return mGrallocMem.registerBuffer(buffer, type);
!!!44277175.cpp!!!	getMatchBufIndex(inout object : void) : int
    Mutex::Autolock lock(mLock);
    return mGrallocMem.getMatchBufIndex(object);
!!!44277303.cpp!!!	getBufferHandle(in index : uint32_t) : void
    Mutex::Autolock lock(mLock);
    return mGrallocMem.getBufferHandle(index);
!!!44277431.cpp!!!	unregisterBuffers() : void
    Mutex::Autolock lock(mLock);
    mGrallocMem.unregisterBuffers();
!!!44277559.cpp!!!	allocateAll(in size : size_t) : int
    Mutex::Autolock lock(mLock);
    return mHeapMem.allocate(size);
!!!44277687.cpp!!!	allocateOne(in size : size_t) : int
    Mutex::Autolock lock(mLock);
    return mHeapMem.allocateOne(size);
!!!44277815.cpp!!!	deallocate() : void
    Mutex::Autolock lock(mLock);
    mHeapMem.deallocate();
!!!44278071.cpp!!!	markFrameNumber(in index : uint32_t, in frameNumber : uint32_t) : int32_t
    Mutex::Autolock lock(mLock);
    if (index < mMaxHeapBuffers)
        return mHeapMem.markFrameNumber(index, frameNumber);
    else
        return mGrallocMem.markFrameNumber(index, frameNumber);
!!!44278199.cpp!!!	getFrameNumber(in index : uint32_t) : int32_t
    Mutex::Autolock lock(mLock);
    if (index < mMaxHeapBuffers)
        return mHeapMem.getFrameNumber(index);
    else
        return mGrallocMem.getFrameNumber(index);
!!!44278327.cpp!!!	getGrallocBufferIndex(in frameNumber : uint32_t) : int32_t
    Mutex::Autolock lock(mLock);
    int32_t index = mGrallocMem.getBufferIndex(frameNumber);
    return index;
!!!44278455.cpp!!!	getHeapBufferIndex(in frameNumber : uint32_t) : int32_t
    Mutex::Autolock lock(mLock);
    int32_t index = mHeapMem.getBufferIndex(frameNumber);
    return index;
