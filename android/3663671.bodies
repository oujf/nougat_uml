class QCamera3SupportChannel
!!!44245175.cpp!!!	QCamera3SupportChannel(in cam_handle : uint32_t, in channel_handle : uint32_t, inout cam_ops : mm_camera_ops_t, inout paddingInfo : cam_padding_info_t, in postprocess_mask : uint32_t, in streamType : cam_stream_type_t, inout dim : cam_dimension_t, in streamFormat : cam_format_t, inout userData : void, in numBuffers : uint32_t = MIN_STREAMING_BUFFER_NUM)
    memcpy(&mDim, dim, sizeof(cam_dimension_t));
    mStreamType = streamType;
    mStreamFormat = streamFormat;
!!!44245303.cpp!!!	~QCamera3SupportChannel()
    if (m_bIsActive)
        stop();

    if (mMemory) {
        mMemory->deallocate();
        delete mMemory;
        mMemory = NULL;
    }
!!!44245431.cpp!!!	initialize(in isType : cam_is_type_t) : int32_t
    int32_t rc;

    if (mMemory || m_numStreams > 0) {
        ALOGE("%s: metadata channel already initialized", __func__);
        return -EINVAL;
    }

    rc = init(NULL, NULL);
    if (rc < 0) {
        ALOGE("%s: init failed", __func__);
        return rc;
    }
    mIsType = isType;
    // Hardcode to VGA size for now
    rc = QCamera3Channel::addStream(CAM_STREAM_TYPE_CALLBACK,
            CAM_FORMAT_YUV_420_NV21, kDim, ROTATE_0, MIN_STREAMING_BUFFER_NUM,
            mPostProcMask, mIsType);
    if (rc < 0) {
        ALOGE("%s: addStream failed", __func__);
    }
    return rc;
!!!44245559.cpp!!!	request(inout buffer : buffer_handle_t, in frameNumber : uint32_t) : int32_t
    return NO_ERROR;
!!!44245687.cpp!!!	streamCbRoutine(inout super_frame : mm_camera_super_buf_t, inout stream : QCamera3Stream) : void
    if (super_frame == NULL || super_frame->num_bufs != 1) {
        ALOGE("%s: super_frame is not valid", __func__);
        return;
    }
    bufDone(super_frame);
    free(super_frame);
!!!44245815.cpp!!!	getStreamBufs(in len : uint32_t) : QCamera3StreamMem
    int rc;

    mMemory = new QCamera3HeapMemory();
    if (!mMemory) {
        ALOGE("%s: unable to create heap memory", __func__);
        return NULL;
    }
    rc = mMemory->allocate(MIN_STREAMING_BUFFER_NUM, len, true);
    if (rc < 0) {
        ALOGE("%s: unable to allocate heap memory", __func__);
        delete mMemory;
        mMemory = NULL;
        return NULL;
    }
    return mMemory;
!!!44245943.cpp!!!	putStreamBufs() : void
    mMemory->deallocate();
    delete mMemory;
    mMemory = NULL;
