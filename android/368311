format 213
"test" // android::system::bt::hci::test
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/bt/hci/test/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/bt/hci/test/"
  classview 332599 "test"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3407287 "HciHalH4Test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6838839 // <generalisation>
	relation 6838839 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6838839 // <generalisation>
	  b parent class_ref 2839351 // AllocationTestHarness
      end

      operation 43743415 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      AllocationTestHarness::SetUp();
      hal = hci_hal_h4_get_test_interface(&vendor);
      vendor.send_command = vendor_send_command;
      callbacks.data_ready = data_ready_callback;

      socketpair(AF_LOCAL, SOCK_STREAM, 0, sockfd);
      dummy_serial_fd = sockfd[0];
      done = semaphore_new(0);
      thread = thread_new(\"hal_test\");

      reset_for(init);
      EXPECT_TRUE(hal->init(&callbacks, thread));

      reset_for(open);
      EXPECT_TRUE(hal->open());
      EXPECT_CALL_COUNT(vendor_send_command, 1);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43743543 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      reset_for(close_fn);
      hal->close();
      EXPECT_CALL_COUNT(vendor_send_command, 1);

      semaphore_free(done);
      thread_free(thread);
      AllocationTestHarness::TearDown();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12453303 "sockfd"
	protected explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6838967 // vendor (<directional composition>)
	relation 6838967 *-->
	  a role_name "vendor" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6838967 // vendor (<directional composition>)
	  b parent class_ref 2830263 // vendor_t
      end

      classrelation 6839095 // thread (<unidirectional association>)
	relation 6839095 --->
	  a role_name "thread" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6839095 // thread (<unidirectional association>)
	  b parent class_ref 2817719 // thread_t
      end

      classrelation 6839223 // callbacks (<directional composition>)
	relation 6839223 *-->
	  a role_name "callbacks" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6839223 // callbacks (<directional composition>)
	  b parent class_ref 2829623 // hci_hal_callbacks_t
      end
    end

    class 3407415 "HciHalMctTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6839351 // <generalisation>
	relation 6839351 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6839351 // <generalisation>
	  b parent class_ref 2839351 // AllocationTestHarness
      end

      operation 43743671 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      AllocationTestHarness::SetUp();
      hal = hci_hal_mct_get_test_interface(&vendor);
      vendor.send_command = vendor_send_command;
      callbacks.data_ready = data_ready_callback;

      socketpair(AF_LOCAL, SOCK_STREAM, 0, command_sockfd);
      socketpair(AF_LOCAL, SOCK_STREAM, 0, event_sockfd);
      socketpair(AF_LOCAL, SOCK_STREAM, 0, acl_in_sockfd);
      socketpair(AF_LOCAL, SOCK_STREAM, 0, acl_out_sockfd);
      command_out_fd = command_sockfd[0];
      acl_out_fd = acl_out_sockfd[0];
      acl_in_fd = acl_in_sockfd[0];
      event_in_fd = event_sockfd[0];

      done = semaphore_new(0);
      thread = thread_new(\"hal_test\");

      reset_for(init);
      EXPECT_TRUE(hal->init(&callbacks, thread));

      reset_for(open);
      EXPECT_TRUE(hal->open());
      EXPECT_CALL_COUNT(vendor_send_command, 1);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43743799 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      reset_for(close_fn);
      hal->close();
      EXPECT_CALL_COUNT(vendor_send_command, 1);

      semaphore_free(done);
      thread_free(thread);
      AllocationTestHarness::TearDown();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12453431 "command_sockfd"
	protected explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12453559 "event_sockfd"
	protected explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12453687 "acl_in_sockfd"
	protected explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12453815 "acl_out_sockfd"
	protected explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6839479 // vendor (<directional composition>)
	relation 6839479 *-->
	  a role_name "vendor" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6839479 // vendor (<directional composition>)
	  b parent class_ref 2830263 // vendor_t
      end

      classrelation 6839607 // thread (<unidirectional association>)
	relation 6839607 --->
	  a role_name "thread" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6839607 // thread (<unidirectional association>)
	  b parent class_ref 2817719 // thread_t
      end

      classrelation 6839735 // callbacks (<directional composition>)
	relation 6839735 *-->
	  a role_name "callbacks" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6839735 // callbacks (<directional composition>)
	  b parent class_ref 2829623 // hci_hal_callbacks_t
      end
    end

    class 3407543 "HciLayerTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6839863 // <generalisation>
	relation 6839863 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6839863 // <generalisation>
	  b parent class_ref 2839223 // AlarmTestHarness
      end

      operation 43743927 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      AlarmTestHarness::SetUp();
      module_management_start();

      hci = hci_layer_get_test_interface(
        &buffer_allocator,
        &hal,
        &btsnoop,
        &hci_inject,
        packet_fragmenter_get_test_interface(&controller, &allocator_malloc),
        &vendor,
        &low_power_manager
      );

      packet_index = 0;
      data_size_sum = 0;

      vendor.open = vendor_open;
      vendor.close = vendor_close;
      vendor.set_callback = vendor_set_callback;
      vendor.send_command = vendor_send_command;
      vendor.send_async_command = vendor_send_async_command;
      hal.init = hal_init;
      hal.open = hal_open;
      hal.close = hal_close;
      hal.read_data = hal_read_data;
      hal.packet_finished = hal_packet_finished;
      hal.transmit_data = hal_transmit_data;
      btsnoop.capture = btsnoop_capture;
      hci_inject.open = hci_inject_open;
      hci_inject.close = hci_inject_close;
      low_power_manager.init = low_power_init;
      low_power_manager.cleanup = low_power_cleanup;
      low_power_manager.wake_assert = low_power_wake_assert;
      low_power_manager.transmit_done = low_power_transmit_done;
      controller.get_acl_data_size_classic = controller_get_acl_data_size_classic;
      controller.get_acl_data_size_ble = controller_get_acl_data_size_ble;
      buffer_allocator.alloc = buffer_allocator_alloc;
      buffer_allocator.free = buffer_allocator_free;

      done = semaphore_new(0);

      reset_for(start_up_async);
      EXPECT_TRUE(module_start_up(&hci_module));

      EXPECT_CALL_COUNT(vendor_open, 1);
      EXPECT_CALL_COUNT(hal_init, 1);
      EXPECT_CALL_COUNT(low_power_init, 1);
      EXPECT_CALL_COUNT(vendor_set_callback, 3);
      EXPECT_CALL_COUNT(hal_open, 1);
      EXPECT_CALL_COUNT(vendor_send_async_command, 1);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43744055 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      reset_for(shut_down);
      module_shut_down(&hci_module);

      EXPECT_CALL_COUNT(low_power_cleanup, 1);
      EXPECT_CALL_COUNT(hal_close, 1);
      EXPECT_CALL_COUNT(vendor_send_command, 1);
      EXPECT_CALL_COUNT(vendor_close, 1);

      semaphore_free(done);
      hci_layer_cleanup_interface();
      module_management_stop();
      AlarmTestHarness::TearDown();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6839991 // hal (<directional composition>)
	relation 6839991 *-->
	  a role_name "hal" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6839991 // hal (<directional composition>)
	  b parent class_ref 2829751 // hci_hal_t
      end

      classrelation 6840119 // btsnoop (<directional composition>)
	relation 6840119 *-->
	  a role_name "btsnoop" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6840119 // btsnoop (<directional composition>)
	  b parent class_ref 2828855 // btsnoop_t
      end

      classrelation 6840247 // controller (<directional composition>)
	relation 6840247 *-->
	  a role_name "controller" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6840247 // controller (<directional composition>)
	  b parent class_ref 2818743 // controller_t
      end

      classrelation 6840375 // hci_inject (<directional composition>)
	relation 6840375 *-->
	  a role_name "hci_inject" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6840375 // hci_inject (<directional composition>)
	  b parent class_ref 2830007 // hci_inject_t
      end

      classrelation 6840503 // vendor (<directional composition>)
	relation 6840503 *-->
	  a role_name "vendor" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6840503 // vendor (<directional composition>)
	  b parent class_ref 2830263 // vendor_t
      end

      classrelation 6840631 // low_power_manager (<directional composition>)
	relation 6840631 *-->
	  a role_name "low_power_manager" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6840631 // low_power_manager (<directional composition>)
	  b parent class_ref 2830391 // low_power_manager_t
      end

      classrelation 6840759 // buffer_allocator (<directional composition>)
	relation 6840759 *-->
	  a role_name "buffer_allocator" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6840759 // buffer_allocator (<directional composition>)
	  b parent class_ref 2834999 // allocator_t
      end
    end

    class 3407671 "LowPowerManagerTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6840887 // <generalisation>
	relation 6840887 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6840887 // <generalisation>
	  b parent class_ref 2839223 // AlarmTestHarness
      end

      operation 43744183 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      AlarmTestHarness::SetUp();
      low_power_state_callback = NULL;
      vendor.send_command = vendor_send_command;
      vendor.send_async_command = vendor_send_async_command;
      vendor.set_callback = vendor_set_callback;
      manager = low_power_manager_get_test_interface(&vendor);
      thread = thread_new(\"test_thread\");
      done = semaphore_new(0);

      reset_for(init);
      manager->init(thread);

      EXPECT_CALL_COUNT(vendor_set_callback, 1);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43744311 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      reset_for(cleanup);
      manager->cleanup();

      semaphore_free(done);
      thread_free(thread);
      AlarmTestHarness::TearDown();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6841015 // vendor (<directional composition>)
	relation 6841015 *-->
	  a role_name "vendor" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6841015 // vendor (<directional composition>)
	  b parent class_ref 2830263 // vendor_t
      end
    end

    class 3407799 "PacketFragmenterTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6841143 // <generalisation>
	relation 6841143 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6841143 // <generalisation>
	  b parent class_ref 2839351 // AllocationTestHarness
      end

      operation 43744439 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      AllocationTestHarness::SetUp();
      fragmenter = packet_fragmenter_get_test_interface(
        &controller,
        &allocator_malloc);

      packet_index = 0;
      data_size_sum = 0;

      callbacks.fragmented = fragmented_callback;
      callbacks.reassembled = reassembled_callback;
      callbacks.transmit_finished = transmit_finished_callback;
      controller.get_acl_data_size_classic = get_acl_data_size_classic;
      controller.get_acl_data_size_ble = get_acl_data_size_ble;

      reset_for(init);
      fragmenter->init(&callbacks);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43744567 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      fragmenter->cleanup();
      AllocationTestHarness::TearDown();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6841271 // controller (<directional composition>)
	relation 6841271 *-->
	  a role_name "controller" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6841271 // controller (<directional composition>)
	  b parent class_ref 2818743 // controller_t
      end

      classrelation 6841399 // callbacks (<directional composition>)
	relation 6841399 *-->
	  a role_name "callbacks" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6841399 // callbacks (<directional composition>)
	  b parent class_ref 2831799 // packet_fragmenter_callbacks_t
      end
    end
  end

  deploymentview 294455 "test"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1639479 "HciHalH4Test"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3407287 // HciHalH4Test
      end
    end

    artifact 1639607 "HciHalMctTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3407415 // HciHalMctTest
      end
    end

    artifact 1639735 "HciLayerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3407543 // HciLayerTest
      end
    end

    artifact 1639863 "LowPowerManagerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3407671 // LowPowerManagerTest
      end
    end

    artifact 1639991 "PacketFragmenterTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3407799 // PacketFragmenterTest
      end
    end
  end
end
