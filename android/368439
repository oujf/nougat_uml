format 213
"client" // android::system::bt::service::client
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/bt/service/client/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/bt/service/client/"
  classview 332855 "client"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3411255 "CLIBluetoothCallback"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6846775 // <generalisation>
	relation 6846775 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6846775 // <generalisation>
	  b parent class_ref 2848439 // BnBluetoothCallback
      end

      operation 43750455 "CLIBluetoothCallback"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43750583 "~CLIBluetoothCallback"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43750711 "OnBluetoothStateChange"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "prev_state" type class_ref 2840119 // AdapterState
	  param in name "new_state" type class_ref 2840119 // AdapterState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {

    BeginAsyncOut();
    cout << COLOR_BOLDWHITE \"Adapter state changed: \" COLOR_OFF
         << COLOR_MAGENTA << AdapterStateToString(prev_state) << COLOR_OFF
         << COLOR_BOLDWHITE \" -> \" COLOR_OFF
         << COLOR_BOLDYELLOW << AdapterStateToString(new_state) << COLOR_OFF;
    EndAsyncOut();
   };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " IBluetoothCallback overrides:"
      end
    end

    class 3411383 "CLIBluetoothLowEnergyCallback"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6846903 // <generalisation>
	relation 6846903 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6846903 // <generalisation>
	  b parent class_ref 2853047 // BnBluetoothLowEnergyCallback
      end

      operation 43750839 "CLIBluetoothLowEnergyCallback"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43750967 "~CLIBluetoothLowEnergyCallback"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43751095 "OnClientRegistered"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "int"
	  param in name "client_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    BeginAsyncOut();
    if (status != bluetooth::BLE_STATUS_SUCCESS) {
      PrintError(\"Failed to register BLE client\");
    } else {
      ble_client_id = client_id;
      cout << COLOR_BOLDWHITE \"Registered BLE client with ID: \" COLOR_OFF
           << COLOR_GREEN << client_id << COLOR_OFF;
    }
    EndAsyncOut();

    ble_registering = false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " IBluetoothLowEnergyCallback overrides:"
      end

      operation 43751223 "OnConnectionState"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "status" explicit_type "int"
	  param in name "client_id" explicit_type "int"
	  param in name "address" explicit_type "char"
	  param in name "connected" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
    BeginAsyncOut();
    cout << COLOR_BOLDWHITE \"Connection state: \"
         << COLOR_BOLDYELLOW \"[\" << address
         << \" connected: \" << (connected ? \"true\" : \"false\") << \" ] \"
         << COLOR_BOLDWHITE \"- status: \" << status
         << COLOR_BOLDWHITE \" - client_id: \" << client_id << COLOR_OFF;
    EndAsyncOut();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43751351 "OnMtuChanged"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "status" explicit_type "int"
	  param in name "address" explicit_type "char"
	  param in name "mtu" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
    BeginAsyncOut();
    cout << COLOR_BOLDWHITE \"MTU changed: \"
         << COLOR_BOLDYELLOW \"[\" << address << \" ] \"
         << COLOR_BOLDWHITE \" - status: \" << status
         << COLOR_BOLDWHITE \" - mtu: \" << mtu << COLOR_OFF;
    EndAsyncOut();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43751479 "OnScanResult"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "scan_result" type class_ref 2844471 // ScanResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    BeginAsyncOut();
    cout << COLOR_BOLDWHITE \"Scan result: \"
         << COLOR_BOLDYELLOW \"[\" << scan_result.device_address() << \"] \"
         << COLOR_BOLDWHITE \"- RSSI: \" << scan_result.rssi() << COLOR_OFF;

    if (dump_scan_record) {
      cout << \" - Record: \"
           << base::HexEncode(scan_result.scan_record().data(),
                              scan_result.scan_record().size());
    }
    EndAsyncOut();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43751607 "OnMultiAdvertiseCallback"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "status" explicit_type "int"
	  param in name "is_start" explicit_type "bool"
	  param in name "" type class_ref 2844983 // AdvertiseSettings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
    BeginAsyncOut();
    std::string op = is_start ? \"start\" : \"stop\";

    PrintOpStatus(\"Advertising \" + op, status == bluetooth::BLE_STATUS_SUCCESS);
    EndAsyncOut();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3411511 "CLIGattClientCallback"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6847031 // <generalisation>
	relation 6847031 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6847031 // <generalisation>
	  b parent class_ref 2849975 // BnBluetoothGattClientCallback
      end

      operation 43751735 "CLIGattClientCallback"
	cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43751863 "~CLIGattClientCallback"
	cpp_override cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43751991 "OnClientRegistered"
	cpp_override cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "int"
	  param in name "client_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    BeginAsyncOut();
    if (status != bluetooth::BLE_STATUS_SUCCESS) {
      PrintError(\"Failed to register GATT client\");
    } else {
      gatt_client_id = client_id;
      cout << COLOR_BOLDWHITE \"Registered GATT client with ID: \" COLOR_OFF
           << COLOR_GREEN << client_id << COLOR_OFF;
    }
    EndAsyncOut();

    gatt_registering = false;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " IBluetoothGattClientCallback overrides:"
      end
    end
  end

  deploymentview 294711 "client"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1643703 "CLIBluetoothCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3411255 // CLIBluetoothCallback
      end
    end

    artifact 1643831 "CLIBluetoothLowEnergyCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3411383 // CLIBluetoothLowEnergyCallback
      end
    end

    artifact 1643959 "CLIGattClientCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3411511 // CLIGattClientCallback
      end
    end

    artifact 1644087 "main"
      stereotype "source"
      cpp_src "int main(int argc, char* argv[]) {
  base::AtExitManager exit_manager;
  base::CommandLine::Init(argc, argv);
  logging::LoggingSettings log_settings;

  if (!logging::InitLogging(log_settings)) {
    LOG(ERROR) << \"Failed to set up logging\";
    return EXIT_FAILURE;
  }

  sp<IBluetooth> bt_iface = IBluetooth::getClientInterface();
  if (!bt_iface.get()) {
    LOG(ERROR) << \"Failed to obtain handle on IBluetooth\";
    return EXIT_FAILURE;
  }

  sp<BluetoothDeathRecipient> dr(new BluetoothDeathRecipient());
  if (android::IInterface::asBinder(bt_iface.get())->linkToDeath(dr) !=
      android::NO_ERROR) {
    LOG(ERROR) << \"Failed to register DeathRecipient for IBluetooth\";
    return EXIT_FAILURE;
  }

  // Initialize the Binder process thread pool. We have to set this up,
  // otherwise, incoming callbacks from IBluetoothCallback will block the main
  // thread (in other words, we have to do this as we are a \"Binder server\").
  android::ProcessState::self()->startThreadPool();

  // Register Adapter state-change callback
  sp<CLIBluetoothCallback> callback = new CLIBluetoothCallback();
  bt_iface->RegisterCallback(callback);

  cout << COLOR_BOLDWHITE << \"Fluoride Command-Line Interface\\n\" << COLOR_OFF
       << endl
       << \"Type \\\"help\\\" to see possible commands.\\n\"
       << endl;

  string command;

  // Add commands from the command line, if they exist.
  auto command_line = base::CommandLine::ForCurrentProcess();
  if (command_line->HasSwitch(kExecuteLong)) {
    command += command_line->GetSwitchValueASCII(kExecuteLong);
  }

  if (command_line->HasSwitch(kExecuteShort)) {
    if (!command.empty())
      command += \" ; \";
    command += command_line->GetSwitchValueASCII(kExecuteShort);
  }

  while (true) {
    vector<string> commands = base::SplitString(command, \";\",
                                                base::TRIM_WHITESPACE,
                                                base::SPLIT_WANT_ALL);
    for (string command : commands) {
      if (!ExecuteCommand(bt_iface, command))
        break;
    }

    commands.clear();

    PrintPrompt();

    showing_prompt = true;
    auto& istream = getline(cin, command);
    showing_prompt = false;

    if (istream.eof() || should_exit.load()) {
      cout << \"\\nExiting\" << endl;
      return EXIT_SUCCESS;
    }

    if (!istream.good()) {
      LOG(ERROR) << \"An error occured while reading input\";
      return EXIT_FAILURE;
    }

  }

  return EXIT_SUCCESS;
}
"
      associated_classes
      end
    end
  end
end
