format 213
"tests" // android::system::core::adf::libadf::tests
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/adf/libadf/tests/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/adf/libadf/tests/"
  classview 333495 "tests"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3419191 "AdfTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6857399 // <generalisation>
	relation 6857399 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6857399 // <generalisation>
	  b parent class_ref 3419319 // typedef222
      end

      operation 43769143 "AdfTest"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} : intf_id(0), intf(-1), eng_id(0), eng(-1) { };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43769271 "SetUp"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        int err = adf_device_open(dev_id, O_RDWR, &dev);
        ASSERT_GE(err, 0) << \"opening ADF device \" << dev_id <<
                \" failed: \" << strerror(-err);

        err = adf_find_simple_post_configuration(&dev, fmt8888, n_fmt8888,
                &intf_id, &eng_id);
        ASSERT_GE(err, 0) << \"finding ADF configuration failed: \" <<
                strerror(-err);

        intf = adf_interface_open(&dev, intf_id, O_RDWR);
        ASSERT_GE(intf, 0) << \"opening ADF interface \" << dev_id << \".\" <<
                intf_id << \" failed: \" << strerror(-intf);

        eng = adf_overlay_engine_open(&dev, eng_id, O_RDWR);
        ASSERT_GE(eng, 0) << \"opening ADF overlay engine \" << dev_id << \".\" <<
                eng_id << \" failed: \" << strerror(-eng);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43769399 "TearDown"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (eng >= 0)
            close(eng);
        if (intf >= 0)
            close(intf);
        adf_device_close(&dev);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43769527 "get8888Format"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "fmt" type class_ref 2810935 // uint32_t
	  param in name "fmt_str" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}[ADF_FORMAT_STR_SIZE]${v1}${)}${const}${volatile}${throw}${abstract} {
        adf_overlay_engine_data data;
        int err = adf_get_overlay_engine_data(eng, &data);
        ASSERT_GE(err, 0) << \"getting ADF overlay engine data failed: \" <<
                strerror(-err);

        for (size_t i = 0; i < data.n_supported_formats; i++) {
            for (size_t j = 0; j < n_fmt8888; j++) {
                if (data.supported_formats[i] == fmt8888[j]) {
                    fmt = data.supported_formats[i];
                    adf_format_str(fmt, fmt_str);
                    adf_free_overlay_engine_data(&data);
                    return;
                }
            }
        }

        adf_free_overlay_engine_data(&data);
        FAIL(); /* this should never happen */
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43769655 "drawCheckerboard"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "buf" explicit_type "void"
	  param in name "w" type class_ref 2810935 // uint32_t
	  param in name "h" type class_ref 2810935 // uint32_t
	  param in name "pitch" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        uint8_t *buf8 = reinterpret_cast<uint8_t *>(buf);
        for (uint32_t y = 0; y < h / 2; y++) {
            uint32_t *scanline = reinterpret_cast<uint32_t *>(buf8 + y * pitch);
            for (uint32_t x = 0; x < w / 2; x++)
                scanline[x] = 0xFF0000FF;
            for (uint32_t x = w / 2; x < w; x++)
                scanline[x] = 0xFF00FFFF;
        }
        for (uint32_t y = h / 2; y < h; y++) {
            uint32_t *scanline = reinterpret_cast<uint32_t *>(buf8 + y * pitch);
            for (uint32_t x = 0; x < w / 2; x++)
                scanline[x] = 0xFFFF00FF;
            for (uint32_t x = w / 2; x < w; x++)
                scanline[x] = 0xFFFFFFFF;
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43769783 "getInterfaceData"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "adf_interface_data"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
         int err = adf_get_interface_data(intf, &data);
         ASSERT_GE(err, 0) << \"getting ADF interface data failed: \" <<
                 strerror(-err);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " various helpers to call ADF and die on failure "
      end

      operation 43769911 "getCurrentMode"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "w" type class_ref 2810935 // uint32_t
	  param inout name "h" type class_ref 2810935 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        adf_interface_data data;
        ASSERT_NO_FATAL_FAILURE(getInterfaceData(data));
        w = data.current_mode.hdisplay;
        h = data.current_mode.vdisplay;
        adf_free_interface_data(&data);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43770039 "blank"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        int err = adf_interface_blank(intf, mode);
        ASSERT_FALSE(err < 0 && err != -EBUSY) <<
                \"unblanking interface failed: \" << strerror(-err);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43770167 "attach"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        int err = adf_device_attach(&dev, eng_id, intf_id);
        ASSERT_FALSE(err < 0 && err != -EALREADY) <<
                \"attaching overlay engine \" << eng_id << \" to interface \" <<
                intf_id << \" failed: \" << strerror(-err);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43770295 "detach"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        int err = adf_device_detach(&dev, eng_id, intf_id);
        ASSERT_FALSE(err < 0 && err != -EINVAL) <<
                \"detaching overlay engine \" << eng_id << \" from interface \" <<
                intf_id << \" failed: \" << strerror(-err);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43770423 "readVsyncTimestamp"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "timestamp" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        adf_event *event;
        int err = adf_read_event(intf, &event);
        ASSERT_GE(err, 0) << \"reading ADF event failed: \" << strerror(-err);

        ASSERT_EQ(ADF_EVENT_VSYNC, event->type);
        ASSERT_EQ(sizeof(adf_vsync_event), event->length);

        adf_vsync_event *vsync_event =
                reinterpret_cast<adf_vsync_event *>(event);
        timestamp = vsync_event->timestamp;
        free(event);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6857527 // dev (<directional composition>)
	relation 6857527 *-->
	  a role_name "dev" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6857527 // dev (<directional composition>)
	  b parent class_ref 3082423 // adf_device
      end

      classrelation 6857655 // intf_id (<directional composition>)
	relation 6857655 *-->
	  a role_name "intf_id" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6857655 // intf_id (<directional composition>)
	  b parent class_ref 3082295 // adf_id_t
      end

      attribute 12476983 "intf"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6857783 // eng_id (<directional composition>)
	relation 6857783 *-->
	  a role_name "eng_id" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6857783 // eng_id (<directional composition>)
	  b parent class_ref 3082295 // adf_id_t
      end

      attribute 12477111 "eng"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6857911 // dev_id (<directional composition>)
	relation 6857911 *-->
	  a role_name "dev_id" init_value "=  0" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6857911 // dev_id (<directional composition>)
	  b parent class_ref 3082295 // adf_id_t
      end

      classrelation 6858039 // fmt8888 (<directional composition>)
	relation 6858039 *-->
	  a role_name "fmt8888" multiplicity "[]" init_value "= {
   DRM_FORMAT_XRGB8888,
   DRM_FORMAT_XBGR8888,
   DRM_FORMAT_RGBX8888,
   DRM_FORMAT_BGRX8888,
   DRM_FORMAT_ARGB8888,
   DRM_FORMAT_ABGR8888,
   DRM_FORMAT_RGBA8888,
   DRM_FORMAT_BGRA8888
}" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6858039 // fmt8888 (<directional composition>)
	  b parent class_ref 3082167 // __u32
      end

      attribute 12477239 "n_fmt8888"
	class_attribute const_attribute private explicit_type "size_t"
	init_value "= sizeof(fmt8888) / sizeof(fmt8888[0])"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3419319 "typedef222"
      visibility package stereotype "typedef" explicit_base_type "testing::Test"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 295607 "tests"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1652407 "typedef222"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3419319 // typedef222
      end
    end

    artifact 1652535 "AdfTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3419191 // AdfTest
      end
    end
  end
end
