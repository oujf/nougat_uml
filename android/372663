format 213
"tzdatacheck" // android::system::core::tzdatacheck
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/tzdatacheck/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/core/tzdatacheck/"
  deploymentview 299063 "tzdatacheck"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1676471 "main"
      stereotype "source"
      cpp_src "//
//After a platform update it is likely that timezone data found on the system partition will be
//newer than the version found in the data partition. This tool detects this case and removes the
//version in /data along with any update metadata.
//
//Note: This code is related to code in com.android.server.updates.TzDataInstallReceiver. The
//paths for the metadata and current timezone data must match.
//
//Typically on device the two args will be:
//  /system/usr/share/zoneinfo /data/misc/zoneinfo
//
//See usage() for usage notes.
//

int main(int argc, char* argv[]) {
    if (argc != 3) {
        usage();
    }

    const char* systemZoneInfoDir = argv[1];
    const char* dataZoneInfoDir = argv[2];

    std::string dataCurrentDirName(dataZoneInfoDir);
    dataCurrentDirName += \"/current\";
    std::string dataTzDataFileName(dataCurrentDirName);
    dataTzDataFileName += TZDATA_FILENAME;

    std::vector<char> dataTzDataHeader;
    dataTzDataHeader.reserve(TZ_HEADER_LENGTH);

    bool dataFileExists = readHeader(dataTzDataFileName, dataTzDataHeader.data(), TZ_HEADER_LENGTH);
    if (!dataFileExists) {
        LOG(INFO) << \"tzdata file \" << dataTzDataFileName << \" does not exist. No action required.\";
        return 0;
    }
    checkValidHeader(dataTzDataFileName, dataTzDataHeader.data());

    std::string systemTzDataFileName(systemZoneInfoDir);
    systemTzDataFileName += TZDATA_FILENAME;
    std::vector<char> systemTzDataHeader;
    systemTzDataHeader.reserve(TZ_HEADER_LENGTH);
    bool systemFileExists =
            readHeader(systemTzDataFileName, systemTzDataHeader.data(), TZ_HEADER_LENGTH);
    if (!systemFileExists) {
        LOG(FATAL) << systemTzDataFileName << \" does not exist or could not be opened\";
    }
    checkValidHeader(systemTzDataFileName, systemTzDataHeader.data());

    if (strncmp(&systemTzDataHeader[0], &dataTzDataHeader[0], TZ_HEADER_LENGTH) < 0) {
        LOG(INFO) << \"tzdata file \" << dataTzDataFileName << \" is the newer than \"
                << systemTzDataFileName << \". No action required.\";
    } else {
        // We have detected the case this tool is intended to prevent. Go fix it.
        LOG(INFO) << \"tzdata file \" << dataTzDataFileName << \" is the same as or older than \"
                << systemTzDataFileName << \"; fixing...\";

        // Delete the update metadata
        std::string dataUpdatesDirName(dataZoneInfoDir);
        dataUpdatesDirName += \"/updates\";
        LOG(INFO) << \"Removing: \" << dataUpdatesDirName;
        bool deleted = deleteDir(dataUpdatesDirName);
        if (!deleted) {
            LOG(WARNING) << \"Deletion of install metadata \" << dataUpdatesDirName
                    << \" was not successful\";
        }

        // Delete the TZ data
        LOG(INFO) << \"Removing: \" << dataCurrentDirName;
        deleted = deleteDir(dataCurrentDirName);
        if (!deleted) {
            LOG(WARNING) << \"Deletion of tzdata \" << dataCurrentDirName << \" was not successful\";
        }
    }

    return 0;
}
"
      associated_classes
      end
    end
  end
end
