format 213
"crypto-perf" // android::system::extras::crypto-perf
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/extras/crypto-perf/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/extras/crypto-perf/"
  classview 336823 "crypto-perf"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3441591 "command_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Contains information about benchmark options."
      attribute 12519351 "cpu_to_lock"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12519479 "locked_freq"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 299447 "crypto-perf"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1677239 "command_data_t"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3441591 // command_data_t
      end
    end

    artifact 1677367 "main"
      stereotype "source"
      cpp_src "int main(int argc, char **argv) {
    usage();
    command_data_t cmd_data;

    if(processOptions(argc, argv, &cmd_data) == -1) {
        usage();
        return -1;
    }
    unsigned long long count = 0;
    struct timeval begin_time, end_time, elapsed_time;
    cpu_set_t cpuset;
    CPU_ZERO(&cpuset);
    CPU_SET(cmd_data.cpu_to_lock, &cpuset);
    if (sched_setaffinity(0, sizeof(cpuset), &cpuset) != 0) {
	perror(\"sched_setaffinity failed\");
	return false;
    }
    gettimeofday(&begin_time, NULL);
    while (count < MAX_COUNT) {
      garbage_encrypt();
      count++;
    }
    gettimeofday(&end_time, NULL);
    timersub(&end_time, &begin_time, &elapsed_time);
    fprintf(stderr, \"encrypt: %llu us\\n\",
            elapsed_time.tv_sec * USEC_PER_SEC + elapsed_time.tv_usec);
    fprintf(stderr, \"encrypt instructions: %llu\\n\",
            MAX_COUNT * NUM_INSTS_GARBAGE);
    fprintf(stderr, \"encrypt instructions per second: %f\\n\",
            (float)(MAX_COUNT * NUM_INSTS_GARBAGE * USEC_PER_SEC) /
                (elapsed_time.tv_sec * USEC_PER_SEC + elapsed_time.tv_usec));
    if (cmd_data.locked_freq != 0) {
	fprintf(stderr, \"encrypt instructions per cycle: %f\\n\",
		(float)(MAX_COUNT * NUM_INSTS_GARBAGE * USEC_PER_SEC) /
		((elapsed_time.tv_sec * USEC_PER_SEC + elapsed_time.tv_usec) *
		 1000 * cmd_data.locked_freq));
    }
    printf(\"--------------------------------------------------------------------------------\\n\");

    count = 0;
    gettimeofday(&begin_time, NULL);
    while (count < MAX_COUNT) {
      garbage_decrypt();
      count++;
    }
    gettimeofday(&end_time, NULL);
    timersub(&end_time, &begin_time, &elapsed_time);
    fprintf(stderr, \"decrypt: %llu us\\n\",
            elapsed_time.tv_sec * USEC_PER_SEC + elapsed_time.tv_usec);
    fprintf(stderr, \"decrypt instructions: %llu\\n\",
            MAX_COUNT * NUM_INSTS_GARBAGE);
    fprintf(stderr, \"decrypt instructions per second: %f\\n\",
            (float)(MAX_COUNT * NUM_INSTS_GARBAGE * USEC_PER_SEC) /
                (elapsed_time.tv_sec * USEC_PER_SEC + elapsed_time.tv_usec));
    if (cmd_data.locked_freq != 0) {
	fprintf(stderr, \"decrypt instructions per cycle: %f\\n\",
		(float)(MAX_COUNT * NUM_INSTS_GARBAGE * USEC_PER_SEC) /
		((elapsed_time.tv_sec * USEC_PER_SEC + elapsed_time.tv_usec) *
		 1000 * cmd_data.locked_freq));
    }
    return 0;
}
"
      associated_classes
      end
    end
  end
end
