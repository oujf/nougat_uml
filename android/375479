format 213
"tcp_nuke_addr" // android::system::extras::tests::tcp_nuke_addr
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/extras/tests/tcp_nuke_addr/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/system/extras/tests/tcp_nuke_addr/"
  deploymentview 301623 "tcp_nuke_addr"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1690679 "main"
      stereotype "source"
      cpp_src "int main() {
    int listensock = bindRandomAddr();
    struct sockaddr_in sin;
    socklen_t len = sizeof(sin);
    if (getsockname(listensock, (sockaddr *) &sin, &len) == -1) PERROR_EXIT(\"getsockname\");

    printf(\"Using address %s:%d\\n\", inet_ntoa(sin.sin_addr), ntohs(sin.sin_port));

    android::RWLock lock;
    std::atomic<unsigned int> attempts;
    attempts.store(0);

    std::thread t0(killSockets, sin, KILL_INTERVAL_MS, &lock);
    std::thread *connectThreads[CONNECT_THREADS];
    for (size_t i = 0; i < CONNECT_THREADS; i++) {
        connectThreads[i] = new std::thread(connectLoop, sin, listensock, &lock, &attempts);
    }
    std::thread t1(progressThread, &attempts);
    t1.join();

    return 0;
}
"
      associated_classes
      end
    end
  end
end
