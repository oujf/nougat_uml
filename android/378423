format 213
"camera" // android::device::generic::goldfish::camera
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/generic/goldfish/camera/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/generic/goldfish/camera/"
  cpp_namespace "android"
  classview 339767 "camera"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3490487 "CallbackNotifier"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Manages callbacks set via set_callbacks, enable_msg_type, and disable_msg_type
camera HAL API.

Objects of this class are contained in EmulatedCamera objects, and handle
relevant camera API callbacks.
Locking considerations. Apparently, it's not allowed to call callbacks
registered in this class, while holding a lock: recursion is quite possible,
which will cause a deadlock.
"
      operation 43912375 "CallbackNotifier"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : mNotifyCB(NULL),
      mDataCB(NULL),
      mDataCBTimestamp(NULL),
      mGetMemoryCB(NULL),
      mCBOpaque(NULL),
      mLastFrameTimestamp(0),
      mFrameRefreshFreq(0),
      mMessageEnabler(0),
      mJpegQuality(90),
      mVideoRecEnabled(false),
      mTakingPicture(false)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs CallbackNotifier instance. "
      end

      operation 43912503 "~CallbackNotifier"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs CallbackNotifier instance. "
      end

      operation 43912631 "setCallbacks"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 5
	  param in name "notify_cb" explicit_type "camera_notify_callback"
	  param in name "data_cb" explicit_type "camera_data_callback"
	  param in name "data_cb_timestamp" explicit_type "camera_data_timestamp_callback"
	  param in name "get_memory" explicit_type "camera_request_memory"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API
*************************************************************************
 Actual handler for camera_device_ops_t::set_callbacks callback.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::set_callbacks callback.
"
      end

      operation 43912759 "enableMessage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "msg_type" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::enable_msg_type callback.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::enable_msg_type callback.
"
      end

      operation 43912887 "disableMessage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "msg_type" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::disable_msg_type callback.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::disable_msg_type callback.
"
      end

      operation 43913015 "storeMetaDataInBuffers"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::store_meta_data_in_buffers
callback. This method is called by the containing emulated camera object
when it is handing the camera_device_ops_t::store_meta_data_in_buffers
callback.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43913143 "enableVideoRecording"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "fps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables video recording.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::start_recording callback.
Param:
 fps - Video frame frequency. This parameter determins when a frame
     received via onNextFrameAvailable call will be pushed through the
     callback.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43913271 "disableVideoRecording"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disables video recording.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::stop_recording callback.
"
      end

      operation 43913399 "releaseRecordingFrame"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "opaque" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Releases video frame, sent to the framework.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::release_recording_frame callback.
"
      end

      operation 43913527 "isMessageEnabled"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "msg_type" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return mMessageEnabler & msg_type;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::msg_type_enabled callback.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::msg_type_enabled callback.
Note: this method doesn't grab a lock while checking message status, since
upon exit the status would be undefined anyway. So, grab a lock before
calling this method if you care about persisting a defined message status.
Return:
 0 if message is disabled, or non-zero value, if message is enabled.
"
      end

      operation 43913655 "isVideoRecordingEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mVideoRecEnabled;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks id video recording is enabled.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::recording_enabled callback.
Note: this method doesn't grab a lock while checking video recordin status,
since upon exit the status would be undefined anyway. So, grab a lock
before calling this method if you care about persisting of a defined video
recording status.
Return:
 true if video recording is enabled, or false if it is disabled.
"
      end

      operation 43913783 "cleanupCBNotifier"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Resets the callback notifier. "
      end

      operation 43913911 "onNextFrameAvailable"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "frame" explicit_type "void"
	  param in name "timestamp" type class_ref 3490615 // nsecs_t
	  param inout name "camera_dev" type class_ref 3490743 // EmulatedCameraDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Next frame is available in the camera device.
This is a notification callback that is invoked by the camera device when
a new frame is available.
Note that most likely this method is called in context of a worker thread
that camera device has created for frame capturing.
Param:
 frame - Captured frame, or NULL if camera device didn't pull the frame
     yet. If NULL is passed in this parameter use GetCurrentFrame method
     of the camera device class to obtain the next frame. Also note that
     the size of the frame that is passed here (as well as the frame
     returned from the GetCurrentFrame method) is defined by the current
     frame settings (width + height + pixel format) for the camera device.
timestamp - Frame's timestamp.
camera_dev - Camera device instance that delivered the frame.
"
      end

      operation 43914039 "onCameraDeviceError"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "err" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Entry point for notifications that occur in camera device.
Param:
 err - CAMERA_ERROR_XXX error code.
"
      end

      operation 43914167 "setTakingPicture"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "taking" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mTakingPicture = taking;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets, or resets taking picture state.
This state control whether or not to notify the framework about compressed
image, shutter, and other picture related events.
"
      end

      operation 43914295 "setJpegQuality"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "jpeg_quality" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mJpegQuality = jpeg_quality;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets JPEG quality used to compress frame during picture taking. "
      end

      operation 43914423 "isNewVideoFrameTime"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 1
	  param in name "timestamp" type class_ref 3490615 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Private API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private API
*************************************************************************
 Checks if it's time to push new video frame.
Note that this method must be called while object is locked.
Param:
 timestamp - Timestamp for the new frame. "
      end

      attribute 12646711 "mObjectLock"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
 Locks this instance for data change. 
"
      end

      attribute 12646839 "mNotifyCB"
	protected explicit_type "camera_notify_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Callbacks, registered in set_callbacks.

"
      end

      attribute 12646967 "mDataCB"
	protected explicit_type "camera_data_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12647095 "mDataCBTimestamp"
	protected explicit_type "camera_data_timestamp_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12647223 "mGetMemoryCB"
	protected explicit_type "camera_request_memory"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12647351 "mCBOpaque"
	protected explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12647479 "mCameraMemoryTs"
	protected explicit_type "camera_memory_t*"
	stereotype "List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " video frame queue for the CameraHeapMemory destruction 
"
      end

      classrelation 6921527 // mLastFrameTimestamp (<directional composition>)
	relation 6921527 *-->
	  a role_name "mLastFrameTimestamp" protected
	    comment " Timestamp when last frame has been delivered to the framework. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6921527 // mLastFrameTimestamp (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      classrelation 6921655 // mFrameRefreshFreq (<directional composition>)
	relation 6921655 *-->
	  a role_name "mFrameRefreshFreq" protected
	    comment " Video frequency in nanosec. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6921655 // mFrameRefreshFreq (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      attribute 12647607 "mMessageEnabler"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Message enabler. 
"
      end

      attribute 12647735 "mJpegQuality"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " JPEG quality used to compress frame during picture taking. 
"
      end

      attribute 12647863 "mVideoRecEnabled"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Video recording status. 
"
      end

      attribute 12647991 "mTakingPicture"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Picture taking status. 
"
      end
    end

    class 3490743 "EmulatedCameraDevice"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates an abstract class EmulatedCameraDevice that defines
functionality expected from an emulated physical camera device:
 - Obtaining and setting camera device parameters
 - Capturing frames
 - Streaming video
 - etc.
"
      operation 43931831 "EmulatedCameraDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "camera_hal" type class_ref 3491127 // EmulatedCamera
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}
    : mObjectLock(),
      mCurFrameTimestamp(0),
      mCameraHAL(camera_hal),
      mCurrentFrame(NULL),
      mExposureCompensation(1.0f),
      mWhiteBalanceScale(NULL),
      mSupportedWhiteBalanceScale(),
      mState(ECDS_CONSTRUCTED)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedCameraDevice instance.
Param:
 camera_hal - Emulated camera that implements the camera HAL API, and
     manages (contains) this object.
"
      end

      operation 43931959 "~EmulatedCameraDevice"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedCameraDevice instance. "
      end

      operation 43932087 "connectDevice"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emulated camera device abstract interface
************************************************************************
 Connects to the camera device.
This method must be called on an initialized instance of this class.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43932215 "disconnectDevice"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disconnects from the camera device.
Return:
 NO_ERROR on success, or an appropriate error status. If this method is
 called for already disconnected, or uninitialized instance of this class,
 a successful status must be returned from this method. If this method is
 called for an instance that is in the \"started\" state, this method must
 return a failure.
"
      end

      operation 43932343 "startDevice"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "pix_fmt" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts the camera device.
This method tells the camera device to start capturing frames of the given
dimensions for the given pixel format. Note that this method doesn't start
the delivery of the captured frames to the emulated camera. Call
startDeliveringFrames method to start delivering frames. This method must
be called on a connected instance of this class. If it is called on a
disconnected instance, this method must return a failure.
Param:
 width, height - Frame dimensions to use when capturing video frames.
 pix_fmt - Pixel format to use when capturing video frames.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43932471 "stopDevice"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops the camera device.
This method tells the camera device to stop capturing frames. Note that
this method doesn't stop delivering frames to the emulated camera. Always
call stopDeliveringFrames prior to calling this method.
Return:
 NO_ERROR on success, or an appropriate error status. If this method is
 called for an object that is not capturing frames, or is disconnected,
 or is uninitialized, a successful status must be returned from this
 method.
"
      end

      operation 43932599 "Initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Emulated camera device public API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emulated camera device public API
************************************************************************
 Initializes EmulatedCameraDevice instance.
Derived classes should override this method in order to cache static
properties of the physical device (list of supported pixel formats, frame
sizes, etc.) If this method is called on an already initialized instance,
it must return a successful status.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43932727 "initializeWhiteBalanceModes"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "mode" explicit_type "char"
	  param in name "r_scale" explicit_type "float"
	  param in name "b_scale" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} ${p1}, const ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initializes the white balance modes parameters.
The parameters are passed by each individual derived camera API to
represent that different camera manufacturers may have different
preferences on the white balance parameters. Green channel in the RGB
color space is fixed to keep the luminance to be reasonably constant.

Param:
mode the text describing the current white balance mode
r_scale the scale factor for the R channel in RGB space
b_scale the scale factor for the B channel in RGB space.
"
      end

      operation 43932855 "startDeliveringFrames"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "one_burst" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts delivering frames captured from the camera device.
This method will start the worker thread that would be pulling frames from
the camera device, and will deliver the pulled frames back to the emulated
camera via onNextFrameAvailable callback. This method must be called on a
connected instance of this class with a started camera device. If it is
called on a disconnected instance, or camera device has not been started,
this method must return a failure.
Param:
 one_burst - Controls how many frames should be delivered. If this
     parameter is 'true', only one captured frame will be delivered to the
     emulated camera. If this parameter is 'false', frames will keep
     coming until stopDeliveringFrames method is called. Typically, this
     parameter is set to 'true' only in order to obtain a single frame
     that will be used as a \"picture\" in takePicture method of the
     emulated camera.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43932983 "stopDeliveringFrames"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops delivering frames captured from the camera device.
This method will stop the worker thread started by startDeliveringFrames.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43933111 "setExposureCompensation"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "ev" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the exposure compensation for the camera device.
"
      end

      operation 43933239 "setWhiteBalanceMode"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the white balance mode for the device.
"
      end

      operation 43933367 "getCurrentPreviewFrame"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "buffer" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets current framebuffer, converted into preview frame format.
This method must be called on a connected instance of this class with a
started camera device. If it is called on a disconnected instance, or
camera device has not been started, this method must return a failure.
Note that this method should be called only after at least one frame has
been captured and delivered. Otherwise it will return garbage in the
preview frame buffer. Typically, this method shuld be called from
onNextFrameAvailable callback.
Param:
 buffer - Buffer, large enough to contain the entire preview frame.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43933495 "getFrameWidth"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGE_IF(!isStarted(), \"%s: Device is not started\", __FUNCTION__);
        return mFrameWidth;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets width of the frame obtained from the physical device.
Return:
 Width of the frame obtained from the physical device. Note that value
 returned from this method is valid only in case if camera device has been
 started.
"
      end

      operation 43933623 "getFrameHeight"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGE_IF(!isStarted(), \"%s: Device is not started\", __FUNCTION__);
        return mFrameHeight;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets height of the frame obtained from the physical device.
Return:
 Height of the frame obtained from the physical device. Note that value
 returned from this method is valid only in case if camera device has been
 started.
"
      end

      operation 43933751 "getFrameBufferSize"
	const cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGE_IF(!isStarted(), \"%s: Device is not started\", __FUNCTION__);
        return mFrameBufferSize;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets byte size of the current frame buffer.
Return:
 Byte size of the frame buffer. Note that value returned from this method
 is valid only in case if camera device has been started.
"
      end

      operation 43933879 "getPixelNum"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGE_IF(!isStarted(), \"%s: Device is not started\", __FUNCTION__);
        return mTotalPixels;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets number of pixels in the current frame buffer.
Return:
 Number of pixels in the frame buffer. Note that value returned from this
 method is valid only in case if camera device has been started.
"
      end

      operation 43934007 "getOriginalPixelFormat"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGE_IF(!isStarted(), \"%s: Device is not started\", __FUNCTION__);
        return mPixelFormat;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets pixel format of the frame that camera device streams to this class.
Throughout camera framework, there are three different forms of pixel
format representation:
 - Original format, as reported by the actual camera device. Values for
   this format are declared in bionic/libc/kernel/common/linux/videodev2.h
 - String representation as defined in CameraParameters::PIXEL_FORMAT_XXX
   strings in frameworks/base/include/camera/CameraParameters.h
 - HAL_PIXEL_FORMAT_XXX format, as defined in system/core/include/system/graphics.h
Since emulated camera device gets its data from the actual device, it gets
pixel format in the original form. And that's the pixel format
representation that will be returned from this method. HAL components will
need to translate value returned from this method to the appropriate form.
This method must be called only on started instance of this class, since
it's applicable only when camera device is ready to stream frames.
Param:
 pix_fmt - Upon success contains the original pixel format.
Return:
 Current framebuffer's pixel format. Note that value returned from this
 method is valid only in case if camera device has been started.
"
      end

      operation 43934135 "isInitialized"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        /* Instance is initialized when the worker thread has been successfuly
         * created (but not necessarily started). */
        return mWorkerThread.get() != NULL && mState != ECDS_CONSTRUCTED;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "State checkers.
"
      end

      operation 43934263 "isConnected"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        /* Instance is connected when its status is either\"connected\", or
         * \"started\". */
        return mState == ECDS_CONNECTED || mState == ECDS_STARTED;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43934391 "isStarted"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mState == ECDS_STARTED;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43934519 "commonStartDevice"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "pix_fmt" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Emulated camera device private API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emulated camera device private API
*************************************************************************
 Performs common validation and calculation of startDevice parameters.
Param:
 width, height, pix_fmt - Parameters passed to the startDevice method.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43934647 "commonStopDevice"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Performs common cleanup on stopDevice.
This method will undo what commonStartDevice had done.
"
      end

      operation 43934775 "changeExposure"
	const cpp_inline protected explicit_return_type "uint8_t"
	nparams 1
	  param in name "inputY" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return static_cast<uint8_t>(clamp(static_cast<float>(inputY) *
                                    mExposureCompensation));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Computes a luminance value after taking the exposure compensation.
value into account.

Param:
inputY - The input luminance value.
Return:
The luminance value after adjusting the exposure compensation.
"
      end

      operation 43934903 "changeWhiteBalance"
	preserve_cpp_body_indent const protected explicit_return_type "void"
	nparams 3
	  param inout name "y" explicit_type "uint8_t"
	  param inout name "u" explicit_type "uint8_t"
	  param inout name "v" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Computes the pixel value after adjusting the white balance to the current
//one. The input the y, u, v channel of the pixel and the adjusted value will
//be stored in place. The adjustment is done in RGB space.
//

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Computes the pixel value in YUV space after adjusting to the current
white balance mode.
"
      end

      operation 43935031 "startWorkerThread"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "one_burst" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Worker thread management.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Worker thread management.
Typicaly when emulated camera device starts capturing frames from the
actual device, it does that in a worker thread created in StartCapturing,
and terminated in StopCapturing. Since this is such a typical scenario,
it makes sence to encapsulate worker thread management in the base class
for all emulated camera devices.
*************************************************************************
 Starts the worker thread.
Typically, worker thread is started from startDeliveringFrames method of
this class.
Param:
 one_burst - Controls how many times thread loop should run. If this
     parameter is 'true', thread routine will run only once If this
     parameter is 'false', thread routine will run until stopWorkerThread
     method is called. See startDeliveringFrames for more info.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43935159 "stopWorkerThread"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops the worker thread.
Note that this method will always wait for the worker thread to terminate.
Typically, worker thread is started from stopDeliveringFrames method of
this class.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43935287 "inWorkerThread"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation of the worker thread routine.
In the default implementation of the worker thread routine we simply
return 'false' forcing the thread loop to exit, and the thread to
terminate. Derived class should override that method to provide there the
actual frame delivery.
Return:
 true To continue thread loop (this method will be called again), or false
 to exit the thread loop and to terminate the thread.
"
      end

      class 3492535 "WorkerThread"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6923319 // <generalisation>
	  relation 6923319 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6923319 // <generalisation>
	    b parent class_ref 3492663 // typedef8
	end

	operation 43935415 "WorkerThread"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param inout name "camera_dev" type class_ref 3490743 // EmulatedCameraDevice
	  cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract} : Thread(true),   // Callbacks may involve Java calls.
                  mCameraDevice(camera_dev),
                  mThreadControl(-1),
                  mControlFD(-1)
            {
            };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	  comment "Public API
*************************************************************************"
	end

	operation 43935543 "~WorkerThread"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
                ALOGW_IF(mThreadControl >= 0 || mControlFD >= 0,
                        \"%s: Control FDs are opened in the destructor\",
                        __FUNCTION__);
                if (mThreadControl >= 0) {
                    close(mThreadControl);
                }
                if (mControlFD >= 0) {
                    close(mControlFD);
                }
            };
"
	  
	  
	  
	  
	end

	operation 43935671 "startThread"
	  cpp_inline public explicit_return_type "status_t"
	  nparams 1
	    param in name "one_burst" explicit_type "bool"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
                mOneBurst = one_burst;
                return run(\"Camera_startThread\", ANDROID_PRIORITY_URGENT_DISPLAY, 0);
            };
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Starts the thread
Param:
 one_burst - Controls how many times thread loop should run. If
     this parameter is 'true', thread routine will run only once
     If this parameter is 'false', thread routine will run until
     stopThread method is called. See startWorkerThread for more
     info.
Return:
 NO_ERROR on success, or an appropriate error status.
"
	end

	operation 43935799 "readyToRun"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "//Worker thread implementation.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Overriden base class method.
It is overriden in order to provide one-time initialization just
prior to starting the thread routine.
"
	end

	operation 43935927 "stopThread"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Stops the thread. "
	end

	class 3492791 "SelectRes"
	  visibility package stereotype "enum"
	  cpp_decl "${comment}enum ${name} {
${items}};
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 12653239 "TIMEOUT"
	    public type class_ref 3492791 // SelectRes
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 12653367 "READY"
	    public type class_ref 3492791 // SelectRes
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 12653495 "EXIT_THREAD"
	    public type class_ref 3492791 // SelectRes
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 12653623 "ERROR"
	    public type class_ref 3492791 // SelectRes
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end
	end

	operation 43936055 "Select"
	  preserve_cpp_body_indent public return_type class_ref 3492791 // SelectRes
	  nparams 2
	    param in name "fd" explicit_type "int"
	    param in name "timeout" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Select on an FD event, keeping in mind thread exit message.
Param:
 fd - File descriptor on which to wait for an event. This
     parameter may be negative. If it is negative this method will
     only wait on a control message to the thread.
 timeout - Timeout in microseconds. 0 indicates no timeout (wait
     forever).
Return:
 See SelectRes enum comments.
"
	end

	operation 43936183 "threadLoop"
	  cpp_inline private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
                /* Simply dispatch the call to the containing camera device. */
                if (mCameraDevice->inWorkerThread()) {
                    /* Respect \"one burst\" parameter (see startThread). */
                    return !mOneBurst;
                } else {
                    return false;
                }
            };
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Private API
*************************************************************************
 Implements abstract method of the base Thread class. "
	end

	classrelation 6923447 // mCameraDevice (<unidirectional association>)
	  relation 6923447 --->
	    a role_name "mCameraDevice" private
	      comment " Containing camera device object. 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6923447 // mCameraDevice (<unidirectional association>)
	    b parent class_ref 3490743 // EmulatedCameraDevice
	end

	attribute 12653751 "mThreadControl"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " FD that is used to send control messages into the thread. 
"
	end

	attribute 12653879 "mControlFD"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " FD that thread uses to receive control messages. 
"
	end

	attribute 12654007 "mOneBurst"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Controls number of times the thread loop runs.
See startThread for more information. 
"
	end

	class 3492919 "ControlMessage"
	  visibility package stereotype "enum"
	  cpp_decl "${comment}enum ${name} {
${items}};
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 12654135 "THREAD_STOP"
	    public type class_ref 3492919 // ControlMessage
	    cpp_decl "  ${name}${value},${comment}"
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end
	end

	attribute 12654263 "mSetup"
	  private explicit_type "Condition"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 6923191 // <dependency>
	relation 6923191 -_->
	  stereotype "friend"
	  a public
	    cpp default "Generated"
	    classrelation_ref 6923191 // <dependency>
	  b parent class_ref 3492535 // WorkerThread
      end

      class 3492663 "typedef8"
	visibility package stereotype "typedef" explicit_base_type "Thread"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 43936311 "getWorkerThread"
	const cpp_inline protected return_type class_ref 3492535 // WorkerThread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mWorkerThread.get();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Worker thread accessor. "
      end

      attribute 12654391 "mObjectLock"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
 Locks this instance for parameters, state, etc. change. 
"
      end

      classrelation 6923575 // mWorkerThread (<directional composition>)
	relation 6923575 *-->
	  stereotype "sp"
	  a role_name "mWorkerThread" protected
	    comment " Worker thread that is used in frame capturing. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6923575 // mWorkerThread (<directional composition>)
	  b parent class_ref 3492535 // WorkerThread
      end

      classrelation 6923703 // mCurFrameTimestamp (<directional composition>)
	relation 6923703 *-->
	  a role_name "mCurFrameTimestamp" protected
	    comment " Timestamp of the current frame. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6923703 // mCurFrameTimestamp (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      classrelation 6923831 // mCameraHAL (<unidirectional association>)
	relation 6923831 --->
	  a role_name "mCameraHAL" protected
	    comment " Emulated camera object containing this instance. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6923831 // mCameraHAL (<unidirectional association>)
	  b parent class_ref 3491127 // EmulatedCamera
      end

      attribute 12654519 "mCurrentFrame"
	protected explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Framebuffer containing the current frame. 
"
      end

      attribute 12654647 "mFrameBufferSize"
	protected explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Framebuffer properties.

 Byte size of the framebuffer. 
"
      end

      attribute 12654775 "mPixelFormat"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Original pixel format (one of the V4L2_PIX_FMT_XXX values, as defined in
bionic/libc/kernel/common/linux/videodev2.h 
"
      end

      attribute 12654903 "mFrameWidth"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Frame width 
"
      end

      attribute 12655031 "mFrameHeight"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Frame height 
"
      end

      attribute 12655159 "mTotalPixels"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Total number of pixels 
"
      end

      attribute 12655287 "mExposureCompensation"
	protected explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Exposure compensation value 
"
      end

      attribute 12655415 "mWhiteBalanceScale"
	protected explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12655543 "mSupportedWhiteBalanceScale"
	protected explicit_type "String8, float*"
	stereotype "DefaultKeyedVector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3493047 "EmulatedCameraDeviceState"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12655671 "ECDS_CONSTRUCTED"
	  public type class_ref 3493047 // EmulatedCameraDeviceState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12655799 "ECDS_INITIALIZED"
	  public type class_ref 3493047 // EmulatedCameraDeviceState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12655927 "ECDS_CONNECTED"
	  public type class_ref 3493047 // EmulatedCameraDeviceState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12656055 "ECDS_STARTED"
	  public type class_ref 3493047 // EmulatedCameraDeviceState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 6923959 // mState (<directional composition>)
	relation 6923959 *-->
	  a role_name "mState" protected
	    comment " Object state. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6923959 // mState (<directional composition>)
	  b parent class_ref 3493047 // EmulatedCameraDeviceState
      end
    end

    class 3490871 "RGB32_t"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An union that simplifies breaking 32 bit RGB into separate R, G, and B colors.
"
      attribute 12648119 "color"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12648247 "r"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12648375 "g"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12648503 "b"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12648631 "a"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3490999 "EmulatedBaseCamera"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Contains declaration of a class EmulatedBaseCamera that encapsulates
functionality common to all emulated camera device versions (\"fake\",
\"webcam\", \"video file\", etc.).  Instances of this class (for each emulated
camera) are created during the construction of the EmulatedCameraFactory
instance.  This class serves as an entry point for all camera API calls that
are common across all versions of the camera_device_t/camera_module_t
structures.
"
      operation 43914551 "EmulatedBaseCamera"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param in name "cameraId" explicit_type "int"
	  param in name "cameraVersion" explicit_type "uint32_t"
	  param inout name "device" explicit_type "hw_device_t"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}
        : mCameraInfo(NULL),
          mCameraID(cameraId),
          mCameraDeviceVersion(cameraVersion)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43914679 "~EmulatedBaseCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43914807 "Initialize"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Initializes EmulatedCamera instance.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43914935 "connectCamera"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API implementation
*************************************************************************
 Creates connection to the emulated camera device.
This method is called in response to hw_module_methods_t::open callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negative EXXX statuses.
"
      end

      operation 43915063 "plugCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Plug the connection for the emulated camera. Until it's plugged in
calls to connectCamera should fail with -ENODEV.
"
      end

      operation 43915191 "unplugCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unplug the connection from underneath the emulated camera.
This is similar to closing the camera, except that
all function calls into the camera device will return
-EPIPE errors until the camera is reopened.
"
      end

      operation 43915319 "getHotplugStatus"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "camera_device_status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43915447 "closeCamera"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Closes connection to the emulated camera.
This method is called in response to camera_device::close callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negative EXXX statuses.
"
      end

      operation 43915575 "getCameraInfo"
	abstract preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets camera information.
This method is called in response to camera_module_t::get_camera_info
callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negative EXXX statuses.
"
      end

      attribute 12648759 "mCameraInfo"
	protected explicit_type "camera_metadata_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
 Fixed camera information for camera2 devices. Must be valid to access if
mCameraDeviceVersion is >= HARDWARE_DEVICE_API_VERSION(2,0)  
"
      end

      attribute 12648887 "mCameraID"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Zero-based ID assigned to this camera. 
"
      end

      attribute 12649015 "mCameraDeviceVersion"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Version of the camera device HAL implemented by this camera 
"
      end
    end

    class 3491127 "EmulatedCamera"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality common to all version 1.0 emulated camera devices
(\"fake\", \"webcam\", \"file stream\", etc.).

Note that EmulatedCameraFactory instantiates object of this class just once,
when EmulatedCameraFactory instance gets constructed. Connection to /
disconnection from the actual camera device is handled by calls to
connectDevice(), and closeCamera() methods of this class that are ivoked in
response to hw_module_methods_t::open, and camera_device::close callbacks.
"
      classrelation 6921783 // <generalisation>
	relation 6921783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6921783 // <generalisation>
	  b parent class_ref 3491255 // typedef4
      end

      classrelation 6921911 // <generalisation>
	relation 6921911 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6921911 // <generalisation>
	  b parent class_ref 3490999 // EmulatedBaseCamera
      end

      operation 43915703 "EmulatedCamera"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}
        : EmulatedBaseCamera(cameraId,
                HARDWARE_DEVICE_API_VERSION(1, 0),
                &common,
                module),
          mPreviewWindow(),
          mCallbackNotifier()
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedCamera instance.
Param:
 cameraId - Zero based camera identifier, which is an index of the camera
     instance in camera factory's array.
 module - Emulated camera HAL module descriptor.
"
      end

      operation 43915831 "~EmulatedCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedCamera instance. "
      end

      operation 43915959 "getCameraDevice"
	abstract cpp_virtual public return_type class_ref 3490743 // EmulatedCameraDevice
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Abstract API
*************************************************************************
 Gets emulated camera device used by this instance of the emulated camera.
"
      end

      operation 43916087 "Initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Override of base class method "
      end

      operation 43916215 "onNextFrameAvailable"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "frame" explicit_type "void"
	  param in name "timestamp" type class_ref 3490615 // nsecs_t
	  param inout name "camera_dev" type class_ref 3490743 // EmulatedCameraDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Next frame is available in the camera device.
This is a notification callback that is invoked by the camera device when
a new frame is available.
Note that most likely this method is called in context of a worker thread
that camera device has created for frame capturing.
Param:
 frame - Captured frame, or NULL if camera device didn't pull the frame
     yet. If NULL is passed in this parameter use GetCurrentFrame method
     of the camera device class to obtain the next frame. Also note that
     the size of the frame that is passed here (as well as the frame
     returned from the GetCurrentFrame method) is defined by the current
     frame settings (width + height + pixel format) for the camera device.
timestamp - Frame's timestamp.
camera_dev - Camera device instance that delivered the frame.
"
      end

      operation 43916343 "onCameraDeviceError"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "err" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Entry point for notifications that occur in camera device.
Param:
 err - CAMERA_ERROR_XXX error code.
"
      end

      operation 43916471 "connectCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera API implementation.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API implementation
*************************************************************************
 Override of base class method "
      end

      operation 43916599 "closeCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override of base class method "
      end

      operation 43916727 "getCameraInfo"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override of base class method "
      end

      operation 43916855 "setPreviewWindow"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param inout name "window" explicit_type "preview_stream_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API implementation.
These methods are called from the camera API callback routines.
*************************************************************************
 Actual handler for camera_device_ops_t::set_preview_window callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43916983 "setCallbacks"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 5
	  param in name "notify_cb" explicit_type "camera_notify_callback"
	  param in name "data_cb" explicit_type "camera_data_callback"
	  param in name "data_cb_timestamp" explicit_type "camera_data_timestamp_callback"
	  param in name "get_memory" explicit_type "camera_request_memory"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::set_callbacks callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43917111 "enableMsgType"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::enable_msg_type callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43917239 "disableMsgType"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::disable_msg_type callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43917367 "isMsgTypeEnabled"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::msg_type_enabled callback.
NOTE: When this method is called the object is locked.
Return:
 0 if message(s) is (are) disabled, != 0 if enabled.
"
      end

      operation 43917495 "startPreview"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::start_preview callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43917623 "stopPreview"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::stop_preview callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43917751 "isPreviewEnabled"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::preview_enabled callback.
NOTE: When this method is called the object is locked.
Return:
 0 if preview is disabled, != 0 if enabled.
"
      end

      operation 43917879 "storeMetaDataInBuffers"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::store_meta_data_in_buffers callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43918007 "startRecording"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::start_recording callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43918135 "stopRecording"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::stop_recording callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43918263 "isRecordingEnabled"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::recording_enabled callback.
NOTE: When this method is called the object is locked.
Return:
 0 if recording is disabled, != 0 if enabled.
"
      end

      operation 43918391 "releaseRecordingFrame"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "opaque" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::release_recording_frame callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43918519 "setAutoFocus"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::auto_focus callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43918647 "cancelAutoFocus"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::cancel_auto_focus callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43918775 "takePicture"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::take_picture callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43918903 "cancelPicture"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::cancel_picture callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43919031 "setParameters"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "parms" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::set_parameters callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43919159 "getParameters"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::get_parameters callback.
NOTE: When this method is called the object is locked.
Return:
 Flattened parameters string. The caller will free the buffer allocated
 for the string by calling camera_device_ops_t::put_parameters callback.
"
      end

      operation 43919287 "putParameters"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param inout name "params" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::put_parameters callback.
Called to free the string returned from camera_device_ops_t::get_parameters
callback. There is nothing more to it: the name of the callback is just
misleading.
NOTE: When this method is called the object is locked.
"
      end

      operation 43919415 "sendCommand"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 3
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::send_command callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43919543 "releaseCamera"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::release callback.
NOTE: When this method is called the object is locked.
"
      end

      operation 43919671 "dumpCamera"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actual handler for camera_device_ops_t::dump callback.
NOTE: When this method is called the object is locked.
Note that failures in this method are reported as negave EXXX statuses.
"
      end

      operation 43919799 "doStartPreview"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Preview management.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Preview management.
*************************************************************************
 Starts preview.
Note that when this method is called mPreviewWindow may be NULL,
indicating that framework has an intention to start displaying video
frames, but didn't create the preview window yet.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43919927 "doStopPreview"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops preview.
This method reverts DoStartPreview.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43920055 "cleanupCamera"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Private API.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private API.
*************************************************************************
 Cleans up camera when released. "
      end

      operation 43920183 "set_preview_window"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param inout name "window" explicit_type "preview_stream_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera API callbacks as defined by camera_device_ops structure.
//
//Callbacks here simply dispatch the calls to an appropriate method inside
//EmulatedCamera instance, defined by the 'dev' parameter.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API callbacks as defined by camera_device_ops structure.
See hardware/libhardware/include/hardware/camera.h for information on
each of these callbacks. Implemented in this class, these callbacks simply
dispatch the call into an instance of EmulatedCamera class defined by the
'camera_device' parameter.
*************************************************************************"
      end

      operation 43920311 "set_callbacks"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param inout name "dev" explicit_type "camera_device"
	  param in name "notify_cb" explicit_type "camera_notify_callback"
	  param in name "data_cb" explicit_type "camera_data_callback"
	  param in name "data_cb_timestamp" explicit_type "camera_data_timestamp_callback"
	  param in name "get_memory" explicit_type "camera_request_memory"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43920439 "enable_msg_type"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43920567 "disable_msg_type"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43920695 "msg_type_enabled"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43920823 "start_preview"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43920951 "stop_preview"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921079 "preview_enabled"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921207 "store_meta_data_in_buffers"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921335 "start_recording"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921463 "stop_recording"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921591 "recording_enabled"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921719 "release_recording_frame"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "opaque" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921847 "auto_focus"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43921975 "cancel_auto_focus"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922103 "take_picture"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922231 "cancel_picture"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922359 "set_parameters"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "parms" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922487 "get_parameters"
	class_operation preserve_cpp_body_indent private explicit_return_type "char"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922615 "put_parameters"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param inout name "params" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922743 "send_command"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 4
	  param inout name "dev" explicit_type "camera_device"
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922871 "release"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "dev" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43922999 "dump"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param inout name "dev" explicit_type "camera_device"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43923127 "close"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12649143 "mObjectLock"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
 Locks this instance for parameters, state, etc. change. 
"
      end

      attribute 12649271 "mParameters"
	protected explicit_type "CameraParameters"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Camera parameters. 
"
      end

      classrelation 6922039 // mPreviewWindow (<directional composition>)
	relation 6922039 *-->
	  a role_name "mPreviewWindow" protected
	    comment " Preview window. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6922039 // mPreviewWindow (<directional composition>)
	  b parent class_ref 3491383 // PreviewWindow
      end

      classrelation 6922167 // mCallbackNotifier (<directional composition>)
	relation 6922167 *-->
	  a role_name "mCallbackNotifier" protected
	    comment " Callback notifier. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6922167 // mCallbackNotifier (<directional composition>)
	  b parent class_ref 3490487 // CallbackNotifier
      end

      attribute 12649399 "mDeviceOps"
	class_attribute private explicit_type "camera_device_ops_t"
	init_value "= {
    EmulatedCamera::set_preview_window,
    EmulatedCamera::set_callbacks,
    EmulatedCamera::enable_msg_type,
    EmulatedCamera::disable_msg_type,
    EmulatedCamera::msg_type_enabled,
    EmulatedCamera::start_preview,
    EmulatedCamera::stop_preview,
    EmulatedCamera::preview_enabled,
    EmulatedCamera::store_meta_data_in_buffers,
    EmulatedCamera::start_recording,
    EmulatedCamera::stop_recording,
    EmulatedCamera::recording_enabled,
    EmulatedCamera::release_recording_frame,
    EmulatedCamera::auto_focus,
    EmulatedCamera::cancel_auto_focus,
    EmulatedCamera::take_picture,
    EmulatedCamera::cancel_picture,
    EmulatedCamera::set_parameters,
    EmulatedCamera::get_parameters,
    EmulatedCamera::put_parameters,
    EmulatedCamera::send_command,
    EmulatedCamera::release,
    EmulatedCamera::dump
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Registered callbacks implementing camera API. 
"
      end

      attribute 12649527 "FACING_KEY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"prop-facing\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Common keys
*************************************************************************
"
      end

      attribute 12649655 "ORIENTATION_KEY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"prop-orientation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12649783 "RECORDING_HINT_KEY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"recording-hint\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12649911 "FACING_BACK"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"back\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Common string values
*************************************************************************
 Possible values for FACING_KEY 
"
      end

      attribute 12650039 "FACING_FRONT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"front\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3491255 "typedef4"
      visibility package stereotype "typedef" explicit_base_type "camera_device"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3491383 "PreviewWindow"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality of a preview window set via set_preview_window
camera HAL API.

Objects of this class are contained in EmulatedCamera objects, and handle
relevant camera API callbacks.
"
      operation 43958711 "PreviewWindow"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : mPreviewWindow(NULL),
      mLastPreviewed(0),
      mPreviewFrameWidth(0),
      mPreviewFrameHeight(0),
      mPreviewEnabled(false)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs PreviewWindow instance. "
      end

      operation 43958839 "~PreviewWindow"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs PreviewWindow instance. "
      end

      operation 43958967 "setPreviewWindow"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param inout name "window" explicit_type "preview_stream_ops"
	  param in name "preview_fps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API
************************************************************************
 Actual handler for camera_device_ops_t::set_preview_window callback.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::set_preview_window callback.
Param:
 window - Preview window to set. This parameter might be NULL, which
     indicates preview window reset.
 preview_fps - Preview's frame frequency. This parameter determins when
     a frame received via onNextFrameAvailable call will be pushed to
     the preview window. If 'window' parameter passed to this method is
     NULL, this parameter is ignored.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43959095 "startPreview"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts the preview.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::start_preview callback.
"
      end

      operation 43959223 "stopPreview"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops the preview.
This method is called by the containing emulated camera object when it is
handing the camera_device_ops_t::start_preview callback.
"
      end

      operation 43959351 "isPreviewEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mPreviewEnabled;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if preview is enabled. "
      end

      operation 43959479 "onNextFrameAvailable"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "frame" explicit_type "void"
	  param in name "timestamp" type class_ref 3490615 // nsecs_t
	  param inout name "camera_dev" type class_ref 3490743 // EmulatedCameraDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Next frame is available in the camera device.
This is a notification callback that is invoked by the camera device when
a new frame is available.
Note that most likely this method is called in context of a worker thread
that camera device has created for frame capturing.
Param:
 frame - Captured frame, or NULL if camera device didn't pull the frame
     yet. If NULL is passed in this parameter use GetCurrentFrame method
     of the camera device class to obtain the next frame. Also note that
     the size of the frame that is passed here (as well as the frame
     returned from the GetCurrentFrame method) is defined by the current
     frame settings (width + height + pixel format) for the camera device.
timestamp - Frame's timestamp.
camera_dev - Camera device instance that delivered the frame.
"
      end

      operation 43959607 "adjustPreviewDimensions"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 1
	  param inout name "camera_dev" type class_ref 3490743 // EmulatedCameraDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Private API
//************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private API
************************************************************************
 Adjusts cached dimensions of the preview window frame according to the
frame dimensions used by the camera device.

When preview is started, it's not known (hard to define) what are going
to be the dimensions of the frames that are going to be displayed. Plus,
it might be possible, that such dimensions can be changed on the fly. So,
in order to be always in sync with frame dimensions, this method is
called for each frame passed to onNextFrameAvailable method, in order to
properly adjust frame dimensions, used by the preview window.
Note that this method must be called while object is locked.
Param:
 camera_dev - Camera device, prpviding frames displayed in the preview
     window.
Return:
 true if cached dimensions have been adjusted, or false if cached
 dimensions match device's frame dimensions.
"
      end

      operation 43959735 "isPreviewTime"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if it's the time to push new frame to the preview window.
Note that this method must be called while object is locked. "
      end

      attribute 12675255 "mObjectLock"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
************************************************************************
 Locks this instance for data changes. 
"
      end

      attribute 12675383 "mPreviewWindow"
	protected explicit_type "preview_stream_ops"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Preview window instance. 
"
      end

      attribute 12675511 "mLastPreviewed"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Timestamp (abs. microseconds) when last frame has been pushed to the
preview window. 
"
      end

      attribute 12675639 "mPreviewAfter"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Preview frequency in microseconds. 
"
      end

      attribute 12675767 "mPreviewFrameWidth"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Cached preview window frame dimensions.

"
      end

      attribute 12675895 "mPreviewFrameHeight"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12676023 "mPreviewEnabled"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Preview status. 
"
      end
    end

    class 3491511 "EmulatedCamera2"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality common to all version 2.0 emulated camera devices

Note that EmulatedCameraFactory instantiates object of this class just once,
when EmulatedCameraFactory instance gets constructed. Connection to /
disconnection from the actual camera device is handled by calls to
connectDevice(), and closeCamera() methods of this class that are invoked in
response to hw_module_methods_t::open, and camera_device::close callbacks.
"
      classrelation 6922295 // <generalisation>
	relation 6922295 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6922295 // <generalisation>
	  b parent class_ref 3491639 // typedef5
      end

      classrelation 6922423 // <generalisation>
	relation 6922423 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6922423 // <generalisation>
	  b parent class_ref 3490999 // EmulatedBaseCamera
      end

      operation 43923255 "EmulatedCamera2"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}:
        EmulatedBaseCamera(cameraId,
                CAMERA_DEVICE_API_VERSION_2_0,
                &common,
                module)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedCamera2 instance.
Param:
 cameraId - Zero based camera identifier, which is an index of the camera
     instance in camera factory's array.
 module - Emulated camera HAL module descriptor.
"
      end

      operation 43923383 "~EmulatedCamera2"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedCamera2 instance. "
      end

      operation 43923511 "Initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Abstract API
*************************************************************************

Public API
*************************************************************************"
      end

      operation 43923639 "connectCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera API implementation
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera module API and generic hardware device API implementation
*************************************************************************"
      end

      operation 43923767 "closeCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43923895 "getCameraInfo"
	abstract preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43924023 "requestQueueNotify"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera Device API implementation.
//These methods are called from the camera API callback routines.
//*************************************************************************
// Request input queue 

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API implementation.
These methods are called from the camera API callback routines.
*************************************************************************
 Request input queue notification "
      end

      operation 43924151 "getInProgressCount"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Count of requests in flight "
      end

      operation 43924279 "flushCapturesInProgress"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cancel all captures in flight "
      end

      operation 43924407 "constructDefaultRequest"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 2
	  param in name "request_template" explicit_type "int"
	  param inout name "request" explicit_type "camera_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Construct a default request for a given use case 

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43924535 "allocateStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 8
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "stream_ops" explicit_type "camera2_stream_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	  param inout name "format_actual" explicit_type "uint32_t"
	  param inout name "usage" explicit_type "uint32_t"
	  param inout name "max_buffers" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} * ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Output stream creation and management "
      end

      operation 43924663 "registerStreamBuffers"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 3
	  param in name "stream_id" explicit_type "uint32_t"
	  param in name "num_buffers" explicit_type "int"
	  param inout name "buffers" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43924791 "releaseStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43924919 "allocateReprocessStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 7
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "uint32_t"
	  param in name "reprocess_stream_ops" explicit_type "camera2_stream_in_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	  param inout name "consumer_usage" explicit_type "uint32_t"
	  param inout name "max_buffers" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Reprocessing input stream management 

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Input stream creation and management "
      end

      operation 43925047 "allocateReprocessStreamFromStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 3
	  param in name "output_stream_id" explicit_type "uint32_t"
	  param in name "reprocess_stream_ops" explicit_type "camera2_stream_in_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43925175 "releaseReprocessStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43925303 "triggerAction"
	cpp_virtual protected explicit_return_type "int"
	nparams 3
	  param in name "trigger_id" explicit_type "uint32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 3A action triggering "
      end

      operation 43925431 "getVendorSectionName"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "char"
	nparams 1
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Custom tag query methods 

${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Custom tag definitions "
      end

      operation 43925559 "getVendorTagName"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "char"
	nparams 1
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43925687 "getVendorTagType"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43925815 "dump"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Debug methods "
      end

      operation 43925943 "set_request_queue_src_ops"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "queue_src_ops" explicit_type "camera2_request_queue_src_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API callbacks as defined by camera2_device_ops structure.  See
hardware/libhardware/include/hardware/camera2.h for information on each
of these callbacks. Implemented in this class, these callbacks simply
dispatch the call into an instance of EmulatedCamera2 class defined in
the 'camera_device2' parameter.
*************************************************************************
 Input request queue "
      end

      operation 43926071 "notify_request_queue_not_empty"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "camera2_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43926199 "set_frame_queue_dst_ops"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "queue_dst_ops" explicit_type "camera2_frame_queue_dst_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Output frame queue "
      end

      operation 43926327 "get_in_progress_count"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "camera2_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " In-progress request management "
      end

      operation 43926455 "flush_captures_in_progress"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "camera2_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43926583 "construct_default_request"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "request_template" explicit_type "int"
	  param inout name "request" explicit_type "camera_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request template creation "
      end

      operation 43926711 "allocate_stream"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 9
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "stream_ops" explicit_type "camera2_stream_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	  param inout name "format_actual" explicit_type "uint32_t"
	  param inout name "usage" explicit_type "uint32_t"
	  param inout name "max_buffers" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, const ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} * ${p7}, ${t8} * ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stream management "
      end

      operation 43926839 "register_stream_buffers"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 4
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "stream_id" explicit_type "uint32_t"
	  param in name "num_buffers" explicit_type "int"
	  param inout name "buffers" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43926967 "release_stream"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43927095 "allocate_reprocess_stream"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 8
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "uint32_t"
	  param in name "reprocess_stream_ops" explicit_type "camera2_stream_in_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	  param inout name "consumer_usage" explicit_type "uint32_t"
	  param inout name "max_buffers" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, const ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} * ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43927223 "allocate_reprocess_stream_from_stream"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 4
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "output_stream_id" explicit_type "uint32_t"
	  param in name "reprocess_stream_ops" explicit_type "camera2_stream_in_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43927351 "release_reprocess_stream"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43927479 "trigger_action"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 4
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "trigger_id" explicit_type "uint32_t"
	  param in name "ext1" explicit_type "int"
	  param in name "ext2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 3A triggers"
      end

      operation 43927607 "set_notify_callback"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "notify_cb" explicit_type "camera2_notify_callback"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Notifications to application "
      end

      operation 43927735 "get_metadata_vendor_tag_ops"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera2_device_t"
	  param inout name "ops" explicit_type "vendor_tag_query_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Vendor metadata registration "
      end

      operation 43927863 "get_camera_vendor_section_name"
	class_operation preserve_cpp_body_indent private explicit_return_type "char"
	nparams 2
	  param in name "v" explicit_type "vendor_tag_query_ops_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " for get_metadata_vendor_tag_ops"
      end

      operation 43927991 "get_camera_vendor_tag_name"
	class_operation preserve_cpp_body_indent private explicit_return_type "char"
	nparams 2
	  param in name "v" explicit_type "vendor_tag_query_ops_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43928119 "get_camera_vendor_tag_type"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "v" explicit_type "vendor_tag_query_ops_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43928247 "dump"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera2_device_t"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43928375 "close"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For hw_device_t ops "
      end

      attribute 12650167 "mMutex"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members shared with implementations
*************************************************************************
 Mutex for calls through camera2 device interface 
"
      end

      attribute 12650295 "mStatusPresent"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12650423 "mRequestQueueSrc"
	const_attribute protected explicit_type "camera2_request_queue_src_ops"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12650551 "mFrameQueueDst"
	const_attribute protected explicit_type "camera2_frame_queue_dst_ops"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3491767 "TagOps"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6922551 // <generalisation>
	  relation 6922551 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6922551 // <generalisation>
	    b parent class_ref 3491895 // typedef6
	end

	classrelation 6922679 // parent (<unidirectional association>)
	  relation 6922679 --->
	    a role_name "parent" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6922679 // parent (<unidirectional association>)
	    b parent class_ref 3491511 // EmulatedCamera2
	end
      end

      class 3491895 "typedef6"
	visibility package stereotype "typedef" explicit_base_type "vendor_tag_query_ops"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 6922807 // mVendorTagOps (<directional composition>)
	relation 6922807 *-->
	  a role_name "mVendorTagOps" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6922807 // mVendorTagOps (<directional composition>)
	  b parent class_ref 3491767 // TagOps
      end

      operation 43928503 "sendNotification"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 4
	  param in name "msgType" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	  param in name "ext3" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12650679 "sDeviceOps"
	class_attribute private explicit_type "camera2_device_ops_t"
	init_value "= {
    EmulatedCamera2::set_request_queue_src_ops,
    EmulatedCamera2::notify_request_queue_not_empty,
    EmulatedCamera2::set_frame_queue_dst_ops,
    EmulatedCamera2::get_in_progress_count,
    EmulatedCamera2::flush_captures_in_progress,
    EmulatedCamera2::construct_default_request,
    EmulatedCamera2::allocate_stream,
    EmulatedCamera2::register_stream_buffers,
    EmulatedCamera2::release_stream,
    EmulatedCamera2::allocate_reprocess_stream,
    EmulatedCamera2::allocate_reprocess_stream_from_stream,
    EmulatedCamera2::release_reprocess_stream,
    EmulatedCamera2::trigger_action,
    EmulatedCamera2::set_notify_callback,
    EmulatedCamera2::get_metadata_vendor_tag_ops,
    EmulatedCamera2::dump
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
"
      end

      attribute 12650807 "mNotifyCb"
	private explicit_type "camera2_notify_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12650935 "mNotifyUserPtr"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3491639 "typedef5"
      visibility package stereotype "typedef" explicit_base_type "camera2_device"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3492023 "EmulatedCamera3"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Encapsulates functionality common to all version 3.0 emulated camera devices

Note that EmulatedCameraFactory instantiates an object of this class just
once, when EmulatedCameraFactory instance gets constructed. Connection to /
disconnection from the actual camera device is handled by calls to
connectDevice(), and closeCamera() methods of this class that are invoked in
response to hw_module_methods_t::open, and camera_device::close callbacks.
"
      classrelation 6922935 // <generalisation>
	relation 6922935 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6922935 // <generalisation>
	  b parent class_ref 3492151 // typedef7
      end

      classrelation 6923063 // <generalisation>
	relation 6923063 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6923063 // <generalisation>
	  b parent class_ref 3490999 // EmulatedBaseCamera
      end

      operation 43928631 "EmulatedCamera3"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}:
        EmulatedBaseCamera(cameraId,
                CAMERA_DEVICE_API_VERSION_3_3,
                &common,
                module),
        mStatus(STATUS_ERROR)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedCamera3 instance.
Param:
 cameraId - Zero based camera identifier, which is an index of the camera
     instance in camera factory's array.
 module - Emulated camera HAL module descriptor.
"
      end

      operation 43928759 "~EmulatedCamera3"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "// Destructs EmulatedCamera3 instance. 

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedCamera2 instance. "
      end

      class 3492279 "AvailableCapabilities"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12651063 "BACKWARD_COMPATIBLE"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651191 "MANUAL_SENSOR"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651319 "MANUAL_POST_PROCESSING"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651447 "RAW"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651575 "PRIVATE_REPROCESSING"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651703 "READ_SENSOR_SETTINGS"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651831 "BURST_CAPTURE"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12651959 "YUV_REPROCESSING"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12652087 "DEPTH_OUTPUT"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12652215 "CONSTRAINED_HIGH_SPEED_VIDEO"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12652343 "FULL_LEVEL"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12652471 "NUM_CAPABILITIES"
	  public type class_ref 3492279 // AvailableCapabilities
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      attribute 12652599 "sAvailableCapabilitiesStrings"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= {
    \"BACKWARD_COMPATIBLE\",
    \"MANUAL_SENSOR\",
    \"MANUAL_POST_PROCESSING\",
    \"RAW\",
    \"PRIVATE_REPROCESSING\",
    \"READ_SENSOR_SETTINGS\",
    \"BURST_CAPTURE\",
    \"YUV_REPROCESSING\",
    \"DEPTH_OUTPUT\",
    \"CONSTRAINED_HIGH_SPEED_VIDEO\",
    \"FULL_LEVEL\"
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Char strings for above enum, with size NUM_CAPABILITIES
"
      end

      operation 43928887 "Initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Abstract API
*************************************************************************

Public API
*************************************************************************"
      end

      operation 43929015 "connectCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera API implementation
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera module API and generic hardware device API implementation
*************************************************************************"
      end

      operation 43929143 "closeCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43929271 "getCameraInfo"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43929399 "initializeDevice"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "callbackOps" explicit_type "camera3_callback_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera Device API implementation.
//These methods are called from the camera API callback routines.
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API implementation.
These methods are called from the camera API callback routines.
*************************************************************************"
      end

      operation 43929527 "configureStreams"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param inout name "streamList" explicit_type "camera3_stream_configuration"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43929655 "registerStreamBuffers"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "bufferSet" explicit_type "camera3_stream_buffer_set"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43929783 "constructDefaultRequestSettings"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "camera_metadata_t"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43929911 "processCaptureRequest"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param inout name "request" explicit_type "camera3_capture_request"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43930039 "flush"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43930167 "dump"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Debug methods "
      end

      operation 43930295 "initialize"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera3_device"
	  param in name "callback_ops" explicit_type "camera3_callback_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera API callbacks as defined by camera3_device_ops structure.  See
hardware/libhardware/include/hardware/camera3.h for information on each
of these callbacks. Implemented in this class, these callbacks simply
dispatch the call into an instance of EmulatedCamera3 class defined in
the 'camera_device3' parameter.
*************************************************************************
 Startup "
      end

      operation 43930423 "configure_streams"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera3_device"
	  param inout name "stream_list" explicit_type "camera3_stream_configuration_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stream configuration and buffer registration "
      end

      operation 43930551 "register_stream_buffers"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera3_device"
	  param in name "buffer_set" explicit_type "camera3_stream_buffer_set_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43930679 "construct_default_request_settings"
	class_operation private explicit_return_type "camera_metadata_t"
	nparams 2
	  param in name "" explicit_type "camera3_device"
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Template request settings provision "
      end

      operation 43930807 "process_capture_request"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "d" explicit_type "camera3_device"
	  param inout name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Submission of capture requests to HAL "
      end

      operation 43930935 "dump"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "d" explicit_type "camera3_device_t"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43931063 "flush"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "camera3_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43931191 "close"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For hw_device_t ops "
      end

      attribute 12652727 "mStatus"
	protected explicit_type "<complex type>"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}enum  {
        // State at construction time, and after a device operation error
        STATUS_ERROR = 0,
        // State after startup-time init and after device instance close
        STATUS_CLOSED,
        // State after being opened, before device instance init
        STATUS_OPEN,
        // State after device instance initialization
        STATUS_READY,
        // State while actively capturing data
        STATUS_ACTIVE
    } ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members shared with implementations
*************************************************************************
"
      end

      operation 43931319 "sendCaptureResult"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "camera3_capture_result_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Protected API. Callbacks to the framework.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callbacks back to the framework
"
      end

      operation 43931447 "sendNotify"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" explicit_type "camera3_notify_msg_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12652855 "sDeviceOps"
	class_attribute private explicit_type "camera3_device_ops_t"
	init_value "= {
    EmulatedCamera3::initialize,
    EmulatedCamera3::configure_streams,
    /* DEPRECATED: register_stream_buffers */ nullptr,
    EmulatedCamera3::construct_default_request_settings,
    EmulatedCamera3::process_capture_request,
    /* DEPRECATED: get_metadata_vendor_tag_ops */ nullptr,
    EmulatedCamera3::dump,
    EmulatedCamera3::flush
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
"
      end

      attribute 12652983 "mCallbackOps"
	const_attribute private explicit_type "camera3_callback_ops_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3492151 "typedef7"
      visibility package stereotype "typedef" explicit_base_type "camera3_device"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3493175 "EmulatedCameraFactory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Contains declaration of a class EmulatedCameraFactory that manages cameras
available for the emulation. A global instance of this class is statically
instantiated and initialized when camera emulation HAL is loaded.

 Class EmulatedCameraFactoryManages cameras available for the emulation.

When the global static instance of this class is created on the module load,
it enumerates cameras available for the emulation by connecting to the
emulator's 'camera' service. For every camera found out there it creates an
instance of an appropriate class, and stores it an in array of emulated
cameras. In addition to the cameras reported by the emulator, a fake camera
emulator is always created, so there is always at least one camera that is
available.

Instance of this class is also used as the entry point for the camera HAL API,
including:
 - hw_module_methods_t::open entry point
 - camera_module_t::get_number_of_cameras entry point
 - camera_module_t::get_camera_info entry point

"
      operation 43936439 "EmulatedCameraFactory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
        : mQemuClient(),
          mEmulatedCameras(NULL),
          mEmulatedCameraNum(0),
          mFakeCameraNum(0),
          mConstructedOK(false),
          mCallbacks(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedCameraFactory instance.
In this constructor the factory will create and initialize a list of
emulated cameras. All errors that occur on this constructor are reported
via mConstructedOK data member of this class.
"
      end

      operation 43936567 "~EmulatedCameraFactory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedCameraFactory instance. "
      end

      operation 43936695 "cameraDeviceOpen"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "camera_id" explicit_type "int"
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera HAL API handlers.
//
//Each handler simply verifies existence of an appropriate EmulatedBaseCamera
//instance, and dispatches the call to that instance.
//
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera HAL API handlers.
*************************************************************************
 Opens (connects to) a camera device.
This method is called in response to hw_module_methods_t::open callback.
"
      end

      operation 43936823 "getCameraInfo"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "camera_id" explicit_type "int"
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets emulated camera information.
This method is called in response to camera_module_t::get_camera_info callback.
"
      end

      operation 43936951 "setCallbacks"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "callbacks" explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets emulated camera callbacks.
This method is called in response to camera_module_t::set_callbacks callback.
"
      end

      operation 43937079 "getVendorTagOps"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "ops" explicit_type "vendor_tag_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fill in vendor tags for the module
This method is called in response to camera_module_t::get_vendor_tag_ops callback.
"
      end

      operation 43937207 "get_number_of_cameras"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera HAL API callbacks.
*************************************************************************
 camera_module_t::get_number_of_cameras callback entry point. "
      end

      operation 43937335 "get_camera_info"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "camera_id" explicit_type "int"
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " camera_module_t::get_camera_info callback entry point. "
      end

      operation 43937463 "set_callbacks"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "callbacks" explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " camera_module_t::set_callbacks callback entry point. "
      end

      operation 43937591 "get_vendor_tag_ops"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "ops" explicit_type "vendor_tag_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " camera_module_t::get_vendor_tag_ops callback entry point "
      end

      operation 43937719 "open_legacy"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 4
	  param in name "module" explicit_type "hw_module_t"
	  param in name "id" explicit_type "char"
	  param in name "halVersion" explicit_type "uint32_t"
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}, ${t3} * * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " camera_module_t::open_legacy callback entry point "
      end

      operation 43937847 "device_open"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param in name "module" explicit_type "hw_module_t"
	  param in name "name" explicit_type "char"
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera HAL API callbacks.
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}, ${t2} * * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hw_module_methods_t::open callback entry point. "
      end

      operation 43937975 "getFakeCameraOrientation"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        /* TODO: Have a boot property that controls that. */
        return 90;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API.
*************************************************************************
 Gets fake camera orientation. "
      end

      operation 43938103 "getQemuCameraOrientation"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        /* TODO: Have a boot property that controls that. */
        return 270;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets qemu camera orientation. "
      end

      operation 43938231 "getEmulatedCameraNum"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mEmulatedCameraNum;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets number of emulated cameras.
"
      end

      operation 43938359 "isConstructedOK"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mConstructedOK;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks whether or not the constructor has succeeded.
"
      end

      operation 43938487 "onStatusChanged"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param in name "newStatus" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43938615 "createQemuCameras"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private API
*************************************************************************
 Populates emulated cameras array with cameras that are available via
'camera' service in the emulator. For each such camera and instance of
the EmulatedCameraQemud will be created and added to the mEmulatedCameras
array.
"
      end

      operation 43938743 "isBackFakeCameraEmulationOn"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if fake camera emulation is on for the camera facing back. "
      end

      operation 43938871 "getBackCameraHalVersion"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets camera device version number to use for back camera emulation "
      end

      operation 43938999 "isFrontFakeCameraEmulationOn"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if fake camera emulation is on for the camera facing front. "
      end

      operation 43939127 "getFrontCameraHalVersion"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets camera device version number to use for front camera emulation "
      end

      classrelation 6924087 // mQemuClient (<directional composition>)
	relation 6924087 *-->
	  a role_name "mQemuClient" private
	    comment "Data members.
*************************************************************************
 Connection to the camera service in the emulator. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6924087 // mQemuClient (<directional composition>)
	  b parent class_ref 3493303 // FactoryQemuClient
      end

      attribute 12656183 "mEmulatedCameras"
	private type class_ref 3490999 // EmulatedBaseCamera
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of cameras available for the emulation. 
"
      end

      attribute 12656311 "mEmulatedCameraNum"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of emulated cameras (including the fake ones). 
"
      end

      attribute 12656439 "mFakeCameraNum"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of emulated fake cameras. 
"
      end

      attribute 12656567 "mConstructedOK"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flags whether or not constructor has succeeded. 
"
      end

      attribute 12656695 "mCallbacks"
	const_attribute private explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Camera callbacks (for status changing) 
"
      end

      classrelation 6924215 // mHotplugThread (<directional composition>)
	relation 6924215 *-->
	  stereotype "sp"
	  a role_name "mHotplugThread" private
	    comment " Hotplug thread (to call onStatusChanged) 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6924215 // mHotplugThread (<directional composition>)
	  b parent class_ref 3493431 // EmulatedCameraHotplugThread
      end

      attribute 12656823 "mCameraModuleMethods"
	class_attribute public explicit_type "hw_module_methods_t"
	init_value "= {
    open: EmulatedCameraFactory::device_open
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Contains device open entry point, as required by HAL API. 
"
      end
    end

    class 3493303 "FactoryQemuClient"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Qemu client for the 'factory' service.
*************************************************************************
 Encapsulates QemuClient for the 'factory' service. "
      classrelation 6933815 // <generalisation>
	relation 6933815 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6933815 // <generalisation>
	  b parent class_ref 3498039 // QemuClient
      end

      operation 43961911 "FactoryQemuClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : QemuClient()
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs FactoryQemuClient instance. "
      end

      operation 43962039 "~FactoryQemuClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs FactoryQemuClient instance. "
      end

      operation 43962167 "listCameras"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param inout name "list" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Lists camera devices connected to the host.
Param:
 list - Upon success contains a list of cameras connected to the host. The
     list returned here is represented as a string, containing multiple
     lines separated with '\\n', where each line represents a camera. Each
     camera line is formatted as such:

         \"name=<device name> channel=<num> pix=<num> framedims=<dimensions>\\n\"

     Where:
     - 'name' is the name of the camera device attached to the host. This
       name must be used for subsequent connection to the 'emulated camera'
       service for that camera.
     - 'channel' - input channel number (positive int) to use to communicate
       with the camera.
     - 'pix' - pixel format (a \"fourcc\" uint), chosen for the video frames
       by the camera service.
     - 'framedims' contains a list of frame dimensions supported by the
       camera for the chosen pixel format. Each etry in the list is in form
       '<width>x<height>', where 'width' and 'height' are numeric values
       for width and height of a supported frame dimension. Entries in
       this list are separated with ',' with no spaces between the entries.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      attribute 12677431 "mQueryList"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"list\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Names of the queries available for the emulated camera factory.
*************************************************************************
 List cameras connected to the host. 
"
      end
    end

    class 3493431 "EmulatedCameraHotplugThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 6924343 // <generalisation>
	relation 6924343 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6924343 // <generalisation>
	  b parent class_ref 3493559 // typedef9
      end

      operation 43939255 "EmulatedCameraHotplugThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cameraIdArray" explicit_type "int"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)} :
        Thread(/*canCallJava*/false) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43939383 "~EmulatedCameraHotplugThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43939511 "requestExit"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43939639 "requestExitAndWait"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43939767 "readyToRun"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43939895 "threadLoop"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3493687 "SubscriberInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12656951 "CameraID"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12657079 "WatchID"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 43940023 "addWatch"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940151 "removeWatch"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940279 "getSubscriberInfo"
	preserve_cpp_body_indent private return_type class_ref 3493687 // SubscriberInfo
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940407 "getCameraId"
	preserve_cpp_body_indent const private explicit_return_type "int"
	nparams 1
	  param in name "filePath" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940535 "getCameraId"
	preserve_cpp_body_indent const private explicit_return_type "int"
	nparams 1
	  param in name "wd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940663 "getFilePath"
	preserve_cpp_body_indent const private explicit_return_type "String8"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940791 "readFile"
	preserve_cpp_body_indent const private explicit_return_type "int"
	nparams 1
	  param in name "filePath" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43940919 "createFileIfNotExists"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 12657207 "mInotifyFd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12657335 "mSubscribedCameraIds"
	private explicit_type "int"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6924471 // mSubscribers (<directional composition>)
	relation 6924471 *-->
	  stereotype "Vector"
	  a role_name "mSubscribers" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6924471 // mSubscribers (<directional composition>)
	  b parent class_ref 3493687 // SubscriberInfo
      end

      attribute 12657463 "mMutex"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " variables above are unguarded:
 -- accessed in thread loop or in constructor only
"
      end

      attribute 12657591 "mRunning"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " guarding only when it's important"
      end
    end

    class 3493559 "typedef9"
      visibility package stereotype "typedef" explicit_base_type "Thread"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3493815 "EmulatedFakeCamera"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality of a fake camera.
This class is nothing more than a placeholder for EmulatedFakeCameraDevice
instance that emulates a fake camera device.
"
      classrelation 6924599 // <generalisation>
	relation 6924599 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6924599 // <generalisation>
	  b parent class_ref 3491127 // EmulatedCamera
      end

      operation 43941047 "EmulatedFakeCamera"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "cameraId" explicit_type "int"
	  param in name "facingBack" explicit_type "bool"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}
        : EmulatedCamera(cameraId, module),
          mFacingBack(facingBack),
          mFakeCameraDevice(this)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedFakeCamera instance. "
      end

      operation 43941175 "~EmulatedFakeCamera"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedFakeCamera instance. "
      end

      operation 43941303 "Initialize"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API overrides
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera virtual overrides.
*************************************************************************
 Initializes EmulatedFakeCamera instance. "
      end

      operation 43941431 "getCameraDevice"
	preserve_cpp_body_indent protected return_type class_ref 3490743 // EmulatedCameraDevice
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera abstract API implementation.
*************************************************************************
 Gets emulated camera device ised by this instance of the emulated camera.
"
      end

      attribute 12657719 "mFacingBack"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data memebers.
*************************************************************************
 Facing back (true) or front (false) switch. 
"
      end

      classrelation 6924727 // mFakeCameraDevice (<directional composition>)
	relation 6924727 *-->
	  a role_name "mFakeCameraDevice" protected
	    comment " Contained fake camera device object. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6924727 // mFakeCameraDevice (<directional composition>)
	  b parent class_ref 3493943 // EmulatedFakeCameraDevice
      end
    end

    class 3493943 "EmulatedFakeCameraDevice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates a fake camera device.
Fake camera device emulates a camera device by providing frames containing
a black and white checker board, moving diagonally towards the 0,0 corner.
There is also a green, or red square that bounces inside the frame, changing
its color when bouncing off the 0,0 corner.
"
      classrelation 6931639 // <generalisation>
	relation 6931639 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6931639 // <generalisation>
	  b parent class_ref 3490743 // EmulatedCameraDevice
      end

      operation 43954359 "EmulatedFakeCameraDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "camera_hal" type class_ref 3493815 // EmulatedFakeCamera
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}
    : EmulatedCameraDevice(camera_hal),
      mBlackYUV(kBlack32),
      mWhiteYUV(kWhite32),
      mRedYUV(kRed8),
      mGreenYUV(kGreen8),
      mBlueYUV(kBlue8),
      mLastRedrawn(0),
      mCheckX(0),
      mCheckY(0),
      mCcounter(0)
#if EFCD_ROTATE_FRAME
      , mLastRotatedAt(0),
        mCurrentFrameType(0),
        mCurrentColor(&mWhiteYUV)
#endif  // EFCD_ROTATE_FRAME
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedFakeCameraDevice instance. "
      end

      operation 43954487 "~EmulatedFakeCameraDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedFakeCameraDevice instance. "
      end

      operation 43954615 "connectDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Emulated camera device abstract interface implementation.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emulated camera device abstract interface implementation.
See declarations of these methods in EmulatedCameraDevice class for
information on each of these methods.
************************************************************************
 Connects to the camera device.
Since there is no real device to connect to, this method does nothing,
but changes the state.
"
      end

      operation 43954743 "disconnectDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disconnects from the camera device.
Since there is no real device to disconnect from, this method does
nothing, but changes the state.
"
      end

      operation 43954871 "startDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "pix_fmt" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts the camera device. "
      end

      operation 43954999 "stopDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops the camera device. "
      end

      operation 43955127 "getPreviewFrame"
	public explicit_return_type "status_t"
	nparams 1
	  param inout name "buffer" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets current preview fame into provided buffer. "
      end

      operation 43955255 "inWorkerThread"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Worker thread management overrides.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Worker thread management overrides.
See declarations of these methods in EmulatedCameraDevice class for
information on each of these methods.
************************************************************************
 Implementation of the worker thread routine.
This method simply sleeps for a period of time defined by the FPS property
of the fake camera (simulating frame frequency), and then calls emulated
camera's onNextFrameAvailable method.
"
      end

      operation 43955383 "drawCheckerboard"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Fake camera device private API
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fake camera device private API
*************************************************************************
 Draws a black and white checker board in the current frame buffer. "
      end

      operation 43955511 "drawSquare"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "size" explicit_type "int"
	  param in name "color" type class_ref 3497015 // YUVPixel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Draws a square of the given color in the current frame buffer.
Param:
 x, y - Coordinates of the top left corner of the square in the buffer.
 size - Size of the square's side.
 color - Square's color.
"
      end

      operation 43955639 "drawSolid"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "color" type class_ref 3497015 // YUVPixel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43955767 "drawStripes"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43955895 "rotateFrame"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6931767 // mBlackYUV (<directional composition>)
	relation 6931767 *-->
	  a role_name "mBlackYUV" private
	    comment "Fake camera device data members
*************************************************************************

Pixel colors in YUV format used when drawing the checker board.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6931767 // mBlackYUV (<directional composition>)
	  b parent class_ref 3497015 // YUVPixel
      end

      classrelation 6931895 // mWhiteYUV (<directional composition>)
	relation 6931895 *-->
	  a role_name "mWhiteYUV" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6931895 // mWhiteYUV (<directional composition>)
	  b parent class_ref 3497015 // YUVPixel
      end

      classrelation 6932023 // mRedYUV (<directional composition>)
	relation 6932023 *-->
	  a role_name "mRedYUV" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932023 // mRedYUV (<directional composition>)
	  b parent class_ref 3497015 // YUVPixel
      end

      classrelation 6932151 // mGreenYUV (<directional composition>)
	relation 6932151 *-->
	  a role_name "mGreenYUV" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932151 // mGreenYUV (<directional composition>)
	  b parent class_ref 3497015 // YUVPixel
      end

      classrelation 6932279 // mBlueYUV (<directional composition>)
	relation 6932279 *-->
	  a role_name "mBlueYUV" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932279 // mBlueYUV (<directional composition>)
	  b parent class_ref 3497015 // YUVPixel
      end

      classrelation 6932407 // mLastRedrawn (<directional composition>)
	relation 6932407 *-->
	  a role_name "mLastRedrawn" private
	    comment " Last time the frame has been redrawn. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932407 // mLastRedrawn (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      attribute 12672823 "mFrameU"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Precalculated values related to U/V panes.

 U pane inside the framebuffer. 
"
      end

      attribute 12672951 "mFrameV"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " V pane inside the framebuffer. 
"
      end

      attribute 12673079 "mUVStep"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines byte distance between adjacent U, and V values. 
"
      end

      attribute 12673207 "mUVInRow"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Defines number of Us and Vs in a row inside the U/V panes.
Note that if U/V panes are interleaved, this value reflects the total
number of both, Us and Vs in a single row in the interleaved UV pane. 
"
      end

      attribute 12673335 "mUVTotalNum"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Total number of each, U, and V elements in the framebuffer. 
"
      end

      attribute 12673463 "mCheckX"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Checkerboard drawing related stuff

"
      end

      attribute 12673591 "mCheckY"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12673719 "mCcounter"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12673847 "mEmulatedFPS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  50"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Emulated FPS (frames per second).
We will emulate 50 FPS. 
"
      end

      classrelation 6932535 // mRedrawAfter (<directional composition>)
	relation 6932535 *-->
	  a role_name "mRedrawAfter" init_value "=  15000000LL" class_relation const_relation private
	    comment " Defines time (in nanoseconds) between redrawing the checker board.
We will redraw the checker board every 15 milliseconds. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932535 // mRedrawAfter (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      classrelation 6932663 // mRotateFreq (<directional composition>)
	relation 6932663 *-->
	  a role_name "mRotateFreq" init_value "=  3000000000LL" class_relation const_relation private
	    comment " Frame rotation frequency in nanosec (currently - 3 sec) 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932663 // mRotateFreq (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      classrelation 6932791 // mLastRotatedAt (<directional composition>)
	relation 6932791 *-->
	  a role_name "mLastRotatedAt" private
	    comment " Last time the frame has rotated. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932791 // mLastRotatedAt (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      attribute 12673975 "mCurrentFrameType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Type of the frame to display in the current rotation:
 0 - Checkerboard.
 1 - White/Red/Green/Blue horisontal stripes
 2 - Solid color. 
"
      end

      classrelation 6932919 // mCurrentColor (<unidirectional association>)
	relation 6932919 --->
	  a role_name "mCurrentColor" private
	    comment " Color to use to paint the solid color frame. Colors will rotate between
white, red, gree, and blue each time rotation comes to the solid color
frame. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6932919 // mCurrentColor (<unidirectional association>)
	  b parent class_ref 3497015 // YUVPixel
      end
    end

    class 3494071 "EmulatedFakeCamera2"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality of an advanced fake camera.  This camera contains
a simple simulation of a scene, sensor, and image processing pipeline.
"
      classrelation 6924855 // <generalisation>
	relation 6924855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6924855 // <generalisation>
	  b parent class_ref 3491511 // EmulatedCamera2
      end

      operation 43941559 "EmulatedFakeCamera2"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "cameraId" explicit_type "int"
	  param in name "facingBack" explicit_type "bool"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}
        : EmulatedCamera2(cameraId,module),
          mFacingBack(facingBack),
          mIsConnected(false)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedFakeCamera instance. "
      end

      operation 43941687 "~EmulatedFakeCamera2"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedFakeCamera instance. "
      end

      operation 43941815 "Initialize"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API overrides
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera2 virtual overrides.
*************************************************************************
 Initializes EmulatedFakeCamera2 instance. "
      end

      operation 43941943 "connectCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera module API overrides
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera Module API and generic hardware device API implementation
*************************************************************************"
      end

      operation 43942071 "plugCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43942199 "unplugCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43942327 "getHotplugStatus"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "camera_device_status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43942455 "closeCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43942583 "getCameraInfo"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43942711 "requestQueueNotify"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera device API overrides
//*************************************************************************
// Request input queue 

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera2 abstract API implementation.
*************************************************************************
 Request input queue "
      end

      operation 43942839 "getInProgressCount"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Count of requests in flight "
      end

      operation 43942967 "constructDefaultRequest"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 2
	  param in name "request_template" explicit_type "int"
	  param inout name "request" explicit_type "camera_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cancel all captures in flight 
virtual int flushCapturesInProgress();
 Construct default request "
      end

      operation 43943095 "allocateStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 8
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "stream_ops" explicit_type "camera2_stream_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	  param inout name "format_actual" explicit_type "uint32_t"
	  param inout name "usage" explicit_type "uint32_t"
	  param inout name "max_buffers" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} * ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43943223 "registerStreamBuffers"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 3
	  param in name "stream_id" explicit_type "uint32_t"
	  param in name "num_buffers" explicit_type "int"
	  param inout name "buffers" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43943351 "releaseStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43943479 "allocateReprocessStreamFromStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 3
	  param in name "output_stream_id" explicit_type "uint32_t"
	  param in name "stream_ops" explicit_type "camera2_stream_in_ops_t"
	  param inout name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " virtual int allocateReprocessStream(
         uint32_t width,
         uint32_t height,
         uint32_t format,
         const camera2_stream_ops_t *stream_ops,
         uint32_t *stream_id,
         uint32_t *format_actual,
         uint32_t *usage,
         uint32_t *max_buffers);"
      end

      operation 43943607 "releaseReprocessStream"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "stream_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43943735 "triggerAction"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 3
	  param in name "trigger_id" explicit_type "uint32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43943863 "dump"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "int"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Shutdown and debug methods 

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Debug methods "
      end

      operation 43943991 "getStreamInfo"
	preserve_cpp_body_indent public return_type class_ref 3494199 // Stream
	nparams 1
	  param in name "streamId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility methods called by configure/readout threads and pipeline
*************************************************************************
 Get information about a given stream. Will lock mMutex"
      end

      operation 43944119 "getReprocessStreamInfo"
	preserve_cpp_body_indent public return_type class_ref 3494327 // ReprocessStream
	nparams 1
	  param in name "streamId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43944247 "signalError"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Notifies rest of camera subsystem of serious error"
      end

      operation 43944375 "constructStaticInfo"
	preserve_cpp_body_indent const private explicit_return_type "status_t"
	nparams 2
	  param inout name "info" explicit_type "camera_metadata_t"
	  param in name "sizeRequest" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Private methods 

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility methods
*************************************************************************
 Construct static camera metadata, two-pass "
      end

      operation 43944503 "constructDefaultRequest"
	preserve_cpp_body_indent const private explicit_return_type "status_t"
	nparams 3
	  param in name "request_template" explicit_type "int"
	  param inout name "request" explicit_type "camera_metadata_t"
	  param in name "sizeRequest" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Two-pass implementation of constructDefaultRequest "
      end

      operation 43944631 "addOrSize"
	class_operation preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 7
	  param inout name "request" explicit_type "camera_metadata_t"
	  param in name "sizeRequest" explicit_type "bool"
	  param inout name "entryCount" explicit_type "size_t"
	  param inout name "dataCount" explicit_type "size_t"
	  param in name "tag" explicit_type "uint32_t"
	  param in name "entryData" explicit_type "void"
	  param in name "entryDataCount" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}, const ${t5} * ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function for constructDefaultRequest "
      end

      operation 43944759 "isStreamInUse"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determine if the stream id is listed in any currently-in-flight
requests. Assumes mMutex is locked "
      end

      operation 43944887 "isReprocessStreamInUse"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determine if the reprocess stream id is listed in any
currently-in-flight requests. Assumes mMutex is locked "
      end

      class 3494455 "ConfigureThread"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6924983 // <generalisation>
	  relation 6924983 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6924983 // <generalisation>
	    b parent class_ref 3494583 // typedef10
	end

	operation 43945015 "ConfigureThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param inout name "parent" type class_ref 3494071 // EmulatedFakeCamera2
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "// Pipeline control worker thread methods 

${inline}${class}::${name}${(}${t0} * ${p0}${)}:
        Thread(false),
        mParent(parent),
        mRequestCount(0),
        mNextBuffers(NULL) ${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 43945143 "~ConfigureThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 43945271 "waitUntilRunning"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43945399 "newRequestAvailable"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43945527 "readyToRun"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43945655 "isStreamInUse"
	  preserve_cpp_body_indent public explicit_return_type "bool"
	  nparams 1
	    param in name "id" explicit_type "uint32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43945783 "getInProgressCount"
	  preserve_cpp_body_indent public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 6925111 // mParent (<unidirectional association>)
	  relation 6925111 --->
	    a role_name "mParent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6925111 // mParent (<unidirectional association>)
	    b parent class_ref 3494071 // EmulatedFakeCamera2
	end

	classrelation 6925239 // kWaitPerLoop (<directional composition>)
	  relation 6925239 *-->
	    a role_name "kWaitPerLoop" init_value "=  10000000L" class_relation const_relation private
	      comment " 10 ms"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6925239 // kWaitPerLoop (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	attribute 12657847 "mRunning"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 43945911 "threadLoop"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43946039 "setupCapture"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43946167 "setupReprocess"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43946295 "configureNextCapture"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43946423 "configureNextReprocess"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43946551 "getBuffers"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 12657975 "mInputMutex"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Protects mActive, mRequestCount"
	end

	attribute 12658103 "mInputSignal"
	  private explicit_type "Condition"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12658231 "mActive"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether we're waiting for input requests or actively"
	end

	attribute 12658359 "mRequestCount"
	  private explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " working on them
"
	end

	attribute 12658487 "mRequest"
	  private explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12658615 "mInternalsMutex"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Lock before accessing below members."
	end

	attribute 12658743 "mWaitingForReadout"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12658871 "mNextNeedsJpeg"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12658999 "mNextIsCapture"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12659127 "mNextFrameNumber"
	  private explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12659255 "mNextExposureTime"
	  private explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12659383 "mNextFrameDuration"
	  private explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12659511 "mNextSensitivity"
	  private explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6925367 // mNextBuffers (<unidirectional association>)
	  relation 6925367 --->
	    a role_name "mNextBuffers" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6925367 // mNextBuffers (<unidirectional association>)
	    b parent class_ref 3494711 // Buffers
	end
      end

      class 3494583 "typedef10"
	visibility package stereotype "typedef" explicit_base_type "Thread"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3494839 "ReadoutThread"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6925495 // <generalisation>
	  relation 6925495 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6925495 // <generalisation>
	    b parent class_ref 3494583 // typedef10
	end

	classrelation 6925623 // <generalisation>
	  relation 6925623 ---|>
	    a private
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6925623 // <generalisation>
	    b parent class_ref 3495095 // JpegListener
	end

	operation 43946679 "ReadoutThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param inout name "parent" type class_ref 3494071 // EmulatedFakeCamera2
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}:
        Thread(false),
        mParent(parent),
        mRunning(false),
        mActive(false),
        mRequestCount(0),
        mRequest(NULL),
        mBuffers(NULL) ${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 43946807 "~ReadoutThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 43946935 "readyToRun"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43947063 "waitUntilRunning"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Input"
	end

	operation 43947191 "waitForReady"
	  preserve_cpp_body_indent public explicit_return_type "bool"
	  nparams 1
	    param in name "timeout" type class_ref 3490615 // nsecs_t
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43947319 "setNextOperation"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 3
	    param in name "isCapture" explicit_type "bool"
	    param inout name "request" explicit_type "camera_metadata_t"
	    param inout name "buffers" type class_ref 3494711 // Buffers
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43947447 "isStreamInUse"
	  preserve_cpp_body_indent public explicit_return_type "bool"
	  nparams 1
	    param in name "id" explicit_type "uint32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43947575 "getInProgressCount"
	  preserve_cpp_body_indent public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 6925751 // mParent (<unidirectional association>)
	  relation 6925751 --->
	    a role_name "mParent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6925751 // mParent (<unidirectional association>)
	    b parent class_ref 3494071 // EmulatedFakeCamera2
	end

	attribute 12659639 "mRunning"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 43947703 "threadLoop"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43947831 "readyForNextCapture"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43947959 "collectStatisticsMetadata"
	  preserve_cpp_body_indent private explicit_return_type "status_t"
	  nparams 1
	    param inout name "frame" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 12659767 "mInputMutex"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Inputs
 Protects mActive, mInFlightQueue, mRequestCount"
	end

	attribute 12659895 "mInputSignal"
	  private explicit_type "Condition"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12660023 "mReadySignal"
	  private explicit_type "Condition"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12660151 "mActive"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12660279 "kInFlightQueueSize"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  4"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	class 3495223 "InFlightQueue"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 12660407 "isCapture"
	    public explicit_type "bool"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 12660535 "request"
	    public explicit_type "camera_metadata_t"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  classrelation 6925879 // buffers (<unidirectional association>)
	    relation 6925879 --->
	      a role_name "buffers" public
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 6925879 // buffers (<unidirectional association>)
	      b parent class_ref 3494711 // Buffers
	  end
	end

	attribute 12660663 "mInFlightHead"
	  private explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12660791 "mInFlightTail"
	  private explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12660919 "mRequestCount"
	  private explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12661047 "mInternalsMutex"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Internals
"
	end

	attribute 12661175 "mIsCapture"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12661303 "mRequest"
	  private explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6926007 // mBuffers (<unidirectional association>)
	  relation 6926007 --->
	    a role_name "mBuffers" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926007 // mBuffers (<unidirectional association>)
	    b parent class_ref 3494711 // Buffers
	end

	operation 43948087 "onJpegDone"
	  preserve_cpp_body_indent private explicit_return_type "void"
	  nparams 2
	    param in name "jpegBuffer" type class_ref 3495351 // StreamBuffer
	    param in name "success" explicit_type "bool"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Jpeg completion listeners"
	end

	operation 43948215 "onJpegInputDone"
	  preserve_cpp_body_indent private explicit_return_type "void"
	  nparams 1
	    param in name "inputBuffer" type class_ref 3495351 // StreamBuffer
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 6926135 // mJpegTimestamp (<directional composition>)
	  relation 6926135 *-->
	    a role_name "mJpegTimestamp" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926135 // mJpegTimestamp (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end
      end

      class 3495479 "ControlThread"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6926263 // <generalisation>
	  relation 6926263 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6926263 // <generalisation>
	    b parent class_ref 3494583 // typedef10
	end

	operation 43948343 "ControlThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param inout name "parent" type class_ref 3494071 // EmulatedFakeCamera2
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}:
        Thread(false),
        mParent(parent) ${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 43948471 "~ControlThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 43948599 "readyToRun"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43948727 "waitUntilRunning"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43948855 "processRequest"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 1
	    param inout name "request" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// Override android.control.* fields with 3A values before sending request to sensor

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Interpret request's control parameters and override
 capture settings as needed"
	end

	operation 43948983 "triggerAction"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 3
	    param in name "msgType" explicit_type "uint32_t"
	    param in name "ext1" explicit_type "int32_t"
	    param in name "ext2" explicit_type "int32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43949111 "ControlThread"
	  private explicit_return_type ""
	  nparams 1
	    param in name "t" type class_ref 3495479 // ControlThread
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 43949239 "operator ="
	  private return_type class_ref 3495479 // ControlThread
	  nparams 1
	    param in name "t" type class_ref 3495479 // ControlThread
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	classrelation 6926391 // kControlCycleDelay (<directional composition>)
	  relation 6926391 *-->
	    a role_name "kControlCycleDelay" init_value "= 100 * MSEC" class_relation const_relation private
	      comment " Constants controlling fake 3A behavior
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926391 // kControlCycleDelay (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6926519 // kMinAfDuration (<directional composition>)
	  relation 6926519 *-->
	    a role_name "kMinAfDuration" init_value "= 500 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926519 // kMinAfDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6926647 // kMaxAfDuration (<directional composition>)
	  relation 6926647 *-->
	    a role_name "kMaxAfDuration" init_value "= 900 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926647 // kMaxAfDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	attribute 12661431 "kAfSuccessRate"
	  class_attribute const_attribute private explicit_type "float"
	  init_value "= 0.9"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12661559 "kContinuousAfStartRate"
	  class_attribute const_attribute private explicit_type "float"
	  init_value "=
        kControlCycleDelay / 5.0 * SEC"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12661687 "kAeScanStartRate"
	  class_attribute const_attribute private explicit_type "float"
	  init_value "=
    kControlCycleDelay / 3000000000.0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6926775 // kMinAeDuration (<directional composition>)
	  relation 6926775 *-->
	    a role_name "kMinAeDuration" init_value "= 500 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926775 // kMinAeDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6926903 // kMaxAeDuration (<directional composition>)
	  relation 6926903 *-->
	    a role_name "kMaxAeDuration" init_value "= 2 * SEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6926903 // kMaxAeDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927031 // kMinPrecaptureAeDuration (<directional composition>)
	  relation 6927031 *-->
	    a role_name "kMinPrecaptureAeDuration" init_value "= 100 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927031 // kMinPrecaptureAeDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927159 // kMaxPrecaptureAeDuration (<directional composition>)
	  relation 6927159 *-->
	    a role_name "kMaxPrecaptureAeDuration" init_value "= 400 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927159 // kMaxPrecaptureAeDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927287 // kNormalExposureTime (<directional composition>)
	  relation 6927287 *-->
	    a role_name "kNormalExposureTime" init_value "= 10 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927287 // kNormalExposureTime (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927415 // kExposureJump (<directional composition>)
	  relation 6927415 *-->
	    a role_name "kExposureJump" init_value "= 2 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927415 // kExposureJump (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927543 // kMinExposureTime (<directional composition>)
	  relation 6927543 *-->
	    a role_name "kMinExposureTime" init_value "= 1 * MSEC" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927543 // kMinExposureTime (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927671 // mParent (<unidirectional association>)
	  relation 6927671 --->
	    a role_name "mParent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927671 // mParent (<unidirectional association>)
	    b parent class_ref 3494071 // EmulatedFakeCamera2
	end

	attribute 12661815 "mRunning"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 43949367 "threadLoop"
	  preserve_cpp_body_indent private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 12661943 "mInputMutex"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Protects input methods"
	end

	attribute 12662071 "mInputSignal"
	  private explicit_type "Condition"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12662199 "mStartAf"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Trigger notifications
"
	end

	attribute 12662327 "mCancelAf"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12662455 "mStartPrecapture"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12662583 "mControlMode"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Latest state for 3A request fields
"
	end

	attribute 12662711 "mEffectMode"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12662839 "mSceneMode"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12662967 "mAfMode"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12663095 "mAfModeChange"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12663223 "mAwbMode"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12663351 "mAeMode"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12663479 "mAfTriggerId"
	  private explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Latest trigger IDs
"
	end

	attribute 12663607 "mPrecaptureTriggerId"
	  private explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12663735 "mAfState"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Current state for 3A algorithms
"
	end

	attribute 12663863 "mAeState"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12663991 "mAwbState"
	  private explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12664119 "mAeLock"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6927799 // mExposureTime (<directional composition>)
	  relation 6927799 *-->
	    a role_name "mExposureTime" private
	      comment " Current control parameters
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927799 // mExposureTime (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6927927 // mAfScanDuration (<directional composition>)
	  relation 6927927 *-->
	    a role_name "mAfScanDuration" private
	      comment " Private to threadLoop and its utility methods
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6927927 // mAfScanDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6928055 // mAeScanDuration (<directional composition>)
	  relation 6928055 *-->
	    a role_name "mAeScanDuration" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6928055 // mAeScanDuration (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	attribute 12664247 "mLockAfterPassiveScan"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 43949495 "processAfTrigger"
	  preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "afMode" explicit_type "uint8_t"
	    param in name "afState" explicit_type "uint8_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Utility methods for AF"
	end

	operation 43949623 "maybeStartAfScan"
	  preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "afMode" explicit_type "uint8_t"
	    param in name "afState" explicit_type "uint8_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43949751 "updateAfScan"
	  preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 3
	    param in name "afMode" explicit_type "uint8_t"
	    param in name "afState" explicit_type "uint8_t"
	    param inout name "maxSleep" type class_ref 3490615 // nsecs_t
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43949879 "updateAfState"
	  preserve_cpp_body_indent private explicit_return_type "void"
	  nparams 2
	    param in name "newState" explicit_type "uint8_t"
	    param in name "triggerId" explicit_type "int32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43950007 "processPrecaptureTrigger"
	  preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "aeMode" explicit_type "uint8_t"
	    param in name "aeState" explicit_type "uint8_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Utility methods for precapture trigger"
	end

	operation 43950135 "maybeStartAeScan"
	  preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 3
	    param in name "aeMode" explicit_type "uint8_t"
	    param in name "aeLocked" explicit_type "bool"
	    param in name "aeState" explicit_type "uint8_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43950263 "updateAeScan"
	  preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 4
	    param in name "aeMode" explicit_type "uint8_t"
	    param in name "aeLock" explicit_type "bool"
	    param in name "aeState" explicit_type "uint8_t"
	    param inout name "maxSleep" type class_ref 3490615 // nsecs_t
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43950391 "updateAeState"
	  preserve_cpp_body_indent private explicit_return_type "void"
	  nparams 2
	    param in name "newState" explicit_type "uint8_t"
	    param in name "triggerId" explicit_type "int32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 12664375 "kMaxRawStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Static configuration information
*************************************************************************
"
      end

      attribute 12664503 "kMaxProcessedStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12664631 "kMaxJpegStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12664759 "kMaxReprocessStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12664887 "kMaxBufferCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665015 "kAvailableFormats"
	class_attribute const_attribute private explicit_type "uint32_t"
	multiplicity "[]"
	init_value "= {
        HAL_PIXEL_FORMAT_RAW16,
        HAL_PIXEL_FORMAT_BLOB,
        HAL_PIXEL_FORMAT_RGBA_8888,
        //        HAL_PIXEL_FORMAT_YV12,
        HAL_PIXEL_FORMAT_YCrCb_420_SP
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665143 "kAvailableRawSizes"
	class_attribute const_attribute private explicit_type "uint32_t"
	multiplicity "[]"
	init_value "= {
    640, 480
    //    Sensor::kResolution[0], Sensor::kResolution[1]
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665271 "kAvailableRawMinDurations"
	class_attribute const_attribute private explicit_type "uint64_t"
	multiplicity "[]"
	init_value "= {
    static_cast<uint64_t>(Sensor::kFrameDurationRange[0])
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665399 "kAvailableProcessedSizesBack"
	class_attribute const_attribute private explicit_type "uint32_t"
	multiplicity "[]"
	init_value "= {
    640, 480, 320, 240
    //    Sensor::kResolution[0], Sensor::kResolution[1]
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665527 "kAvailableProcessedSizesFront"
	class_attribute const_attribute private explicit_type "uint32_t"
	multiplicity "[]"
	init_value "= {
    320, 240, 160, 120
    //    Sensor::kResolution[0], Sensor::kResolution[1]
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665655 "kAvailableProcessedMinDurations"
	class_attribute const_attribute private explicit_type "uint64_t"
	multiplicity "[]"
	init_value "= {
    static_cast<uint64_t>(Sensor::kFrameDurationRange[0])
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665783 "kAvailableJpegSizesBack"
	class_attribute const_attribute private explicit_type "uint32_t"
	multiplicity "[]"
	init_value "= {
    640, 480
    //    Sensor::kResolution[0], Sensor::kResolution[1]
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12665911 "kAvailableJpegSizesFront"
	class_attribute const_attribute private explicit_type "uint32_t"
	multiplicity "[]"
	init_value "= {
    320, 240
    //    Sensor::kResolution[0], Sensor::kResolution[1]
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12666039 "kAvailableJpegMinDurations"
	class_attribute const_attribute private explicit_type "uint64_t"
	multiplicity "[]"
	init_value "= {
    static_cast<uint64_t>(Sensor::kFrameDurationRange[0])
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12666167 "mFacingBack"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members.
*************************************************************************
 Facing back (true) or front (false) switch. 
"
      end

      attribute 12666295 "mIsConnected"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12666423 "mNextStreamId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stream manipulation 
"
      end

      attribute 12666551 "mRawStreamCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12666679 "mProcessedStreamCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12666807 "mJpegStreamCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12666935 "mNextReprocessStreamId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12667063 "mReprocessStreamCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6928183 // mStreams (<directional composition>)
	relation 6928183 *-->
	  stereotype "KeyedVector"
	  a role_name "mStreams" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<uint32_t,${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928183 // mStreams (<directional composition>)
	  b parent class_ref 3494199 // Stream
      end

      classrelation 6928311 // mReprocessStreams (<directional composition>)
	relation 6928311 *-->
	  stereotype "KeyedVector"
	  a role_name "mReprocessStreams" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<uint32_t,${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928311 // mReprocessStreams (<directional composition>)
	  b parent class_ref 3494327 // ReprocessStream
      end

      classrelation 6928439 // mSensor (<directional composition>)
	relation 6928439 *-->
	  stereotype "sp"
	  a role_name "mSensor" private
	    comment " Simulated hardware interfaces 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928439 // mSensor (<directional composition>)
	  b parent class_ref 3495607 // Sensor
      end

      classrelation 6928567 // mJpegCompressor (<directional composition>)
	relation 6928567 *-->
	  stereotype "sp"
	  a role_name "mJpegCompressor" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928567 // mJpegCompressor (<directional composition>)
	  b parent class_ref 3494967 // JpegCompressor
      end

      classrelation 6928695 // mConfigureThread (<directional composition>)
	relation 6928695 *-->
	  stereotype "sp"
	  a role_name "mConfigureThread" private
	    comment " Pipeline control threads 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928695 // mConfigureThread (<directional composition>)
	  b parent class_ref 3494455 // ConfigureThread
      end

      classrelation 6928823 // mReadoutThread (<directional composition>)
	relation 6928823 *-->
	  stereotype "sp"
	  a role_name "mReadoutThread" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928823 // mReadoutThread (<directional composition>)
	  b parent class_ref 3494839 // ReadoutThread
      end

      classrelation 6928951 // mControlThread (<directional composition>)
	relation 6928951 *-->
	  stereotype "sp"
	  a role_name "mControlThread" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6928951 // mControlThread (<directional composition>)
	  b parent class_ref 3495479 // ControlThread
      end
    end

    class 3495735 "EmulatedFakeCamera3"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Encapsulates functionality for a v3 HAL camera which produces synthetic data.

Note that EmulatedCameraFactory instantiates an object of this class just
once, when EmulatedCameraFactory instance gets constructed. Connection to /
disconnection from the actual camera device is handled by calls to
connectDevice(), and closeCamera() methods of this class that are invoked in
response to hw_module_methods_t::open, and camera_device::close callbacks.
"
      classrelation 6929079 // <generalisation>
	relation 6929079 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6929079 // <generalisation>
	  b parent class_ref 3492023 // EmulatedCamera3
      end

      classrelation 6929207 // <generalisation>
	relation 6929207 ---|>
	  a private
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6929207 // <generalisation>
	  b parent class_ref 3495863 // SensorListener
      end

      operation 43950519 "EmulatedFakeCamera3"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "cameraId" explicit_type "int"
	  param in name "facingBack" explicit_type "bool"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "//Camera device lifecycle methods
//

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)} :
        EmulatedCamera3(cameraId, module),
        mFacingBack(facingBack) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 43950647 "~EmulatedFakeCamera3"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 43950775 "Initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera3 virtual overrides
*************************************************************************"
      end

      operation 43950903 "connectCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Camera module API and generic hardware device API implementation
*************************************************************************"
      end

      operation 43951031 "closeCamera"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43951159 "getCameraInfo"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43951287 "configureStreams"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param inout name "streamList" explicit_type "camera3_stream_configuration"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Camera3 interface methods
//

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera3 abstract API implementation
*************************************************************************"
      end

      operation 43951415 "registerStreamBuffers"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param in name "bufferSet" explicit_type "camera3_stream_buffer_set"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43951543 "constructDefaultRequestSettings"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "camera_metadata_t"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43951671 "processCaptureRequest"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param inout name "request" explicit_type "camera3_capture_request"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43951799 "flush"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43951927 "dump"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Debug methods "
      end

      operation 43952055 "getCameraCapabilities"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Private methods
//

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the requested capability set for this camera
"
      end

      operation 43952183 "hasCapability"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "cap" explicit_type "AvailableCapabilities"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43952311 "constructStaticInfo"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Build the static info metadata buffer for this device
"
      end

      operation 43952439 "process3A"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 1
	  param inout name "settings" explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Run the fake 3A algorithms as needed. May override/modify settings
values.
"
      end

      operation 43952567 "doFakeAE"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 1
	  param inout name "settings" explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43952695 "doFakeAF"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 1
	  param inout name "settings" explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43952823 "doFakeAWB"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 1
	  param inout name "settings" explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43952951 "update3A"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "settings" explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 43953079 "signalReadoutIdle"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Signal from readout thread that it doesn't have anything to do "
      end

      operation 43953207 "onSensorEvent"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "frameNumber" explicit_type "uint32_t"
	  param in name "e" type class_ref 3495991 // Event
	  param in name "timestamp" type class_ref 3490615 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle interrupt events from the sensor "
      end

      attribute 12667191 "kMaxRawStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Static configuration information
*************************************************************************
"
      end

      attribute 12667319 "kMaxProcessedStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12667447 "kMaxJpegStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12667575 "kMaxReprocessStreamCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12667703 "kMaxBufferCount"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12667831 "kGenericStreamId"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " We need a positive stream ID to distinguish external buffers from
 sensor-generated buffers which use a nonpositive ID. Otherwise, HAL3 has
 no concept of a stream id.
"
      end

      attribute 12667959 "kAvailableFormats"
	class_attribute const_attribute private explicit_type "int32_t"
	multiplicity "[]"
	init_value "= {
        HAL_PIXEL_FORMAT_RAW16,
        HAL_PIXEL_FORMAT_BLOB,
        HAL_PIXEL_FORMAT_RGBA_8888,
        HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED,
        // These are handled by YCbCr_420_888
        //        HAL_PIXEL_FORMAT_YV12,
        //        HAL_PIXEL_FORMAT_YCrCb_420_SP,
        HAL_PIXEL_FORMAT_YCbCr_420_888,
        HAL_PIXEL_FORMAT_Y16
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12668087 "kSyncWaitTimeout"
	class_attribute const_attribute private explicit_type "int64_t"
	init_value "=  10000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 10 ms"
      end

      attribute 12668215 "kMaxSyncTimeoutCount"
	class_attribute const_attribute private explicit_type "int32_t"
	init_value "=  1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 1000 kSyncWaitTimeouts"
      end

      attribute 12668343 "kFenceTimeoutMs"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  2000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 2 s"
      end

      attribute 12668471 "mLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members.
*************************************************************************
 HAL interface serialization lock. 
"
      end

      attribute 12668599 "mFacingBack"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Facing back (true) or front (false) switch. 
"
      end

      attribute 12668727 "mCapabilities"
	private explicit_type "AvailableCapabilities"
	stereotype "SortedVector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12668855 "mDefaultTemplates"
	private explicit_type "camera_metadata_t"
	multiplicity "[CAMERA3_TEMPLATE_COUNT]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Cache for default templates. Once one is requested, the pointer must be
valid at least until close() is called on the device

"
      end

      class 3496119 "PrivateStreamInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 12668983 "alive"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      attribute 12669111 "mInputStream"
	private explicit_type "camera3_stream_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Shortcut to the input stream
"
      end

      class 3496247 "StreamList"
	visibility package stereotype "typedef" explicit_base_type "List<camera3_stream_t*>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3496375 "StreamIterator"
	visibility package stereotype "typedef" explicit_base_type "List<camera3_stream_t*>::iterator"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3496503 "HalBufferVector"
	visibility package stereotype "typedef" explicit_base_type "Vector<camera3_stream_buffer>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 6929335 // mStreams (<directional composition>)
	relation 6929335 *-->
	  a role_name "mStreams" private
	    comment " All streams, including input stream
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6929335 // mStreams (<directional composition>)
	  b parent class_ref 3496247 // StreamList
      end

      attribute 12669239 "mPrevSettings"
	private explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached settings from latest submitted request
"
      end

      classrelation 6929463 // mSensor (<directional composition>)
	relation 6929463 *-->
	  stereotype "sp"
	  a role_name "mSensor" private
	    comment " Fake hardware interfaces 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6929463 // mSensor (<directional composition>)
	  b parent class_ref 3495607 // Sensor
      end

      classrelation 6929591 // mJpegCompressor (<directional composition>)
	relation 6929591 *-->
	  stereotype "sp"
	  a role_name "mJpegCompressor" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6929591 // mJpegCompressor (<directional composition>)
	  b parent class_ref 3494967 // JpegCompressor
      end

      classrelation 6929719 // <dependency>
	relation 6929719 -_->
	  stereotype "friend"
	  a public
	    cpp default "Generated"
	    classrelation_ref 6929719 // <dependency>
	  b parent class_ref 3494967 // JpegCompressor
      end

      class 3496631 "ReadoutThread"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 6929847 // <generalisation>
	  relation 6929847 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6929847 // <generalisation>
	    b parent class_ref 3496759 // typedef11
	end

	classrelation 6929975 // <generalisation>
	  relation 6929975 ---|>
	    a private
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6929975 // <generalisation>
	    b parent class_ref 3495095 // JpegListener
	end

	operation 43953335 "ReadoutThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param inout name "parent" type class_ref 3495735 // EmulatedFakeCamera3
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)} :
        mParent(parent), mJpegWaiting(false) ${throw}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 43953463 "~ReadoutThread"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	class 3496887 "Request"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 12669367 "frameNumber"
	    public explicit_type "uint32_t"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 12669495 "settings"
	    public explicit_type "CameraMetadata"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  classrelation 6930103 // buffers (<unidirectional association>)
	    relation 6930103 --->
	      a role_name "buffers" public
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 6930103 // buffers (<unidirectional association>)
	      b parent class_ref 3496503 // HalBufferVector
	  end

	  classrelation 6930231 // sensorBuffers (<unidirectional association>)
	    relation 6930231 --->
	      a role_name "sensorBuffers" public
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 6930231 // sensorBuffers (<unidirectional association>)
	      b parent class_ref 3494711 // Buffers
	  end
	end

	operation 43953591 "queueCaptureRequest"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 1
	    param in name "r" type class_ref 3496887 // Request
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Interface to parent class

 Place request in the in-flight queue to wait for sensor capture"
	end

	operation 43953719 "isIdle"
	  preserve_cpp_body_indent public explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Test if the readout thread is idle (no in-flight requests, not
 currently reading out anything"
	end

	operation 43953847 "waitForReadout"
	  preserve_cpp_body_indent public explicit_return_type "status_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Wait until isIdle is true"
	end

	classrelation 6930359 // kWaitPerLoop (<directional composition>)
	  relation 6930359 *-->
	    a role_name "kWaitPerLoop" init_value "=  10000000L" class_relation const_relation private
	      comment " 10 ms"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6930359 // kWaitPerLoop (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	classrelation 6930487 // kMaxWaitLoops (<directional composition>)
	  relation 6930487 *-->
	    a role_name "kMaxWaitLoops" init_value "=  1000" class_relation const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6930487 // kMaxWaitLoops (<directional composition>)
	    b parent class_ref 3490615 // nsecs_t
	end

	attribute 12669623 "kMaxQueueSize"
	  class_attribute const_attribute private explicit_type "size_t"
	  init_value "=  2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6930615 // mParent (<unidirectional association>)
	  relation 6930615 --->
	    a role_name "mParent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6930615 // mParent (<unidirectional association>)
	    b parent class_ref 3495735 // EmulatedFakeCamera3
	end

	attribute 12669751 "mLock"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 6930743 // mInFlightQueue (<directional composition>)
	  relation 6930743 *-->
	    stereotype "List"
	    a role_name "mInFlightQueue" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6930743 // mInFlightQueue (<directional composition>)
	    b parent class_ref 3496887 // Request
	end

	attribute 12669879 "mInFlightSignal"
	  private explicit_type "Condition"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12670007 "mThreadActive"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 43953975 "threadLoop"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 6930871 // mCurrentRequest (<directional composition>)
	  relation 6930871 *-->
	    a role_name "mCurrentRequest" private
	      comment " Only accessed by threadLoop
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6930871 // mCurrentRequest (<directional composition>)
	    b parent class_ref 3496887 // Request
	end

	attribute 12670135 "mJpegLock"
	  private explicit_type "Mutex"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Jpeg completion callbacks
"
	end

	attribute 12670263 "mJpegWaiting"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12670391 "mJpegHalBuffer"
	  private explicit_type "camera3_stream_buffer"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 12670519 "mJpegFrameNumber"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 43954103 "onJpegDone"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	  nparams 2
	    param in name "jpegBuffer" type class_ref 3495351 // StreamBuffer
	    param in name "success" explicit_type "bool"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 43954231 "onJpegInputDone"
	  preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	  nparams 1
	    param in name "inputBuffer" type class_ref 3495351 // StreamBuffer
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 3496759 "typedef11"
	visibility package stereotype "typedef" explicit_base_type "Thread"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 6930999 // mReadoutThread (<directional composition>)
	relation 6930999 *-->
	  stereotype "sp"
	  a role_name "mReadoutThread" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6930999 // mReadoutThread (<directional composition>)
	  b parent class_ref 3496631 // ReadoutThread
      end

      classrelation 6931127 // kNormalExposureTime (<directional composition>)
	relation 6931127 *-->
	  a role_name "kNormalExposureTime" init_value "= 10 * MSEC" class_relation const_relation private
	    comment " Fake 3A constants 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6931127 // kNormalExposureTime (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      classrelation 6931255 // kFacePriorityExposureTime (<directional composition>)
	relation 6931255 *-->
	  a role_name "kFacePriorityExposureTime" init_value "= 30 * MSEC" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6931255 // kFacePriorityExposureTime (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      attribute 12670647 "kNormalSensitivity"
	class_attribute const_attribute private explicit_type "int"
	init_value "= 100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12670775 "kFacePrioritySensitivity"
	class_attribute const_attribute private explicit_type "int"
	init_value "= 400"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12670903 "kExposureTrackRate"
	class_attribute const_attribute private explicit_type "float"
	init_value "= 0.1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Rate of converging AE to new target value, as fraction of difference between
 current and target value.
"
      end

      attribute 12671031 "kPrecaptureMinFrames"
	class_attribute const_attribute private explicit_type "int"
	init_value "= 10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Minimum duration for precapture state. May be longer if slow to converge
 to target exposure
"
      end

      attribute 12671159 "kStableAeMaxFrames"
	class_attribute const_attribute private explicit_type "int"
	init_value "= 100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " How often to restart AE 'scanning'
"
      end

      attribute 12671287 "kExposureWanderMin"
	class_attribute const_attribute private explicit_type "float"
	init_value "= -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maximum stop below 'normal' exposure time that we'll wander to while
 pretending to converge AE. In powers of 2. (-2 == 1/4 as bright)
"
      end

      attribute 12671415 "kExposureWanderMax"
	class_attribute const_attribute private explicit_type "float"
	init_value "= 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Maximum stop above 'normal' exposure time that we'll wander to while
 pretending to converge AE. In powers of 2. (2 == 4x as bright)
"
      end

      attribute 12671543 "mControlMode"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fake 3A state 
"
      end

      attribute 12671671 "mFacePriority"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12671799 "mAeState"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12671927 "mAfState"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12672055 "mAwbState"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12672183 "mAeMode"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12672311 "mAfMode"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12672439 "mAwbMode"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 12672567 "mAeCounter"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 6931383 // mAeCurrentExposureTime (<directional composition>)
	relation 6931383 *-->
	  a role_name "mAeCurrentExposureTime" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6931383 // mAeCurrentExposureTime (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      classrelation 6931511 // mAeTargetExposureTime (<directional composition>)
	relation 6931511 *-->
	  a role_name "mAeTargetExposureTime" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6931511 // mAeTargetExposureTime (<directional composition>)
	  b parent class_ref 3490615 // nsecs_t
      end

      attribute 12672695 "mAeCurrentSensitivity"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3497015 "YUVPixel"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3497143 "EmulatedQemuCamera"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality of an emulated camera connected to the host.
"
      classrelation 6933047 // <generalisation>
	relation 6933047 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6933047 // <generalisation>
	  b parent class_ref 3491127 // EmulatedCamera
      end

      operation 43956023 "EmulatedQemuCamera"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}
        : EmulatedCamera(cameraId, module),
          mQemuCameraDevice(this)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedQemuCamera instance. "
      end

      operation 43956151 "~EmulatedQemuCamera"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedQemuCamera instance. "
      end

      operation 43956279 "Initialize"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "device_name" explicit_type "char"
	  param in name "frame_dims" explicit_type "char"
	  param in name "facing_dir" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//EmulatedCamera virtual overrides.
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera virtual overrides.
************************************************************************
 Initializes EmulatedQemuCamera instance. "
      end

      operation 43956407 "getCameraDevice"
	preserve_cpp_body_indent protected return_type class_ref 3490743 // EmulatedCameraDevice
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera abstract API implementation.
************************************************************************
 Gets emulated camera device ised by this instance of the emulated camera.
"
      end

      classrelation 6933175 // mQemuCameraDevice (<directional composition>)
	relation 6933175 *-->
	  a role_name "mQemuCameraDevice" protected
	    comment "Data memebers.
************************************************************************
 Contained qemu camera device object. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6933175 // mQemuCameraDevice (<directional composition>)
	  b parent class_ref 3497271 // EmulatedQemuCameraDevice
      end

      attribute 12674103 "mFrameDims"
	protected explicit_type "String8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Supported frame dimensions reported by the camera device. 
"
      end
    end

    class 3497271 "EmulatedQemuCameraDevice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates an emulated camera device connected to the host.
"
      classrelation 6933431 // <generalisation>
	relation 6933431 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6933431 // <generalisation>
	  b parent class_ref 3490743 // EmulatedCameraDevice
      end

      operation 43956919 "EmulatedQemuCameraDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "camera_hal" type class_ref 3497143 // EmulatedQemuCamera
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}
    : EmulatedCameraDevice(camera_hal),
      mQemuClient(),
      mPreviewFrame(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedQemuCameraDevice instance. "
      end

      operation 43957047 "~EmulatedQemuCameraDevice"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedQemuCameraDevice instance. "
      end

      operation 43957175 "Initialize"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "device_name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
************************************************************************
 Initializes EmulatedQemuCameraDevice instance.
Param:
 device_name - Name of the camera device connected to the host. The name
     that is used here must have been reported by the 'factory' camera
     service when it listed camera devices connected to the host.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43957303 "connectDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Emulated camera device abstract interface implementation.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emulated camera device abstract interface implementation.
See declarations of these methods in EmulatedCameraDevice class for
information on each of these methods.
************************************************************************
 Connects to the camera device. "
      end

      operation 43957431 "disconnectDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disconnects from the camera device. "
      end

      operation 43957559 "startDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "pix_fmt" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts capturing frames from the camera device. "
      end

      operation 43957687 "stopDevice"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Stops capturing frames from the camera device. "
      end

      operation 43957815 "getCurrentPreviewFrame"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param inout name "buffer" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//EmulatedCameraDevice virtual overrides
//*************************************************************************

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCameraDevice virtual overrides
See declarations of these methods in EmulatedCameraDevice class for
information on each of these methods.
************************************************************************
 Gets current preview fame into provided buffer.
We override this method in order to provide preview frames cached in this
object.
"
      end

      operation 43957943 "inWorkerThread"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Worker thread management overrides.
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Worker thread management overrides.
See declarations of these methods in EmulatedCameraDevice class for
information on each of these methods.
************************************************************************
 Implementation of the worker thread routine. "
      end

      classrelation 6933559 // mQemuClient (<directional composition>)
	relation 6933559 *-->
	  a role_name "mQemuClient" private
	    comment "Qemu camera device data members
************************************************************************
 Qemu client that is used to communicate with the 'emulated camera'
service, created for this instance in the emulator. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6933559 // mQemuClient (<directional composition>)
	  b parent class_ref 3497527 // CameraQemuClient
      end

      attribute 12674359 "mDeviceName"
	private explicit_type "String8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Name of the camera device connected to the host. 
"
      end

      attribute 12674487 "mPreviewFrame"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Current preview framebuffer. 
"
      end

      attribute 12674615 "mEmulatedFPS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  50"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Emulated FPS (frames per second).
We will emulate 50 FPS. 
"
      end
    end

    class 3497399 "EmulatedQemuCamera2"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates functionality of an advanced fake camera based on real host camera data.
"
      classrelation 6933303 // <generalisation>
	relation 6933303 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6933303 // <generalisation>
	  b parent class_ref 3491511 // EmulatedCamera2
      end

      operation 43956535 "EmulatedQemuCamera2"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "cameraId" explicit_type "int"
	  param in name "facingBack" explicit_type "bool"
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}
        : EmulatedCamera2(cameraId,module),
          mFacingBack(facingBack)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs EmulatedFakeCamera instance. "
      end

      operation 43956663 "~EmulatedQemuCamera2"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs EmulatedFakeCamera instance. "
      end

      operation 43956791 "Initialize"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API overrides
//*************************************************************************

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EmulatedCamera2 virtual overrides.
*************************************************************************
 Initializes EmulatedQemuCamera2 instance. "
      end

      attribute 12674231 "mFacingBack"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "EmulatedCamera abstract API implementation.
*************************************************************************

Data memebers.
*************************************************************************
 Facing back (true) or front (false) switch. 
"
      end
    end

    class 3497527 "CameraQemuClient"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Qemu client for an 'emulated camera' service.
*************************************************************************
 Encapsulates QemuClient for an 'emulated camera' service.
"
      classrelation 6933943 // <generalisation>
	relation 6933943 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6933943 // <generalisation>
	  b parent class_ref 3498039 // QemuClient
      end

      operation 43962295 "CameraQemuClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : QemuClient()
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs CameraQemuClient instance. "
      end

      operation 43962423 "~CameraQemuClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs CameraQemuClient instance. "
      end

      operation 43962551 "queryConnect"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Queries camera connection.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43962679 "queryDisconnect"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Queries camera disconnection.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43962807 "queryStart"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "pixel_format" explicit_type "uint32_t"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Queries camera to start capturing video.
Param:
 pixel_format - Pixel format that is used by the client to push video
     frames to the camera framework.
 width, height - Frame dimensions, requested by the framework.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43962935 "queryStop"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Queries camera to stop capturing video.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43963063 "queryFrame"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 8
	  param inout name "vframe" explicit_type "void"
	  param inout name "pframe" explicit_type "void"
	  param in name "vframe_size" explicit_type "size_t"
	  param in name "pframe_size" explicit_type "size_t"
	  param in name "r_scale" explicit_type "float"
	  param in name "g_scale" explicit_type "float"
	  param in name "b_scale" explicit_type "float"
	  param in name "exposure_comp" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Queries camera for the next video frame.
Param:
 vframe, vframe_size - Define buffer, allocated to receive a video frame.
     Any of these parameters can be 0, indicating that the caller is
     interested only in preview frame.
 pframe, pframe_size - Define buffer, allocated to receive a preview frame.
     Any of these parameters can be 0, indicating that the caller is
     interested only in video frame.
 r_scale, g_scale, b_scale - White balance scale.
 exposure_comp - Expsoure compensation.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      attribute 12677559 "mQueryConnect"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"connect\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Names of the queries available for the emulated camera.
*************************************************************************
 Connect to the camera. 
"
      end

      attribute 12677687 "mQueryDisconnect"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"disconnect\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Disconnect from the camera. 
"
      end

      attribute 12677815 "mQueryStart"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"start\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Start video capturing. 
"
      end

      attribute 12677943 "mQueryStop"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"stop\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stop video capturing. 
"
      end

      attribute 12678071 "mQueryFrame"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"frame\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Query frame(s). 
"
      end
    end

    class 3497655 "NV21JpegCompressor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Encapsulates a converter between YV12, and JPEG formats.
"
      operation 43958071 "NV21JpegCompressor"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs JpegCompressor instance. "
      end

      operation 43958199 "~NV21JpegCompressor"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs JpegCompressor instance. "
      end

      operation 43958327 "compressRawImage"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 4
	  param in name "image" explicit_type "void"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "quality" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Public API
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Compresses raw NV21 image into a JPEG.
The compressed image will be saved in mStream member of this class. Use
getCompressedSize method to obtain buffer size of the compressed image,
and getCompressedImage to copy out the compressed image.
Param:
 image - Raw NV21 image.
 width, height - Image dimensions.
 quality - JPEG quality.
Return:
 NO_ERROR on success, or an appropriate error status.

"
      end

      operation 43958455 "getCompressedSize"
	preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get size of the compressed JPEG buffer.
This method must be called only after a successful completion of
compressRawImage call.
Return:
 Size of the compressed JPEG buffer.
"
      end

      operation 43958583 "getCompressedImage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "buff" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Copies out compressed JPEG buffer.
This method must be called only after a successful completion of
compressRawImage call.
Param:
 buff - Buffer where to copy the JPEG. Must be large enough to contain the
     entire image.
"
      end

      attribute 12674743 "mStrides"
	protected explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Class data
*************************************************************************
 Strides for Y (the first element), and UV (the second one) panes. 
"
      end

      attribute 12674871 "mDl"
	class_attribute private explicit_type "void"
	init_value "= NULL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " library handle to dlopen
"
      end

      classrelation 6933687 // mStub (<directional composition>)
	relation 6933687 *-->
	  a role_name "mStub" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6933687 // mStub (<directional composition>)
	  b parent class_ref 3497783 // JpegStub
      end
    end

    class 3497911 "QemuQuery"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Qemu query
*************************************************************************
 Encapsulates a query to the emulator.
Guest exchanges data with the emulator via queries sent over the qemu pipe.
The queries as well as replies to the queries are all strings (except for the
'frame' query where reply is a framebuffer).
Each query is formatted as such:

     \"<query name>[ <parameters>]\",

where <query name> is a string representing query name, and <parameters> are
optional parameters for the query. If parameters are present, they must be
separated from the query name with a single space, and they must be formatted
as such:

     \"<name1>=<value1> <name2>=<value2> ... <nameN>=<valueN>\"

I.e.:
 - Every parameter must have a name, and a value.
 - Name and value must be separated with '='.
 - No spaces are allowed around '=' separating name and value.
 - Parameters must be separated with a single space character.
 - No '=' character is allowed in name and in value.

There are certain restrictions on strings used in the query:
 - Spaces are allowed only as separators.
 - '=' are allowed only to divide parameter names from parameter values.

Emulator replies to each query in two chunks:
- 8 bytes encoding the payload size as a string containing hexadecimal
  representation of the payload size value. This is done in order to simplify
  dealing with different endianness on the host, and on the guest.
- Payload, whose size is defined by the first chunk.

Every payload always begins with two characters, encoding the result of the
query:
 - 'ok' Encoding the success
 - 'ko' Encoding a failure.
After that payload may have optional data. If payload has more data following
the query result, there is a ':' character separating them. If payload carries
only the result, it always ends with a zero-terminator. So, payload 'ok'/'ko'
prefix is always 3 bytes long: it either includes a zero-terminator, if there
is no data, or a ':' separator.
"
      operation 43959863 "QemuQuery"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//Qemu query
//*************************************************************************

${inline}${class}::${name}${(}${)}
    : mQuery(mQueryPrealloc),
      mQueryDeliveryStatus(NO_ERROR),
      mReplyBuffer(NULL),
      mReplyData(NULL),
      mReplySize(0),
      mReplyDataSize(0),
      mReplyStatus(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs an uninitialized QemuQuery instance. "
      end

      operation 43959991 "QemuQuery"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "query_string" explicit_type "char"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} * ${p0}${)}
    : mQuery(mQueryPrealloc),
      mQueryDeliveryStatus(NO_ERROR),
      mReplyBuffer(NULL),
      mReplyData(NULL),
      mReplySize(0),
      mReplyDataSize(0),
      mReplyStatus(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs and initializes QemuQuery instance for a query.
Param:
 query_string - Query string. This constructor can also be used to
     construct a query that doesn't have parameters. In this case query
     name can be passed as a parameter here.
"
      end

      operation 43960119 "QemuQuery"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "query_name" explicit_type "char"
	  param in name "query_param" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}
    : mQuery(mQueryPrealloc),
      mQueryDeliveryStatus(NO_ERROR),
      mReplyBuffer(NULL),
      mReplyData(NULL),
      mReplySize(0),
      mReplyDataSize(0),
      mReplyStatus(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs and initializes QemuQuery instance for a query with parameters.
Param:
 query_name - Query name.
 query_param - Query parameters. Can be NULL.
"
      end

      operation 43960247 "~QemuQuery"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs QemuQuery instance. "
      end

      operation 43960375 "createQuery"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "param" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public API
*************************************************************************
 Creates new query.
Note: this method will reset this instance prior to creating a new query
in order to discard possible \"leftovers\" from the previous query.
Param:
 query_name - Query name.
 query_param - Query parameters. Can be NULL.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43960503 "completeQuery"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "status" explicit_type "status_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Completes the query after a reply from the emulator.
This method will parse the reply buffer, and calculate the final query
status, which depends not only on the transport success / failure, but
also on 'ok' / 'ko' in the reply buffer.
Param:
 status - Query delivery status. This status doesn't necessarily reflects
     the final query status (which is defined by 'ok'/'ko' prefix in the
     reply buffer). This status simply states whether or not the query has
     been sent, and a reply has been received successfuly. However, if
     this status indicates a failure, it means that the entire query has
     failed.
Return:
 NO_ERROR on success, or an appropriate error status on failure. Note that
 status returned here just signals whether or not the method has succeeded.
 Use isQuerySucceeded() / getCompletionStatus() methods of this class to
 check the final query status.
"
      end

      operation 43960631 "resetQuery"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Resets the query from a previous use. "
      end

      operation 43960759 "isQuerySucceeded"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mQueryDeliveryStatus == NO_ERROR && mReplyStatus != 0;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if query has succeeded.
Note that this method must be called after completeQuery() method of this
class has been executed.
"
      end

      operation 43960887 "getCompletionStatus"
	const cpp_inline public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mQueryDeliveryStatus == NO_ERROR) {
            if (mReplyStatus) {
                return NO_ERROR;
            } else {
                return EINVAL;
            }
        } else {
            return mQueryDeliveryStatus;
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets final completion status of the query.
Note that this method must be called after completeQuery() method of this
class has been executed.
Return:
 NO_ERROR if query has succeeded, or an appropriate error status on query
 failure.
"
      end

      attribute 12676151 "mQuery"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Public data memebers
*************************************************************************
 Query string. 
"
      end

      attribute 12676279 "mQueryDeliveryStatus"
	public explicit_type "status_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Query delivery status. 
"
      end

      attribute 12676407 "mReplyBuffer"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reply buffer 
"
      end

      attribute 12676535 "mReplyData"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reply data (past 'ok'/'ko'). If NULL, there were no data in reply. 
"
      end

      attribute 12676663 "mReplySize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reply buffer size. 
"
      end

      attribute 12676791 "mReplyDataSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reply data size. 
"
      end

      attribute 12676919 "mReplyStatus"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Reply status: 1 - ok, 0 - ko. 
"
      end

      attribute 12677047 "mQueryPrealloc"
	protected explicit_type "char"
	multiplicity "[256]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Private data memebers
*************************************************************************
 Preallocated buffer for small queries. 
"
      end
    end

    class 3498039 "QemuClient"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Qemu client base
*************************************************************************
 Encapsulates a connection to the 'camera' service in the emulator via qemu
pipe.
"
      operation 43961015 "QemuClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : mPipeFD(-1)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Constructs QemuClient instance. "
      end

      operation 43961143 "~QemuClient"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructs QemuClient instance. "
      end

      operation 43961271 "connectClient"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "param" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Qemu client API
//*************************************************************************

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Qemu client API
*************************************************************************
 Connects to the 'camera' service in the emulator via qemu pipe.
Param:
 param - Parameters to pass to the camera service. There are two types of
     camera services implemented by the emulator. The first one is a
     'camera factory' type of service that provides list of cameras
     connected to the host. Another one is an 'emulated camera' type of
     service that provides interface to a camera connected to the host. At
     the connection time emulator makes distinction between the two by
     looking at connection parameters: no parameters means connection to
     the 'factory' service, while connection with parameters means
     connection to an 'emulated camera' service, where camera is identified
     by one of the connection parameters. So, passing NULL, or an empty
     string to this method will establish a connection with the 'factory'
     service, while not empty string passed here will establish connection
     with an 'emulated camera' service. Parameters defining the emulated
     camera must be formatted as such:

         \"name=<device name> [inp_channel=<input channel #>]\",

     where 'device name' is a required parameter defining name of the
     camera device, and 'input channel' is an optional parameter (positive
     integer), defining the input channel to use on the camera device.
     Note that device name passed here must have been previously obtained
     from the factory service using 'list' query.
Return:
 NO_ERROR on success, or an appropriate error status.
"
      end

      operation 43961399 "disconnectClient"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disconnects from the service. "
      end

      operation 43961527 "sendMessage"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param in name "data" explicit_type "void"
	  param in name "data_size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends data to the service.
Param:
 data, data_size - Data to send.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43961655 "receiveMessage"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "data_size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Receives data from the service.
This method assumes that data to receive will come in two chunks: 8
characters encoding the payload size in hexadecimal string, followed by
the paylod (if any).
This method will allocate data buffer where to receive the response.
Param:
 data - Upon success contains address of the allocated data buffer with
     the data received from the service. The caller is responsible for
     freeing allocated data buffer.
 data_size - Upon success contains size of the data received from the
     service.
Return:
 NO_ERROR on success, or an appropriate error status on failure.
"
      end

      operation 43961783 "doQuery"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "query" type class_ref 3497911 // QemuQuery
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sends a query, and receives a response from the service.
Param:
 query - Query to send to the service. When this method returns, the query
 is completed, and all its relevant data members are properly initialized.
Return:
 NO_ERROR on success, or an appropriate error status on failure. Note that
 status returned here is not the final query status. Use isQuerySucceeded(),
 or getCompletionStatus() method on the query object to see if it has
 succeeded. However, if this method returns a failure, it means that the
 query has failed, and there is no guarantee that its data members are
 properly initialized (except for the 'mQueryDeliveryStatus', which is
 always in the proper state).
"
      end

      attribute 12677175 "mPipeFD"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Data members
*************************************************************************
 Qemu pipe handle. 
"
      end

      attribute 12677303 "mCameraServiceName"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"camera\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Camera service name. 
"
      end
    end

    class 3794871 "InitFunc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(JpegStub* stub, int* strides);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3794999 "CleanupFunc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(JpegStub* stub);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3795127 "CompressFunc"
      visibility package stereotype "typedef" explicit_base_type "int"
      cpp_decl "${comment}typedef ${type}(* ${name})(JpegStub* stub, const void* image,
        int width, int height, int quality);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3795255 "GetCompressedImageFunc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(JpegStub* stub, void* buff);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3795383 "GetCompressedSizeFunc"
      visibility package stereotype "typedef" explicit_base_type "size_t"
      cpp_decl "${comment}typedef ${type}(* ${name})(JpegStub* stub);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 304055 "camera"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1714103 "CallbackNotifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3490487 // CallbackNotifier
      end
    end

    artifact 1714231 "Converters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3490871 // RGB32_t
      end
    end

    artifact 1714359 "EmulatedBaseCamera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3490999 // EmulatedBaseCamera
      end
    end

    artifact 1714487 "EmulatedCamera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3491255 // typedef4
	class_ref 3491127 // EmulatedCamera
      end
    end

    artifact 1714615 "EmulatedCamera2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3491639 // typedef5
	class_ref 3491511 // EmulatedCamera2
      end
    end

    artifact 1714743 "EmulatedCamera3"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3492151 // typedef7
	class_ref 3492023 // EmulatedCamera3
      end
    end

    artifact 1714999 "EmulatedCameraDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3490743 // EmulatedCameraDevice
      end
    end

    artifact 1715127 "EmulatedCameraFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3493175 // EmulatedCameraFactory
      end
    end

    artifact 1715255 "EmulatedCameraHotplugThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3493559 // typedef9
	class_ref 3493431 // EmulatedCameraHotplugThread
      end
    end

    artifact 1715383 "EmulatedFakeCamera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3493815 // EmulatedFakeCamera
      end
    end

    artifact 1715511 "EmulatedFakeCamera2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3494071 // EmulatedFakeCamera2
      end
    end

    artifact 1715639 "EmulatedFakeCamera3"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3495735 // EmulatedFakeCamera3
      end
    end

    artifact 1715767 "EmulatedFakeCameraDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3493943 // EmulatedFakeCameraDevice
      end
    end

    artifact 1715895 "EmulatedQemuCamera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3497143 // EmulatedQemuCamera
      end
    end

    artifact 1716023 "EmulatedQemuCamera2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3497399 // EmulatedQemuCamera2
      end
    end

    artifact 1716151 "EmulatedQemuCameraDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3497271 // EmulatedQemuCameraDevice
      end
    end

    artifact 1716279 "JpegCompressor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3497655 // NV21JpegCompressor
      end
    end

    artifact 1716535 "PreviewWindow"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3491383 // PreviewWindow
      end
    end

    artifact 1716663 "QemuClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3497911 // QemuQuery
	class_ref 3498039 // QemuClient
	class_ref 3493303 // FactoryQemuClient
	class_ref 3497527 // CameraQemuClient
      end
    end

    artifact 1749559 "InitFunc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3794871 // InitFunc
      end
    end

    artifact 1749687 "CleanupFunc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3794999 // CleanupFunc
      end
    end

    artifact 1749815 "CompressFunc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3795127 // CompressFunc
      end
    end

    artifact 1749943 "GetCompressedImageFunc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3795255 // GetCompressedImageFunc
      end
    end

    artifact 1750071 "GetCompressedSizeFunc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3795383 // GetCompressedSizeFunc
      end
    end
  end

  package_ref 379191 // camera

  package_ref 379319 // fake-pipeline2
end
