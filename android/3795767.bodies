class egl_pbuffer_surface_t
!!!44436151.cpp!!!	create(in dpy : EGLDisplay, in config : EGLConfig, in surfType : EGLint, in w : int32_t, in h : int32_t, in pixelFormat : GLenum) : egl_pbuffer_surface_t
    egl_pbuffer_surface_t* pb = new egl_pbuffer_surface_t(dpy, config, surfType,
            w, h);
    if (pb && !pb->init(pixelFormat)) {
        delete pb;
        pb = NULL;
    }
    return pb;
!!!44436279.cpp!!!	~egl_pbuffer_surface_t()
    DEFINE_HOST_CONNECTION;
    if (rcEnc) {
        if (rcColorBuffer) rcEnc->rcCloseColorBuffer(rcEnc, rcColorBuffer);
        if (rcSurface)     rcEnc->rcDestroyWindowSurface(rcEnc, rcSurface);
    }
!!!44436791.cpp!!!	egl_pbuffer_surface_t(in dpy : EGLDisplay, in config : EGLConfig, in surfType : EGLint, in w : int32_t, in h : int32_t)
    setWidth(w);
    setHeight(h);
!!!44436919.cpp!!!	init(in pixelFormat : GLenum) : EGLBoolean
    DEFINE_AND_VALIDATE_HOST_CONNECTION(EGL_FALSE);

    rcSurface = rcEnc->rcCreateWindowSurface(rcEnc, (uintptr_t)config,
            getWidth(), getHeight());
    if (!rcSurface) {
        ALOGE("rcCreateWindowSurface returned 0");
        return EGL_FALSE;
    }

    rcColorBuffer = rcEnc->rcCreateColorBuffer(rcEnc, getWidth(), getHeight(),
            pixelFormat);
    if (!rcColorBuffer) {
        ALOGE("rcCreateColorBuffer returned 0");
        return EGL_FALSE;
    }

    rcEnc->rcSetWindowColorBuffer(rcEnc, rcSurface, rcColorBuffer);

    return EGL_TRUE;
