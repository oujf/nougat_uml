format 213
"HAL" // android::device::huawei::angler::camera::QCamera2::HAL
  revision 2
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/huawei/angler/camera/QCamera2/HAL/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/huawei/angler/camera/QCamera2/HAL/"
  cpp_namespace "qcamera"
  classview 345399 "HAL"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3643063 "qcamera_ch_type_enum_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13224375 "QCAMERA_CH_TYPE_ZSL"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13224503 "QCAMERA_CH_TYPE_CAPTURE"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13224631 "QCAMERA_CH_TYPE_PREVIEW"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13224759 "QCAMERA_CH_TYPE_VIDEO"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13224887 "QCAMERA_CH_TYPE_SNAPSHOT"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13225015 "QCAMERA_CH_TYPE_RAW"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13225143 "QCAMERA_CH_TYPE_METADATA"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13225271 "QCAMERA_CH_TYPE_ANALYSIS"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13225399 "QCAMERA_CH_TYPE_MAX"
	public type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3643191 "qcamera_evt_argm_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13225527 "msg_type"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13225655 "ext1"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13225783 "ext2"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3643319 "qcamera_callback_type_m"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13225911 "QCAMERA_NOTIFY_CALLBACK"
	public type class_ref 3643319 // qcamera_callback_type_m
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13226039 "QCAMERA_DATA_CALLBACK"
	public type class_ref 3643319 // qcamera_callback_type_m
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13226167 "QCAMERA_DATA_TIMESTAMP_CALLBACK"
	public type class_ref 3643319 // qcamera_callback_type_m
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13226295 "QCAMERA_DATA_SNAPSHOT_CALLBACK"
	public type class_ref 3643319 // qcamera_callback_type_m
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3643447 "camera_release_callback"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void *user_data,
                                        void *cookie,
                                        int32_t cb_status);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3643575 "qcamera_callback_argm_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 7044535 // cb_type (<directional composition>)
	relation 7044535 *-->
	  a role_name "cb_type" public
	    comment " event type"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7044535 // cb_type (<directional composition>)
	  b parent class_ref 3643319 // qcamera_callback_type_m
      end

      attribute 13226423 "msg_type"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " msg type"
      end

      attribute 13226551 "ext1"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " extended parameter"
      end

      attribute 13226679 "ext2"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " extended parameter"
      end

      attribute 13226807 "data"
	public explicit_type "camera_memory_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ptr to data memory struct"
      end

      attribute 13226935 "index"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " index of the buf in the whole buffer"
      end

      attribute 13227063 "timestamp"
	public explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " buffer timestamp"
      end

      attribute 13227191 "metadata"
	public explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " meta data"
      end

      attribute 13227319 "user_data"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " any data needs to be released after callback"
      end

      attribute 13227447 "cookie"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " release callback cookie"
      end

      classrelation 7044663 // release_cb (<directional composition>)
	relation 7044663 *-->
	  a role_name "release_cb" public
	    comment " release callback"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7044663 // release_cb (<directional composition>)
	  b parent class_ref 3643447 // camera_release_callback
      end
    end

    class 3643703 "QCameraCbNotifier"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44123959 "QCameraCbNotifier"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 3643831 // QCamera2HardwareInterface
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract} :
                          mNotifyCb (NULL),
                          mDataCb (NULL),
                          mDataCbTimestamp (NULL),
                          mCallbackCookie (NULL),
                          mParent (parent),
                          mDataQ(releaseNotifications, this),
                          mActive(false){};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44124087 "~QCameraCbNotifier"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraCbNotifier
//
//DESCRIPTION: Destructor for exiting the callback context.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraCbNotifier
//
//DESCRIPTION: Destructor for exiting the callback context.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraCbNotifier
//
//DESCRIPTION: Destructor for exiting the callback context.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44124215 "notifyCallback"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param inout name "cbArgs" type class_ref 3643575 // qcamera_callback_argm_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : notifyCallback
//
//DESCRIPTION: Enqueus pending callback notifications for the upper layers.
//
//PARAMETERS :
//  @cbArgs  : callback arguments
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : notifyCallback
//
//DESCRIPTION: Enqueus pending callback notifications for the upper layers.
//
//PARAMETERS :
//  @cbArgs  : callback arguments
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : notifyCallback
//
//DESCRIPTION: Enqueus pending callback notifications for the upper layers.
//
//PARAMETERS :
//  @cbArgs  : callback arguments
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44124343 "setCallbacks"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 4
	  param in name "notifyCb" explicit_type "camera_notify_callback"
	  param in name "dataCb" explicit_type "camera_data_callback"
	  param in name "dataCbTimestamp" explicit_type "camera_data_timestamp_callback"
	  param inout name "callbackCookie" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setCallbacks
//
//DESCRIPTION: Initializes the callback functions, which would be used for
//             communication with the upper layers and launches the callback
//             context in which the callbacks will occur.
//
//PARAMETERS :
//  @notifyCb          : notification callback
//  @dataCb            : data callback
//  @dataCbTimestamp   : data with timestamp callback
//  @callbackCookie    : callback context data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : setCallbacks
//
//DESCRIPTION: Initializes the callback functions, which would be used for
//             communication with the upper layers and launches the callback
//             context in which the callbacks will occur.
//
//PARAMETERS :
//  @notifyCb          : notification callback
//  @dataCb            : data callback
//  @dataCbTimestamp   : data with timestamp callback
//  @callbackCookie    : callback context data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : setCallbacks
//
//DESCRIPTION: Initializes the callback functions, which would be used for
//             communication with the upper layers and launches the callback
//             context in which the callbacks will occur.
//
//PARAMETERS :
//  @notifyCb          : notification callback
//  @dataCb            : data callback
//  @dataCbTimestamp   : data with timestamp callback
//  @callbackCookie    : callback context data
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44124471 "startSnapshots"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startSnapshots
//
//DESCRIPTION: Enables snapshot mode
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startSnapshots
//
//DESCRIPTION: Enables snapshot mode
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startSnapshots
//
//DESCRIPTION: Enables snapshot mode
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44124599 "stopSnapshots"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopSnapshots
//
//DESCRIPTION: Disables snapshot processing mode
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : stopSnapshots
//
//DESCRIPTION: Disables snapshot processing mode
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : stopSnapshots
//
//DESCRIPTION: Disables snapshot processing mode
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44124727 "exit"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : exit
//
//DESCRIPTION: exit notify thread.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : exit
//
//DESCRIPTION: exit notify thread.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : exit
//
//DESCRIPTION: exit notify thread.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44124855 "cbNotifyRoutine"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cbNotifyRoutine
//
//DESCRIPTION: callback thread which interfaces with the upper layers
//             given input commands.
//
//PARAMETERS :
//  @data    : context data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : cbNotifyRoutine
//
//DESCRIPTION: callback thread which interfaces with the upper layers
//             given input commands.
//
//PARAMETERS :
//  @data    : context data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : cbNotifyRoutine
//
//DESCRIPTION: callback thread which interfaces with the upper layers
//             given input commands.
//
//PARAMETERS :
//  @data    : context data
//
//RETURN     : None
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44124983 "releaseNotifications"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseNotifications
//
//DESCRIPTION: callback for releasing data stored in the callback queue.
//
//PARAMETERS :
//  @data      : data to be released
//  @user_data : context data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseNotifications
//
//DESCRIPTION: callback for releasing data stored in the callback queue.
//
//PARAMETERS :
//  @data      : data to be released
//  @user_data : context data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseNotifications
//
//DESCRIPTION: callback for releasing data stored in the callback queue.
//
//PARAMETERS :
//  @data      : data to be released
//  @user_data : context data
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44125111 "matchSnapshotNotifications"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : matchSnapshotNotifications
//
//DESCRIPTION: matches snapshot data callbacks
//
//PARAMETERS :
//  @data      : data to match
//  @user_data : context data
//
//RETURN     : bool match
//             true - match found
//             false- match not found
//==========================================================================

//===========================================================================
//FUNCTION   : matchSnapshotNotifications
//
//DESCRIPTION: matches snapshot data callbacks
//
//PARAMETERS :
//  @data      : data to match
//  @user_data : context data
//
//RETURN     : bool match
//             true - match found
//             false- match not found
//==========================================================================

//===========================================================================
//FUNCTION   : matchSnapshotNotifications
//
//DESCRIPTION: matches snapshot data callbacks
//
//PARAMETERS :
//  @data      : data to match
//  @user_data : context data
//
//RETURN     : bool match
//             true - match found
//             false- match not found
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44125239 "matchPreviewNotifications"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : matchPreviewNotifications
//
//DESCRIPTION: matches preview data callbacks
//
//PARAMETERS :
//  @data      : data to match
//  @user_data : context data
//
//RETURN     : bool match
//             true - match found
//             false- match not found
//==========================================================================

//===========================================================================
//FUNCTION   : matchPreviewNotifications
//
//DESCRIPTION: matches preview data callbacks
//
//PARAMETERS :
//  @data      : data to match
//  @user_data : context data
//
//RETURN     : bool match
//             true - match found
//             false- match not found
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44125367 "flushPreviewNotifications"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flushPreviewNotifications
//
//DESCRIPTION: flush all pending preview notifications
//             from the notifier queue
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : flushPreviewNotifications
//
//DESCRIPTION: flush all pending preview notifications
//             from the notifier queue
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13227575 "mNotifyCb"
	private explicit_type "camera_notify_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13227703 "mDataCb"
	private explicit_type "camera_data_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13227831 "mDataCbTimestamp"
	private explicit_type "camera_data_timestamp_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13227959 "mCallbackCookie"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7044791 // mParent (<unidirectional association>)
	relation 7044791 --->
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7044791 // mParent (<unidirectional association>)
	  b parent class_ref 3643831 // QCamera2HardwareInterface
      end

      classrelation 7044919 // mDataQ (<directional composition>)
	relation 7044919 *-->
	  a role_name "mDataQ" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7044919 // mDataQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7045047 // mProcTh (<directional composition>)
	relation 7045047 *-->
	  a role_name "mProcTh" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7045047 // mProcTh (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      attribute 13228087 "mActive"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3643831 "QCamera2HardwareInterface"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 7045175 // <generalisation>
	relation 7045175 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7045175 // <generalisation>
	  b parent class_ref 3644215 // QCameraAllocator
      end

      classrelation 7045303 // <generalisation>
	relation 7045303 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7045303 // <generalisation>
	  b parent class_ref 3644343 // QCameraThermalCallback
      end

      classrelation 7045431 // <generalisation>
	relation 7045431 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7045431 // <generalisation>
	  b parent class_ref 3644471 // QCameraAdjustFPS
      end

      attribute 13228215 "mCameraOps"
	class_attribute public explicit_type "camera_device_ops_t"
	init_value "= {
    set_preview_window:         QCamera2HardwareInterface::set_preview_window,
    set_callbacks:              QCamera2HardwareInterface::set_CallBacks,
    enable_msg_type:            QCamera2HardwareInterface::enable_msg_type,
    disable_msg_type:           QCamera2HardwareInterface::disable_msg_type,
    msg_type_enabled:           QCamera2HardwareInterface::msg_type_enabled,

    start_preview:              QCamera2HardwareInterface::start_preview,
    stop_preview:               QCamera2HardwareInterface::stop_preview,
    preview_enabled:            QCamera2HardwareInterface::preview_enabled,
    store_meta_data_in_buffers: QCamera2HardwareInterface::store_meta_data_in_buffers,

    start_recording:            QCamera2HardwareInterface::start_recording,
    stop_recording:             QCamera2HardwareInterface::stop_recording,
    recording_enabled:          QCamera2HardwareInterface::recording_enabled,
    release_recording_frame:    QCamera2HardwareInterface::release_recording_frame,

    auto_focus:                 QCamera2HardwareInterface::auto_focus,
    cancel_auto_focus:          QCamera2HardwareInterface::cancel_auto_focus,

    take_picture:               QCamera2HardwareInterface::take_picture,
    cancel_picture:             QCamera2HardwareInterface::cancel_picture,

    set_parameters:             QCamera2HardwareInterface::set_parameters,
    get_parameters:             QCamera2HardwareInterface::get_parameters,
    put_parameters:             QCamera2HardwareInterface::put_parameters,
    send_command:               QCamera2HardwareInterface::send_command,

    release:                    QCamera2HardwareInterface::release,
    dump:                       QCamera2HardwareInterface::dump,
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " static variable and functions accessed by camera service 
"
      end

      operation 44125495 "set_preview_window"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param inout name "window" explicit_type "preview_stream_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : set_preview_window
//
//DESCRIPTION: set preview window.
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @window  : window ops table
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : set_preview_window
//
//DESCRIPTION: set preview window.
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @window  : window ops table
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : set_preview_window
//
//DESCRIPTION: set preview window.
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @window  : window ops table
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44125623 "set_CallBacks"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param inout name "device" explicit_type "camera_device"
	  param in name "notify_cb" explicit_type "camera_notify_callback"
	  param in name "data_cb" explicit_type "camera_data_callback"
	  param in name "data_cb_timestamp" explicit_type "camera_data_timestamp_callback"
	  param in name "get_memory" explicit_type "camera_request_memory"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : set_CallBacks
//
//DESCRIPTION: set callbacks for notify and data
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @notify_cb  : notify cb
//  @data_cb    : data cb
//  @data_cb_timestamp  : video data cd with timestamp
//  @get_memory : ops table for request gralloc memory
//  @user       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : set_CallBacks
//
//DESCRIPTION: set callbacks for notify and data
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @notify_cb  : notify cb
//  @data_cb    : data cb
//  @data_cb_timestamp  : video data cd with timestamp
//  @get_memory : ops table for request gralloc memory
//  @user       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : set_CallBacks
//
//DESCRIPTION: set callbacks for notify and data
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @notify_cb  : notify cb
//  @data_cb    : data cb
//  @data_cb_timestamp  : video data cd with timestamp
//  @get_memory : ops table for request gralloc memory
//  @user       : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44125751 "enable_msg_type"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : enable_msg_type
//
//DESCRIPTION: enable certain msg type
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : enable_msg_type
//
//DESCRIPTION: enable certain msg type
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : enable_msg_type
//
//DESCRIPTION: enable certain msg type
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44125879 "disable_msg_type"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : disable_msg_type
//
//DESCRIPTION: disable certain msg type
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : disable_msg_type
//
//DESCRIPTION: disable certain msg type
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : disable_msg_type
//
//DESCRIPTION: disable certain msg type
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126007 "msg_type_enabled"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : msg_type_enabled
//
//DESCRIPTION: if certain msg type is enabled
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : 1 -- enabled
//             0 -- not enabled
//==========================================================================

//===========================================================================
//FUNCTION   : msg_type_enabled
//
//DESCRIPTION: if certain msg type is enabled
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : 1 -- enabled
//             0 -- not enabled
//==========================================================================

//===========================================================================
//FUNCTION   : msg_type_enabled
//
//DESCRIPTION: if certain msg type is enabled
//
//PARAMETERS :
//  @device     : ptr to camera device struct
//  @msg_type   : msg type mask
//
//RETURN     : 1 -- enabled
//             0 -- not enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126135 "start_preview"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start_preview
//
//DESCRIPTION: start preview
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start_preview
//
//DESCRIPTION: start preview
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start_preview
//
//DESCRIPTION: start preview
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126263 "stop_preview"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop_preview
//
//DESCRIPTION: stop preview
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : stop_preview
//
//DESCRIPTION: stop preview
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : stop_preview
//
//DESCRIPTION: stop preview
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126391 "preview_enabled"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : preview_enabled
//
//DESCRIPTION: if preview is running
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : 1 -- running
//             0 -- not running
//==========================================================================

//===========================================================================
//FUNCTION   : preview_enabled
//
//DESCRIPTION: if preview is running
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : 1 -- running
//             0 -- not running
//==========================================================================

//===========================================================================
//FUNCTION   : preview_enabled
//
//DESCRIPTION: if preview is running
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : 1 -- running
//             0 -- not running
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126519 "store_meta_data_in_buffers"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : store_meta_data_in_buffers
//
//DESCRIPTION: if need to store meta data in buffers for video frame
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @enable  : flag if enable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : store_meta_data_in_buffers
//
//DESCRIPTION: if need to store meta data in buffers for video frame
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @enable  : flag if enable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : store_meta_data_in_buffers
//
//DESCRIPTION: if need to store meta data in buffers for video frame
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @enable  : flag if enable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126647 "start_recording"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start_recording
//
//DESCRIPTION: start recording
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start_recording
//
//DESCRIPTION: start recording
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start_recording
//
//DESCRIPTION: start recording
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126775 "stop_recording"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop_recording
//
//DESCRIPTION: stop recording
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : stop_recording
//
//DESCRIPTION: stop recording
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : stop_recording
//
//DESCRIPTION: stop recording
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44126903 "recording_enabled"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : recording_enabled
//
//DESCRIPTION: if recording is running
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : 1 -- running
//             0 -- not running
//==========================================================================

//===========================================================================
//FUNCTION   : recording_enabled
//
//DESCRIPTION: if recording is running
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : 1 -- running
//             0 -- not running
//==========================================================================

//===========================================================================
//FUNCTION   : recording_enabled
//
//DESCRIPTION: if recording is running
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : 1 -- running
//             0 -- not running
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127031 "release_recording_frame"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "opaque" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : release_recording_frame
//
//DESCRIPTION: return recording frame back
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @opaque  : ptr to frame to be returned
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : release_recording_frame
//
//DESCRIPTION: return recording frame back
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @opaque  : ptr to frame to be returned
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : release_recording_frame
//
//DESCRIPTION: return recording frame back
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @opaque  : ptr to frame to be returned
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127159 "auto_focus"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : auto_focus
//
//DESCRIPTION: start auto focus
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : auto_focus
//
//DESCRIPTION: start auto focus
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : auto_focus
//
//DESCRIPTION: start auto focus
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127287 "cancel_auto_focus"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cancel_auto_focus
//
//DESCRIPTION: cancel auto focus
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancel_auto_focus
//
//DESCRIPTION: cancel auto focus
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancel_auto_focus
//
//DESCRIPTION: cancel auto focus
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127415 "take_picture"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : take_picture
//
//DESCRIPTION: take picture
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : take_picture
//
//DESCRIPTION: take picture
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : take_picture
//
//DESCRIPTION: take picture
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127543 "takeLiveSnapshot_internal"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : takeLiveSnapshot_internal
//
//DESCRIPTION: take live snapshot during recording
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takeLiveSnapshot_internal
//
//DESCRIPTION: take live snapshot during recording
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takeLiveSnapshot_internal
//
//DESCRIPTION: take live snapshot during recording
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127671 "takeBackendPic_internal"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "JpegMemOpt" explicit_type "bool"
	  param inout name "raw_format" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : takeBackendPic_internal
//
//DESCRIPTION: take snapshot triggered by backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takeBackendPic_internal
//
//DESCRIPTION: take snapshot triggered by backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127799 "clearIntPendingEvents"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : clearIntPendingEvents
//
//DESCRIPTION: clear internal pending events pertaining to backend
//                       snapshot requests
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : clearIntPendingEvents
//
//DESCRIPTION: clear internal pending events pertaining to backend
//                       snapshot requests
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44127927 "checkIntPicPending"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "JpegMemOpt" explicit_type "bool"
	  param inout name "raw_format" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : checkIntPicPending
//
//DESCRIPTION: timed wait for jpeg completion event, and send
//                       back completion event to backend
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : checkIntPicPending
//
//DESCRIPTION: timed wait for jpeg completion event, and send
//                       back completion event to backend
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128055 "cancel_picture"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cancel_picture
//
//DESCRIPTION: cancel current take picture request
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancel_picture
//
//DESCRIPTION: cancel current take picture request
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancel_picture
//
//DESCRIPTION: cancel current take picture request
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128183 "set_parameters"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "parms" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : set_parameters
//
//DESCRIPTION: set camera parameters
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @parms   : string of packed parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : set_parameters
//
//DESCRIPTION: set camera parameters
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @parms   : string of packed parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : set_parameters
//
//DESCRIPTION: set camera parameters
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @parms   : string of packed parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128311 "get_parameters"
	class_operation preserve_cpp_body_indent public explicit_return_type "char"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_parameters
//
//DESCRIPTION: query camera parameters
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : packed parameters in a string
//==========================================================================

//===========================================================================
//FUNCTION   : get_parameters
//
//DESCRIPTION: query camera parameters
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : packed parameters in a string
//==========================================================================

//===========================================================================
//FUNCTION   : get_parameters
//
//DESCRIPTION: query camera parameters
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : packed parameters in a string
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128439 "put_parameters"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param inout name "parm" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : put_parameters
//
//DESCRIPTION: return camera parameters string back to HAL
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @parm    : ptr to parameter string to be returned
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : put_parameters
//
//DESCRIPTION: return camera parameters string back to HAL
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @parm    : ptr to parameter string to be returned
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : put_parameters
//
//DESCRIPTION: return camera parameters string back to HAL
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @parm    : ptr to parameter string to be returned
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128567 "send_command"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 4
	  param inout name "device" explicit_type "camera_device"
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : send_command
//
//DESCRIPTION: command to be executed
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @cmd     : cmd to be executed
//  @arg1    : ptr to optional argument1
//  @arg2    : ptr to optional argument2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : send_command
//
//DESCRIPTION: command to be executed
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @cmd     : cmd to be executed
//  @arg1    : ptr to optional argument1
//  @arg2    : ptr to optional argument2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : send_command
//
//DESCRIPTION: command to be executed
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @cmd     : cmd to be executed
//  @arg1    : ptr to optional argument1
//  @arg2    : ptr to optional argument2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128695 "release"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "device" explicit_type "camera_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : release
//
//DESCRIPTION: release camera resource
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : release
//
//DESCRIPTION: release camera resource
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : release
//
//DESCRIPTION: release camera resource
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128823 "dump"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "device" explicit_type "camera_device"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: dump camera status
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @fd      : fd for status to be dumped to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: dump camera status
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @fd      : fd for status to be dumped to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: dump camera status
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @fd      : fd for status to be dumped to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44128951 "close_camera_device"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "hw_dev" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : close_camera_device
//
//DESCRIPTION: close camera device
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : close_camera_device
//
//DESCRIPTION: close camera device
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : close_camera_device
//
//DESCRIPTION: close camera device
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44129079 "register_face_image"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 3
	  param inout name "device" explicit_type "camera_device"
	  param inout name "img_ptr" explicit_type "void"
	  param inout name "config" type class_ref 3644599 // cam_pp_offline_src_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : register_face_image
//
//DESCRIPTION: register a face image into imaging lib for face authenticatio/
//             face recognition
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @img_ptr : ptr to image buffer
//  @config  : ptr to config about input image, i.e., format, dimension, and etc.
//
//RETURN     : >=0 unique ID of face registerd.
//             <0  failure.
//==========================================================================

//===========================================================================
//FUNCTION   : register_face_image
//
//DESCRIPTION: register a face image into imaging lib for face authenticatio/
//             face recognition
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @img_ptr : ptr to image buffer
//  @config  : ptr to config about input image, i.e., format, dimension, and etc.
//
//RETURN     : >=0 unique ID of face registerd.
//             <0  failure.
//==========================================================================

//===========================================================================
//FUNCTION   : register_face_image
//
//DESCRIPTION: register a face image into imaging lib for face authenticatio/
//             face recognition
//
//PARAMETERS :
//  @device  : ptr to camera device struct
//  @img_ptr : ptr to image buffer
//  @config  : ptr to config about input image, i.e., format, dimension, and etc.
//
//RETURN     : >=0 unique ID of face registerd.
//             <0  failure.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44129207 "QCamera2HardwareInterface"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "cameraId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera2HardwareInterface
//
//DESCRIPTION: constructor of QCamera2HardwareInterface
//
//PARAMETERS :
//  @cameraId  : camera ID
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera2HardwareInterface
//
//DESCRIPTION: constructor of QCamera2HardwareInterface
//
//PARAMETERS :
//  @cameraId  : camera ID
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}${)}
    : mCameraId(cameraId),
      mCameraHandle(NULL),
      mCameraOpened(false),
      mPreviewWindow(NULL),
      mMsgEnabled(0),
      mStoreMetaDataInFrame(0),
      m_stateMachine(this),
      m_smThreadActive(true),
      m_postprocessor(this),
      m_thermalAdapter(QCameraThermalAdapter::getInstance()),
      m_cbNotifier(this),
      m_bPreviewStarted(false),
      m_bRecordStarted(false),
      m_currentFocusState(CAM_AF_SCANNING),
      mDumpFrmCnt(0U),
      mDumpSkipCnt(0U),
      mThermalLevel(QCAMERA_THERMAL_NO_ADJUSTMENT),
      mCancelAutoFocus(false),
      m_HDRSceneEnabled(false),
      mLongshotEnabled(false),
      m_max_pic_width(0),
      m_max_pic_height(0),
      mLiveSnapshotThread(0),
      mIntPicThread(0),
      mFlashNeeded(false),
      mDeviceRotation(0U),
      mCaptureRotation(0U),
      mJpegExifRotation(0U),
      mUseJpegExifRotation(false),
      mIs3ALocked(false),
      mPrepSnapRun(false),
      mZoomLevel(0),
      mVFrameCount(0),
      mVLastFrameCount(0),
      mVLastFpsTime(0),
      mVFps(0),
      mPFrameCount(0),
      mPLastFrameCount(0),
      mPLastFpsTime(0),
      mPFps(0),
      m_bIntJpegEvtPending(false),
      m_bIntRawEvtPending(false),
      mSnapshotJob(-1),
      mPostviewJob(-1),
      mMetadataJob(-1),
      mReprocJob(-1),
      mRawdataJob(-1),
      mOutputCount(0),
      mInputCount(0),
      mAdvancedCaptureConfigured(false),
      mHDRBracketingEnabled(false)

    : mCameraId(cameraId),
      mCameraHandle(NULL),
      mCameraOpened(false),
      mPreviewWindow(NULL),
      mMsgEnabled(0),
      mStoreMetaDataInFrame(0),
      m_stateMachine(this),
      m_smThreadActive(true),
      m_postprocessor(this),
      m_thermalAdapter(QCameraThermalAdapter::getInstance()),
      m_cbNotifier(this),
      m_bPreviewStarted(false),
      m_bRecordStarted(false),
      m_currentFocusState(CAM_AF_SCANNING),
      mDumpFrmCnt(0U),
      mDumpSkipCnt(0U),
      mThermalLevel(QCAMERA_THERMAL_NO_ADJUSTMENT),
      mCancelAutoFocus(false),
      m_HDRSceneEnabled(false),
      mLongshotEnabled(false),
      m_max_pic_width(0),
      m_max_pic_height(0),
      mLiveSnapshotThread(0),
      mIntPicThread(0),
      mFlashNeeded(false),
      mDeviceRotation(0U),
      mCaptureRotation(0U),
      mJpegExifRotation(0U),
      mUseJpegExifRotation(false),
      mIs3ALocked(false),
      mPrepSnapRun(false),
      mZoomLevel(0),
      mVFrameCount(0),
      mVLastFrameCount(0),
      mVLastFpsTime(0),
      mVFps(0),
      mPFrameCount(0),
      mPLastFrameCount(0),
      mPLastFpsTime(0),
      mPFps(0),
      m_bIntJpegEvtPending(false),
      m_bIntRawEvtPending(false),
      mSnapshotJob(-1),
      mPostviewJob(-1),
      mMetadataJob(-1),
      mReprocJob(-1),
      mRawdataJob(-1),
      mOutputCount(0),
      mInputCount(0),
      mAdvancedCaptureConfigured(false),
      mHDRBracketingEnabled(false)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44129335 "~QCamera2HardwareInterface"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera2HardwareInterface
//
//DESCRIPTION: destructor of QCamera2HardwareInterface
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera2HardwareInterface
//
//DESCRIPTION: destructor of QCamera2HardwareInterface
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera2HardwareInterface
//
//DESCRIPTION: destructor of QCamera2HardwareInterface
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44129463 "openCamera"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "hw_device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS :
//  @hw_device  : double ptr for camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS :
//  @hw_device  : double ptr for camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS :
//  @hw_device  : double ptr for camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44129591 "getCapabilities"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "cameraId" explicit_type "uint32_t"
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCapabilities
//
//DESCRIPTION: query camera capabilities
//
//PARAMETERS :
//  @cameraId  : camera Id
//  @info      : camera info struct to be filled in with camera capabilities
//
//RETURN     : int type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getCapabilities
//
//DESCRIPTION: query camera capabilities
//
//PARAMETERS :
//  @cameraId  : camera Id
//  @info      : camera info struct to be filled in with camera capabilities
//
//RETURN     : int type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44129719 "initCapabilities"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "cameraId" explicit_type "uint32_t"
	  param inout name "cameraHandle" type class_ref 3644727 // mm_camera_vtbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initCapabilities
//
//DESCRIPTION: initialize camera capabilities in static data struct
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initCapabilities
//
//DESCRIPTION: initialize camera capabilities in static data struct
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44129847 "getCamHalCapabilities"
	preserve_cpp_body_indent public return_type class_ref 3644855 // cam_capability_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCamHalCapabilities
//
//DESCRIPTION: get the HAL capabilities structure
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : capability structure of respective camera
//
//==========================================================================

//===========================================================================
//FUNCTION   : getCamHalCapabilities
//
//DESCRIPTION: get the HAL capabilities structure
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : capability structure of respective camera
//
//==========================================================================

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44129975 "allocateStreamBuf"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3644983 // QCameraMemory
	nparams 5
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param in name "size" explicit_type "size_t"
	  param in name "stride" explicit_type "int"
	  param in name "scanline" explicit_type "int"
	  param inout name "bufferCnt" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} & ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateStreamBuf
//
//DESCRIPTION: alocate stream buffers
//
//PARAMETERS :
//  @stream_type  : type of stream
//  @size         : size of buffer
//  @stride       : stride of buffer
//  @scanline     : scanline of buffer
//  @bufferCnt    : [IN/OUT] minimum num of buffers to be allocated.
//                  could be modified during allocation if more buffers needed
//
//RETURN     : ptr to a memory obj that holds stream buffers.
//             NULL if failed
//==========================================================================

//===========================================================================
//FUNCTION   : allocateStreamBuf
//
//DESCRIPTION: alocate stream buffers
//
//PARAMETERS :
//  @stream_type  : type of stream
//  @size         : size of buffer
//  @stride       : stride of buffer
//  @scanline     : scanline of buffer
//  @bufferCnt    : [IN/OUT] minimum num of buffers to be allocated.
//                  could be modified during allocation if more buffers needed
//
//RETURN     : ptr to a memory obj that holds stream buffers.
//             NULL if failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} & ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation of QCameraAllocator"
      end

      operation 44130103 "allocateMoreStreamBuf"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 3
	  param inout name "mem_obj" type class_ref 3644983 // QCameraMemory
	  param in name "size" explicit_type "size_t"
	  param inout name "bufferCnt" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMoreStreamBuf
//
//DESCRIPTION: alocate more stream buffers from the memory object
//
//PARAMETERS :
//  @mem_obj      : memory object ptr
//  @size         : size of buffer
//  @bufferCnt    : [IN/OUT] additional number of buffers to be allocated.
//                  output will be the number of total buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMoreStreamBuf
//
//DESCRIPTION: alocate more stream buffers from the memory object
//
//PARAMETERS :
//  @mem_obj      : memory object ptr
//  @size         : size of buffer
//  @bufferCnt    : [IN/OUT] additional number of buffers to be allocated.
//                  output will be the number of total buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44130231 "allocateStreamInfoBuf"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3645111 // QCameraHeapMemory
	nparams 1
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateStreamInfoBuf
//
//DESCRIPTION: alocate stream info buffer
//
//PARAMETERS :
//  @stream_type  : type of stream
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//             NULL if failed
//==========================================================================

//===========================================================================
//FUNCTION   : allocateStreamInfoBuf
//
//DESCRIPTION: alocate stream info buffer
//
//PARAMETERS :
//  @stream_type  : type of stream
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//             NULL if failed
//==========================================================================

//===========================================================================
//FUNCTION   : allocateStreamInfoBuf
//
//DESCRIPTION: alocate stream info buffer
//
//PARAMETERS :
//  @stream_type  : type of stream
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//             NULL if failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44130359 "allocateMiscBuf"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3645111 // QCameraHeapMemory
	nparams 1
	  param inout name "streamInfo" type class_ref 3645239 // cam_stream_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMiscBuf
//
//DESCRIPTION: alocate miscellaneous buffer
//
//PARAMETERS :
//  @streamInfo  : stream info
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//             NULL if failed
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMiscBuf
//
//DESCRIPTION: alocate miscellaneous buffer
//
//PARAMETERS :
//  @streamInfo  : stream info
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//             NULL if failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44130487 "allocateStreamUserBuf"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3644983 // QCameraMemory
	nparams 1
	  param inout name "streamInfo" type class_ref 3645239 // cam_stream_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateStreamUserBuf
//
//DESCRIPTION: allocate user ptr for stream buffers
//
//PARAMETERS :
//  @streamInfo  : stream info structure
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//                   NULL if failed
//
//==========================================================================

//===========================================================================
//FUNCTION   : allocateStreamUserBuf
//
//DESCRIPTION: allocate user ptr for stream buffers
//
//PARAMETERS :
//  @streamInfo  : stream info structure
//
//RETURN     : ptr to a memory obj that holds stream info buffer.
//                   NULL if failed
//
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44130615 "thermalEvtHandle"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 3
	  param inout name "level" type class_ref 3645367 // qcamera_thermal_level_enum_t
	  param inout name "userdata" explicit_type "void"
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : thermalEvtHandle
//
//DESCRIPTION: routine to handle thermal event notification
//
//PARAMETERS :
//  @level      : thermal level
//  @userdata   : userdata passed in during registration
//  @data       : opaque data from thermal client
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : thermalEvtHandle
//
//DESCRIPTION: routine to handle thermal event notification
//
//PARAMETERS :
//  @level      : thermal level
//  @userdata   : userdata passed in during registration
//  @data       : opaque data from thermal client
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation of QCameraThermalCallback"
      end

      operation 44130743 "recalcFPSRange"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 3
	  param inout name "minFPS" explicit_type "int"
	  param inout name "maxFPS" explicit_type "int"
	  param inout name "adjustedRange" type class_ref 3645495 // cam_fps_range_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : recalcFPSRange
//
//DESCRIPTION: adjust the configured fps range regarding
//             the last thermal level.
//
//PARAMETERS :
//  @minFPS   : minimum configured fps range
//  @maxFPS   : maximum configured fps range
//  @adjustedRange : target fps range
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : recalcFPSRange
//
//DESCRIPTION: adjust the configured fps range regarding
//             the last thermal level.
//
//PARAMETERS :
//  @minFPS   : minimum configured fps range
//  @maxFPS   : maximum configured fps range
//  @adjustedRange : target fps range
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7045559 // <dependency>
	relation 7045559 -_->
	  stereotype "friend"
	  a public
	    cpp default "${type}"
	    classrelation_ref 7045559 // <dependency>
	  b parent class_ref 3645623 // QCameraStateMachine
      end

      classrelation 7045687 // <dependency>
	relation 7045687 -_->
	  stereotype "friend"
	  a public
	    cpp default "${type}"
	    classrelation_ref 7045687 // <dependency>
	  b parent class_ref 3645751 // QCameraPostProcessor
      end

      classrelation 7045815 // <dependency>
	relation 7045815 -_->
	  stereotype "friend"
	  a public
	    cpp default "${type}"
	    classrelation_ref 7045815 // <dependency>
	  b parent class_ref 3643703 // QCameraCbNotifier
      end

      operation 44130871 "setPreviewWindow"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "window" explicit_type "preview_stream_ops"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewWindow
//
//DESCRIPTION: set preview window impl
//
//PARAMETERS :
//  @window  : ptr to window ops table struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewWindow
//
//DESCRIPTION: set preview window impl
//
//PARAMETERS :
//  @window  : ptr to window ops table struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewWindow
//
//DESCRIPTION: set preview window impl
//
//PARAMETERS :
//  @window  : ptr to window ops table struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44130999 "setCallBacks"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 5
	  param in name "notify_cb" explicit_type "camera_notify_callback"
	  param in name "data_cb" explicit_type "camera_data_callback"
	  param in name "data_cb_timestamp" explicit_type "camera_data_timestamp_callback"
	  param in name "get_memory" explicit_type "camera_request_memory"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setCallBacks
//
//DESCRIPTION: set callbacks impl
//
//PARAMETERS :
//  @notify_cb  : notify cb
//  @data_cb    : data cb
//  @data_cb_timestamp : data cb with time stamp
//  @get_memory : request memory ops table
//  @user       : user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCallBacks
//
//DESCRIPTION: set callbacks impl
//
//PARAMETERS :
//  @notify_cb  : notify cb
//  @data_cb    : data cb
//  @data_cb_timestamp : data cb with time stamp
//  @get_memory : request memory ops table
//  @user       : user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCallBacks
//
//DESCRIPTION: set callbacks impl
//
//PARAMETERS :
//  @notify_cb  : notify cb
//  @data_cb    : data cb
//  @data_cb_timestamp : data cb with time stamp
//  @get_memory : request memory ops table
//  @user       : user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131127 "enableMsgType"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : enableMsgType
//
//DESCRIPTION: enable msg type impl
//
//PARAMETERS :
//  @msg_type  : msg type mask to be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : enableMsgType
//
//DESCRIPTION: enable msg type impl
//
//PARAMETERS :
//  @msg_type  : msg type mask to be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : enableMsgType
//
//DESCRIPTION: enable msg type impl
//
//PARAMETERS :
//  @msg_type  : msg type mask to be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131255 "disableMsgType"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : disableMsgType
//
//DESCRIPTION: disable msg type impl
//
//PARAMETERS :
//  @msg_type  : msg type mask to be disabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : disableMsgType
//
//DESCRIPTION: disable msg type impl
//
//PARAMETERS :
//  @msg_type  : msg type mask to be disabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : disableMsgType
//
//DESCRIPTION: disable msg type impl
//
//PARAMETERS :
//  @msg_type  : msg type mask to be disabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131383 "msgTypeEnabled"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : msgTypeEnabled
//
//DESCRIPTION: impl to determine if certain msg_type is enabled
//
//PARAMETERS :
//  @msg_type  : msg type mask
//
//RETURN     : 0 -- not enabled
//             none 0 -- enabled
//==========================================================================

//===========================================================================
//FUNCTION   : msgTypeEnabled
//
//DESCRIPTION: impl to determine if certain msg_type is enabled
//
//PARAMETERS :
//  @msg_type  : msg type mask
//
//RETURN     : 0 -- not enabled
//             none 0 -- enabled
//==========================================================================

//===========================================================================
//FUNCTION   : msgTypeEnabled
//
//DESCRIPTION: impl to determine if certain msg_type is enabled
//
//PARAMETERS :
//  @msg_type  : msg type mask
//
//RETURN     : 0 -- not enabled
//             none 0 -- enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131511 "msgTypeEnabledWithLock"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "msg_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : msgTypeEnabledWithLock
//
//DESCRIPTION: impl to determine if certain msg_type is enabled with lock
//
//PARAMETERS :
//  @msg_type  : msg type mask
//
//RETURN     : 0 -- not enabled
//             none 0 -- enabled
//==========================================================================

//===========================================================================
//FUNCTION   : msgTypeEnabledWithLock
//
//DESCRIPTION: impl to determine if certain msg_type is enabled with lock
//
//PARAMETERS :
//  @msg_type  : msg type mask
//
//RETURN     : 0 -- not enabled
//             none 0 -- enabled
//==========================================================================

//===========================================================================
//FUNCTION   : msgTypeEnabledWithLock
//
//DESCRIPTION: impl to determine if certain msg_type is enabled with lock
//
//PARAMETERS :
//  @msg_type  : msg type mask
//
//RETURN     : 0 -- not enabled
//             none 0 -- enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131639 "startPreview"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startPreview
//
//DESCRIPTION: start preview impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startPreview
//
//DESCRIPTION: start preview impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startPreview
//
//DESCRIPTION: start preview impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131767 "stopPreview"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopPreview
//
//DESCRIPTION: stop preview impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopPreview
//
//DESCRIPTION: stop preview impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopPreview
//
//DESCRIPTION: stop preview impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44131895 "storeMetaDataInBuffers"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : storeMetaDataInBuffers
//
//DESCRIPTION: enable store meta data in buffers for video frames impl
//
//PARAMETERS :
//  @enable  : flag if need enable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : storeMetaDataInBuffers
//
//DESCRIPTION: enable store meta data in buffers for video frames impl
//
//PARAMETERS :
//  @enable  : flag if need enable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : storeMetaDataInBuffers
//
//DESCRIPTION: enable store meta data in buffers for video frames impl
//
//PARAMETERS :
//  @enable  : flag if need enable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132023 "startRecording"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startRecording
//
//DESCRIPTION: start recording impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startRecording
//
//DESCRIPTION: start recording impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startRecording
//
//DESCRIPTION: start recording impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132151 "stopRecording"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopRecording
//
//DESCRIPTION: stop recording impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopRecording
//
//DESCRIPTION: stop recording impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopRecording
//
//DESCRIPTION: stop recording impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132279 "releaseRecordingFrame"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "opaque" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseRecordingFrame
//
//DESCRIPTION: return video frame impl
//
//PARAMETERS :
//  @opaque  : ptr to video frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseRecordingFrame
//
//DESCRIPTION: return video frame impl
//
//PARAMETERS :
//  @opaque  : ptr to video frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseRecordingFrame
//
//DESCRIPTION: return video frame impl
//
//PARAMETERS :
//  @opaque  : ptr to video frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132407 "autoFocus"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : autoFocus
//
//DESCRIPTION: start auto focus impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : autoFocus
//
//DESCRIPTION: start auto focus impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : autoFocus
//
//DESCRIPTION: start auto focus impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132535 "cancelAutoFocus"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cancelAutoFocus
//
//DESCRIPTION: cancel auto focus impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelAutoFocus
//
//DESCRIPTION: cancel auto focus impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelAutoFocus
//
//DESCRIPTION: cancel auto focus impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132663 "takePicture"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : takePicture
//
//DESCRIPTION: take picture impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takePicture
//
//DESCRIPTION: take picture impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takePicture
//
//DESCRIPTION: take picture impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132791 "stopCaptureChannel"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "destroy" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopCaptureChannel
//
//DESCRIPTION: Stops capture channel
//
//PARAMETERS :
//  @destroy : Set to true to stop and delete camera channel.
//             Set to false to only stop capture channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopCaptureChannel
//
//DESCRIPTION: Stops capture channel
//
//PARAMETERS :
//  @destroy : Set to true to stop and delete camera channel.
//             Set to false to only stop capture channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopCaptureChannel
//
//DESCRIPTION: Stops capture channel
//
//PARAMETERS :
//  @destroy : Set to true to stop and delete camera channel.
//             Set to false to only stop capture channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44132919 "cancelPicture"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cancelPicture
//
//DESCRIPTION: cancel picture impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelPicture
//
//DESCRIPTION: cancel picture impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelPicture
//
//DESCRIPTION: cancel picture impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133047 "takeLiveSnapshot"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : takeLiveSnapshot
//
//DESCRIPTION: take live snapshot during recording
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takeLiveSnapshot
//
//DESCRIPTION: take live snapshot during recording
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takeLiveSnapshot
//
//DESCRIPTION: take live snapshot during recording
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133175 "takePictureInternal"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : takePictureInternal
//
//DESCRIPTION: take snapshot triggered by backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takePictureInternal
//
//DESCRIPTION: take snapshot triggered by backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133303 "cancelLiveSnapshot"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cancelLiveSnapshot
//
//DESCRIPTION: cancel current live snapshot request
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelLiveSnapshot
//
//DESCRIPTION: cancel current live snapshot request
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelLiveSnapshot
//
//DESCRIPTION: cancel current live snapshot request
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133431 "getParameters"
	preserve_cpp_body_indent private explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getParameters
//
//DESCRIPTION: get parameters impl
//
//PARAMETERS : none
//
//RETURN     : a string containing parameter pairs
//==========================================================================

//===========================================================================
//FUNCTION   : getParameters
//
//DESCRIPTION: get parameters impl
//
//PARAMETERS : none
//
//RETURN     : a string containing parameter pairs
//==========================================================================

//===========================================================================
//FUNCTION   : getParameters
//
//DESCRIPTION: get parameters impl
//
//PARAMETERS : none
//
//RETURN     : a string containing parameter pairs
//==========================================================================

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133559 "putParameters"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "parms" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putParameters
//
//DESCRIPTION: put parameters string impl
//
//PARAMETERS :
//  @parms   : parameters string to be released
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putParameters
//
//DESCRIPTION: put parameters string impl
//
//PARAMETERS :
//  @parms   : parameters string to be released
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putParameters
//
//DESCRIPTION: put parameters string impl
//
//PARAMETERS :
//  @parms   : parameters string to be released
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133687 "sendCommand"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param in name "command" explicit_type "int32_t"
	  param inout name "arg1" explicit_type "int32_t"
	  param inout name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendCommand
//
//DESCRIPTION: send command impl
//
//PARAMETERS :
//  @command : command to be executed
//  @arg1    : optional argument 1
//  @arg2    : optional argument 2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendCommand
//
//DESCRIPTION: send command impl
//
//PARAMETERS :
//  @command : command to be executed
//  @arg1    : optional argument 1
//  @arg2    : optional argument 2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133815 "release"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : release
//
//DESCRIPTION: release camera resource impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : release
//
//DESCRIPTION: release camera resource impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : release
//
//DESCRIPTION: release camera resource impl
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44133943 "dump"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: camera status dump impl
//
//PARAMETERS :
//  @fd      : fd for the buffer to be dumped with camera status
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: camera status dump impl
//
//PARAMETERS :
//  @fd      : fd for the buffer to be dumped with camera status
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: camera status dump impl
//
//PARAMETERS :
//  @fd      : fd for the buffer to be dumped with camera status
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134071 "registerFaceImage"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param inout name "img_ptr" explicit_type "void"
	  param inout name "config" type class_ref 3644599 // cam_pp_offline_src_config_t
	  param inout name "faceID" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : registerFaceImage
//
//DESCRIPTION: register face image impl
//
//PARAMETERS :
//  @img_ptr : ptr to image buffer
//  @config  : ptr to config struct about input image info
//  @faceID  : [OUT] face ID to uniquely identifiy the registered face image
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerFaceImage
//
//DESCRIPTION: register face image impl
//
//PARAMETERS :
//  @img_ptr : ptr to image buffer
//  @config  : ptr to config struct about input image info
//  @faceID  : [OUT] face ID to uniquely identifiy the registered face image
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerFaceImage
//
//DESCRIPTION: register face image impl
//
//PARAMETERS :
//  @img_ptr : ptr to image buffer
//  @config  : ptr to config struct about input image info
//  @faceID  : [OUT] face ID to uniquely identifiy the registered face image
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134199 "longShot"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : longShot
//
//DESCRIPTION: Queue one more ZSL frame
//             in the longshot pipe.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : longShot
//
//DESCRIPTION: Queue one more ZSL frame
//             in the longshot pipe.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : longShot
//
//DESCRIPTION: Queue one more ZSL frame
//             in the longshot pipe.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134327 "openCamera"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134455 "closeCamera"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : closeCamera
//
//DESCRIPTION: close camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : closeCamera
//
//DESCRIPTION: close camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : closeCamera
//
//DESCRIPTION: close camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134583 "processAPI"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "api" type class_ref 3645879 // qcamera_sm_evt_enum_t
	  param inout name "api_payload" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processAPI
//
//DESCRIPTION: process API calls from upper layer
//
//PARAMETERS :
//  @api         : API to be processed
//  @api_payload : ptr to API payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processAPI
//
//DESCRIPTION: process API calls from upper layer
//
//PARAMETERS :
//  @api         : API to be processed
//  @api_payload : ptr to API payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processAPI
//
//DESCRIPTION: process API calls from upper layer
//
//PARAMETERS :
//  @api         : API to be processed
//  @api_payload : ptr to API payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134711 "processEvt"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "evt" type class_ref 3645879 // qcamera_sm_evt_enum_t
	  param inout name "evt_payload" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processEvt
//
//DESCRIPTION: process Evt from backend via mm-camera-interface
//
//PARAMETERS :
//  @evt         : event type to be processed
//  @evt_payload : ptr to event payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processEvt
//
//DESCRIPTION: process Evt from backend via mm-camera-interface
//
//PARAMETERS :
//  @evt         : event type to be processed
//  @evt_payload : ptr to event payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processEvt
//
//DESCRIPTION: process Evt from backend via mm-camera-interface
//
//PARAMETERS :
//  @evt         : event type to be processed
//  @evt_payload : ptr to event payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134839 "processSyncEvt"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "evt" type class_ref 3645879 // qcamera_sm_evt_enum_t
	  param inout name "evt_payload" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processSyncEvt
//
//DESCRIPTION: process synchronous Evt from backend
//
//PARAMETERS :
//  @evt         : event type to be processed
//  @evt_payload : ptr to event payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processSyncEvt
//
//DESCRIPTION: process synchronous Evt from backend
//
//PARAMETERS :
//  @evt         : event type to be processed
//  @evt_payload : ptr to event payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processSyncEvt
//
//DESCRIPTION: process synchronous Evt from backend
//
//PARAMETERS :
//  @evt         : event type to be processed
//  @evt_payload : ptr to event payload if any
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44134967 "lockAPI"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lockAPI
//
//DESCRIPTION: lock to process API
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : lockAPI
//
//DESCRIPTION: lock to process API
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : lockAPI
//
//DESCRIPTION: lock to process API
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135095 "waitAPIResult"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "api_evt" type class_ref 3645879 // qcamera_sm_evt_enum_t
	  param inout name "apiResult" type class_ref 3646007 // qcamera_api_result_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : waitAPIResult
//
//DESCRIPTION: wait for API result coming back. This is a blocking call, it will
//             return only cerntain API event type arrives
//
//PARAMETERS :
//  @api_evt : API event type
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : waitAPIResult
//
//DESCRIPTION: wait for API result coming back. This is a blocking call, it will
//             return only cerntain API event type arrives
//
//PARAMETERS :
//  @api_evt : API event type
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : waitAPIResult
//
//DESCRIPTION: wait for API result coming back. This is a blocking call, it will
//             return only cerntain API event type arrives
//
//PARAMETERS :
//  @api_evt : API event type
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135223 "unlockAPI"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unlockAPI
//
//DESCRIPTION: API processing is done, unlock
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unlockAPI
//
//DESCRIPTION: API processing is done, unlock
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unlockAPI
//
//DESCRIPTION: API processing is done, unlock
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135351 "signalAPIResult"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3646007 // qcamera_api_result_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : signalAPIResult
//
//DESCRIPTION: signal condition viarable that cerntain API event type arrives
//
//PARAMETERS :
//  @result  : API result
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : signalAPIResult
//
//DESCRIPTION: signal condition viarable that cerntain API event type arrives
//
//PARAMETERS :
//  @result  : API result
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : signalAPIResult
//
//DESCRIPTION: signal condition viarable that cerntain API event type arrives
//
//PARAMETERS :
//  @result  : API result
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135479 "signalEvtResult"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3646007 // qcamera_api_result_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : signalEvtResult
//
//DESCRIPTION: signal condition variable that certain event was processed
//
//PARAMETERS :
//  @result  : Event result
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : signalEvtResult
//
//DESCRIPTION: signal condition variable that certain event was processed
//
//PARAMETERS :
//  @result  : Event result
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : signalEvtResult
//
//DESCRIPTION: signal condition variable that certain event was processed
//
//PARAMETERS :
//  @result  : Event result
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135607 "calcThermalLevel"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 5
	  param in name "level" type class_ref 3645367 // qcamera_thermal_level_enum_t
	  param in name "minFPS" explicit_type "int"
	  param in name "maxFPS" explicit_type "int"
	  param inout name "adjustedRange" type class_ref 3645495 // cam_fps_range_t
	  param inout name "skipPattern" explicit_type "msm_vfe_frame_skip_pattern"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, ${t3} & ${p3}${v3}, ${t4} & ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : calcThermalLevel
//
//DESCRIPTION: Calculates the target fps range depending on
//             the thermal level.
//
//PARAMETERS :
//  @level    : received thermal level
//  @minFPS   : minimum configured fps range
//  @maxFPS   : maximum configured fps range
//  @adjustedRange : target fps range
//  @skipPattern : target skip pattern
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : calcThermalLevel
//
//DESCRIPTION: Calculates the target fps range depending on
//             the thermal level.
//
//PARAMETERS :
//  @level    : received thermal level
//  @minFPS   : minimum configured fps range
//  @maxFPS   : maximum configured fps range
//  @adjustedRange : target fps range
//  @skipPattern : target skip pattern
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : calcThermalLevel
//
//DESCRIPTION: Calculates the target fps range depending on
//             the thermal level.
//
//PARAMETERS :
//  @level    : received thermal level
//  @minFPS   : minimum configured fps range
//  @maxFPS   : maximum configured fps range
//  @adjustedRange : target fps range
//  @skipPattern : target skip pattern
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} ${p1}, const ${t2} ${p2}, ${t3} & ${p3}, ${t4} & ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135735 "updateThermalLevel"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "thermal_level" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateThermalLevel
//
//DESCRIPTION: update thermal level depending on thermal events
//
//PARAMETERS :
//  @level   : thermal level
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateThermalLevel
//
//DESCRIPTION: update thermal level depending on thermal events
//
//PARAMETERS :
//  @level   : thermal level
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44135863 "updateParameters"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "parms" explicit_type "char"
	  param inout name "needRestart" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateParameters
//
//DESCRIPTION: update parameters
//
//PARAMETERS :
//  @parms       : input parameters string
//  @needRestart : output, flag to indicate if preview restart is needed
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateParameters
//
//DESCRIPTION: update parameters
//
//PARAMETERS :
//  @parms       : input parameters string
//  @needRestart : output, flag to indicate if preview restart is needed
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateParameters
//
//DESCRIPTION: update parameters
//
//PARAMETERS :
//  @parms       : input parameters string
//  @needRestart : output, flag to indicate if preview restart is needed
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " update entris to set parameters and check if restart is needed"
      end

      operation 44135991 "commitParameterChanges"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitParameterChanges
//
//DESCRIPTION: commit parameter changes to the backend to take effect
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : This function must be called after updateParameters.
//             Otherwise, no change will be passed to backend to take effect.
//==========================================================================

//===========================================================================
//FUNCTION   : commitParameterChanges
//
//DESCRIPTION: commit parameter changes to the backend to take effect
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : This function must be called after updateParameters.
//             Otherwise, no change will be passed to backend to take effect.
//==========================================================================

//===========================================================================
//FUNCTION   : commitParameterChanges
//
//DESCRIPTION: commit parameter changes to the backend to take effect
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : This function must be called after updateParameters.
//             Otherwise, no change will be passed to backend to take effect.
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " send request to server to set parameters"
      end

      operation 44136119 "isCaptureShutterEnabled"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isCaptureShutterEnabled
//
//DESCRIPTION: Check whether shutter should be triggered immediately after
//             capture
//
//PARAMETERS :
//
//RETURN     : true - regular capture
//             false - other type of capture
//==========================================================================

//===========================================================================
//FUNCTION   : isCaptureShutterEnabled
//
//DESCRIPTION: Check whether shutter should be triggered immediately after
//             capture
//
//PARAMETERS :
//
//RETURN     : true - regular capture
//             false - other type of capture
//==========================================================================

//===========================================================================
//FUNCTION   : isCaptureShutterEnabled
//
//DESCRIPTION: Check whether shutter should be triggered immediately after
//             capture
//
//PARAMETERS :
//
//RETURN     : true - regular capture
//             false - other type of capture
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44136247 "needDebugFps"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needDebugFps
//
//DESCRIPTION: if fps log info need to be printed out
//
//PARAMETERS : none
//
//RETURN     : true: need print out fps log
//             false: no need to print out fps log
//==========================================================================

//===========================================================================
//FUNCTION   : needDebugFps
//
//DESCRIPTION: if fps log info need to be printed out
//
//PARAMETERS : none
//
//RETURN     : true: need print out fps log
//             false: no need to print out fps log
//==========================================================================

//===========================================================================
//FUNCTION   : needDebugFps
//
//DESCRIPTION: if fps log info need to be printed out
//
//PARAMETERS : none
//
//RETURN     : true: need print out fps log
//             false: no need to print out fps log
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44136375 "isRegularCapture"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isRegularCapture
//
//DESCRIPTION: Check configuration for regular catpure
//
//PARAMETERS :
//
//RETURN     : true - regular capture
//             false - other type of capture
//==========================================================================

//===========================================================================
//FUNCTION   : isRegularCapture
//
//DESCRIPTION: Check configuration for regular catpure
//
//PARAMETERS :
//
//RETURN     : true - regular capture
//             false - other type of capture
//==========================================================================

//===========================================================================
//FUNCTION   : isRegularCapture
//
//DESCRIPTION: Check configuration for regular catpure
//
//PARAMETERS :
//
//RETURN     : true - regular capture
//             false - other type of capture
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44136503 "isCACEnabled"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isCACEnabled
//
//DESCRIPTION: if CAC is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isCACEnabled
//
//DESCRIPTION: if CAC is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isCACEnabled
//
//DESCRIPTION: if CAC is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44136631 "is4k2kResolution"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "resolution" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : is4k2kResolution
//
//DESCRIPTION: if resolution is 4k x 2k or true 4k x 2k
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : is4k2kResolution
//
//DESCRIPTION: if resolution is 4k x 2k or true 4k x 2k
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : is4k2kResolution
//
//DESCRIPTION: if resolution is 4k x 2k or true 4k x 2k
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44136759 "isAFRunning"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isAFRunning
//
//DESCRIPTION: if AF is in progress while in Auto/Macro focus modes
//
//PARAMETERS : none
//
//RETURN     : true: AF in progress
//             false: AF not in progress
//==========================================================================

//===========================================================================
//FUNCTION   : isAFRunning
//
//DESCRIPTION: if AF is in progress while in Auto/Macro focus modes
//
//PARAMETERS : none
//
//RETURN     : true: AF in progress
//             false: AF not in progress
//==========================================================================

//===========================================================================
//FUNCTION   : isAFRunning
//
//DESCRIPTION: if AF is in progress while in Auto/Macro focus modes
//
//PARAMETERS : none
//
//RETURN     : true: AF in progress
//             false: AF not in progress
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44136887 "isPreviewRestartEnabled"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isPreviewRestartEnabled
//
//DESCRIPTION: Check whether preview should be restarted automatically
//             during image capture.
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isPreviewRestartEnabled
//
//DESCRIPTION: Check whether preview should be restarted automatically
//             during image capture.
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isPreviewRestartEnabled
//
//DESCRIPTION: Check whether preview should be restarted automatically
//             during image capture.
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137015 "needReprocess"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needReprocess
//
//DESCRIPTION: if reprocess is needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needReprocess
//
//DESCRIPTION: if reprocess is needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needReprocess
//
//DESCRIPTION: if reprocess is needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137143 "needRotationReprocess"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needRotationReprocess
//
//DESCRIPTION: if rotation needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needRotationReprocess
//
//DESCRIPTION: if rotation needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needRotationReprocess
//
//DESCRIPTION: if rotation needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137271 "needScaleReprocess"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needScaleReprocess
//
//DESCRIPTION: if scale needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needScaleReprocess
//
//DESCRIPTION: if scale needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needScaleReprocess
//
//DESCRIPTION: if scale needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137399 "debugShowVideoFPS"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : debugShowVideoFPS
//
//DESCRIPTION: helper function to log video frame FPS for debug purpose.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : debugShowVideoFPS
//
//DESCRIPTION: helper function to log video frame FPS for debug purpose.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : debugShowVideoFPS
//
//DESCRIPTION: helper function to log video frame FPS for debug purpose.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137527 "debugShowPreviewFPS"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : debugShowPreviewFPS
//
//DESCRIPTION: helper function to log preview frame FPS for debug purpose.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : debugShowPreviewFPS
//
//DESCRIPTION: helper function to log preview frame FPS for debug purpose.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : debugShowPreviewFPS
//
//DESCRIPTION: helper function to log preview frame FPS for debug purpose.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137655 "dumpJpegToFile"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "data" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dumpFrameToFile
//
//DESCRIPTION: helper function to dump jpeg into file for debug purpose.
//
//PARAMETERS :
//   @data : data ptr
//   @size : length of data buffer
//   @index : identifier for data
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dumpFrameToFile
//
//DESCRIPTION: helper function to dump jpeg into file for debug purpose.
//
//PARAMETERS :
//   @data : data ptr
//   @size : length of data buffer
//   @index : identifier for data
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137783 "dumpFrameToFile"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "dump_type" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dumpFrameToFile
//
//DESCRIPTION: helper function to dump frame into file for debug purpose.
//
//PARAMETERS :
//   @data : data ptr
//   @size : length of data buffer
//   @index : identifier for data
//   @dump_type : type of the frame to be dumped. Only such
//                dump type is enabled, the frame will be
//                dumped into a file.
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dumpFrameToFile
//
//DESCRIPTION: helper function to dump frame into file for debug purpose.
//
//PARAMETERS :
//   @data : data ptr
//   @size : length of data buffer
//   @index : identifier for data
//   @dump_type : type of the frame to be dumped. Only such
//                dump type is enabled, the frame will be
//                dumped into a file.
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44137911 "dumpMetadataToFile"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "type" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138039 "releaseSuperBuf"
	private explicit_return_type "void"
	nparams 1
	  param inout name "super_buf" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138167 "playShutter"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : playShutter
//
//DESCRIPTION: send request to play shutter sound
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : playShutter
//
//DESCRIPTION: send request to play shutter sound
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : playShutter
//
//DESCRIPTION: send request to play shutter sound
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138295 "getThumbnailSize"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getThumbnailSize
//
//DESCRIPTION: get user set thumbnail size
//
//PARAMETERS :
//  @dim     : output of thumbnail dimension
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getThumbnailSize
//
//DESCRIPTION: get user set thumbnail size
//
//PARAMETERS :
//  @dim     : output of thumbnail dimension
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getThumbnailSize
//
//DESCRIPTION: get user set thumbnail size
//
//PARAMETERS :
//  @dim     : output of thumbnail dimension
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138423 "getJpegQuality"
	preserve_cpp_body_indent private explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegQuality
//
//DESCRIPTION: get user set jpeg quality
//
//PARAMETERS : none
//
//RETURN     : jpeg quality setting
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegQuality
//
//DESCRIPTION: get user set jpeg quality
//
//PARAMETERS : none
//
//RETURN     : jpeg quality setting
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegQuality
//
//DESCRIPTION: get user set jpeg quality
//
//PARAMETERS : none
//
//RETURN     : jpeg quality setting
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138551 "getCancelAutoFocus"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mCancelAutoFocus; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138679 "setCancelAutoFocus"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "flag" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { mCancelAutoFocus = flag; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138807 "getExifData"
	preserve_cpp_body_indent private return_type class_ref 3646647 // QCameraExif
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifData
//
//DESCRIPTION: get exif data to be passed into jpeg encoding
//
//PARAMETERS : none
//
//RETURN     : exif data from user setting and GPS
//==========================================================================

//===========================================================================
//FUNCTION   : getExifData
//
//DESCRIPTION: get exif data to be passed into jpeg encoding
//
//PARAMETERS : none
//
//RETURN     : exif data from user setting and GPS
//==========================================================================

//===========================================================================
//FUNCTION   : getExifData
//
//DESCRIPTION: get exif data to be passed into jpeg encoding
//
//PARAMETERS : none
//
//RETURN     : exif data from user setting and GPS
//==========================================================================

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44138935 "getSensorType"
	preserve_cpp_body_indent private return_type class_ref 3646775 // cam_sensor_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSensorType
//
//DESCRIPTION: Returns the type of sensor being used whether YUV or Bayer
//
//PARAMETERS :
//  None
//
//RETURN     : Type of sensor - bayer or YUV
//
//==========================================================================

//===========================================================================
//FUNCTION   : getSensorType
//
//DESCRIPTION: Returns the type of sensor being used whether YUV or Bayer
//
//PARAMETERS :
//  None
//
//RETURN     : Type of sensor - bayer or YUV
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139063 "processAutoFocusEvent"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "focus_data" type class_ref 3646903 // cam_auto_focus_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processAutoFocusEvent
//
//DESCRIPTION: process auto focus event
//
//PARAMETERS :
//  @focus_data: struct containing auto focus result info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processAutoFocusEvent
//
//DESCRIPTION: process auto focus event
//
//PARAMETERS :
//  @focus_data: struct containing auto focus result info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processAutoFocusEvent
//
//DESCRIPTION: process auto focus event
//
//PARAMETERS :
//  @focus_data: struct containing auto focus result info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139191 "processZoomEvent"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "crop_info" type class_ref 3647031 // cam_crop_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processZoomEvent
//
//DESCRIPTION: process zoom event
//
//PARAMETERS :
//  @crop_info : crop info as a result of zoom operation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZoomEvent
//
//DESCRIPTION: process zoom event
//
//PARAMETERS :
//  @crop_info : crop info as a result of zoom operation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZoomEvent
//
//DESCRIPTION: process zoom event
//
//PARAMETERS :
//  @crop_info : crop info as a result of zoom operation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139319 "processPrepSnapshotDoneEvent"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "prep_snapshot_state" type class_ref 3647159 // cam_prep_snapshot_state_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processPrepSnapshotDone
//
//DESCRIPTION: process prep snapshot done event
//
//PARAMETERS :
//  @prep_snapshot_state  : state of prepare snapshot done. In other words,
//                          i.e. whether need future frames for capture.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processPrepSnapshotDone
//
//DESCRIPTION: process prep snapshot done event
//
//PARAMETERS :
//  @prep_snapshot_state  : state of prepare snapshot done. In other words,
//                          i.e. whether need future frames for capture.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processPrepSnapshotDone
//
//DESCRIPTION: process prep snapshot done event
//
//PARAMETERS :
//  @prep_snapshot_state  : state of prepare snapshot done. In other words,
//                          i.e. whether need future frames for capture.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139447 "processASDUpdate"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "scene" type class_ref 3647287 // cam_auto_scene_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processASDUpdate
//
//DESCRIPTION: process ASD update event
//
//PARAMETERS :
//  @scene: selected scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processASDUpdate
//
//DESCRIPTION: process ASD update event
//
//PARAMETERS :
//  @scene: selected scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processASDUpdate
//
//DESCRIPTION: process ASD update event
//
//PARAMETERS :
//  @scene: selected scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139575 "processJpegNotify"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "jpeg_evt" type class_ref 3647415 // qcamera_jpeg_evt_payload_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processJpegNotify
//
//DESCRIPTION: process jpeg event
//
//PARAMETERS :
//  @jpeg_evt: ptr to jpeg event payload
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processJpegNotify
//
//DESCRIPTION: process jpeg event
//
//PARAMETERS :
//  @jpeg_evt: ptr to jpeg event payload
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processJpegNotify
//
//DESCRIPTION: process jpeg event
//
//PARAMETERS :
//  @jpeg_evt: ptr to jpeg event payload
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139703 "processHDRData"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "hdr_scene" type class_ref 3647543 // cam_asd_hdr_scene_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processHDRData
//
//DESCRIPTION: process HDR scene events
//
//PARAMETERS :
//  @hdr_scene : HDR scene event data
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processHDRData
//
//DESCRIPTION: process HDR scene events
//
//PARAMETERS :
//  @hdr_scene : HDR scene event data
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processHDRData
//
//DESCRIPTION: process HDR scene events
//
//PARAMETERS :
//  @hdr_scene : HDR scene event data
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139831 "processRetroAECUnlock"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processRetroAECUnlock
//
//DESCRIPTION: process retro burst AEC unlock events
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processRetroAECUnlock
//
//DESCRIPTION: process retro burst AEC unlock events
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44139959 "processZSLCaptureDone"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processZSLCaptureDone
//
//DESCRIPTION: process ZSL capture done events
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZSLCaptureDone
//
//DESCRIPTION: process ZSL capture done events
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140087 "processSceneData"
	private explicit_return_type "int32_t"
	nparams 1
	  param in name "scene" type class_ref 3647671 // cam_scene_mode_type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140215 "transAwbMetaToParams"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "awb_params" type class_ref 3647799 // cam_awb_params_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : transAwbMetaToParams
//
//DESCRIPTION: translate awb params from metadata callback to QCameraParameters
//
//PARAMETERS :
//  @awb_params : awb params from metadata callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : transAwbMetaToParams
//
//DESCRIPTION: translate awb params from metadata callback to QCameraParameters
//
//PARAMETERS :
//  @awb_params : awb params from metadata callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140343 "processFocusPositionInfo"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "cur_pos_info" type class_ref 3647927 // cam_focus_pos_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processFocusPositionInfo
//
//DESCRIPTION: process AF updates
//
//PARAMETERS :
//  @cur_pos_info: current lens position
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : processFocusPositionInfo
//
//DESCRIPTION: process AF updates
//
//PARAMETERS :
//  @cur_pos_info: current lens position
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140471 "processAEInfo"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "ae_params" type class_ref 3648055 // cam_3a_params_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processAEInfo
//
//DESCRIPTION: process AE updates
//
//PARAMETERS :
//  @ae_params: current AE parameters
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : processAEInfo
//
//DESCRIPTION: process AE updates
//
//PARAMETERS :
//  @ae_params: current AE parameters
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140599 "sendEvtNotify"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendEvtNotify
//
//DESCRIPTION: send event notify to notify thread
//
//PARAMETERS :
//  @msg_type: msg type to be sent
//  @ext1    : optional extension1
//  @ext2    : optional extension2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendEvtNotify
//
//DESCRIPTION: send event notify to notify thread
//
//PARAMETERS :
//  @msg_type: msg type to be sent
//  @ext1    : optional extension1
//  @ext2    : optional extension2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendEvtNotify
//
//DESCRIPTION: send event notify to notify thread
//
//PARAMETERS :
//  @msg_type: msg type to be sent
//  @ext1    : optional extension1
//  @ext2    : optional extension2
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140727 "sendDataNotify"
	private explicit_return_type "int32_t"
	nparams 4
	  param in name "msg_type" explicit_type "int32_t"
	  param inout name "data" explicit_type "camera_memory_t"
	  param in name "index" explicit_type "uint8_t"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140855 "sendPreviewCallback"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "memory" type class_ref 3648183 // QCameraGrallocMemory
	  param in name "idx" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendPreviewCallback
//
//DESCRIPTION: helper function for triggering preview callbacks
//
//PARAMETERS :
//  @stream    : stream object
//  @memory    : Gralloc memory allocator
//  @idx       : buffer index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendPreviewCallback
//
//DESCRIPTION: helper function for triggering preview callbacks
//
//PARAMETERS :
//  @stream    : stream object
//  @memory    : Gralloc memory allocator
//  @idx       : buffer index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44140983 "selectScene"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "pChannel" type class_ref 3648311 // QCameraChannel
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : selectScene
//
//DESCRIPTION: send a preview callback when a specific selected scene is applied
//
//PARAMETERS :
//  @pChannel: Camera channel
//  @frame   : Bundled super buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : selectScene
//
//DESCRIPTION: send a preview callback when a specific selected scene is applied
//
//PARAMETERS :
//  @pChannel: Camera channel
//  @frame   : Bundled super buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : selectScene
//
//DESCRIPTION: send a preview callback when a specific selected scene is applied
//
//PARAMETERS :
//  @pChannel: Camera channel
//  @frame   : Bundled super buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141111 "addChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "ch_type" type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addChannel
//
//DESCRIPTION: add a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addChannel
//
//DESCRIPTION: add a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addChannel
//
//DESCRIPTION: add a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141239 "startChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "ch_type" type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startChannel
//
//DESCRIPTION: start a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startChannel
//
//DESCRIPTION: start a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startChannel
//
//DESCRIPTION: start a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141367 "stopChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "ch_type" type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopChannel
//
//DESCRIPTION: stop a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopChannel
//
//DESCRIPTION: stop a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopChannel
//
//DESCRIPTION: stop a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141495 "delChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "ch_type" type class_ref 3643063 // qcamera_ch_type_enum_t
	  param in name "destroy" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : delChannel
//
//DESCRIPTION: delete a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//  @destroy : delete context as well
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : delChannel
//
//DESCRIPTION: delete a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//  @destroy : delete context as well
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : delChannel
//
//DESCRIPTION: delete a channel by its type
//
//PARAMETERS :
//  @ch_type : channel type
//  @destroy : delete context as well
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141623 "addPreviewChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addPreviewChannel
//
//DESCRIPTION: add a preview channel that contains a preview stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addPreviewChannel
//
//DESCRIPTION: add a preview channel that contains a preview stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addPreviewChannel
//
//DESCRIPTION: add a preview channel that contains a preview stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141751 "addSnapshotChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addSnapshotChannel
//
//DESCRIPTION: add a snapshot channel that contains a snapshot stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : Add this channel for live snapshot usecase. Regular capture will
//             use addCaptureChannel.
//==========================================================================

//===========================================================================
//FUNCTION   : addSnapshotChannel
//
//DESCRIPTION: add a snapshot channel that contains a snapshot stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : Add this channel for live snapshot usecase. Regular capture will
//             use addCaptureChannel.
//==========================================================================

//===========================================================================
//FUNCTION   : addSnapshotChannel
//
//DESCRIPTION: add a snapshot channel that contains a snapshot stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : Add this channel for live snapshot usecase. Regular capture will
//             use addCaptureChannel.
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44141879 "addVideoChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addVideoChannel
//
//DESCRIPTION: add a video channel that contains a video stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addVideoChannel
//
//DESCRIPTION: add a video channel that contains a video stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addVideoChannel
//
//DESCRIPTION: add a video channel that contains a video stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142007 "addZSLChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addZSLChannel
//
//DESCRIPTION: add a ZSL channel that contains a preview stream and
//             a snapshot stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addZSLChannel
//
//DESCRIPTION: add a ZSL channel that contains a preview stream and
//             a snapshot stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addZSLChannel
//
//DESCRIPTION: add a ZSL channel that contains a preview stream and
//             a snapshot stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142135 "addCaptureChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addCaptureChannel
//
//DESCRIPTION: add a capture channel that contains a snapshot stream
//             and a postview stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : Add this channel for regular capture usecase.
//             For Live snapshot usecase, use addSnapshotChannel.
//==========================================================================

//===========================================================================
//FUNCTION   : addCaptureChannel
//
//DESCRIPTION: add a capture channel that contains a snapshot stream
//             and a postview stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : Add this channel for regular capture usecase.
//             For Live snapshot usecase, use addSnapshotChannel.
//==========================================================================

//===========================================================================
//FUNCTION   : addCaptureChannel
//
//DESCRIPTION: add a capture channel that contains a snapshot stream
//             and a postview stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//NOTE       : Add this channel for regular capture usecase.
//             For Live snapshot usecase, use addSnapshotChannel.
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142263 "addRawChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addRawChannel
//
//DESCRIPTION: add a raw channel that contains a raw image stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addRawChannel
//
//DESCRIPTION: add a raw channel that contains a raw image stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addRawChannel
//
//DESCRIPTION: add a raw channel that contains a raw image stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142391 "addMetaDataChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addMetaDataChannel
//
//DESCRIPTION: add a meta data channel that contains a metadata stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addMetaDataChannel
//
//DESCRIPTION: add a meta data channel that contains a metadata stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addMetaDataChannel
//
//DESCRIPTION: add a meta data channel that contains a metadata stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142519 "addAnalysisChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addAnalysisChannel
//
//DESCRIPTION: add a analysis channel that contains a analysis stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addAnalysisChannel
//
//DESCRIPTION: add a analysis channel that contains a analysis stream
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142647 "addReprocChannel"
	preserve_cpp_body_indent private return_type class_ref 3648439 // QCameraReprocessChannel
	nparams 1
	  param inout name "pInputChannel" type class_ref 3648311 // QCameraChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addReprocChannel
//
//DESCRIPTION: add a reprocess channel that will do reprocess on frames
//             coming from input channel
//
//PARAMETERS :
//  @pInputChannel : ptr to input channel whose frames will be post-processed
//
//RETURN     : Ptr to the newly created channel obj. NULL if failed.
//==========================================================================

//===========================================================================
//FUNCTION   : addReprocChannel
//
//DESCRIPTION: add a reprocess channel that will do reprocess on frames
//             coming from input channel
//
//PARAMETERS :
//  @pInputChannel : ptr to input channel whose frames will be post-processed
//
//RETURN     : Ptr to the newly created channel obj. NULL if failed.
//==========================================================================

//===========================================================================
//FUNCTION   : addReprocChannel
//
//DESCRIPTION: add a reprocess channel that will do reprocess on frames
//             coming from input channel
//
//PARAMETERS :
//  @pInputChannel : ptr to input channel whose frames will be post-processed
//
//RETURN     : Ptr to the newly created channel obj. NULL if failed.
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142775 "addOfflineReprocChannel"
	preserve_cpp_body_indent private return_type class_ref 3648439 // QCameraReprocessChannel
	nparams 4
	  param inout name "img_config" type class_ref 3644599 // cam_pp_offline_src_config_t
	  param inout name "pp_feature" type class_ref 3648567 // cam_pp_feature_config_t
	  param in name "stream_cb" type class_ref 3648695 // stream_cb_routine
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addOfflineReprocChannel
//
//DESCRIPTION: add a offline reprocess channel contains one reproc stream,
//             that will do reprocess on frames coming from external images
//
//PARAMETERS :
//  @img_config  : offline reporcess image info
//  @pp_feature  : pp feature config
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addOfflineReprocChannel
//
//DESCRIPTION: add a offline reprocess channel contains one reproc stream,
//             that will do reprocess on frames coming from external images
//
//PARAMETERS :
//  @img_config  : offline reporcess image info
//  @pp_feature  : pp feature config
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addOfflineReprocChannel
//
//DESCRIPTION: add a offline reprocess channel contains one reproc stream,
//             that will do reprocess on frames coming from external images
//
//PARAMETERS :
//  @img_config  : offline reporcess image info
//  @pp_feature  : pp feature config
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44142903 "addStreamToChannel"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 4
	  param inout name "pChannel" type class_ref 3648311 // QCameraChannel
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param in name "streamCB" type class_ref 3648695 // stream_cb_routine
	  param inout name "userData" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addStreamToChannel
//
//DESCRIPTION: add a stream into a channel
//
//PARAMETERS :
//  @pChannel   : ptr to channel obj
//  @streamType : type of stream to be added
//  @streamCB   : callback of stream
//  @userData   : user data ptr to callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addStreamToChannel
//
//DESCRIPTION: add a stream into a channel
//
//PARAMETERS :
//  @pChannel   : ptr to channel obj
//  @streamType : type of stream to be added
//  @streamCB   : callback of stream
//  @userData   : user data ptr to callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addStreamToChannel
//
//DESCRIPTION: add a stream into a channel
//
//PARAMETERS :
//  @pChannel   : ptr to channel obj
//  @streamType : type of stream to be added
//  @streamCB   : callback of stream
//  @userData   : user data ptr to callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143031 "preparePreview"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : preparePreview
//
//DESCRIPTION: add channels needed for preview
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : preparePreview
//
//DESCRIPTION: add channels needed for preview
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : preparePreview
//
//DESCRIPTION: add channels needed for preview
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143159 "unpreparePreview"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unpreparePreview
//
//DESCRIPTION: delete channels for preview
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unpreparePreview
//
//DESCRIPTION: delete channels for preview
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unpreparePreview
//
//DESCRIPTION: delete channels for preview
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143287 "prepareRawStream"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "curChannel" type class_ref 3648311 // QCameraChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143415 "getChannelByHandle"
	preserve_cpp_body_indent private return_type class_ref 3648311 // QCameraChannel
	nparams 1
	  param in name "channelHandle" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getChannelByHandle
//
//DESCRIPTION: return a channel by its handle
//
//PARAMETERS :
//  @channelHandle : channel handle
//
//RETURN     : a channel obj if found, NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getChannelByHandle
//
//DESCRIPTION: return a channel by its handle
//
//PARAMETERS :
//  @channelHandle : channel handle
//
//RETURN     : a channel obj if found, NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getChannelByHandle
//
//DESCRIPTION: return a channel by its handle
//
//PARAMETERS :
//  @channelHandle : channel handle
//
//RETURN     : a channel obj if found, NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143543 "getSnapshotFrame"
	private return_type class_ref 3646391 // mm_camera_buf_def_t
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143671 "processFaceDetectionResult"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "fd_data" type class_ref 3648823 // cam_face_detection_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processFaceDetectionReuslt
//
//DESCRIPTION: process face detection reuslt
//
//PARAMETERS :
//  @fd_data : ptr to face detection result struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processFaceDetectionReuslt
//
//DESCRIPTION: process face detection reuslt
//
//PARAMETERS :
//  @fd_data : ptr to face detection result struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processFaceDetectionReuslt
//
//DESCRIPTION: process face detection reuslt
//
//PARAMETERS :
//  @fd_data : ptr to face detection result struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143799 "processHistogramStats"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "stats_data" type class_ref 3648951 // cam_hist_stats_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processHistogramStats
//
//DESCRIPTION: process histogram stats
//
//PARAMETERS :
//  @hist_data : ptr to histogram stats struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processHistogramStats
//
//DESCRIPTION: process histogram stats
//
//PARAMETERS :
//  @hist_data : ptr to histogram stats struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processHistogramStats
//
//DESCRIPTION: process histogram stats
//
//PARAMETERS :
//  @hist_data : ptr to histogram stats struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44143927 "setHistogram"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "histogram_en" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHistogram
//
//DESCRIPTION: set if histogram should be enabled
//
//PARAMETERS :
//  @histogram_en : bool flag if histogram should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHistogram
//
//DESCRIPTION: set if histogram should be enabled
//
//PARAMETERS :
//  @histogram_en : bool flag if histogram should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHistogram
//
//DESCRIPTION: set if histogram should be enabled
//
//PARAMETERS :
//  @histogram_en : bool flag if histogram should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144055 "setFaceDetection"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFaceDetection
//
//DESCRIPTION: set if face detection should be enabled
//
//PARAMETERS :
//  @enabled : bool flag if face detection should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceDetection
//
//DESCRIPTION: set if face detection should be enabled
//
//PARAMETERS :
//  @enabled : bool flag if face detection should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceDetection
//
//DESCRIPTION: set if face detection should be enabled
//
//PARAMETERS :
//  @enabled : bool flag if face detection should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144183 "prepareHardwareForSnapshot"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "afNeeded" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : prepareHardwareForSnapshot
//
//DESCRIPTION: prepare hardware for snapshot, such as LED
//
//PARAMETERS :
//  @afNeeded: flag indicating if Auto Focus needs to be done during preparation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : prepareHardwareForSnapshot
//
//DESCRIPTION: prepare hardware for snapshot, such as LED
//
//PARAMETERS :
//  @afNeeded: flag indicating if Auto Focus needs to be done during preparation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : prepareHardwareForSnapshot
//
//DESCRIPTION: prepare hardware for snapshot, such as LED
//
//PARAMETERS :
//  @afNeeded: flag indicating if Auto Focus needs to be done during preparation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144311 "needProcessPreviewFrame"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needProcessPreviewFrame
//
//DESCRIPTION: returns whether preview frame need to be displayed
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : needProcessPreviewFrame
//
//DESCRIPTION: returns whether preview frame need to be displayed
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : needProcessPreviewFrame
//
//DESCRIPTION: returns whether preview frame need to be displayed
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144439 "isNoDisplayMode"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParameters.isNoDisplayMode();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144567 "isZSLMode"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParameters.isZSLMode();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144695 "isRdiMode"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParameters.isRdiMode();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144823 "numOfSnapshotsExpected"
	cpp_inline private explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mParameters.getNumOfSnapshots();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44144951 "isSecureMode"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParameters.isSecureMode();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145079 "isLongshotEnabled"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mLongshotEnabled; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145207 "isHFRMode"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParameters.isHfrMode();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145335 "isLiveSnapshot"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_stateMachine.isRecording();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145463 "setRetroPicture"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { bRetroPicture = enable; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145591 "isRetroPicture"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return bRetroPicture; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145719 "isHDRMode"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParameters.isHDREnabled();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145847 "getBufNumRequired"
	preserve_cpp_body_indent private explicit_return_type "uint8_t"
	nparams 1
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufNumRequired
//
//DESCRIPTION: return number of stream buffers needed for given stream type
//
//PARAMETERS :
//  @stream_type  : type of stream
//
//RETURN     : number of buffers needed
//==========================================================================

//===========================================================================
//FUNCTION   : getBufNumRequired
//
//DESCRIPTION: return number of stream buffers needed for given stream type
//
//PARAMETERS :
//  @stream_type  : type of stream
//
//RETURN     : number of buffers needed
//==========================================================================

//===========================================================================
//FUNCTION   : getBufNumRequired
//
//DESCRIPTION: return number of stream buffers needed for given stream type
//
//PARAMETERS :
//  @stream_type  : type of stream
//
//RETURN     : number of buffers needed
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44145975 "needFDMetadata"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "channel_type" type class_ref 3643063 // qcamera_ch_type_enum_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needFDMetadata
//
//DESCRIPTION: check whether we need process Face Detection metadata in this chanel
//
//PARAMETERS :
//  @channel_type: channel type
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needFDMetadata
//
//DESCRIPTION: check whether we need process Face Detection metadata in this chanel
//
//PARAMETERS :
//  @channel_type: channel type
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needFDMetadata
//
//DESCRIPTION: check whether we need process Face Detection metadata in this chanel
//
//PARAMETERS :
//  @channel_type: channel type
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146103 "configureOnlineRotation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "ch" type class_ref 3648311 // QCameraChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureOnlineRotation
//
//DESCRIPTION: Configure backend with expected rotation for snapshot stream
//
//PARAMETERS :
//   @ch     : Channel containing a snapshot stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureOnlineRotation
//
//DESCRIPTION: Configure backend with expected rotation for snapshot stream
//
//PARAMETERS :
//   @ch     : Channel containing a snapshot stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146231 "declareSnapshotStreams"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : declareSnapshotStreams
//
//DESCRIPTION: Configure backend with expected snapshot streams
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : declareSnapshotStreams
//
//DESCRIPTION: Configure backend with expected snapshot streams
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : declareSnapshotStreams
//
//DESCRIPTION: Configure backend with expected snapshot streams
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146359 "unconfigureAdvancedCapture"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unconfigureAdvancedCapture
//
//DESCRIPTION: unconfigure Advanced Capture.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unconfigureAdvancedCapture
//
//DESCRIPTION: unconfigure Advanced Capture.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146487 "configureAdvancedCapture"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureAdvancedCapture
//
//DESCRIPTION: configure Advanced Capture.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAdvancedCapture
//
//DESCRIPTION: configure Advanced Capture.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAdvancedCapture
//
//DESCRIPTION: configure Advanced Capture.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146615 "configureAFBracketing"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "enable" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureAFBracketing
//
//DESCRIPTION: configure AF Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAFBracketing
//
//DESCRIPTION: configure AF Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAFBracketing
//
//DESCRIPTION: configure AF Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146743 "configureHDRBracketing"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureHDRBracketing
//
//DESCRIPTION: configure HDR Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureHDRBracketing
//
//DESCRIPTION: configure HDR Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureHDRBracketing
//
//DESCRIPTION: configure HDR Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146871 "stopAdvancedCapture"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "pChannel" type class_ref 3649079 // QCameraPicChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopAdvancedCapture
//
//DESCRIPTION: stops advanced capture based on capture type
//
//PARAMETERS :
//  @pChannel : channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopAdvancedCapture
//
//DESCRIPTION: stops advanced capture based on capture type
//
//PARAMETERS :
//  @pChannel : channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44146999 "startAdvancedCapture"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "pChannel" type class_ref 3649079 // QCameraPicChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startAdvancedCapture
//
//DESCRIPTION: starts advanced capture based on capture type
//
//PARAMETERS :
//  @pChannel : channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startAdvancedCapture
//
//DESCRIPTION: starts advanced capture based on capture type
//
//PARAMETERS :
//  @pChannel : channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startAdvancedCapture
//
//DESCRIPTION: starts advanced capture based on capture type
//
//PARAMETERS :
//  @pChannel : channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147127 "configureOptiZoom"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureOptiZoom
//
//DESCRIPTION: configure Opti Zoom.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureOptiZoom
//
//DESCRIPTION: configure Opti Zoom.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureOptiZoom
//
//DESCRIPTION: configure Opti Zoom.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147255 "configureStillMore"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureStillMore
//
//DESCRIPTION: configure StillMore.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureStillMore
//
//DESCRIPTION: configure StillMore.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147383 "configureAEBracketing"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureAEBracketing
//
//DESCRIPTION: configure AE Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAEBracketing
//
//DESCRIPTION: configure AE Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAEBracketing
//
//DESCRIPTION: configure AE Bracketing.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147511 "updatePostPreviewParameters"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147639 "setOutputImageCount"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "aCount" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {mOutputCount = aCount;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147767 "getOutputImageCount"
	cpp_inline private explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mOutputCount;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44147895 "processUFDumps"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "evt" type class_ref 3647415 // qcamera_jpeg_evt_payload_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processUFDumps
//
//DESCRIPTION: process UF jpeg dumps for refocus support
//
//PARAMETERS :
//  @evt     : payload of jpeg event, including information about jpeg encoding
//             status, jpeg size and so on.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : none
//==========================================================================

//===========================================================================
//FUNCTION   : processUFDumps
//
//DESCRIPTION: process UF jpeg dumps for refocus support
//
//PARAMETERS :
//  @evt     : payload of jpeg event, including information about jpeg encoding
//             status, jpeg size and so on.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : none
//==========================================================================

//===========================================================================
//FUNCTION   : processUFDumps
//
//DESCRIPTION: process UF jpeg dumps for refocus support
//
//PARAMETERS :
//  @evt     : payload of jpeg event, including information about jpeg encoding
//             status, jpeg size and so on.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148023 "captureDone"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : captureDone
//
//DESCRIPTION: Function called when the capture is completed before encoding
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : captureDone
//
//DESCRIPTION: Function called when the capture is completed before encoding
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148151 "updateMetadata"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "pMetaData" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateMetadata
//
//DESCRIPTION: Frame related parameter can be updated here
//
//PARAMETERS :
//  @pMetaData : pointer to metadata buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateMetadata
//
//DESCRIPTION: Frame related parameter can be updated here
//
//PARAMETERS :
//  @pMetaData : pointer to metadata buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148279 "getPPConfig"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "pp_config" type class_ref 3648567 // cam_pp_feature_config_t
	  param in name "curCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPPConfig
//
//DESCRIPTION: get Post processing configaration data
//
//PARAMETERS :
//@pp config:  pp config structure pointer,
//@curCount:  current pp pass count
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getPPConfig
//
//DESCRIPTION: get Post processing configaration data
//
//PARAMETERS :
//@pp config:  pp config structure pointer,
//@curCount:  current pp pass count
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148407 "camEvtHandle"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "camera_handle" explicit_type "uint32_t"
	  param inout name "evt" type class_ref 3637303 // mm_camera_event_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : evtHandle
//
//DESCRIPTION: Function registerd to mm-camera-interface to handle backend events
//
//PARAMETERS :
//  @camera_handle : event type to be processed
//  @evt           : ptr to event
//  @user_data     : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : evtHandle
//
//DESCRIPTION: Function registerd to mm-camera-interface to handle backend events
//
//PARAMETERS :
//  @camera_handle : event type to be processed
//  @evt           : ptr to event
//  @user_data     : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : evtHandle
//
//DESCRIPTION: Function registerd to mm-camera-interface to handle backend events
//
//PARAMETERS :
//  @camera_handle : event type to be processed
//  @evt           : ptr to event
//  @user_data     : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148535 "jpegEvtHandle"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 5
	  param in name "status" type class_ref 3649335 // jpeg_job_status_t
	  param in name "client_hdl" explicit_type "uint32_t"
	  param in name "jobId" explicit_type "uint32_t"
	  param inout name "p_output" type class_ref 3649463 // mm_jpeg_output_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : jpegEvtHandle
//
//DESCRIPTION: Function registerd to mm-jpeg-interface to handle jpeg events
//
//PARAMETERS :
//  @status    : status of jpeg job
//  @client_hdl: jpeg client handle
//  @jobId     : jpeg job Id
//  @p_ouput   : ptr to jpeg output result struct
//  @userdata  : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : jpegEvtHandle
//
//DESCRIPTION: Function registerd to mm-jpeg-interface to handle jpeg events
//
//PARAMETERS :
//  @status    : status of jpeg job
//  @client_hdl: jpeg client handle
//  @jobId     : jpeg job Id
//  @p_ouput   : ptr to jpeg output result struct
//  @userdata  : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : jpegEvtHandle
//
//DESCRIPTION: Function registerd to mm-jpeg-interface to handle jpeg events
//
//PARAMETERS :
//  @status    : status of jpeg job
//  @client_hdl: jpeg client handle
//  @jobId     : jpeg job Id
//  @p_ouput   : ptr to jpeg output result struct
//  @userdata  : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148663 "evtNotifyRoutine"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44148791 "zsl_channel_cb"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : zsl_channel_cb
//
//DESCRIPTION: helper function to handle ZSL superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : zsl_channel_cb
//
//DESCRIPTION: helper function to handle ZSL superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : zsl_channel_cb
//
//DESCRIPTION: helper function to handle ZSL superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " functions for different data notify cb"
      end

      operation 44148919 "capture_channel_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : capture_channel_cb_routine
//
//DESCRIPTION: helper function to handle snapshot superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : capture_channel_cb_routine
//
//DESCRIPTION: helper function to handle snapshot superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : capture_channel_cb_routine
//
//DESCRIPTION: helper function to handle snapshot superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149047 "postproc_channel_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : postproc_channel_cb_routine
//
//DESCRIPTION: helper function to handle postprocess superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : postproc_channel_cb_routine
//
//DESCRIPTION: helper function to handle postprocess superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : postproc_channel_cb_routine
//
//DESCRIPTION: helper function to handle postprocess superbuf callback directly from
//             mm-camera-interface
//
//PARAMETERS :
//  @recvd_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149175 "rdi_mode_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : rdi_mode_stream_cb_routine
//
//DESCRIPTION: helper function to handle RDI frame from preview stream in
//             rdi mode case
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : rdi_mode_stream_cb_routine
//
//DESCRIPTION: helper function to handle RDI frame from preview stream in
//             rdi mode case
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : rdi_mode_stream_cb_routine
//
//DESCRIPTION: helper function to handle RDI frame from preview stream in
//             rdi mode case
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149303 "nodisplay_preview_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : nodisplay_preview_stream_cb_routine
//
//DESCRIPTION: helper function to handle preview frame from preview stream in
//             no-display case
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : nodisplay_preview_stream_cb_routine
//
//DESCRIPTION: helper function to handle preview frame from preview stream in
//             no-display case
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : nodisplay_preview_stream_cb_routine
//
//DESCRIPTION: helper function to handle preview frame from preview stream in
//             no-display case
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149431 "preview_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : preview_stream_cb_routine
//
//DESCRIPTION: helper function to handle preview frame from preview stream in
//             normal case with display.
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. The new
//            preview frame will be sent to display, and an older frame
//            will be dequeued from display and needs to be returned back
//            to kernel for future use.
//==========================================================================

//===========================================================================
//FUNCTION   : preview_stream_cb_routine
//
//DESCRIPTION: helper function to handle preview frame from preview stream in
//             normal case with display.
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. The new
//            preview frame will be sent to display, and an older frame
//            will be dequeued from display and needs to be returned back
//            to kernel for future use.
//==========================================================================

//===========================================================================
//FUNCTION   : preview_stream_cb_routine
//
//DESCRIPTION: helper function to handle preview frame from preview stream in
//             normal case with display.
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. The new
//            preview frame will be sent to display, and an older frame
//            will be dequeued from display and needs to be returned back
//            to kernel for future use.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149559 "postview_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : postview_stream_cb_routine
//
//DESCRIPTION: helper function to handle post frame from postview stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : postview_stream_cb_routine
//
//DESCRIPTION: helper function to handle post frame from postview stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : postview_stream_cb_routine
//
//DESCRIPTION: helper function to handle post frame from postview stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149687 "video_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : video_stream_cb_routine
//
//DESCRIPTION: helper function to handle video frame from video stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. video
//            frame will be sent to video encoder. Once video encoder is
//            done with the video frame, it will call another API
//            (release_recording_frame) to return the frame back
//==========================================================================

//===========================================================================
//FUNCTION   : video_stream_cb_routine
//
//DESCRIPTION: helper function to handle video frame from video stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. video
//            frame will be sent to video encoder. Once video encoder is
//            done with the video frame, it will call another API
//            (release_recording_frame) to return the frame back
//==========================================================================

//===========================================================================
//FUNCTION   : video_stream_cb_routine
//
//DESCRIPTION: helper function to handle video frame from video stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. video
//            frame will be sent to video encoder. Once video encoder is
//            done with the video frame, it will call another API
//            (release_recording_frame) to return the frame back
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149815 "snapshot_channel_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : snapshot_channel_cb_routine
//
//DESCRIPTION: helper function to handle snapshot frame from snapshot channel
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

//===========================================================================
//FUNCTION   : snapshot_channel_cb_routine
//
//DESCRIPTION: helper function to handle snapshot frame from snapshot channel
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : recvd_frame will be released after this call by caller, so if
//            async operation needed for recvd_frame, it's our responsibility
//            to save a copy for this variable to be used later.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44149943 "raw_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw dump frame from raw stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. For raw
//            frame, there is no need to send to postprocessor for jpeg
//            encoding. this function will play shutter and send the data
//            callback to upper layer. Raw frame buffer will be returned
//            back to kernel, and frame will be free after use.
//==========================================================================

//===========================================================================
//FUNCTION   : raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw dump frame from raw stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. For raw
//            frame, there is no need to send to postprocessor for jpeg
//            encoding. this function will play shutter and send the data
//            callback to upper layer. Raw frame buffer will be returned
//            back to kernel, and frame will be free after use.
//==========================================================================

//===========================================================================
//FUNCTION   : raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw dump frame from raw stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. For raw
//            frame, there is no need to send to postprocessor for jpeg
//            encoding. this function will play shutter and send the data
//            callback to upper layer. Raw frame buffer will be returned
//            back to kernel, and frame will be free after use.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150071 "preview_raw_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : preview_raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw frame during standard preview
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : preview_raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw frame during standard preview
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : preview_raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw frame during standard preview
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150199 "snapshot_raw_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : snapshot_raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw frame during standard capture
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : snapshot_raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw frame during standard capture
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

//===========================================================================
//FUNCTION   : snapshot_raw_stream_cb_routine
//
//DESCRIPTION: helper function to handle raw frame during standard capture
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150327 "metadata_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : metadata_stream_cb_routine
//
//DESCRIPTION: helper function to handle metadata frame from metadata stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. Metadata
//            could have valid entries for face detection result or
//            histogram statistics information.
//==========================================================================

//===========================================================================
//FUNCTION   : metadata_stream_cb_routine
//
//DESCRIPTION: helper function to handle metadata frame from metadata stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. Metadata
//            could have valid entries for face detection result or
//            histogram statistics information.
//==========================================================================

//===========================================================================
//FUNCTION   : metadata_stream_cb_routine
//
//DESCRIPTION: helper function to handle metadata frame from metadata stream
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. Metadata
//            could have valid entries for face detection result or
//            histogram statistics information.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150455 "reprocess_stream_cb_routine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : reprocess_stream_cb_routine
//
//DESCRIPTION: helper function to handle reprocess frame from reprocess stream
//(after reprocess, e.g., ZSL snapshot frame after WNR if
//             WNR is enabled)
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. In this
//            case, reprocessed frame need to be passed to postprocessor
//            for jpeg encoding.
//==========================================================================

//===========================================================================
//FUNCTION   : reprocess_stream_cb_routine
//
//DESCRIPTION: helper function to handle reprocess frame from reprocess stream
//(after reprocess, e.g., ZSL snapshot frame after WNR if
//             WNR is enabled)
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. In this
//            case, reprocessed frame need to be passed to postprocessor
//            for jpeg encoding.
//==========================================================================

//===========================================================================
//FUNCTION   : reprocess_stream_cb_routine
//
//DESCRIPTION: helper function to handle reprocess frame from reprocess stream
//(after reprocess, e.g., ZSL snapshot frame after WNR if
//             WNR is enabled)
//
//PARAMETERS :
//  @super_frame : received super buffer
//  @stream      : stream object
//  @userdata    : user data ptr
//
//RETURN    : None
//
//NOTE      : caller passes the ownership of super_frame, it's our
//            responsibility to free super_frame once it's done. In this
//            case, reprocessed frame need to be passed to postprocessor
//            for jpeg encoding.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150583 "releaseCameraMemory"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "data" explicit_type "void"
	  param inout name "cookie" explicit_type "void"
	  param in name "cbStatus" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseCameraMemory
//
//DESCRIPTION: releases camera memory objects
//
//PARAMETERS :
//  @data    : buffer to be released
//  @cookie  : context data
//  @cbStatus: callback status
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseCameraMemory
//
//DESCRIPTION: releases camera memory objects
//
//PARAMETERS :
//  @data    : buffer to be released
//  @cookie  : context data
//  @cbStatus: callback status
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseCameraMemory
//
//DESCRIPTION: releases camera memory objects
//
//PARAMETERS :
//  @data    : buffer to be released
//  @cookie  : context data
//  @cbStatus: callback status
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150711 "returnStreamBuffer"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "data" explicit_type "void"
	  param inout name "cookie" explicit_type "void"
	  param in name "cbStatus" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : returnStreamBuffer
//
//DESCRIPTION: returns back a stream buffer
//
//PARAMETERS :
//  @data    : buffer to be released
//  @cookie  : context data
//  @cbStatus: callback status
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : returnStreamBuffer
//
//DESCRIPTION: returns back a stream buffer
//
//PARAMETERS :
//  @data    : buffer to be released
//  @cookie  : context data
//  @cbStatus: callback status
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : returnStreamBuffer
//
//DESCRIPTION: returns back a stream buffer
//
//PARAMETERS :
//  @data    : buffer to be released
//  @cookie  : context data
//  @cbStatus: callback status
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44150839 "getLogLevel"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getLogLevel
//
//DESCRIPTION: Reads the log level property into a variable
//
//PARAMETERS :
//  None
//
//RETURN     :
//  None
//==========================================================================

//===========================================================================
//FUNCTION   : getLogLevel
//
//DESCRIPTION: Reads the log level property into a variable
//
//PARAMETERS :
//  None
//
//RETURN     :
//  None
//==========================================================================

//===========================================================================
//FUNCTION   : getLogLevel
//
//DESCRIPTION: Reads the log level property into a variable
//
//PARAMETERS :
//  None
//
//RETURN     :
//  None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13228343 "mCameraDevice"
	private explicit_type "camera_device_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13228471 "mCameraId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7045943 // mCameraHandle (<unidirectional association>)
	relation 7045943 --->
	  a role_name "mCameraHandle" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7045943 // mCameraHandle (<unidirectional association>)
	  b parent class_ref 3644727 // mm_camera_vtbl_t
      end

      attribute 13228599 "mCameraOpened"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13228727 "mPreviewWindow"
	private explicit_type "preview_stream_ops_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7046071 // mParameters (<directional composition>)
	relation 7046071 *-->
	  a role_name "mParameters" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046071 // mParameters (<directional composition>)
	  b parent class_ref 3649591 // QCameraParameters
      end

      attribute 13228855 "mMsgEnabled"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13228983 "mStoreMetaDataInFrame"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13229111 "mNotifyCb"
	private explicit_type "camera_notify_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13229239 "mDataCb"
	private explicit_type "camera_data_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13229367 "mDataCbTimestamp"
	private explicit_type "camera_data_timestamp_callback"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13229495 "mGetMemory"
	private explicit_type "camera_request_memory"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13229623 "mCallbackCookie"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7046199 // m_stateMachine (<directional composition>)
	relation 7046199 *-->
	  a role_name "m_stateMachine" private
	    comment " state machine"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046199 // m_stateMachine (<directional composition>)
	  b parent class_ref 3645623 // QCameraStateMachine
      end

      attribute 13229751 "m_smThreadActive"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7046327 // m_postprocessor (<directional composition>)
	relation 7046327 *-->
	  a role_name "m_postprocessor" private
	    comment " post processor"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046327 // m_postprocessor (<directional composition>)
	  b parent class_ref 3645751 // QCameraPostProcessor
      end

      classrelation 7046455 // m_thermalAdapter (<unidirectional association>)
	relation 7046455 --->
	  a role_name "m_thermalAdapter" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046455 // m_thermalAdapter (<unidirectional association>)
	  b parent class_ref 3649719 // QCameraThermalAdapter
      end

      classrelation 7046583 // m_cbNotifier (<directional composition>)
	relation 7046583 *-->
	  a role_name "m_cbNotifier" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046583 // m_cbNotifier (<directional composition>)
	  b parent class_ref 3643703 // QCameraCbNotifier
      end

      classrelation 7046711 // m_perfLock (<directional composition>)
	relation 7046711 *-->
	  a role_name "m_perfLock" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046711 // m_perfLock (<directional composition>)
	  b parent class_ref 3649847 // QCameraPerfLock
      end

      attribute 13229879 "m_lock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13230007 "m_cond"
	private explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7046839 // m_apiResultList (<unidirectional association>)
	relation 7046839 --->
	  a role_name "m_apiResultList" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046839 // m_apiResultList (<unidirectional association>)
	  b parent class_ref 3649975 // api_result_list
      end

      classrelation 7046967 // m_memoryPool (<directional composition>)
	relation 7046967 *-->
	  a role_name "m_memoryPool" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7046967 // m_memoryPool (<directional composition>)
	  b parent class_ref 3650103 // QCameraMemoryPool
      end

      attribute 13230135 "m_evtLock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13230263 "m_evtCond"
	private explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7047095 // m_evtResult (<directional composition>)
	relation 7047095 *-->
	  a role_name "m_evtResult" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047095 // m_evtResult (<directional composition>)
	  b parent class_ref 3646007 // qcamera_api_result_t
      end

      attribute 13230391 "m_parm_lock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7047223 // m_channels (<unidirectional association>)
	relation 7047223 --->
	  a role_name "m_channels" multiplicity "[QCAMERA_CH_TYPE_MAX]" private
	    comment " array holding channel ptr"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047223 // m_channels (<unidirectional association>)
	  b parent class_ref 3648311 // QCameraChannel
      end

      attribute 13230519 "m_bPreviewStarted"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "flag indicates first preview frame callback is received"
      end

      attribute 13230647 "m_bRecordStarted"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "flag indicates Recording is started for first time"
      end

      attribute 13230775 "bRetroPicture"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Signifies if ZSL Retro Snapshots are enabled
"
      end

      attribute 13230903 "m_bLedAfAecLock"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Signifies AEC locked during zsl snapshots
"
      end

      classrelation 7047351 // m_currentFocusState (<directional composition>)
	relation 7047351 *-->
	  a role_name "m_currentFocusState" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047351 // m_currentFocusState (<directional composition>)
	  b parent class_ref 3650231 // cam_autofocus_state_t
      end

      attribute 13231031 "mDumpFrmCnt"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " frame dump count"
      end

      attribute 13231159 "mDumpSkipCnt"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " frame skip count"
      end

      classrelation 7047479 // mExifParams (<directional composition>)
	relation 7047479 *-->
	  a role_name "mExifParams" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047479 // mExifParams (<directional composition>)
	  b parent class_ref 3650359 // mm_jpeg_exif_params_t
      end

      classrelation 7047607 // mThermalLevel (<directional composition>)
	relation 7047607 *-->
	  a role_name "mThermalLevel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047607 // mThermalLevel (<directional composition>)
	  b parent class_ref 3645367 // qcamera_thermal_level_enum_t
      end

      attribute 13231287 "mCancelAutoFocus"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13231415 "m_HDRSceneEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13231543 "mLongshotEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13231671 "m_max_pic_width"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13231799 "m_max_pic_height"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13231927 "mLiveSnapshotThread"
	private explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232055 "mIntPicThread"
	private explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232183 "mFlashNeeded"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232311 "mDeviceRotation"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232439 "mCaptureRotation"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232567 "mJpegExifRotation"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232695 "mUseJpegExifRotation"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232823 "mIs3ALocked"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13232951 "mPrepSnapRun"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13233079 "mZoomLevel"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13233207 "mVFrameCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13233335 "mVLastFrameCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7047735 // mVLastFpsTime (<directional composition>)
	relation 7047735 *-->
	  a role_name "mVLastFpsTime" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047735 // mVLastFpsTime (<directional composition>)
	  b parent class_ref 3650487 // nsecs_t
      end

      attribute 13233463 "mVFps"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13233591 "mPFrameCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13233719 "mPLastFrameCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7047863 // mPLastFpsTime (<directional composition>)
	relation 7047863 *-->
	  a role_name "mPLastFpsTime" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7047863 // mPLastFpsTime (<directional composition>)
	  b parent class_ref 3650487 // nsecs_t
      end

      attribute 13233847 "mPFps"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13233975 "m_bIntJpegEvtPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "eztune variables for communication with eztune server at backend
"
      end

      attribute 13234103 "m_bIntRawEvtPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13234231 "m_BackendFileName"
	private explicit_type "char"
	multiplicity "[QCAMERA_MAX_FILEPATH_LENGTH]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13234359 "mBackendFileSize"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13234487 "m_int_lock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13234615 "m_int_cond"
	private explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3650615 "DefferedWorkCmd"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13234743 "CMD_DEFF_ALLOCATE_BUFF"
	  public type class_ref 3650615 // DefferedWorkCmd
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13234871 "CMD_DEFF_PPROC_START"
	  public type class_ref 3650615 // DefferedWorkCmd
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13234999 "CMD_DEFF_MAX"
	  public type class_ref 3650615 // DefferedWorkCmd
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3650743 "DefferAllocBuffArgs"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7047991 // ch (<unidirectional association>)
	  relation 7047991 --->
	    a role_name "ch" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7047991 // ch (<unidirectional association>)
	    b parent class_ref 3648311 // QCameraChannel
	end

	attribute 13235127 "type"
	  public explicit_type "cam_stream_type_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3650871 "DefferWorkArgs"
	visibility package stereotype "union"
	cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7048119 // allocArgs (<directional composition>)
	  relation 7048119 *-->
	    a role_name "allocArgs" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7048119 // allocArgs (<directional composition>)
	    b parent class_ref 3650743 // DefferAllocBuffArgs
	end

	classrelation 7048247 // pprocArgs (<unidirectional association>)
	  relation 7048247 --->
	    a role_name "pprocArgs" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7048247 // pprocArgs (<unidirectional association>)
	    b parent class_ref 3648311 // QCameraChannel
	end
      end

      attribute 13235255 "mDeffOngoingJobs"
	private explicit_type "bool"
	multiplicity "[MAX_ONGOING_JOBS]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3650999 "DeffWork"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 44150967 "DeffWork"
	  cpp_inline public explicit_return_type ""
	  nparams 3
	    param in name "cmd_" type class_ref 3650615 // DefferedWorkCmd
	    param in name "id_" explicit_type "uint32_t"
	    param in name "args_" type class_ref 3650871 // DefferWorkArgs
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw}${abstract} : cmd(cmd_),
              id(id_),
              args(args_){};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	classrelation 7048375 // cmd (<directional composition>)
	  relation 7048375 *-->
	    a role_name "cmd" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7048375 // cmd (<directional composition>)
	    b parent class_ref 3650615 // DefferedWorkCmd
	end

	attribute 13235383 "id"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 7048503 // args (<directional composition>)
	  relation 7048503 *-->
	    a role_name "args" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7048503 // args (<directional composition>)
	    b parent class_ref 3650871 // DefferWorkArgs
	end
      end

      classrelation 7048631 // mDefferedWorkThread (<directional composition>)
	relation 7048631 *-->
	  a role_name "mDefferedWorkThread" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7048631 // mDefferedWorkThread (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      classrelation 7048759 // mCmdQueue (<directional composition>)
	relation 7048759 *-->
	  a role_name "mCmdQueue" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7048759 // mCmdQueue (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      attribute 13235511 "mDeffLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13235639 "mDeffCond"
	private explicit_type "Condition"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44151095 "queueDefferedWork"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "cmd" type class_ref 3650615 // DefferedWorkCmd
	  param in name "args" type class_ref 3650871 // DefferWorkArgs
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : queueDefferedWork
//
//DESCRIPTION: function which queues deferred tasks
//
//PARAMETERS :
//  @cmd     : deferred task
//  @args    : deffered task arguments
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queueDefferedWork
//
//DESCRIPTION: function which queues deferred tasks
//
//PARAMETERS :
//  @cmd     : deferred task
//  @args    : deffered task arguments
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queueDefferedWork
//
//DESCRIPTION: function which queues deferred tasks
//
//PARAMETERS :
//  @cmd     : deferred task
//  @args    : deffered task arguments
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44151223 "waitDefferedWork"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "job_id" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : waitDefferedWork
//
//DESCRIPTION: waits for a deffered task to finish
//
//PARAMETERS :
//  @job_id  : deferred task id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : waitDefferedWork
//
//DESCRIPTION: waits for a deffered task to finish
//
//PARAMETERS :
//  @job_id  : deferred task id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : waitDefferedWork
//
//DESCRIPTION: waits for a deffered task to finish
//
//PARAMETERS :
//  @job_id  : deferred task id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44151351 "defferedWorkRoutine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "obj" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : defferedWorkRoutine
//
//DESCRIPTION: data process routine that executes deffered tasks
//
//PARAMETERS :
//  @data    : user data ptr (QCamera2HardwareInterface)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : defferedWorkRoutine
//
//DESCRIPTION: data process routine that executes deffered tasks
//
//PARAMETERS :
//  @data    : user data ptr (QCamera2HardwareInterface)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : defferedWorkRoutine
//
//DESCRIPTION: data process routine that executes deffered tasks
//
//PARAMETERS :
//  @data    : user data ptr (QCamera2HardwareInterface)
//
//RETURN     : None
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13235767 "mSnapshotJob"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13235895 "mPostviewJob"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236023 "mMetadataJob"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236151 "mReprocJob"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236279 "mRawdataJob"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236407 "mOutputCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236535 "mInputCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236663 "mAdvancedCaptureConfigured"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13236791 "mHDRBracketingEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3644215 "QCameraAllocator"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44151479 "allocateStreamBuf"
	abstract cpp_virtual public return_type class_ref 3644983 // QCameraMemory
	nparams 5
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param in name "size" explicit_type "size_t"
	  param in name "stride" explicit_type "int"
	  param in name "scanline" explicit_type "int"
	  param inout name "bufferCnt" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} & ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44151607 "allocateMoreStreamBuf"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 3
	  param inout name "mem_obj" type class_ref 3644983 // QCameraMemory
	  param in name "size" explicit_type "size_t"
	  param inout name "bufferCnt" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44151735 "allocateStreamInfoBuf"
	abstract cpp_virtual public return_type class_ref 3645111 // QCameraHeapMemory
	nparams 1
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44151863 "allocateMiscBuf"
	abstract cpp_virtual public return_type class_ref 3645111 // QCameraHeapMemory
	nparams 1
	  param inout name "streamInfo" type class_ref 3645239 // cam_stream_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44151991 "allocateStreamUserBuf"
	abstract cpp_virtual public return_type class_ref 3644983 // QCameraMemory
	nparams 1
	  param inout name "streamInfo" type class_ref 3645239 // cam_stream_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44152119 "~QCameraAllocator"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end
    end

    class 3644343 "QCameraThermalCallback"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44227639 "thermalEvtHandle"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 3
	  param inout name "level" type class_ref 3645367 // qcamera_thermal_level_enum_t
	  param inout name "userdata" explicit_type "void"
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44227767 "~QCameraThermalCallback"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 44227895 "getThermalLevel"
	preserve_cpp_body_indent public return_type class_ref 3645367 // qcamera_thermal_level_enum_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44228023 "setThermalLevel"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "level" type class_ref 3645367 // qcamera_thermal_level_enum_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7063735 // mLevel (<directional composition>)
	relation 7063735 *-->
	  a role_name "mLevel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063735 // mLevel (<directional composition>)
	  b parent class_ref 3645367 // qcamera_thermal_level_enum_t
      end
    end

    class 3644471 "QCameraAdjustFPS"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44166839 "recalcFPSRange"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 3
	  param inout name "minFPS" explicit_type "int"
	  param inout name "maxFPS" explicit_type "int"
	  param inout name "adjustedRange" type class_ref 3645495 // cam_fps_range_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166967 "~QCameraAdjustFPS"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end
    end

    class 3644983 "QCameraMemory"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Base class for all memory types. Abstract."
      operation 44157367 "cleanCache"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return cacheOps(index, ION_IOC_CLEAN_CACHES);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44157495 "invalidateCache"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return cacheOps(index, ION_IOC_INV_CACHES);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44157623 "cleanInvalidateCache"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return cacheOps(index, ION_IOC_CLEAN_INV_CACHES);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44157751 "getFd"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFd
//
//DESCRIPTION: return file descriptor of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : file descriptor
//==========================================================================

//===========================================================================
//FUNCTION   : getFd
//
//DESCRIPTION: return file descriptor of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : file descriptor
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44157879 "getSize"
	preserve_cpp_body_indent const public explicit_return_type "ssize_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSize
//
//DESCRIPTION: return buffer size of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer size
//==========================================================================

//===========================================================================
//FUNCTION   : getSize
//
//DESCRIPTION: return buffer size of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer size
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158007 "getCnt"
	preserve_cpp_body_indent const public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158135 "allocate"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 3
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	  param in name "is_secure" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158263 "deallocate"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158391 "allocateMore"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158519 "cacheOps"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158647 "getRegFlags"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "regFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158775 "getMemory"
	abstract const cpp_virtual public explicit_return_type "camera_memory_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44158903 "getMatchBufIndex"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44159031 "getPtr"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44159159 "QCameraMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param in name "cached" explicit_type "bool"
	  param inout name "pool" type class_ref 3650103 // QCameraMemoryPool
	    defaultvalue "NULL"
	  param in name "streamType" explicit_type "cam_stream_type_t"
	    defaultvalue "CAM_STREAM_TYPE_DEFAULT"
	  param in name "bufType" explicit_type "cam_stream_buf_type"
	    defaultvalue "CAM_STREAM_BUF_TYPE_MPLANE"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "// QCaemra2Memory base class
//===========================================================================
//FUNCTION   : QCameraMemory
//
//DESCRIPTION: default constructor of QCameraMemory
//
//PARAMETERS :
//  @cached  : flag indicates if using cached memory
//
//RETURN     : None
//==========================================================================

// QCaemra2Memory base class
//===========================================================================
//FUNCTION   : QCameraMemory
//
//DESCRIPTION: default constructor of QCameraMemory
//
//PARAMETERS :
//  @cached  : flag indicates if using cached memory
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}
    :m_bCached(cached),
     mMemoryPool(pool),
     mStreamType(streamType),
     mBufType(bufType)

    :m_bCached(cached),
     mMemoryPool(pool),
     mStreamType(streamType),
     mBufType(bufType)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44159287 "~QCameraMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraMemory
//
//DESCRIPTION: deconstructor of QCameraMemory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraMemory
//
//DESCRIPTION: deconstructor of QCameraMemory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraMemory
//
//DESCRIPTION: deconstructor of QCameraMemory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44159415 "reset"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : reset
//
//DESCRIPTION: reset member variables
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : reset
//
//DESCRIPTION: reset member variables
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44159543 "getBufDef"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 3
	  param in name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "bufDef" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufDef
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @offset  : [input] frame buffer offset
//  @bufDef  : [output] reference to struct to store buffer definition
//  @index   : [input] index of the buffer
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getBufDef
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @offset  : [input] frame buffer offset
//  @bufDef  : [output] reference to struct to store buffer definition
//  @index   : [input] index of the buffer
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44159671 "getUserBufDef"
	preserve_cpp_body_indent const public explicit_return_type "int32_t"
	nparams 6
	  param in name "buf_info" type class_ref 3652279 // cam_stream_user_buf_info_t
	  param inout name "bufDef" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "index" explicit_type "uint32_t"
	  param in name "plane_offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "planeBufDef" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "bufs" type class_ref 3644983 // QCameraMemory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getUserBufDef
//
//DESCRIPTION: Fill Buffer structure with user buffer information
//This also fills individual stream buffers inside batch baffer strcuture
//
//PARAMETERS :
//  @buf_info : user buffer information
//  @bufDef  : Buffer strcuture to fill user buf info
//  @index   : index of the buffer
//  @plane_offset : plane buffer information
//  @planeBufDef  : [input] frame buffer offset
//  @bufs    : Stream Buffer object
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getUserBufDef
//
//DESCRIPTION: Fill Buffer structure with user buffer information
//This also fills individual stream buffers inside batch baffer strcuture
//
//PARAMETERS :
//  @buf_info : user buffer information
//  @bufDef  : Buffer strcuture to fill user buf info
//  @index   : index of the buffer
//  @plane_offset : plane buffer information
//  @planeBufDef  : [input] frame buffer offset
//  @bufs    : Stream Buffer object
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44159799 "traceLogAllocStart"
	preserve_cpp_body_indent cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "size" explicit_type "size_t"
	  param in name "count" explicit_type "int"
	  param in name "allocName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : traceLogAllocStart
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @size  : [input] alloc
//  @count  : [input] number of buffers
//  @allocName   : [input] name for the alloc
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : traceLogAllocStart
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @size  : [input] alloc
//  @count  : [input] number of buffers
//  @allocName   : [input] name for the alloc
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44159927 "traceLogAllocEnd"
	preserve_cpp_body_indent cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : traceLogAllocEnd
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @size  : [input] alloc
//  @count  : [input] number of buffers
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : traceLogAllocEnd
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @size  : [input] alloc
//  @count  : [input] number of buffers
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7050039 // <dependency>
	relation 7050039 -_->
	  stereotype "friend"
	  a public
	    cpp default "${type}"
	    classrelation_ref 7050039 // <dependency>
	  b parent class_ref 3650103 // QCameraMemoryPool
      end

      class 3652407 "QCameraMemInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13237943 "fd"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13238071 "main_ion_fd"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13238199 "size"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13238327 "cached"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13238455 "heap_id"
	  public explicit_type "uint"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 44160055 "alloc"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 4
	  param in name "count" explicit_type "int"
	  param in name "size" explicit_type "size_t"
	  param in name "heap_id" explicit_type "uint"
	  param in name "secure_mode" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : alloc
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//  @heap_id : heap id to indicate where the buffers will be allocated from
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : alloc
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//  @heap_id : heap id to indicate where the buffers will be allocated from
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44160183 "dealloc"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dealloc
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dealloc
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dealloc
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44160311 "allocOneBuffer"
	class_operation preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 5
	  param inout name "memInfo" type class_ref 3652407 // QCameraMemInfo
	  param in name "heap_id" explicit_type "uint"
	  param in name "size" explicit_type "size_t"
	  param in name "cached" explicit_type "bool"
	  param in name "secure_mode" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocOneBuffer
//
//DESCRIPTION: impl of allocating one buffers of certain size
//
//PARAMETERS :
//  @memInfo : [output] reference to struct to store additional memory allocation info
//  @heap    : [input] heap id to indicate where the buffers will be allocated from
//  @size    : [input] lenght of the buffer to be allocated
//  @cached  : [input] flag whether buffer needs to be cached
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocOneBuffer
//
//DESCRIPTION: impl of allocating one buffers of certain size
//
//PARAMETERS :
//  @memInfo : [output] reference to struct to store additional memory allocation info
//  @heap    : [input] heap id to indicate where the buffers will be allocated from
//  @size    : [input] lenght of the buffer to be allocated
//  @cached  : [input] flag whether buffer needs to be cached
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44160439 "deallocOneBuffer"
	class_operation preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "memInfo" type class_ref 3652407 // QCameraMemInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocOneBuffer
//
//DESCRIPTION: impl of deallocating one buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocOneBuffer
//
//DESCRIPTION: impl of deallocating one buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocOneBuffer
//
//DESCRIPTION: impl of deallocating one buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44160567 "cacheOpsInternal"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 3
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	  param inout name "vaddr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOpsInternal
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//  @vaddr   : ptr to the virtual address
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOpsInternal
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//  @vaddr   : ptr to the virtual address
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13238583 "m_bCached"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13238711 "mBufferCount"
	protected explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7050295 // mMemInfo (<directional composition>)
	relation 7050295 *-->
	  a role_name "mMemInfo" multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7050295 // mMemInfo (<directional composition>)
	  b parent class_ref 3652407 // QCameraMemInfo
      end

      classrelation 7050423 // mMemoryPool (<unidirectional association>)
	relation 7050423 --->
	  a role_name "mMemoryPool" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7050423 // mMemoryPool (<unidirectional association>)
	  b parent class_ref 3650103 // QCameraMemoryPool
      end

      attribute 13238839 "mStreamType"
	protected explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13238967 "mBufType"
	protected explicit_type "cam_stream_buf_type"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3645111 "QCameraHeapMemory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Internal heap memory is used for memories used internally
 They are allocated from /dev/ion."
      classrelation 7050551 // <generalisation>
	relation 7050551 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7050551 // <generalisation>
	  b parent class_ref 3644983 // QCameraMemory
      end

      operation 44161463 "QCameraHeapMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "cached" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraHeapMemory
//
//DESCRIPTION: constructor of QCameraHeapMemory for ion memory used internally in HAL
//
//PARAMETERS :
//  @cached  : flag indicates if using cached memory
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraHeapMemory
//
//DESCRIPTION: constructor of QCameraHeapMemory for ion memory used internally in HAL
//
//PARAMETERS :
//  @cached  : flag indicates if using cached memory
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraHeapMemory
//
//DESCRIPTION: constructor of QCameraHeapMemory for ion memory used internally in HAL
//
//PARAMETERS :
//  @cached  : flag indicates if using cached memory
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}${)}
    : QCameraMemory(cached)

    : QCameraMemory(cached)

    : QCameraMemory(cached)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44161591 "~QCameraHeapMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraHeapMemory
//
//DESCRIPTION: deconstructor of QCameraHeapMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraHeapMemory
//
//DESCRIPTION: deconstructor of QCameraHeapMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraHeapMemory
//
//DESCRIPTION: deconstructor of QCameraHeapMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44161719 "allocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 3
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	  param in name "isSecure" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44161847 "allocateMore"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44161975 "deallocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44162103 "cacheOps"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44162231 "getRegFlags"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "regFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44162359 "getMemory"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "camera_memory_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44162487 "getMatchBufIndex"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44162615 "getPtr"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13239351 "mPtr"
	private explicit_type "void"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3645367 "qcamera_thermal_level_enum_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13315383 "QCAMERA_THERMAL_NO_ADJUSTMENT"
	public type class_ref 3645367 // qcamera_thermal_level_enum_t
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13315511 "QCAMERA_THERMAL_SLIGHT_ADJUSTMENT"
	public type class_ref 3645367 // qcamera_thermal_level_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13315639 "QCAMERA_THERMAL_BIG_ADJUSTMENT"
	public type class_ref 3645367 // qcamera_thermal_level_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13315767 "QCAMERA_THERMAL_SHUTDOWN"
	public type class_ref 3645367 // qcamera_thermal_level_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3645623 "QCameraStateMachine"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3645751 "QCameraPostProcessor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44211511 "QCameraPostProcessor"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "cam_ctrl" type class_ref 3643831 // QCamera2HardwareInterface
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraPostProcessor
//
//DESCRIPTION: constructor of QCameraPostProcessor.
//
//PARAMETERS :
//  @cam_ctrl : ptr to HWI object
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPostProcessor
//
//DESCRIPTION: constructor of QCameraPostProcessor.
//
//PARAMETERS :
//  @cam_ctrl : ptr to HWI object
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPostProcessor
//
//DESCRIPTION: constructor of QCameraPostProcessor.
//
//PARAMETERS :
//  @cam_ctrl : ptr to HWI object
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} * ${p0}${)}
    : m_parent(cam_ctrl),
      mJpegCB(NULL),
      mJpegUserData(NULL),
      mJpegClientHandle(0),
      mJpegSessionId(0),
      m_pJpegExifObj(NULL),
      m_bThumbnailNeeded(TRUE),
      m_pReprocChannel(NULL),
      m_bInited(FALSE),
      m_inputPPQ(releasePPInputData, this),
      m_ongoingPPQ(releaseOngoingPPData, this),
      m_inputJpegQ(releaseJpegData, this),
      m_ongoingJpegQ(releaseJpegData, this),
      m_inputRawQ(releaseRawData, this),
      mSaveFrmCnt(0),
      mUseSaveProc(false),
      mUseJpegBurst(false),
      mJpegMemOpt(true),
      m_JpegOutputMemCount(0),
      mNewJpegSessionNeeded(true)

    : m_parent(cam_ctrl),
      mJpegCB(NULL),
      mJpegUserData(NULL),
      mJpegClientHandle(0),
      mJpegSessionId(0),
      m_pJpegExifObj(NULL),
      m_bThumbnailNeeded(TRUE),
      mTotalNumReproc(0),
      m_bInited(FALSE),
      m_inputPPQ(releasePPInputData, this),
      m_ongoingPPQ(releaseOngoingPPData, this),
      m_inputJpegQ(releaseJpegData, this),
      m_ongoingJpegQ(releaseJpegData, this),
      m_inputRawQ(releaseRawData, this),
      mSaveFrmCnt(0),
      mUseSaveProc(false),
      mUseJpegBurst(false),
      mJpegMemOpt(true),
      m_JpegOutputMemCount(0),
      mNewJpegSessionNeeded(true),
      m_bufCountPPQ(0),
      m_PPindex(0)

    : m_parent(cam_ctrl),
      mJpegCB(NULL),
      mJpegUserData(NULL),
      mJpegClientHandle(0),
      mJpegSessionId(0),
      m_pJpegExifObj(NULL),
      m_bThumbnailNeeded(TRUE),
      mTotalNumReproc(0),
      m_bInited(FALSE),
      m_inputPPQ(releasePPInputData, this),
      m_ongoingPPQ(releaseOngoingPPData, this),
      m_inputJpegQ(releaseJpegData, this),
      m_ongoingJpegQ(releaseJpegData, this),
      m_inputRawQ(releaseRawData, this),
      mSaveFrmCnt(0),
      mUseSaveProc(false),
      mUseJpegBurst(false),
      mJpegMemOpt(true),
      m_JpegOutputMemCount(0),
      mNewJpegSessionNeeded(true),
      m_bufCountPPQ(0),
      m_PPindex(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44211639 "~QCameraPostProcessor"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraPostProcessor
//
//DESCRIPTION: deconstructor of QCameraPostProcessor.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraPostProcessor
//
//DESCRIPTION: deconstructor of QCameraPostProcessor.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraPostProcessor
//
//DESCRIPTION: deconstructor of QCameraPostProcessor.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44211767 "init"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "jpeg_cb" type class_ref 3657655 // jpeg_encode_callback_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of postprocessor
//
//PARAMETERS :
//  @jpeg_cb      : callback to handle jpeg event from mm-camera-interface
//  @user_data    : user data ptr for jpeg callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of postprocessor
//
//PARAMETERS :
//  @jpeg_cb      : callback to handle jpeg event from mm-camera-interface
//  @user_data    : user data ptr for jpeg callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of postprocessor
//
//PARAMETERS :
//  @jpeg_cb      : callback to handle jpeg event from mm-camera-interface
//  @user_data    : user data ptr for jpeg callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44211895 "deinit"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: de-initialization of postprocessor
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: de-initialization of postprocessor
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: de-initialization of postprocessor
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212023 "start"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "pSrcChannel" type class_ref 3648311 // QCameraChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start postprocessor. Data process thread and data notify thread
//             will be launched.
//
//PARAMETERS :
//  @pSrcChannel : source channel obj ptr that possibly needs reprocess
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : if any reprocess is needed, a reprocess channel/stream
//             will be started.
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start postprocessor. Data process thread and data notify thread
//             will be launched.
//
//PARAMETERS :
//  @pSrcChannel : source channel obj ptr that possibly needs reprocess
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : if any reprocess is needed, a reprocess channel/stream
//             will be started.
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start postprocessor. Data process thread and data notify thread
//             will be launched.
//
//PARAMETERS :
//  @pSrcChannel : source channel obj ptr that possibly needs reprocess
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : if any reprocess is needed, a reprocess channel/stream
//             will be started.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212151 "stop"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop postprocessor. Data process and notify thread will be stopped.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : reprocess channel will be stopped and deleted if there is any
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop postprocessor. Data process and notify thread will be stopped.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : reprocess channel will be stopped and deleted if there is any
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop postprocessor. Data process and notify thread will be stopped.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : reprocess channel will be stopped and deleted if there is any
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212279 "validatePostProcess"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : validatePostProcess
//
//DESCRIPTION: Verify output buffer count of pp module
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : bool type of status
//             TRUE  -- success
//             FALSE     failure
//==========================================================================

//===========================================================================
//FUNCTION   : validatePostProcess
//
//DESCRIPTION: Verify output buffer count of pp module
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : bool type of status
//             TRUE  -- success
//             FALSE     failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212407 "processData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212535 "processRawData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processRawData
//
//DESCRIPTION: enqueue raw data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processRawData
//
//DESCRIPTION: enqueue raw data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processRawData
//
//DESCRIPTION: enqueue raw data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212663 "processPPData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processPPData
//
//DESCRIPTION: process received frame after reprocess.
//
//PARAMETERS :
//  @frame   : received frame from reprocess channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : The frame after reprocess need to send to jpeg encoding.
//==========================================================================

//===========================================================================
//FUNCTION   : processPPData
//
//DESCRIPTION: process received frame after reprocess.
//
//PARAMETERS :
//  @frame   : received frame from reprocess channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : The frame after reprocess need to send to jpeg encoding.
//==========================================================================

//===========================================================================
//FUNCTION   : processPPData
//
//DESCRIPTION: process received frame after reprocess.
//
//PARAMETERS :
//  @frame   : received frame from reprocess channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : The frame after reprocess need to send to jpeg encoding.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212791 "processJpegEvt"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "evt" type class_ref 3647415 // qcamera_jpeg_evt_payload_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processJpegEvt
//
//DESCRIPTION: process jpeg event from mm-jpeg-interface.
//
//PARAMETERS :
//  @evt     : payload of jpeg event, including information about jpeg encoding
//             status, jpeg size and so on.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : This event will also trigger DataProc thread to move to next job
//             processing (i.e., send a new jpeg encoding job to mm-jpeg-interface
//             if there is any pending job in jpeg input queue)
//==========================================================================

//===========================================================================
//FUNCTION   : processJpegEvt
//
//DESCRIPTION: process jpeg event from mm-jpeg-interface.
//
//PARAMETERS :
//  @evt     : payload of jpeg event, including information about jpeg encoding
//             status, jpeg size and so on.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : This event will also trigger DataProc thread to move to next job
//             processing (i.e., send a new jpeg encoding job to mm-jpeg-interface
//             if there is any pending job in jpeg input queue)
//==========================================================================

//===========================================================================
//FUNCTION   : processJpegEvt
//
//DESCRIPTION: process jpeg event from mm-jpeg-interface.
//
//PARAMETERS :
//  @evt     : payload of jpeg event, including information about jpeg encoding
//             status, jpeg size and so on.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : This event will also trigger DataProc thread to move to next job
//             processing (i.e., send a new jpeg encoding job to mm-jpeg-interface
//             if there is any pending job in jpeg input queue)
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44212919 "getJpegPaddingReq"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "padding_info" type class_ref 3651511 // cam_padding_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegPaddingReq
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @padding_info : jpeg specific padding requirement
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegPaddingReq
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @padding_info : jpeg specific padding requirement
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegPaddingReq
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @padding_info : jpeg specific padding requirement
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213047 "getReprocChannel"
	preserve_cpp_body_indent public return_type class_ref 3648439 // QCameraReprocessChannel
	nparams 1
	  param in name "index" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getReprocChannel
//
//DESCRIPTION:  Returns reprocessing channel handle
//
//PARAMETERS : index for reprocessing array
//
//RETURN     : QCameraReprocessChannel * type of pointer
//NULL if no reprocessing channel
//==========================================================================

//===========================================================================
//FUNCTION   : getReprocChannel
//
//DESCRIPTION:  Returns reprocessing channel handle
//
//PARAMETERS : index for reprocessing array
//
//RETURN     : QCameraReprocessChannel * type of pointer
//NULL if no reprocessing channel
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213175 "getJpegMemOpt"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mJpegMemOpt;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213303 "setJpegMemOpt"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {mJpegMemOpt = val;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213431 "sendDataNotify"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 5
	  param in name "msg_type" explicit_type "int32_t"
	  param inout name "data" explicit_type "camera_memory_t"
	  param in name "index" explicit_type "uint8_t"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	  param inout name "release_data" type class_ref 3657399 // qcamera_release_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendDataNotify
//
//DESCRIPTION: enqueue data into dataNotify thread
//
//PARAMETERS :
//  @msg_type: data callback msg type
//  @data    : ptr to data memory struct
//  @index   : index to data buffer
//  @metadata: ptr to meta data buffer if there is any
//  @release_data : ptr to struct indicating if data need to be released
//                  after notify
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendDataNotify
//
//DESCRIPTION: enqueue data into dataNotify thread
//
//PARAMETERS :
//  @msg_type: data callback msg type
//  @data    : ptr to data memory struct
//  @index   : index to data buffer
//  @metadata: ptr to meta data buffer if there is any
//  @release_data : ptr to struct indicating if data need to be released
//                  after notify
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendDataNotify
//
//DESCRIPTION: enqueue data into dataNotify thread
//
//PARAMETERS :
//  @msg_type: data callback msg type
//  @data    : ptr to data memory struct
//  @index   : index to data buffer
//  @metadata: ptr to meta data buffer if there is any
//  @release_data : ptr to struct indicating if data need to be released
//                  after notify
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213559 "sendEvtNotify"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendEvtNotify
//
//DESCRIPTION: send event notify through notify callback registered by upper layer
//
//PARAMETERS :
//  @msg_type: msg type of notify
//  @ext1    : extension
//  @ext2    : extension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendEvtNotify
//
//DESCRIPTION: send event notify through notify callback registered by upper layer
//
//PARAMETERS :
//  @msg_type: msg type of notify
//  @ext1    : extension
//  @ext2    : extension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendEvtNotify
//
//DESCRIPTION: send event notify through notify callback registered by upper layer
//
//PARAMETERS :
//  @msg_type: msg type of notify
//  @ext1    : extension
//  @ext2    : extension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213687 "findJpegJobByJobId"
	preserve_cpp_body_indent private return_type class_ref 3657015 // qcamera_jpeg_data_t
	nparams 1
	  param in name "jobId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : findJpegJobByJobId
//
//DESCRIPTION: find a jpeg job from ongoing Jpeg queue by its job ID
//
//PARAMETERS :
//  @jobId   : job Id of the job
//
//RETURN     : ptr to a jpeg job struct. NULL if not found.
//
//NOTE       : Currently only one job is sending to mm-jpeg-interface for jpeg
//             encoding. Therefore simply dequeue from the ongoing Jpeg Queue
//             will serve the purpose to find the jpeg job.
//==========================================================================

//===========================================================================
//FUNCTION   : findJpegJobByJobId
//
//DESCRIPTION: find a jpeg job from ongoing Jpeg queue by its job ID
//
//PARAMETERS :
//  @jobId   : job Id of the job
//
//RETURN     : ptr to a jpeg job struct. NULL if not found.
//
//NOTE       : Currently only one job is sending to mm-jpeg-interface for jpeg
//             encoding. Therefore simply dequeue from the ongoing Jpeg Queue
//             will serve the purpose to find the jpeg job.
//==========================================================================

//===========================================================================
//FUNCTION   : findJpegJobByJobId
//
//DESCRIPTION: find a jpeg job from ongoing Jpeg queue by its job ID
//
//PARAMETERS :
//  @jobId   : job Id of the job
//
//RETURN     : ptr to a jpeg job struct. NULL if not found.
//
//NOTE       : Currently only one job is sending to mm-jpeg-interface for jpeg
//             encoding. Therefore simply dequeue from the ongoing Jpeg Queue
//             will serve the purpose to find the jpeg job.
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213815 "getColorfmtFromImgFmt"
	preserve_cpp_body_indent private return_type class_ref 3657783 // mm_jpeg_color_format
	nparams 1
	  param in name "img_fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getColorfmtFromImgFmt
//
//DESCRIPTION: function to return jpeg color format based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : jpeg color format that can be understandable by omx lib
//==========================================================================

//===========================================================================
//FUNCTION   : getColorfmtFromImgFmt
//
//DESCRIPTION: function to return jpeg color format based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : jpeg color format that can be understandable by omx lib
//==========================================================================

//===========================================================================
//FUNCTION   : getColorfmtFromImgFmt
//
//DESCRIPTION: function to return jpeg color format based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : jpeg color format that can be understandable by omx lib
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44213943 "getJpegImgTypeFromImgFmt"
	preserve_cpp_body_indent private return_type class_ref 3657911 // mm_jpeg_format_t
	nparams 1
	  param in name "img_fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegImgTypeFromImgFmt
//
//DESCRIPTION: function to return jpeg encode image type based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : return jpeg source image format (YUV or Bitstream)
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegImgTypeFromImgFmt
//
//DESCRIPTION: function to return jpeg encode image type based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : return jpeg source image format (YUV or Bitstream)
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegImgTypeFromImgFmt
//
//DESCRIPTION: function to return jpeg encode image type based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : return jpeg source image format (YUV or Bitstream)
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214071 "getJpegEncodingConfig"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "encode_parm" type class_ref 3658039 // mm_jpeg_encode_params_t
	  param inout name "main_stream" type class_ref 3646263 // QCameraStream
	  param inout name "thumb_stream" type class_ref 3646263 // QCameraStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegEncodingConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegEncodingConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegEncodingConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214199 "encodeData"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "jpeg_job_data" type class_ref 3657015 // qcamera_jpeg_data_t
	  param inout name "needNewSess" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : encodeData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : encodeData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : encodeData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214327 "queryStreams"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 7
	  param inout name "main" type class_ref 3646263 // QCameraStream
	  param inout name "thumb" type class_ref 3646263 // QCameraStream
	  param inout name "reproc" type class_ref 3646263 // QCameraStream
	  param inout name "main_image" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "thumb_image" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "reproc_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}, ${t1} * * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : queryStreams
//
//DESCRIPTION: utility method for retrieving main, thumbnail and reprocess
//             streams and frame from bundled super buffer
//
//PARAMETERS :
//  @main    : ptr to main stream if present
//  @thumb   : ptr to thumbnail stream if present
//  @reproc  : ptr to reprocess stream if present
//  @main_image : ptr to main image if present
//  @thumb_image: ptr to thumbnail image if present
//  @frame   : bundled super buffer
//  @reproc_frame : bundled source frame buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queryStreams
//
//DESCRIPTION: utility method for retrieving main, thumbnail and reprocess
//             streams and frame from bundled super buffer
//
//PARAMETERS :
//  @main    : ptr to main stream if present
//  @thumb   : ptr to thumbnail stream if present
//  @reproc  : ptr to reprocess stream if present
//  @main_image : ptr to main image if present
//  @thumb_image: ptr to thumbnail image if present
//  @frame   : bundled super buffer
//  @reproc_frame : bundled source frame buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queryStreams
//
//DESCRIPTION: utility method for retrieving main, thumbnail and reprocess
//             streams and frame from bundled super buffer
//
//PARAMETERS :
//  @main    : ptr to main stream if present
//  @thumb   : ptr to thumbnail stream if present
//  @reproc  : ptr to reprocess stream if present
//  @main_image : ptr to main image if present
//  @thumb_image: ptr to thumbnail image if present
//  @frame   : bundled super buffer
//  @reproc_frame : bundled source frame buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}, ${t1} * * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214455 "syncStreamParams"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "reproc_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : syncStreamParams
//
//DESCRIPTION: Query the runtime parameters of all streams included
//             in the main and reprocessed frames
//
//PARAMETERS :
//  @frame : Main image super buffer
//  @reproc_frame : Image supper buffer that got processed
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : syncStreamParams
//
//DESCRIPTION: Query the runtime parameters of all streams included
//             in the main and reprocessed frames
//
//PARAMETERS :
//  @frame : Main image super buffer
//  @reproc_frame : Image supper buffer that got processed
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : syncStreamParams
//
//DESCRIPTION: Query the runtime parameters of all streams included
//             in the main and reprocessed frames
//
//PARAMETERS :
//  @frame : Main image super buffer
//  @reproc_frame : Image supper buffer that got processed
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214583 "releaseSuperBuf"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "super_buf" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseSuperBuf
//
//DESCRIPTION: function to release a superbuf frame by returning back to kernel
//
//PARAMETERS :
//  @super_buf : ptr to the superbuf frame
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseSuperBuf
//
//DESCRIPTION: function to release a superbuf frame by returning back to kernel
//
//PARAMETERS :
//  @super_buf : ptr to the superbuf frame
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseSuperBuf
//
//DESCRIPTION: function to release a superbuf frame by returning back to kernel
//
//PARAMETERS :
//  @super_buf : ptr to the superbuf frame
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214711 "releaseNotifyData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "user_data" explicit_type "void"
	  param inout name "cookie" explicit_type "void"
	  param in name "cb_status" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseNotifyData
//
//DESCRIPTION: function to release internal resources in notify data struct
//
//PARAMETERS :
//  @user_data  : ptr user data
//  @cookie     : callback cookie
//  @cb_status  : callback status
//
//RETURN     : None
//
//NOTE       : deallocate jpeg heap memory if it's not NULL
//==========================================================================

//===========================================================================
//FUNCTION   : releaseNotifyData
//
//DESCRIPTION: function to release internal resources in notify data struct
//
//PARAMETERS :
//  @user_data  : ptr user data
//  @cookie     : callback cookie
//  @cb_status  : callback status
//
//RETURN     : None
//
//NOTE       : deallocate jpeg heap memory if it's not NULL
//==========================================================================

//===========================================================================
//FUNCTION   : releaseNotifyData
//
//DESCRIPTION: function to release internal resources in notify data struct
//
//PARAMETERS :
//  @user_data  : ptr user data
//  @cookie     : callback cookie
//  @cb_status  : callback status
//
//RETURN     : None
//
//NOTE       : deallocate jpeg heap memory if it's not NULL
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214839 "releaseJpegJobData"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "job" type class_ref 3657015 // qcamera_jpeg_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseJpegJobData
//
//DESCRIPTION: function to release internal resources in jpeg job struct
//
//PARAMETERS :
//  @job     : ptr to jpeg job struct
//
//RETURN     : None
//
//NOTE       : original source frame need to be queued back to kernel for
//             future use. Output buf of jpeg job need to be released since
//             it's allocated for each job. Exif object need to be deleted.
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegJobData
//
//DESCRIPTION: function to release internal resources in jpeg job struct
//
//PARAMETERS :
//  @job     : ptr to jpeg job struct
//
//RETURN     : None
//
//NOTE       : original source frame need to be queued back to kernel for
//             future use. Output buf of jpeg job need to be released since
//             it's allocated for each job. Exif object need to be deleted.
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegJobData
//
//DESCRIPTION: function to release internal resources in jpeg job struct
//
//PARAMETERS :
//  @job     : ptr to jpeg job struct
//
//RETURN     : None
//
//NOTE       : original source frame need to be queued back to kernel for
//             future use. Output buf of jpeg job need to be released since
//             it's allocated for each job. Exif object need to be deleted.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44214967 "releaseSaveJobData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseSaveJobData
//
//DESCRIPTION: function to release internal resources in store jobs
//
//PARAMETERS :
//  @job     : ptr to save job struct
//
//RETURN     : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : releaseSaveJobData
//
//DESCRIPTION: function to release internal resources in store jobs
//
//PARAMETERS :
//  @job     : ptr to save job struct
//
//RETURN     : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : releaseSaveJobData
//
//DESCRIPTION: function to release internal resources in store jobs
//
//PARAMETERS :
//  @job     : ptr to save job struct
//
//RETURN     : None
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215095 "releaseRawData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseRawData
//
//DESCRIPTION: function to release internal resources in store jobs
//
//PARAMETERS :
//  @job     : ptr to save job struct
//
//RETURN     : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : releaseRawData
//
//DESCRIPTION: function to release internal resources in store jobs
//
//PARAMETERS :
//  @job     : ptr to save job struct
//
//RETURN     : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : releaseRawData
//
//DESCRIPTION: function to release internal resources in store jobs
//
//PARAMETERS :
//  @job     : ptr to save job struct
//
//RETURN     : None
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215223 "processRawImageImpl"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processRawImageImpl
//
//DESCRIPTION: function to send raw image to upper layer
//
//PARAMETERS :
//  @recvd_frame   : frame to be encoded
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processRawImageImpl
//
//DESCRIPTION: function to send raw image to upper layer
//
//PARAMETERS :
//  @recvd_frame   : frame to be encoded
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processRawImageImpl
//
//DESCRIPTION: function to send raw image to upper layer
//
//PARAMETERS :
//  @recvd_frame   : frame to be encoded
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215351 "releaseJpegData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseJpegData
//
//DESCRIPTION: callback function to release jpeg job node
//
//PARAMETERS :
//  @data      : ptr to ongoing jpeg job data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegData
//
//DESCRIPTION: callback function to release jpeg job node
//
//PARAMETERS :
//  @data      : ptr to ongoing jpeg job data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegData
//
//DESCRIPTION: callback function to release jpeg job node
//
//PARAMETERS :
//  @data      : ptr to ongoing jpeg job data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215479 "releasePPInputData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releasePPInputData
//
//DESCRIPTION: callback function to release post process input data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releasePPInputData
//
//DESCRIPTION: callback function to release post process input data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releasePPInputData
//
//DESCRIPTION: callback function to release post process input data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215607 "releaseOngoingPPData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseOngoingPPData
//
//DESCRIPTION: callback function to release ongoing postprocess job node
//
//PARAMETERS :
//  @data      : ptr to onging postprocess job
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOngoingPPData
//
//DESCRIPTION: callback function to release ongoing postprocess job node
//
//PARAMETERS :
//  @data      : ptr to onging postprocess job
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOngoingPPData
//
//DESCRIPTION: callback function to release ongoing postprocess job node
//
//PARAMETERS :
//  @data      : ptr to onging postprocess job
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215735 "dataProcessRoutine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataProcessRoutine
//
//DESCRIPTION: data process routine that handles input data either from input
//             Jpeg Queue to do jpeg encoding, or from input PP Queue to do
//             reprocess.
//
//PARAMETERS :
//  @data    : user data ptr (QCameraPostProcessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcessRoutine
//
//DESCRIPTION: data process routine that handles input data either from input
//             Jpeg Queue to do jpeg encoding, or from input PP Queue to do
//             reprocess.
//
//PARAMETERS :
//  @data    : user data ptr (QCameraPostProcessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcessRoutine
//
//DESCRIPTION: data process routine that handles input data either from input
//             Jpeg Queue to do jpeg encoding, or from input PP Queue to do
//             reprocess.
//
//PARAMETERS :
//  @data    : user data ptr (QCameraPostProcessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215863 "dataSaveRoutine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataSaveRoutine
//
//DESCRIPTION: data saving routine
//
//PARAMETERS :
//  @data    : user data ptr (QCameraPostProcessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dataSaveRoutine
//
//DESCRIPTION: data saving routine
//
//PARAMETERS :
//  @data    : user data ptr (QCameraPostProcessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dataSaveRoutine
//
//DESCRIPTION: data saving routine
//
//PARAMETERS :
//  @data    : user data ptr (QCameraPostProcessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44215991 "setYUVFrameInfo"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setYUVFrameInfo
//
//DESCRIPTION: set Raw YUV frame data info for up-layer
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : currently we return frame len, y offset, cbcr offset and frame format
//==========================================================================

//===========================================================================
//FUNCTION   : setYUVFrameInfo
//
//DESCRIPTION: set Raw YUV frame data info for up-layer
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : currently we return frame len, y offset, cbcr offset and frame format
//==========================================================================

//===========================================================================
//FUNCTION   : setYUVFrameInfo
//
//DESCRIPTION: set Raw YUV frame data info for up-layer
//
//PARAMETERS :
//  @frame   : process frame received from mm-camera-interface
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : currently we return frame len, y offset, cbcr offset and frame format
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44216119 "matchJobId"
	class_operation preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 3
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	  param inout name "match_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44216247 "getJpegMemory"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "out_buf" type class_ref 3642295 // omx_jpeg_ouput_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegMemory
//
//DESCRIPTION: buffer allocation function
//  to pass to jpeg interface
//
//PARAMETERS :
//  @out_buf : buffer descriptor struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegMemory
//
//DESCRIPTION: buffer allocation function
//  to pass to jpeg interface
//
//PARAMETERS :
//  @out_buf : buffer descriptor struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegMemory
//
//DESCRIPTION: buffer allocation function
//  to pass to jpeg interface
//
//PARAMETERS :
//  @out_buf : buffer descriptor struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44216375 "doReprocess"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: Trigger channel reprocessing
//
//PARAMETERS :None
//
//RETURN     : int32_t type of status
//                   NO_ERROR  -- success
//                   none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: Trigger channel reprocessing
//
//PARAMETERS :None
//
//RETURN     : int32_t type of status
//                   NO_ERROR  -- success
//                   none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44216503 "stopCapture"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopCapture
//
//DESCRIPTION: Trigger image capture stop
//
//PARAMETERS :
//None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopCapture
//
//DESCRIPTION: Trigger image capture stop
//
//PARAMETERS :
//None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopCapture
//
//DESCRIPTION: Trigger image capture stop
//
//PARAMETERS :
//None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7056695 // m_parent (<unidirectional association>)
	relation 7056695 --->
	  a role_name "m_parent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056695 // m_parent (<unidirectional association>)
	  b parent class_ref 3643831 // QCamera2HardwareInterface
      end

      classrelation 7056823 // mJpegCB (<directional composition>)
	relation 7056823 *-->
	  a role_name "mJpegCB" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056823 // mJpegCB (<directional composition>)
	  b parent class_ref 3657655 // jpeg_encode_callback_t
      end

      attribute 13299383 "mJpegUserData"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7056951 // mJpegHandle (<directional composition>)
	relation 7056951 *-->
	  a role_name "mJpegHandle" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056951 // mJpegHandle (<directional composition>)
	  b parent class_ref 3658167 // mm_jpeg_ops_t
      end

      attribute 13299511 "mJpegClientHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13299639 "mJpegSessionId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13299767 "m_pJpegOutputMem"
	private explicit_type "void"
	multiplicity "[MM_JPEG_MAX_BUF]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7057079 // m_pJpegExifObj (<unidirectional association>)
	relation 7057079 --->
	  a role_name "m_pJpegExifObj" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057079 // m_pJpegExifObj (<unidirectional association>)
	  b parent class_ref 3646647 // QCameraExif
      end

      attribute 13299895 "m_bThumbnailNeeded"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13300023 "mTotalNumReproc"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7057207 // mPPChannels (<unidirectional association>)
	relation 7057207 --->
	  a role_name "mPPChannels" multiplicity "[CAM_QCOM_FEATURE_MAX]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057207 // mPPChannels (<unidirectional association>)
	  b parent class_ref 3648439 // QCameraReprocessChannel
      end

      attribute 13300151 "m_DataMem"
	private explicit_type "camera_memory_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " save frame mem pointer"
      end

      attribute 13300279 "m_bInited"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if postproc is inited"
      end

      classrelation 7057335 // m_inputPPQ (<directional composition>)
	relation 7057335 *-->
	  a role_name "m_inputPPQ" private
	    comment " input queue for postproc"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057335 // m_inputPPQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7057463 // m_ongoingPPQ (<directional composition>)
	relation 7057463 *-->
	  a role_name "m_ongoingPPQ" private
	    comment " ongoing postproc queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057463 // m_ongoingPPQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7057591 // m_inputJpegQ (<directional composition>)
	relation 7057591 *-->
	  a role_name "m_inputJpegQ" private
	    comment " input jpeg job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057591 // m_inputJpegQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7057719 // m_ongoingJpegQ (<directional composition>)
	relation 7057719 *-->
	  a role_name "m_ongoingJpegQ" private
	    comment " ongoing jpeg job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057719 // m_ongoingJpegQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7057847 // m_inputRawQ (<directional composition>)
	relation 7057847 *-->
	  a role_name "m_inputRawQ" private
	    comment " input raw job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057847 // m_inputRawQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7057975 // m_inputSaveQ (<directional composition>)
	relation 7057975 *-->
	  a role_name "m_inputSaveQ" private
	    comment " input save job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7057975 // m_inputSaveQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7058103 // m_dataProcTh (<directional composition>)
	relation 7058103 *-->
	  a role_name "m_dataProcTh" private
	    comment " thread for data processing"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7058103 // m_dataProcTh (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      classrelation 7058231 // m_saveProcTh (<directional composition>)
	relation 7058231 *-->
	  a role_name "m_saveProcTh" private
	    comment " thread for storing buffers"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7058231 // m_saveProcTh (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      attribute 13300407 "mSaveFrmCnt"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " save frame counter"
      end

      attribute 13300535 "STORE_LOCATION"
	class_attribute const_attribute private explicit_type "char"
	init_value "= \"/sdcard/img_%d.jpg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " path for storing buffers"
      end

      attribute 13300663 "mUseSaveProc"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use store thread"
      end

      attribute 13300791 "mUseJpegBurst"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use jpeg burst encoding mode"
      end

      attribute 13300919 "mJpegMemOpt"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13301047 "m_JpegOutputMemCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13301175 "mNewJpegSessionNeeded"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13301303 "m_bufCountPPQ"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7058359 // m_InputMetadata (<unidirectional association>)
	relation 7058359 --->
	  stereotype "Vector"
	  a role_name "m_InputMetadata" private
	    comment " store input metadata buffers for AOST cases"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7058359 // m_InputMetadata (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      attribute 13301431 "m_PPindex"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " counter for each incoming AOST buffer"
      end

      classrelation 7058487 // m_dst_dim (<directional composition>)
	relation 7058487 *-->
	  a role_name "m_dst_dim" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7058487 // m_dst_dim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end
    end

    class 3645879 "qcamera_sm_evt_enum_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13301559 "QCAMERA_SM_EVT_SET_PREVIEW_WINDOW"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13301687 "QCAMERA_SM_EVT_SET_CALLBACKS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13301815 "QCAMERA_SM_EVT_ENABLE_MSG_TYPE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13301943 "QCAMERA_SM_EVT_DISABLE_MSG_TYPE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302071 "QCAMERA_SM_EVT_MSG_TYPE_ENABLED"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302199 "QCAMERA_SM_EVT_SET_PARAMS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302327 "QCAMERA_SM_EVT_GET_PARAMS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302455 "QCAMERA_SM_EVT_PUT_PARAMS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302583 "QCAMERA_SM_EVT_START_PREVIEW"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302711 "QCAMERA_SM_EVT_START_NODISPLAY_PREVIEW"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302839 "QCAMERA_SM_EVT_STOP_PREVIEW"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13302967 "QCAMERA_SM_EVT_PREVIEW_ENABLED"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303095 "QCAMERA_SM_EVT_STORE_METADATA_IN_BUFS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303223 "QCAMERA_SM_EVT_START_RECORDING"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303351 "QCAMERA_SM_EVT_STOP_RECORDING"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303479 "QCAMERA_SM_EVT_RECORDING_ENABLED"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303607 "QCAMERA_SM_EVT_RELEASE_RECORIDNG_FRAME"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303735 "QCAMERA_SM_EVT_PREPARE_SNAPSHOT"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303863 "QCAMERA_SM_EVT_TAKE_PICTURE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13303991 "QCAMERA_SM_EVT_CANCEL_PICTURE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304119 "QCAMERA_SM_EVT_START_AUTO_FOCUS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304247 "QCAMERA_SM_EVT_STOP_AUTO_FOCUS"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304375 "QCAMERA_SM_EVT_SEND_COMMAND"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304503 "QCAMERA_SM_EVT_RELEASE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304631 "QCAMERA_SM_EVT_DUMP"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304759 "QCAMERA_SM_EVT_REG_FACE_IMAGE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13304887 "QCAMERA_SM_EVT_EVT_INTERNAL"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305015 "QCAMERA_SM_EVT_EVT_NOTIFY"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305143 "QCAMERA_SM_EVT_JPEG_EVT_NOTIFY"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305271 "QCAMERA_SM_EVT_SNAPSHOT_DONE"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305399 "QCAMERA_SM_EVT_THERMAL_NOTIFY"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305527 "QCAMERA_SM_EVT_STOP_CAPTURE_CHANNEL"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305655 "QCAMERA_SM_EVT_RESTART_PERVIEW"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13305783 "QCAMERA_SM_EVT_MAX"
	public type class_ref 3645879 // qcamera_sm_evt_enum_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3646007 "qcamera_api_result_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " default type, no additional info
 msg_enabled, preview_enabled, recording_enabled
 returned parameters in string
 returned handle in int"
      attribute 13306551 "status"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " api call status"
      end

      classrelation 7058615 // request_api (<directional composition>)
	relation 7058615 *-->
	  a role_name "request_api" public
	    comment " api evt requested"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7058615 // request_api (<directional composition>)
	  b parent class_ref 3645879 // qcamera_sm_evt_enum_t
      end

      classrelation 7058743 // result_type (<directional composition>)
	relation 7058743 *-->
	  a role_name "result_type" public
	    comment " result type"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7058743 // result_type (<directional composition>)
	  b parent class_ref 3658295 // qcamera_api_result_type_t
      end

      attribute 13306679 "enabled"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " result_type == QCAMERA_API_RESULT_TYPE_ENABLE_FLAG"
      end

      attribute 13306807 "params"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " result_type == QCAMERA_API_RESULT_TYPE_PARAMS"
      end

      attribute 13306935 "handle"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " result_type ==QCAMERA_API_RESULT_TYPE_HANDLE"
      end
    end

    class 3646263 "QCameraStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44219575 "QCameraStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 7
	  param inout name "allocator" type class_ref 3644215 // QCameraAllocator
	  param in name "camHandle" explicit_type "uint32_t"
	  param in name "chId" explicit_type "uint32_t"
	  param inout name "camOps" type class_ref 3651127 // mm_camera_ops_t
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param in name "deffered" explicit_type "bool"
	    defaultvalue "false"
	  param in name "online_rotation" type class_ref 3651639 // cam_rotation_t
	    defaultvalue "ROTATE_0"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraStream
//
//DESCRIPTION: constructor of QCameraStream
//
//PARAMETERS :
//  @allocator  : memory allocator obj
//  @camHandle  : camera handle
//  @chId       : channel handle
//  @camOps     : ptr to camera ops table
//  @paddingInfo: ptr to padding info
//  @deffered   : deferred stream
//  @online_rotation: rotation applied online
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraStream
//
//DESCRIPTION: constructor of QCameraStream
//
//PARAMETERS :
//  @allocator  : memory allocator obj
//  @camHandle  : camera handle
//  @chId       : channel handle
//  @camOps     : ptr to camera ops table
//  @paddingInfo: ptr to padding info
//  @deffered   : deferred stream
//  @online_rotation: rotation applied online
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}:
        mDumpFrame(0),
        mDumpMetaFrame(0),
        mDumpSkipCnt(0),
        mCamHandle(camHandle),
        mChannelHandle(chId),
        mHandle(0),
        mCamOps(camOps),
        mStreamInfo(NULL),
        mNumBufs(0),
        mNumPlaneBufs(0),
        mNumBufsNeedAlloc(0),
        mDataCB(NULL),
        mUserData(NULL),
        mDataQ(releaseFrameData, this),
        mStreamInfoBuf(NULL),
        mMiscBuf(NULL),
        mStreamBufs(NULL),
        mStreamBatchBufs(NULL),
        mAllocator(allocator),
        mBufDefs(NULL),
        mPlaneBufDefs(NULL),
        mOnlineRotation(online_rotation),
        mStreamBufsAcquired(false),
        m_bActive(false),
        mDynBufAlloc(false),
        mBufAllocPid(0),
        mDefferedAllocation(deffered),
        wait_for_cond(false)
:
        mDumpFrame(0),
        mDumpMetaFrame(0),
        mDumpSkipCnt(0),
        mCamHandle(camHandle),
        mChannelHandle(chId),
        mHandle(0),
        mCamOps(camOps),
        mStreamInfo(NULL),
        mNumBufs(0),
        mNumPlaneBufs(0),
        mNumBufsNeedAlloc(0),
        mDataCB(NULL),
        mUserData(NULL),
        mDataQ(releaseFrameData, this),
        mStreamInfoBuf(NULL),
        mMiscBuf(NULL),
        mStreamBufs(NULL),
        mStreamBatchBufs(NULL),
        mAllocator(allocator),
        mBufDefs(NULL),
        mPlaneBufDefs(NULL),
        mOnlineRotation(online_rotation),
        mStreamBufsAcquired(false),
        m_bActive(false),
        mDynBufAlloc(false),
        mBufAllocPid(0),
        mDefferedAllocation(deffered),
        wait_for_cond(false)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44219703 "~QCameraStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraStream
//
//DESCRIPTION: deconstructor of QCameraStream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraStream
//
//DESCRIPTION: deconstructor of QCameraStream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraStream
//
//DESCRIPTION: deconstructor of QCameraStream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44219831 "init"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 6
	  param inout name "streamInfoBuf" type class_ref 3645111 // QCameraHeapMemory
	  param inout name "miscBuf" type class_ref 3645111 // QCameraHeapMemory
	  param in name "minNumBuffers" explicit_type "uint8_t"
	  param in name "stream_cb" type class_ref 3648695 // stream_cb_routine
	  param inout name "userdata" explicit_type "void"
	  param in name "bDynallocBuf" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialize stream obj
//
//PARAMETERS :
//  @streamInfoBuf: ptr to buf that contains stream info
//  @miscBuf      : ptr to buf that contains misc bufs
//  @stream_cb    : stream data notify callback. Can be NULL if not needed
//  @userdata     : user data ptr
//  @bDynallocBuf : flag to indicate if buffer allocation can be in 2 steps
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialize stream obj
//
//PARAMETERS :
//  @streamInfoBuf: ptr to buf that contains stream info
//  @miscBuf      : ptr to buf that contains misc bufs
//  @stream_cb    : stream data notify callback. Can be NULL if not needed
//  @userdata     : user data ptr
//  @bDynallocBuf : flag to indicate if buffer allocation can be in 2 steps
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44219959 "processZoomDone"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "previewWindow" explicit_type "preview_stream_ops_t"
	  param inout name "crop_info" type class_ref 3647031 // cam_crop_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processZoomDone
//
//DESCRIPTION: process zoom done event
//
//PARAMETERS :
//  @previewWindoe : preview window ops table to set preview crop window
//  @crop_info     : crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZoomDone
//
//DESCRIPTION: process zoom done event
//
//PARAMETERS :
//  @previewWindoe : preview window ops table to set preview crop window
//  @crop_info     : crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZoomDone
//
//DESCRIPTION: process zoom done event
//
//PARAMETERS :
//  @previewWindoe : preview window ops table to set preview crop window
//  @crop_info     : crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220087 "bufDone"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @index   : index of buffer to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @index   : index of buffer to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220215 "bufDone"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "isMetaData" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @opaque    : stream frame/metadata buf to be returned
//  @isMetaData: flag if returned opaque is a metadatabuf or the real frame ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @opaque    : stream frame/metadata buf to be returned
//  @isMetaData: flag if returned opaque is a metadatabuf or the real frame ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @opaque    : stream frame/metadata buf to be returned
//  @isMetaData: flag if returned opaque is a metadatabuf or the real frame ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220343 "processDataNotify"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processDataNotify
//
//DESCRIPTION: process stream data notify
//
//PARAMETERS :
//  @frame   : stream frame received
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processDataNotify
//
//DESCRIPTION: process stream data notify
//
//PARAMETERS :
//  @frame   : stream frame received
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processDataNotify
//
//DESCRIPTION: process stream data notify
//
//PARAMETERS :
//  @frame   : stream frame received
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220471 "start"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start stream. Will start main stream thread to handle stream
//             related ops.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start stream. Will start main stream thread to handle stream
//             related ops.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start stream. Will start main stream thread to handle stream
//             related ops.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220599 "stop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop stream. Will stop main stream thread
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop stream. Will stop main stream thread
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop stream. Will stop main stream thread
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220727 "allocateBuffers"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateBuffers
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateBuffers
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateBuffers
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used for deffered allocation of buffers "
      end

      operation 44220855 "releaseBuffs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseBuffs
//
//DESCRIPTION: method to deallocate stream buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseBuffs
//
//DESCRIPTION: method to deallocate stream buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseBuffs
//
//DESCRIPTION: method to deallocate stream buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44220983 "dataNotifyCB"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: callback for data notify. This function is registered with
//             mm-camera-interface to handle data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: callback for data notify. This function is registered with
//             mm-camera-interface to handle data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: callback for data notify. This function is registered with
//             mm-camera-interface to handle data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221111 "dataProcRoutine"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataProcRoutine
//
//DESCRIPTION: function to process data in the main stream thread
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcRoutine
//
//DESCRIPTION: function to process data in the main stream thread
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcRoutine
//
//DESCRIPTION: function to process data in the main stream thread
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221239 "BufAllocRoutine"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : BufAllocRoutine
//
//DESCRIPTION: function to allocate additional stream buffers
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : BufAllocRoutine
//
//DESCRIPTION: function to allocate additional stream buffers
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : BufAllocRoutine
//
//DESCRIPTION: function to allocate additional stream buffers
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221367 "getMyHandle"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mHandle;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221495 "isTypeOf"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isTypeOf
//
//DESCRIPTION: helper function to determine if the stream is of the queried type
//
//PARAMETERS :
//  @type    : stream type as of queried
//
//RETURN     : true/false
//==========================================================================

//===========================================================================
//FUNCTION   : isTypeOf
//
//DESCRIPTION: helper function to determine if the stream is of the queried type
//
//PARAMETERS :
//  @type    : stream type as of queried
//
//RETURN     : true/false
//==========================================================================

//===========================================================================
//FUNCTION   : isTypeOf
//
//DESCRIPTION: helper function to determine if the stream is of the queried type
//
//PARAMETERS :
//  @type    : stream type as of queried
//
//RETURN     : true/false
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221623 "isOrignalTypeOf"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isOrignalTypeOf
//
//DESCRIPTION: helper function to determine if the original stream is of the
//             queried type if it's reproc stream
//
//PARAMETERS :
//  @type    : stream type as of queried
//
//RETURN     : true/false
//==========================================================================

//===========================================================================
//FUNCTION   : isOrignalTypeOf
//
//DESCRIPTION: helper function to determine if the original stream is of the
//             queried type if it's reproc stream
//
//PARAMETERS :
//  @type    : stream type as of queried
//
//RETURN     : true/false
//==========================================================================

//===========================================================================
//FUNCTION   : isOrignalTypeOf
//
//DESCRIPTION: helper function to determine if the original stream is of the
//             queried type if it's reproc stream
//
//PARAMETERS :
//  @type    : stream type as of queried
//
//RETURN     : true/false
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221751 "getFrameOffset"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameOffset
//
//DESCRIPTION: query stream buffer frame offset info
//
//PARAMETERS :
//  @offset  : reference to struct to store the queried frame offset info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameOffset
//
//DESCRIPTION: query stream buffer frame offset info
//
//PARAMETERS :
//  @offset  : reference to struct to store the queried frame offset info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameOffset
//
//DESCRIPTION: query stream buffer frame offset info
//
//PARAMETERS :
//  @offset  : reference to struct to store the queried frame offset info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44221879 "getCropInfo"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "crop" type class_ref 3659959 // cam_rect_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCropInfo
//
//DESCRIPTION: query crop info of the stream
//
//PARAMETERS :
//  @crop    : reference to struct to store the queried crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getCropInfo
//
//DESCRIPTION: query crop info of the stream
//
//PARAMETERS :
//  @crop    : reference to struct to store the queried crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getCropInfo
//
//DESCRIPTION: query crop info of the stream
//
//PARAMETERS :
//  @crop    : reference to struct to store the queried crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222007 "setCropInfo"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "crop" type class_ref 3659959 // cam_rect_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setCropInfo
//
//DESCRIPTION: set crop info of the stream
//
//PARAMETERS :
//  @crop    : struct to store new crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCropInfo
//
//DESCRIPTION: set crop info of the stream
//
//PARAMETERS :
//  @crop    : struct to store new crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCropInfo
//
//DESCRIPTION: set crop info of the stream
//
//PARAMETERS :
//  @crop    : struct to store new crop info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222135 "getFrameDimension"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameDimension
//
//DESCRIPTION: query stream frame dimension info
//
//PARAMETERS :
//  @dim     : reference to struct to store the queried frame dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameDimension
//
//DESCRIPTION: query stream frame dimension info
//
//PARAMETERS :
//  @dim     : reference to struct to store the queried frame dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameDimension
//
//DESCRIPTION: query stream frame dimension info
//
//PARAMETERS :
//  @dim     : reference to struct to store the queried frame dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222263 "getFormat"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFormat
//
//DESCRIPTION: query stream format
//
//PARAMETERS :
//  @fmt     : reference to stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFormat
//
//DESCRIPTION: query stream format
//
//PARAMETERS :
//  @fmt     : reference to stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFormat
//
//DESCRIPTION: query stream format
//
//PARAMETERS :
//  @fmt     : reference to stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222391 "getStreamBufs"
	cpp_inline public return_type class_ref 3644983 // QCameraMemory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mStreamBufs;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222519 "getStreamInfoBuf"
	cpp_inline public return_type class_ref 3645111 // QCameraHeapMemory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mStreamInfoBuf;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222647 "getMiscBuf"
	cpp_inline public return_type class_ref 3645111 // QCameraHeapMemory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mMiscBuf;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222775 "getMyServerID"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMyServerID
//
//DESCRIPTION: query server stream ID
//
//PARAMETERS : None
//
//RETURN     : stream ID from server
//==========================================================================

//===========================================================================
//FUNCTION   : getMyServerID
//
//DESCRIPTION: query server stream ID
//
//PARAMETERS : None
//
//RETURN     : stream ID from server
//==========================================================================

//===========================================================================
//FUNCTION   : getMyServerID
//
//DESCRIPTION: query server stream ID
//
//PARAMETERS : None
//
//RETURN     : stream ID from server
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44222903 "getMyType"
	preserve_cpp_body_indent public explicit_return_type "cam_stream_type_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMyType
//
//DESCRIPTION: return stream type
//
//PARAMETERS : none
//
//RETURN     : stream type
//==========================================================================

//===========================================================================
//FUNCTION   : getMyType
//
//DESCRIPTION: return stream type
//
//PARAMETERS : none
//
//RETURN     : stream type
//==========================================================================

//===========================================================================
//FUNCTION   : getMyType
//
//DESCRIPTION: return stream type
//
//PARAMETERS : none
//
//RETURN     : stream type
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223031 "getMyOriginalType"
	preserve_cpp_body_indent public explicit_return_type "cam_stream_type_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMyOriginalType
//
//DESCRIPTION: return stream type
//
//PARAMETERS : none
//
//RETURN     : stream type
//==========================================================================

//===========================================================================
//FUNCTION   : getMyOriginalType
//
//DESCRIPTION: return stream type
//
//PARAMETERS : none
//
//RETURN     : stream type
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223159 "acquireStreamBufs"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : acquireStreamBufs
//
//DESCRIPTION: acquire stream buffers and postpone their release.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : acquireStreamBufs
//
//DESCRIPTION: acquire stream buffers and postpone their release.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : acquireStreamBufs
//
//DESCRIPTION: acquire stream buffers and postpone their release.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223287 "mapBuf"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 6
	  param in name "buf_type" explicit_type "uint8_t"
	  param in name "buf_idx" explicit_type "uint32_t"
	  param in name "plane_idx" explicit_type "int32_t"
	  param in name "fd" explicit_type "int"
	  param in name "size" explicit_type "size_t"
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : mapBuf
//
//DESCRIPTION: map stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//  @fd       : fd of the buffer
//  @size     : lenght of the buffer
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : mapBuf
//
//DESCRIPTION: map stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//  @fd       : fd of the buffer
//  @size     : lenght of the buffer
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223415 "unmapBuf"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param in name "buf_type" explicit_type "uint8_t"
	  param in name "buf_idx" explicit_type "uint32_t"
	  param in name "plane_idx" explicit_type "int32_t"
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unmapBuf
//
//DESCRIPTION: unmap stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapBuf
//
//DESCRIPTION: unmap stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223543 "setParameter"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "param" type class_ref 3660215 // cam_stream_parm_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setParameter
//
//DESCRIPTION: set stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be set
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setParameter
//
//DESCRIPTION: set stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be set
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setParameter
//
//DESCRIPTION: set stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be set
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223671 "getParameter"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "param" type class_ref 3660215 // cam_stream_parm_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getParameter
//
//DESCRIPTION: get stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be red
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getParameter
//
//DESCRIPTION: get stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be red
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getParameter
//
//DESCRIPTION: get stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be red
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223799 "syncRuntimeParams"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : syncRuntimeParams
//
//DESCRIPTION: query and sync runtime parameters like output crop
//             buffer info etc.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : syncRuntimeParams
//
//DESCRIPTION: query and sync runtime parameters like output crop
//             buffer info etc.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : syncRuntimeParams
//
//DESCRIPTION: query and sync runtime parameters like output crop
//             buffer info etc.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44223927 "getOutputCrop"
	cpp_inline public return_type class_ref 3660215 // cam_stream_parm_buffer_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_OutputCrop;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224055 "getImgProp"
	cpp_inline public return_type class_ref 3660215 // cam_stream_parm_buffer_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_ImgProp;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224183 "releaseFrameData"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseFrameData
//
//DESCRIPTION: callback function to release frame data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFrameData
//
//DESCRIPTION: callback function to release frame data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFrameData
//
//DESCRIPTION: callback function to release frame data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224311 "configStream"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configStream
//
//DESCRIPTION: send stream configuration to back end
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configStream
//
//DESCRIPTION: send stream configuration to back end
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configStream
//
//DESCRIPTION: send stream configuration to back end
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224439 "isDeffered"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mDefferedAllocation; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224567 "deleteStream"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deleteStream
//
//DESCRIPTION: Deletes a camera stream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : deleteStream
//
//DESCRIPTION: Deletes a camera stream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : deleteStream
//
//DESCRIPTION: Deletes a camera stream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224695 "getBufferCount"
	cpp_inline public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mNumBufs; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224823 "getChannelHandle"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mChannelHandle; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44224951 "getNumQueuedBuf"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumQueuedBuf
//
//DESCRIPTION: return queued buffer count
//
//PARAMETERS : None
//
//RETURN     : queued buffer count
//==========================================================================

//===========================================================================
//FUNCTION   : getNumQueuedBuf
//
//DESCRIPTION: return queued buffer count
//
//PARAMETERS : None
//
//RETURN     : queued buffer count
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13312695 "mDumpFrame"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13312823 "mDumpMetaFrame"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13312951 "mDumpSkipCnt"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44225079 "cond_wait"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cond_wait
//
//DESCRIPTION: wait on if flag \"wait_for_cond\" is set
//
//==========================================================================

//===========================================================================
//FUNCTION   : cond_wait
//
//DESCRIPTION: wait on if flag \"wait_for_cond\" is set
//
//==========================================================================

//===========================================================================
//FUNCTION   : cond_wait
//
//DESCRIPTION: wait on if flag \"wait_for_cond\" is set
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44225207 "cond_signal"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cond_signal
//
//DESCRIPTION: signal if flag \"wait_for_cond\" is set
//
//==========================================================================

//===========================================================================
//FUNCTION   : cond_signal
//
//DESCRIPTION: signal if flag \"wait_for_cond\" is set
//
//==========================================================================

//===========================================================================
//FUNCTION   : cond_signal
//
//DESCRIPTION: signal if flag \"wait_for_cond\" is set
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13313079 "mCamHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13313207 "mChannelHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13313335 "mHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " stream handle from mm-camera-interface"
      end

      classrelation 7061175 // mCamOps (<unidirectional association>)
	relation 7061175 --->
	  a role_name "mCamOps" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061175 // mCamOps (<unidirectional association>)
	  b parent class_ref 3651127 // mm_camera_ops_t
      end

      classrelation 7061303 // mStreamInfo (<unidirectional association>)
	relation 7061303 --->
	  a role_name "mStreamInfo" private
	    comment " ptr to stream info buf"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061303 // mStreamInfo (<unidirectional association>)
	  b parent class_ref 3645239 // cam_stream_info_t
      end

      classrelation 7061431 // mMemVtbl (<directional composition>)
	relation 7061431 *-->
	  a role_name "mMemVtbl" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061431 // mMemVtbl (<directional composition>)
	  b parent class_ref 3660343 // mm_camera_stream_mem_vtbl_t
      end

      attribute 13313463 "mNumBufs"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13313591 "mNumPlaneBufs"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13313719 "mNumBufsNeedAlloc"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13313847 "mRegFlags"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7061559 // mDataCB (<directional composition>)
	relation 7061559 *-->
	  a role_name "mDataCB" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061559 // mDataCB (<directional composition>)
	  b parent class_ref 3648695 // stream_cb_routine
      end

      attribute 13313975 "mUserData"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7061687 // mDataQ (<directional composition>)
	relation 7061687 *-->
	  a role_name "mDataQ" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061687 // mDataQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7061815 // mProcTh (<directional composition>)
	relation 7061815 *-->
	  a role_name "mProcTh" private
	    comment " thread for dataCB"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061815 // mProcTh (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      classrelation 7061943 // mStreamInfoBuf (<unidirectional association>)
	relation 7061943 --->
	  a role_name "mStreamInfoBuf" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7061943 // mStreamInfoBuf (<unidirectional association>)
	  b parent class_ref 3645111 // QCameraHeapMemory
      end

      classrelation 7062071 // mMiscBuf (<unidirectional association>)
	relation 7062071 --->
	  a role_name "mMiscBuf" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062071 // mMiscBuf (<unidirectional association>)
	  b parent class_ref 3645111 // QCameraHeapMemory
      end

      classrelation 7062199 // mStreamBufs (<unidirectional association>)
	relation 7062199 --->
	  a role_name "mStreamBufs" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062199 // mStreamBufs (<unidirectional association>)
	  b parent class_ref 3644983 // QCameraMemory
      end

      classrelation 7062327 // mStreamBatchBufs (<unidirectional association>)
	relation 7062327 --->
	  a role_name "mStreamBatchBufs" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062327 // mStreamBatchBufs (<unidirectional association>)
	  b parent class_ref 3644983 // QCameraMemory
      end

      classrelation 7062455 // mAllocator (<unidirectional association>)
	relation 7062455 --->
	  a role_name "mAllocator" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062455 // mAllocator (<unidirectional association>)
	  b parent class_ref 3644215 // QCameraAllocator
      end

      classrelation 7062583 // mBufDefs (<unidirectional association>)
	relation 7062583 --->
	  a role_name "mBufDefs" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062583 // mBufDefs (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7062711 // mPlaneBufDefs (<unidirectional association>)
	relation 7062711 --->
	  a role_name "mPlaneBufDefs" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062711 // mPlaneBufDefs (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7062839 // mFrameLenOffset (<directional composition>)
	relation 7062839 *-->
	  a role_name "mFrameLenOffset" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062839 // mFrameLenOffset (<directional composition>)
	  b parent class_ref 3630007 // cam_frame_len_offset_t
      end

      classrelation 7062967 // mPaddingInfo (<directional composition>)
	relation 7062967 *-->
	  a role_name "mPaddingInfo" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7062967 // mPaddingInfo (<directional composition>)
	  b parent class_ref 3651511 // cam_padding_info_t
      end

      classrelation 7063095 // mCropInfo (<directional composition>)
	relation 7063095 *-->
	  a role_name "mCropInfo" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063095 // mCropInfo (<directional composition>)
	  b parent class_ref 3659959 // cam_rect_t
      end

      classrelation 7063223 // mOnlineRotation (<directional composition>)
	relation 7063223 *-->
	  a role_name "mOnlineRotation" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063223 // mOnlineRotation (<directional composition>)
	  b parent class_ref 3651639 // cam_rotation_t
      end

      attribute 13314103 "mCropLock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " lock to protect crop info"
      end

      attribute 13314231 "mParameterLock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " lock to sync access to parameters"
      end

      attribute 13314359 "mStreamBufsAcquired"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13314487 "m_bActive"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if stream mProcTh is active"
      end

      attribute 13314615 "mDynBufAlloc"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " allow buf allocation in 2 steps"
      end

      attribute 13314743 "mBufAllocPid"
	private explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7063351 // m_MemOpsTbl (<directional composition>)
	relation 7063351 *-->
	  a role_name "m_MemOpsTbl" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063351 // m_MemOpsTbl (<directional composition>)
	  b parent class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
      end

      classrelation 7063479 // m_OutputCrop (<directional composition>)
	relation 7063479 *-->
	  a role_name "m_OutputCrop" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063479 // m_OutputCrop (<directional composition>)
	  b parent class_ref 3660215 // cam_stream_parm_buffer_t
      end

      classrelation 7063607 // m_ImgProp (<directional composition>)
	relation 7063607 *-->
	  a role_name "m_ImgProp" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063607 // m_ImgProp (<directional composition>)
	  b parent class_ref 3660215 // cam_stream_parm_buffer_t
      end

      operation 44225335 "get_bufs"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 6
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_bufs
//
//DESCRIPTION: static function entry to allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : get_bufs
//
//DESCRIPTION: static function entry to allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : get_bufs
//
//DESCRIPTION: static function entry to allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44225463 "get_bufs_deffered"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 6
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_bufs_deffered
//
//DESCRIPTION: static function entry to allocate deffered stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : get_bufs_deffered
//
//DESCRIPTION: static function entry to allocate deffered stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : get_bufs_deffered
//
//DESCRIPTION: static function entry to allocate deffered stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44225591 "put_bufs"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : put_bufs
//
//DESCRIPTION: static function entry to deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : put_bufs
//
//DESCRIPTION: static function entry to deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : put_bufs
//
//DESCRIPTION: static function entry to deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44225719 "put_bufs_deffered"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : put_bufs_deffered
//
//DESCRIPTION: static function entry to deallocate deffered stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : put_bufs_deffered
//
//DESCRIPTION: static function entry to deallocate deffered stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : put_bufs_deffered
//
//DESCRIPTION: static function entry to deallocate deffered stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44225847 "invalidate_buf"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : invalidate_buf
//
//DESCRIPTION: static function entry to invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : invalidate_buf
//
//DESCRIPTION: static function entry to invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44225975 "clean_invalidate_buf"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : clean_invalidate_buf
//
//DESCRIPTION: static function entry to clean invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to clean invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : clean_invalidate_buf
//
//DESCRIPTION: static function entry to clean invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to clean invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226103 "getBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 5
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufs
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBufs
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBufs
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226231 "putBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putBufs
//
//DESCRIPTION: deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putBufs
//
//DESCRIPTION: deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putBufs
//
//DESCRIPTION: deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226359 "allocateBatchBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 5
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateBatchBufs
//
//DESCRIPTION: allocate stream batch buffers and stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @plane_bufs    : output of allocated plane buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateBatchBufs
//
//DESCRIPTION: allocate stream batch buffers and stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @plane_bufs    : output of allocated plane buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used for deffered allocation of buffers "
      end

      operation 44226487 "releaseBatchBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseBatchBufs
//
//DESCRIPTION: method to deallocate stream buffers and batch buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : releaseBatchBufs
//
//DESCRIPTION: method to deallocate stream buffers and batch buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226615 "invalidateBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : invalidateBuf
//
//DESCRIPTION: invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : invalidateBuf
//
//DESCRIPTION: invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226743 "cleanInvalidateBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cleanInvalidateBuf
//
//DESCRIPTION: clean invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to clean invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cleanInvalidateBuf
//
//DESCRIPTION: clean invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to clean invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226871 "calcOffset"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "streamInfo" type class_ref 3645239 // cam_stream_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : calcOffset
//
//DESCRIPTION: calculate frame offset based on format and padding information
//
//PARAMETERS :
//  @streamInfo  : stream information
//
//RETURN     : int32_t type of status
//             0  -- success
//             -1 -- failure
//==========================================================================

//===========================================================================
//FUNCTION   : calcOffset
//
//DESCRIPTION: calculate frame offset based on format and padding information
//
//PARAMETERS :
//  @streamInfo  : stream information
//
//RETURN     : int32_t type of status
//             0  -- success
//             -1 -- failure
//==========================================================================

//===========================================================================
//FUNCTION   : calcOffset
//
//DESCRIPTION: calculate frame offset based on format and padding information
//
//PARAMETERS :
//  @streamInfo  : stream information
//
//RETURN     : int32_t type of status
//             0  -- success
//             -1 -- failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44226999 "unmapStreamInfoBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unmapStreamInfoBuf
//
//DESCRIPTION: Unmap stream info buffer
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapStreamInfoBuf
//
//DESCRIPTION: Unmap stream info buffer
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapStreamInfoBuf
//
//DESCRIPTION: Unmap stream info buffer
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44227127 "releaseStreamInfoBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseStreamInfoBuf
//
//DESCRIPTION: Release stream info buffer
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseStreamInfoBuf
//
//DESCRIPTION: Release stream info buffer
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseStreamInfoBuf
//
//DESCRIPTION: Release stream info buffer
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44227255 "releaseMiscBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseMiscBuf
//
//DESCRIPTION: Release misc buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseMiscBuf
//
//DESCRIPTION: Release misc buffers
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44227383 "mapBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "Buf" type class_ref 3644983 // QCameraMemory
	  param in name "bufType" explicit_type "cam_mapping_buf_type"
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : mapBuf
//
//DESCRIPTION: maps buffers
//
//PARAMETERS :
//  @heapBuf      : heap buffer handler
//  @bufType      : buffer type
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : mapBuf
//
//DESCRIPTION: maps buffers
//
//PARAMETERS :
//  @heapBuf      : heap buffer handler
//  @bufType      : buffer type
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44227511 "unMapBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "Buf" type class_ref 3644983 // QCameraMemory
	  param in name "bufType" explicit_type "cam_mapping_buf_type"
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unMapBuf
//
//DESCRIPTION: unmaps buffers
//
//PARAMETERS :
//  @heapBuf      : heap buffer handler
//  @bufType      : buffer type
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unMapBuf
//
//DESCRIPTION: unmaps buffers
//
//PARAMETERS :
//  @heapBuf      : heap buffer handler
//  @bufType      : buffer type
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13314871 "mDefferedAllocation"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13314999 "wait_for_cond"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13315127 "m_lock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13315255 "m_cond"
	private explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3646647 "QCameraExif"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44210871 "QCameraExif"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraExif
//
//DESCRIPTION: constructor of QCameraExif
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraExif
//
//DESCRIPTION: constructor of QCameraExif
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraExif
//
//DESCRIPTION: constructor of QCameraExif
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}
    : m_nNumEntries(0)

    : m_nNumEntries(0)

    : m_nNumEntries(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44210999 "~QCameraExif"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraExif
//
//DESCRIPTION: deconstructor of QCameraExif. Will release internal memory ptr.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraExif
//
//DESCRIPTION: deconstructor of QCameraExif. Will release internal memory ptr.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraExif
//
//DESCRIPTION: deconstructor of QCameraExif. Will release internal memory ptr.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44211127 "addEntry"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param in name "tagid" type class_ref 3627703 // exif_tag_id_t
	  param in name "type" type class_ref 3633079 // exif_tag_type_t
	  param in name "count" explicit_type "uint32_t"
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addEntry
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @tagid   : exif tag ID
//  @type    : data type
//  @count   : number of data in uint of its type
//  @data    : input data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addEntry
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @tagid   : exif tag ID
//  @type    : data type
//  @count   : number of data in uint of its type
//  @data    : input data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addEntry
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @tagid   : exif tag ID
//  @type    : data type
//  @count   : number of data in uint of its type
//  @data    : input data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44211255 "getNumOfEntries"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_nNumEntries;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44211383 "getEntries"
	cpp_inline public return_type class_ref 3640887 // QEXIF_INFO_DATA
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_Entries;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7056567 // m_Entries (<directional composition>)
	relation 7056567 *-->
	  a role_name "m_Entries" multiplicity "[MAX_EXIF_TABLE_ENTRIES]" private
	    comment " exif tags for JPEG encoder"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056567 // m_Entries (<directional composition>)
	  b parent class_ref 3640887 // QEXIF_INFO_DATA
      end

      attribute 13299255 "m_nNumEntries"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of valid entries"
      end
    end

    class 3647415 "qcamera_jpeg_evt_payload_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "returned back to kernel after done)"
      attribute 13298359 "jobId"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " job ID (obtained when start_jpeg_job)"
      end

      classrelation 7055927 // status (<directional composition>)
	relation 7055927 *-->
	  a role_name "status" public
	    comment " jpeg encoding status"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055927 // status (<directional composition>)
	  b parent class_ref 3649335 // jpeg_job_status_t
      end

      classrelation 7056055 // out_data (<directional composition>)
	relation 7056055 *-->
	  a role_name "out_data" public
	    comment " ptr to jpeg output buf"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056055 // out_data (<directional composition>)
	  b parent class_ref 3649463 // mm_jpeg_output_t
      end
    end

    class 3648183 "QCameraGrallocMemory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Gralloc Memory is acquired from preview window"
      classrelation 7050935 // <generalisation>
	relation 7050935 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7050935 // <generalisation>
	  b parent class_ref 3644983 // QCameraMemory
      end

      class 3652919 "anonymous25"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13239991 "BUFFER_NOT_OWNED"
	  public type class_ref 3652919 // anonymous25
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13240119 "BUFFER_OWNED"
	  public type class_ref 3652919 // anonymous25
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 44165175 "QCameraGrallocMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "getMemory" explicit_type "camera_request_memory"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraGrallocMemory
//
//DESCRIPTION: constructor of QCameraGrallocMemory
//             preview stream buffers are allocated from gralloc native_windoe
//
//PARAMETERS :
//  @getMemory : camera memory request ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraGrallocMemory
//
//DESCRIPTION: constructor of QCameraGrallocMemory
//             preview stream buffers are allocated from gralloc native_windoe
//
//PARAMETERS :
//  @memory    : camera memory request ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraGrallocMemory
//
//DESCRIPTION: constructor of QCameraGrallocMemory
//             preview stream buffers are allocated from gralloc native_windoe
//
//PARAMETERS :
//  @memory    : camera memory request ops table
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}${)}
        : QCameraMemory(true), mColorSpace(ITU_R_601_FR)

        : QCameraMemory(true), mColorSpace(ITU_R_601_FR)

        : QCameraMemory(true), mColorSpace(ITU_R_601_FR)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44165303 "setNativeWindow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "anw" explicit_type "preview_stream_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44165431 "~QCameraGrallocMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraGrallocMemory
//
//DESCRIPTION: deconstructor of QCameraGrallocMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraGrallocMemory
//
//DESCRIPTION: deconstructor of QCameraGrallocMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraGrallocMemory
//
//DESCRIPTION: deconstructor of QCameraGrallocMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44165559 "allocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 3
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	  param in name "is_secure" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44165687 "allocateMore"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44165815 "deallocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44165943 "cacheOps"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166071 "getRegFlags"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "regFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166199 "getMemory"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "camera_memory_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166327 "getMatchBufIndex"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166455 "getPtr"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166583 "setWindowInfo"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param inout name "window" explicit_type "preview_stream_ops_t"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "stride" explicit_type "int"
	  param in name "scanline" explicit_type "int"
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setWindowInfo
//
//DESCRIPTION: set native window gralloc ops table
//
//PARAMETERS :
//  @window  : gralloc ops table ptr
//  @width   : width of preview frame
//  @height  : height of preview frame
//  @stride  : stride of preview frame
//  @scanline: scanline of preview frame
//  @foramt  : format of preview image
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setWindowInfo
//
//DESCRIPTION: set native window gralloc ops table
//
//PARAMETERS :
//  @window  : gralloc ops table ptr
//  @width   : width of preview frame
//  @height  : height of preview frame
//  @stride  : stride of preview frame
//  @scanline: scanline of preview frame
//  @foramt  : format of preview image
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setWindowInfo
//
//DESCRIPTION: set native window gralloc ops table
//
//PARAMETERS :
//  @window  : gralloc ops table ptr
//  @width   : width of preview frame
//  @height  : height of preview frame
//  @stride  : stride of preview frame
//  @scanline: scanline of preview frame
//  @foramt  : format of preview image
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44166711 "displayBuffer"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : displayBuffer
//
//DESCRIPTION: send received frame to display
//
//PARAMETERS :
//  @index   : index of preview frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : displayBuffer
//
//DESCRIPTION: send received frame to display
//
//PARAMETERS :
//  @index   : index of preview frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enqueue/display buffer[index] onto the native window,
 and dequeue one buffer from it.
 Returns the buffer index of the dequeued buffer."
      end

      attribute 13240247 "mBufferHandle"
	private explicit_type "buffer_handle_t"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13240375 "mLocalFlag"
	private explicit_type "int"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13240503 "mWindow"
	private explicit_type "preview_stream_ops_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13240631 "mWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13240759 "mHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13240887 "mFormat"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241015 "mStride"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241143 "mScanline"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241271 "mGetMemory"
	private explicit_type "camera_request_memory"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241399 "mCameraMemory"
	private explicit_type "camera_memory_t"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241527 "mMinUndequeuedBuffers"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241655 "mColorSpace"
	private explicit_type "ColorSpace_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}enum ${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3648311 "QCameraChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44152247 "QCameraChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cam_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraChannel
//
//DESCRIPTION: constrcutor of QCameraChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraChannel
//
//DESCRIPTION: constrcutor of QCameraChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraChannel
//
//DESCRIPTION: constrcutor of QCameraChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44152375 "QCameraChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraChannel
//
//DESCRIPTION: default constrcutor of QCameraChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraChannel
//
//DESCRIPTION: default constrcutor of QCameraChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraChannel
//
//DESCRIPTION: default constrcutor of QCameraChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44152503 "~QCameraChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraChannel
//
//DESCRIPTION: destructor of QCameraChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraChannel
//
//DESCRIPTION: destructor of QCameraChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraChannel
//
//DESCRIPTION: destructor of QCameraChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44152631 "init"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 3
	  param inout name "attr" type class_ref 3651255 // mm_camera_channel_attr_t
	  param in name "dataCB" type class_ref 3651383 // mm_camera_buf_notify_t
	  param inout name "userData" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of channel
//
//PARAMETERS :
//  @attr    : channel bundle attribute setting
//  @dataCB  : data notify callback
//  @userData: user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of channel
//
//PARAMETERS :
//  @attr    : channel bundle attribute setting
//  @dataCB  : data notify callback
//  @userData: user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of channel
//
//PARAMETERS :
//  @attr    : channel bundle attribute setting
//  @dataCB  : data notify callback
//  @userData: user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44152759 "addStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 10
	  param inout name "allocator" type class_ref 3644215 // QCameraAllocator
	  param inout name "streamInfoBuf" type class_ref 3645111 // QCameraHeapMemory
	  param inout name "miscBuf" type class_ref 3645111 // QCameraHeapMemory
	  param in name "minStreamBufNum" explicit_type "uint8_t"
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param in name "stream_cb" type class_ref 3648695 // stream_cb_routine
	  param inout name "userdata" explicit_type "void"
	  param in name "bDynAllocBuf" explicit_type "bool"
	  param in name "bDeffAlloc" explicit_type "bool"
	    defaultvalue "false"
	  param in name "online_rotation" type class_ref 3651639 // cam_rotation_t
	    defaultvalue "ROTATE_0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addStream
//
//DESCRIPTION: add a stream into channel
//
//PARAMETERS :
//  @allocator      : stream related buffer allocator
//  @streamInfoBuf  : ptr to buf that contains stream info
//  @miscBuf        : ptr to buf that contains misc buffers
//  @minStreamBufNum: number of stream buffers needed
//  @paddingInfo    : padding information
//  @stream_cb      : stream data notify callback
//  @userdata       : user data ptr
//  @bDynAllocBuf   : flag indicating if allow allocate buffers in 2 steps
//  @online_rotation: rotation applied online
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addStream
//
//DESCRIPTION: add a stream into channel
//
//PARAMETERS :
//  @allocator      : stream related buffer allocator
//  @streamInfoBuf  : ptr to buf that contains stream info
//  @miscBuf        : ptr to buf that contains misc buffers
//  @minStreamBufNum: number of stream buffers needed
//  @paddingInfo    : padding information
//  @stream_cb      : stream data notify callback
//  @userdata       : user data ptr
//  @bDynAllocBuf   : flag indicating if allow allocate buffers in 2 steps
//  @online_rotation: rotation applied online
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Owner of memory is transferred from the caller to the caller with this call."
      end

      operation 44152887 "linkStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "ch" type class_ref 3648311 // QCameraChannel
	  param inout name "stream" type class_ref 3646263 // QCameraStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : linkStream
//
//DESCRIPTION: link a stream into channel
//
//PARAMETERS :
//  @ch      : Channel which the stream belongs to
//  @stream  : Stream which needs to be linked
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : linkStream
//
//DESCRIPTION: link a stream into channel
//
//PARAMETERS :
//  @ch      : Channel which the stream belongs to
//  @stream  : Stream which needs to be linked
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153015 "start"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start channel, which will start all streams belong to this channel
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start channel, which will start all streams belong to this channel
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start channel, which will start all streams belong to this channel
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153143 "stop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop a channel, which will stop all streams belong to this channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop a channel, which will stop all streams belong to this channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop a channel, which will stop all streams belong to this channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153271 "bufDone"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return a stream buf back to kernel
//
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return a stream buf back to kernel
//
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return a stream buf back to kernel
//
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153399 "processZoomDone"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "previewWindow" explicit_type "preview_stream_ops_t"
	  param inout name "crop_info" type class_ref 3647031 // cam_crop_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processZoomDone
//
//DESCRIPTION: process zoom done event
//
//PARAMETERS :
//  @previewWindoe : ptr to preview window ops table, needed to set preview
//                   crop information
//  @crop_info     : crop info as a result of zoom operation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZoomDone
//
//DESCRIPTION: process zoom done event
//
//PARAMETERS :
//  @previewWindoe : ptr to preview window ops table, needed to set preview
//                   crop information
//  @crop_info     : crop info as a result of zoom operation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processZoomDone
//
//DESCRIPTION: process zoom done event
//
//PARAMETERS :
//  @previewWindoe : ptr to preview window ops table, needed to set preview
//                   crop information
//  @crop_info     : crop info as a result of zoom operation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153527 "config"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : config
//
//DESCRIPTION: Configure any deffered channel streams
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : config
//
//DESCRIPTION: Configure any deffered channel streams
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : config
//
//DESCRIPTION: Configure any deffered channel streams
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153655 "getStreamByHandle"
	preserve_cpp_body_indent public return_type class_ref 3646263 // QCameraStream
	nparams 1
	  param in name "streamHandle" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamByHandle
//
//DESCRIPTION: return stream object by stream handle
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByHandle
//
//DESCRIPTION: return stream object by stream handle
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByHandle
//
//DESCRIPTION: return stream object by stream handle
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153783 "getMyHandle"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_handle;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44153911 "getNumOfStreams"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return (uint32_t) mStreams.size();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44154039 "getStreamByIndex"
	preserve_cpp_body_indent public return_type class_ref 3646263 // QCameraStream
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamByIndex
//
//DESCRIPTION: return stream object by index of streams in the channel
//
//PARAMETERS :
//  @index : index of stream in the channel
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByIndex
//
//DESCRIPTION: return stream object by index of streams in the channel
//
//PARAMETERS :
//  @index : index of stream in the channel
//
//RETURN     : stream object. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44154167 "getStreamByServerID"
	preserve_cpp_body_indent public return_type class_ref 3646263 // QCameraStream
	nparams 1
	  param in name "serverID" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamByServerID
//
//DESCRIPTION: return stream object by stream server ID from daemon
//
//PARAMETERS :
//  @serverID : stream server ID
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByServerID
//
//DESCRIPTION: return stream object by stream server ID from daemon
//
//PARAMETERS :
//  @serverID : stream server ID
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByServerID
//
//DESCRIPTION: return stream object by stream server ID from daemon
//
//PARAMETERS :
//  @serverID : stream server ID
//
//RETURN     : stream object. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44154295 "UpdateStreamBasedParameters"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "param" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : UpdateStreamBasedParameters
//
//DESCRIPTION: update any stream based settings from parameters
//
//PARAMETERS :
//  @param   : reference to parameters object
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : UpdateStreamBasedParameters
//
//DESCRIPTION: update any stream based settings from parameters
//
//PARAMETERS :
//  @param   : reference to parameters object
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : UpdateStreamBasedParameters
//
//DESCRIPTION: update any stream based settings from parameters
//
//PARAMETERS :
//  @param   : reference to parameters object
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44154423 "deleteChannel"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deleteChannel
//
//DESCRIPTION: deletes a camera channel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deleteChannel
//
//DESCRIPTION: deletes a camera channel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deleteChannel
//
//DESCRIPTION: deletes a camera channel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13236919 "m_camHandle"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7048887 // m_camOps (<unidirectional association>)
	relation 7048887 --->
	  a role_name "m_camOps" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7048887 // m_camOps (<unidirectional association>)
	  b parent class_ref 3651127 // mm_camera_ops_t
      end

      attribute 13237047 "m_bIsActive"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13237175 "m_bAllowDynBufAlloc"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if buf allocation can be in two steps"
      end

      attribute 13237303 "m_handle"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7049015 // mStreams (<unidirectional association>)
	relation 7049015 --->
	  stereotype "Vector"
	  a role_name "mStreams" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7049015 // mStreams (<unidirectional association>)
	  b parent class_ref 3646263 // QCameraStream
      end

      classrelation 7049143 // mDataCB (<directional composition>)
	relation 7049143 *-->
	  a role_name "mDataCB" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7049143 // mDataCB (<directional composition>)
	  b parent class_ref 3651383 // mm_camera_buf_notify_t
      end

      attribute 13237431 "mUserData"
	protected explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3648439 "QCameraReprocessChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " reprocess channel class"
      classrelation 7049527 // <generalisation>
	relation 7049527 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7049527 // <generalisation>
	  b parent class_ref 3648311 // QCameraChannel
      end

      operation 44156087 "QCameraReprocessChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cam_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraReprocessChannel
//
//DESCRIPTION: constructor of QCameraReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraReprocessChannel
//
//DESCRIPTION: constructor of QCameraReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraReprocessChannel
//
//DESCRIPTION: constructor of QCameraReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)} :
    QCameraChannel(cam_handle, cam_ops),
    m_pSrcChannel(NULL)
 :
    QCameraChannel(cam_handle, cam_ops),
    m_pSrcChannel(NULL)
 :
    QCameraChannel(cam_handle, cam_ops),
    m_pSrcChannel(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44156215 "QCameraReprocessChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraReprocessChannel
//
//DESCRIPTION: default constructor of QCameraReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraReprocessChannel
//
//DESCRIPTION: default constructor of QCameraReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraReprocessChannel
//
//DESCRIPTION: default constructor of QCameraReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)} :
    m_pSrcChannel(NULL)
 :
    m_pSrcChannel(NULL)
 :
    m_pSrcChannel(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44156343 "~QCameraReprocessChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraReprocessChannel
//
//DESCRIPTION: destructor of QCameraReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraReprocessChannel
//
//DESCRIPTION: destructor of QCameraReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraReprocessChannel
//
//DESCRIPTION: destructor of QCameraReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44156471 "addReprocStreamsFromSource"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 9
	  param inout name "allocator" type class_ref 3644215 // QCameraAllocator
	  param inout name "featureConfig" type class_ref 3648567 // cam_pp_feature_config_t
	  param inout name "pSrcChannel" type class_ref 3648311 // QCameraChannel
	  param in name "minStreamBufNum" explicit_type "uint8_t"
	  param in name "burstNum" explicit_type "uint8_t"
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "param" type class_ref 3649591 // QCameraParameters
	  param in name "contStream" explicit_type "bool"
	  param in name "offline" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} & ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addReprocStreamsFromSource
//
//DESCRIPTION: add reprocess streams from input source channel
//
//PARAMETERS :
//  @allocator      : stream related buffer allocator
//  @featureConfig  : pp feature configuration
//  @pSrcChannel    : ptr to input source channel that needs reprocess
//  @minStreamBufNum: number of stream buffers needed
//  @burstNum       : number of burst captures needed
//  @paddingInfo    : padding information
//  @param          : reference to parameters
//  @contStream     : continous streaming mode or burst
//  @offline        : configure for offline reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addReprocStreamsFromSource
//
//DESCRIPTION: add reprocess streams from input source channel
//
//PARAMETERS :
//  @allocator      : stream related buffer allocator
//  @featureConfig  : pp feature configuration
//  @pSrcChannel    : ptr to input source channel that needs reprocess
//  @minStreamBufNum: number of stream buffers needed
//  @burstNum       : number of burst captures needed
//  @paddingInfo    : padding information
//  @param          : reference to parameters
//  @contStream     : continous streaming mode or burst
//  @offline        : configure for offline reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}, ${t6} & ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44156599 "doReprocess"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "mParameter" type class_ref 3649591 // QCameraParameters
	  param inout name "pMetaStream" type class_ref 3646263 // QCameraStream
	  param in name "meta_buf_index" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @frame   : frame to be performed a reprocess
//  @mParameter : camera parameters
//  @pMetaStream: Metadata stream handle
//  @meta_buf_index : Metadata buffer index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @frame   : frame to be performed a reprocess
//  @mParameter : camera parameters
//  @pMetaStream: Metadata stream handle
//  @meta_buf_index : Metadata buffer index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " online reprocess"
      end

      operation 44156727 "doReprocess"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "buf_fd" explicit_type "int"
	  param in name "buf_length" explicit_type "size_t"
	  param inout name "ret_val" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @buf_fd     : fd to the input buffer that needs reprocess
//  @buf_lenght : length of the input buffer
//  @ret_val    : result of reprocess.
//                Example: Could be faceID in case of register face image.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @buf_fd     : fd to the input buffer that needs reprocess
//  @buf_lenght : length of the input buffer
//  @ret_val    : result of reprocess.
//                Example: Could be faceID in case of register face image.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " offline reprocess"
      end

      operation 44156855 "doReprocessOffline"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "meta_buf" type class_ref 3646391 // mm_camera_buf_def_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : doReprocessOffline
//
//DESCRIPTION: request to do offline reprocess on the frame
//
//PARAMETERS :
//  @frame   : frame to be performed a reprocess
//  @meta_buf : Metadata buffer for reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocessOffline
//
//DESCRIPTION: request to do offline reprocess on the frame
//
//PARAMETERS :
//  @frame   : frame to be performed a reprocess
//  @meta_buf : Metadata buffer for reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44156983 "stop"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: Unmap offline buffers and stop channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: Unmap offline buffers and stop channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: Unmap offline buffers and stop channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44157111 "getSrcChannel"
	cpp_inline public return_type class_ref 3648311 // QCameraChannel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_pSrcChannel;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44157239 "getStreamBySrouceHandle"
	preserve_cpp_body_indent private return_type class_ref 3646263 // QCameraStream
	nparams 1
	  param in name "srcHandle" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamBySrouceHandle
//
//DESCRIPTION: find reprocess stream by its source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBySrouceHandle
//
//DESCRIPTION: find reprocess stream by its source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBySrouceHandle
//
//DESCRIPTION: find reprocess stream by its source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3652151 "OfflineBuffer"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7049655 // stream (<unidirectional association>)
	  relation 7049655 --->
	    a role_name "stream" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7049655 // stream (<unidirectional association>)
	    b parent class_ref 3646263 // QCameraStream
	end

	attribute 13237559 "type"
	  public explicit_type "cam_mapping_buf_type"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13237687 "index"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      attribute 13237815 "mSrcStreamHandles"
	private explicit_type "uint32_t"
	multiplicity "[MAX_STREAM_NUM_IN_BUNDLE]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7049783 // m_pSrcChannel (<unidirectional association>)
	relation 7049783 --->
	  a role_name "m_pSrcChannel" private
	    comment " ptr to source channel for reprocess"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7049783 // m_pSrcChannel (<unidirectional association>)
	  b parent class_ref 3648311 // QCameraChannel
      end

      classrelation 7049911 // mOfflineBuffers (<directional composition>)
	relation 7049911 *-->
	  stereotype "android::List"
	  a role_name "mOfflineBuffers" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7049911 // mOfflineBuffers (<directional composition>)
	  b parent class_ref 3652151 // OfflineBuffer
      end
    end

    class 3648695 "stream_cb_routine"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(mm_camera_super_buf_t *frame,
                                  QCameraStream *stream,
                                  void *userdata);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3649079 "QCameraPicChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " burst pic channel: i.e. zsl burst mode"
      classrelation 7049271 // <generalisation>
	relation 7049271 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7049271 // <generalisation>
	  b parent class_ref 3648311 // QCameraChannel
      end

      operation 44154551 "QCameraPicChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cam_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraPicChannel
//
//DESCRIPTION: constructor of QCameraPicChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPicChannel
//
//DESCRIPTION: constructor of QCameraPicChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPicChannel
//
//DESCRIPTION: constructor of QCameraPicChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)} :
    QCameraChannel(cam_handle, cam_ops)
 :
    QCameraChannel(cam_handle, cam_ops)
 :
    QCameraChannel(cam_handle, cam_ops)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44154679 "QCameraPicChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraPicChannel
//
//DESCRIPTION: default constructor of QCameraPicChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPicChannel
//
//DESCRIPTION: default constructor of QCameraPicChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPicChannel
//
//DESCRIPTION: default constructor of QCameraPicChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44154807 "~QCameraPicChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraPicChannel
//
//DESCRIPTION: destructor of QCameraPicChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraPicChannel
//
//DESCRIPTION: destructor of QCameraPicChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraPicChannel
//
//DESCRIPTION: destructor of QCameraPicChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44154935 "takePicture"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "num_of_snapshot" explicit_type "uint8_t"
	  param in name "num_of_retro_snapshot" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : takePicture
//
//DESCRIPTION: send request for queued snapshot frames
//
//PARAMETERS :
//  @num_of_snapshot : number of snapshot frames requested
//  @num_of_retro_snapshot : number of retro snapshot frames requested
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takePicture
//
//DESCRIPTION: send request for queued snapshot frames
//
//PARAMETERS :
//  @num_of_snapshot : number of snapshot frames requested
//  @num_of_retro_snapshot : number of retro snapshot frames requested
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : takePicture
//
//DESCRIPTION: send request for queued snapshot frames
//
//PARAMETERS :
//  @num_of_snapshot : number of snapshot frames requested
//  @num_of_retro_snapshot : number of retro snapshot frames requested
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44155063 "cancelPicture"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cancelPicture
//
//DESCRIPTION: cancel request for queued snapshot frames
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelPicture
//
//DESCRIPTION: cancel request for queued snapshot frames
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cancelPicture
//
//DESCRIPTION: cancel request for queued snapshot frames
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44155191 "stopAdvancedCapture"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "type" type class_ref 3651767 // mm_camera_advanced_capture_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopAdvancedCapture
//
//DESCRIPTION: stop advanced capture based on advanced capture type.
//
//PARAMETERS :
//  @type : advanced capture type.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stopAdvancedCapture
//
//DESCRIPTION: stop advanced capture based on advanced capture type.
//
//PARAMETERS :
//  @type : advanced capture type.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44155319 "startAdvancedCapture"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "type" type class_ref 3651767 // mm_camera_advanced_capture_t
	  param inout name "config" type class_ref 3651895 // cam_capture_frame_config_t
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startAdvancedCapture
//
//DESCRIPTION: start advanced capture based on advanced capture type.
//
//PARAMETERS :
//  @type : advanced capture type.
//  @config: advance capture config
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : startAdvancedCapture
//
//DESCRIPTION: start advanced capture based on advanced capture type.
//
//PARAMETERS :
//  @type : advanced capture type.
//  @config: advance capture config
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44155447 "flushSuperbuffer"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "frame_idx" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flushSuperbuffer
//
//DESCRIPTION: flush the all superbuffer frames.
//
//PARAMETERS :
//  @frame_idx : frame index of focused frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : flushSuperbuffer
//
//DESCRIPTION: flush the all superbuffer frames.
//
//PARAMETERS :
//  @frame_idx : frame index of focused frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3649591 "QCameraParameters"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 7051959 // <generalisation>
	relation 7051959 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7051959 // <generalisation>
	  b parent class_ref 3653303 // typedef26
      end

      operation 44169271 "QCameraParameters"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraParameters
//
//DESCRIPTION: default constructor of QCameraParameters
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraParameters
//
//DESCRIPTION: default constructor of QCameraParameters
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraParameters
//
//DESCRIPTION: default constructor of QCameraParameters
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}
    : CameraParameters(),
      m_reprocScaleParam(this),
      m_pCapability(NULL),
      m_pCamOpsTbl(NULL),
      m_pParamHeap(NULL),
      m_pParamBuf(NULL),
      m_bZslMode(false),
      m_bZslMode_new(false),
      m_bRecordingHint(false),
      m_bRecordingHint_new(false),
      m_bHistogramEnabled(false),
      m_nFaceProcMask(0),
      m_bFaceDetectionOn(0),
      m_bDebugFps(false),
      mFocusMode(CAM_FOCUS_MODE_MAX),
      mPreviewFormat(CAM_FORMAT_YUV_420_NV21),
      mPictureFormat(CAM_FORMAT_JPEG),
      m_bNeedRestart(false),
      m_bNoDisplayMode(false),
      m_bWNROn(false),
      m_bInited(false),
      m_nBurstNum(1),
      m_nRetroBurstNum(0),
      m_nBurstLEDOnPeriod(100),
      m_bUpdateEffects(false),
      m_bSceneTransitionAuto(false),
      m_bPreviewFlipChanged(false),
      m_bVideoFlipChanged(false),
      m_bSnapshotFlipChanged(false),
      m_bFixedFrameRateSet(false),
      m_bHDREnabled(false),
      m_bAVTimerEnabled(false),
      m_bDISEnabled(false),
      m_AdjustFPS(NULL),
      m_bHDR1xFrameEnabled(true),
      m_HDRSceneEnabled(false),
      m_bHDRThumbnailProcessNeeded(false),
      m_bHDR1xExtraBufferNeeded(true),
      m_bHDROutputCropEnabled(false),
      m_tempMap(),
      m_bAFBracketingOn(false),
      m_bChromaFlashOn(false),
      m_bOptiZoomOn(false),
      m_bSceneSelection(false),
      m_SelectedScene(CAM_SCENE_MODE_MAX),
      m_bHfrMode(false),
      m_bSensorHDREnabled(false),
      m_bRdiMode(false),
      m_bDisplayFrame(true),
      m_bSecureMode(false),
      m_bAeBracketingEnabled(false),
      mFlashValue(CAM_FLASH_MODE_OFF),
      mFlashDaemonValue(CAM_FLASH_MODE_OFF)

    : CameraParameters(),
      m_reprocScaleParam(this),
      m_pCapability(NULL),
      m_pCamOpsTbl(NULL),
      m_pParamHeap(NULL),
      m_pParamBuf(NULL),
      mIsType(IS_TYPE_NONE),
      m_bZslMode(false),
      m_bZslMode_new(false),
      m_bForceZslMode(false),
      m_bRecordingHint(false),
      m_bRecordingHint_new(false),
      m_bHistogramEnabled(false),
      m_nFaceProcMask(0),
      m_bFaceDetectionOn(0),
      m_bDebugFps(false),
      mFocusMode(CAM_FOCUS_MODE_MAX),
      mPreviewFormat(CAM_FORMAT_YUV_420_NV21),
      mPictureFormat(CAM_FORMAT_JPEG),
      m_bNeedRestart(false),
      m_bNoDisplayMode(false),
      m_bWNROn(false),
      m_bTNRPreviewOn(false),
      m_bTNRVideoOn(false),
      m_bInited(false),
      m_nBurstNum(1),
      m_nRetroBurstNum(0),
      m_nBurstLEDOnPeriod(100),
      m_bUpdateEffects(false),
      m_bSceneTransitionAuto(false),
      m_bPreviewFlipChanged(false),
      m_bVideoFlipChanged(false),
      m_bSnapshotFlipChanged(false),
      m_bFixedFrameRateSet(false),
      m_bHDREnabled(false),
      m_bAVTimerEnabled(false),
      m_bDISEnabled(false),
      m_MobiMask(0),
      m_AdjustFPS(NULL),
      m_bHDR1xFrameEnabled(true),
      m_HDRSceneEnabled(false),
      m_bHDRThumbnailProcessNeeded(false),
      m_bHDR1xExtraBufferNeeded(true),
      m_bHDROutputCropEnabled(false),
      m_tempMap(),
      m_bAFBracketingOn(false),
      m_bReFocusOn(false),
      m_bChromaFlashOn(false),
      m_bOptiZoomOn(false),
      m_bSceneSelection(false),
      m_SelectedScene(CAM_SCENE_MODE_MAX),
      m_bSeeMoreOn(false),
      m_bStillMoreOn(false),
      m_bHfrMode(false),
      m_bSensorHDREnabled(false),
      m_bRdiMode(false),
      m_bDisplayFrame(true),
      m_bSecureMode(false),
      m_bAeBracketingEnabled(false),
      mFlashValue(CAM_FLASH_MODE_OFF),
      mFlashDaemonValue(CAM_FLASH_MODE_OFF),
      mHfrMode(CAM_HFR_MODE_OFF),
      m_bHDRModeSensor(true),
      mOfflineRAW(false),
      m_bTruePortraitOn(false),
      mCds_mode(CAM_CDS_MODE_OFF)

    : CameraParameters(),
      m_reprocScaleParam(this),
      m_pCapability(NULL),
      m_pCamOpsTbl(NULL),
      m_pParamHeap(NULL),
      m_pParamBuf(NULL),
      mIsType(IS_TYPE_NONE),
      m_bZslMode(false),
      m_bZslMode_new(false),
      m_bForceZslMode(false),
      m_bRecordingHint(false),
      m_bRecordingHint_new(false),
      m_bHistogramEnabled(false),
      m_nFaceProcMask(0),
      m_bFaceDetectionOn(0),
      m_bDebugFps(false),
      mFocusMode(CAM_FOCUS_MODE_MAX),
      mPreviewFormat(CAM_FORMAT_YUV_420_NV21),
      mPictureFormat(CAM_FORMAT_JPEG),
      m_bNeedRestart(false),
      m_bNoDisplayMode(false),
      m_bWNROn(false),
      m_bTNRPreviewOn(false),
      m_bTNRVideoOn(false),
      m_bInited(false),
      m_nBurstNum(1),
      m_nRetroBurstNum(0),
      m_nBurstLEDOnPeriod(100),
      m_bUpdateEffects(false),
      m_bSceneTransitionAuto(false),
      m_bPreviewFlipChanged(false),
      m_bVideoFlipChanged(false),
      m_bSnapshotFlipChanged(false),
      m_bFixedFrameRateSet(false),
      m_bHDREnabled(false),
      m_bAVTimerEnabled(false),
      m_bDISEnabled(false),
      m_MobiMask(0),
      m_AdjustFPS(NULL),
      m_bHDR1xFrameEnabled(true),
      m_HDRSceneEnabled(false),
      m_bHDRThumbnailProcessNeeded(false),
      m_bHDR1xExtraBufferNeeded(true),
      m_bHDROutputCropEnabled(false),
      m_tempMap(),
      m_bAFBracketingOn(false),
      m_bReFocusOn(false),
      m_bChromaFlashOn(false),
      m_bOptiZoomOn(false),
      m_bSceneSelection(false),
      m_SelectedScene(CAM_SCENE_MODE_MAX),
      m_bSeeMoreOn(false),
      m_bStillMoreOn(false),
      m_bHfrMode(false),
      m_bSensorHDREnabled(false),
      m_bRdiMode(false),
      m_bDisplayFrame(true),
      m_bSecureMode(false),
      m_bAeBracketingEnabled(false),
      mFlashValue(CAM_FLASH_MODE_OFF),
      mFlashDaemonValue(CAM_FLASH_MODE_OFF),
      mHfrMode(CAM_HFR_MODE_OFF),
      m_bHDRModeSensor(true),
      mOfflineRAW(false),
      m_bTruePortraitOn(false),
      mCds_mode(CAM_CDS_MODE_OFF)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44169399 "QCameraParameters"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "params" explicit_type "String8"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraParameters
//
//DESCRIPTION: constructor of QCameraParameters
//
//PARAMETERS :
//  @params  : parameters in string
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraParameters
//
//DESCRIPTION: constructor of QCameraParameters
//
//PARAMETERS :
//  @params  : parameters in string
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraParameters
//
//DESCRIPTION: constructor of QCameraParameters
//
//PARAMETERS :
//  @params  : parameters in string
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : CameraParameters(params),
    m_reprocScaleParam(this),
    m_pCapability(NULL),
    m_pCamOpsTbl(NULL),
    m_pParamHeap(NULL),
    m_pParamBuf(NULL),
    m_bZslMode(false),
    m_bZslMode_new(false),
    m_bRecordingHint(false),
    m_bRecordingHint_new(false),
    m_bHistogramEnabled(false),
    m_nFaceProcMask(0),
    m_bDebugFps(false),
    mFocusMode(CAM_FOCUS_MODE_MAX),
    mPreviewFormat(CAM_FORMAT_YUV_420_NV21),
    mPictureFormat(CAM_FORMAT_JPEG),
    m_bNeedRestart(false),
    m_bNoDisplayMode(false),
    m_bWNROn(false),
    m_bInited(false),
    m_nBurstNum(1),
    m_nRetroBurstNum(0),
    m_nBurstLEDOnPeriod(100),
    m_bPreviewFlipChanged(false),
    m_bVideoFlipChanged(false),
    m_bSnapshotFlipChanged(false),
    m_bFixedFrameRateSet(false),
    m_bHDREnabled(false),
    m_bAVTimerEnabled(false),
    m_AdjustFPS(NULL),
    m_bHDR1xFrameEnabled(true),
    m_HDRSceneEnabled(false),
    m_bHDRThumbnailProcessNeeded(false),
    m_bHDR1xExtraBufferNeeded(true),
    m_bHDROutputCropEnabled(false),
    m_tempMap(),
    m_bAFBracketingOn(false),
    m_bChromaFlashOn(false),
    m_bOptiZoomOn(false),
    m_bSceneSelection(false),
    m_SelectedScene(CAM_SCENE_MODE_MAX),
    m_bHfrMode(false),
    m_bSensorHDREnabled(false),
    m_bRdiMode(false),
    m_bSecureMode(false),
    m_bAeBracketingEnabled(false),
    mFlashValue(CAM_FLASH_MODE_OFF),
    mFlashDaemonValue(CAM_FLASH_MODE_OFF)

    : CameraParameters(params),
    m_reprocScaleParam(this),
    m_pCapability(NULL),
    m_pCamOpsTbl(NULL),
    m_pParamHeap(NULL),
    m_pParamBuf(NULL),
    m_bZslMode(false),
    m_bZslMode_new(false),
    m_bForceZslMode(false),
    m_bRecordingHint(false),
    m_bRecordingHint_new(false),
    m_bHistogramEnabled(false),
    m_nFaceProcMask(0),
    m_bDebugFps(false),
    mFocusMode(CAM_FOCUS_MODE_MAX),
    mPreviewFormat(CAM_FORMAT_YUV_420_NV21),
    mPictureFormat(CAM_FORMAT_JPEG),
    m_bNeedRestart(false),
    m_bNoDisplayMode(false),
    m_bWNROn(false),
    m_bTNRPreviewOn(false),
    m_bTNRVideoOn(false),
    m_bInited(false),
    m_nBurstNum(1),
    m_nRetroBurstNum(0),
    m_nBurstLEDOnPeriod(100),
    m_bPreviewFlipChanged(false),
    m_bVideoFlipChanged(false),
    m_bSnapshotFlipChanged(false),
    m_bFixedFrameRateSet(false),
    m_bHDREnabled(false),
    m_bAVTimerEnabled(false),
    m_AdjustFPS(NULL),
    m_bHDR1xFrameEnabled(true),
    m_HDRSceneEnabled(false),
    m_bHDRThumbnailProcessNeeded(false),
    m_bHDR1xExtraBufferNeeded(true),
    m_bHDROutputCropEnabled(false),
    m_tempMap(),
    m_bAFBracketingOn(false),
    m_bReFocusOn(false),
    m_bChromaFlashOn(false),
    m_bOptiZoomOn(false),
    m_bSceneSelection(false),
    m_SelectedScene(CAM_SCENE_MODE_MAX),
    m_bSeeMoreOn(false),
    m_bStillMoreOn(false),
    m_bHfrMode(false),
    m_bSensorHDREnabled(false),
    m_bRdiMode(false),
    m_bSecureMode(false),
    m_bAeBracketingEnabled(false),
    mFlashValue(CAM_FLASH_MODE_OFF),
    mFlashDaemonValue(CAM_FLASH_MODE_OFF),
    mHfrMode(CAM_HFR_MODE_OFF),
    m_bHDRModeSensor(true),
    mOfflineRAW(false),
    m_bTruePortraitOn(false),
    mCds_mode(CAM_CDS_MODE_OFF),
    mParmEffect(CAM_EFFECT_MODE_OFF)

    : CameraParameters(params),
    m_reprocScaleParam(this),
    m_pCapability(NULL),
    m_pCamOpsTbl(NULL),
    m_pParamHeap(NULL),
    m_pParamBuf(NULL),
    m_bZslMode(false),
    m_bZslMode_new(false),
    m_bForceZslMode(false),
    m_bRecordingHint(false),
    m_bRecordingHint_new(false),
    m_bHistogramEnabled(false),
    m_nFaceProcMask(0),
    m_bDebugFps(false),
    mFocusMode(CAM_FOCUS_MODE_MAX),
    mPreviewFormat(CAM_FORMAT_YUV_420_NV21),
    mPictureFormat(CAM_FORMAT_JPEG),
    m_bNeedRestart(false),
    m_bNoDisplayMode(false),
    m_bWNROn(false),
    m_bTNRPreviewOn(false),
    m_bTNRVideoOn(false),
    m_bInited(false),
    m_nBurstNum(1),
    m_nRetroBurstNum(0),
    m_nBurstLEDOnPeriod(100),
    m_bPreviewFlipChanged(false),
    m_bVideoFlipChanged(false),
    m_bSnapshotFlipChanged(false),
    m_bFixedFrameRateSet(false),
    m_bHDREnabled(false),
    m_bAVTimerEnabled(false),
    m_AdjustFPS(NULL),
    m_bHDR1xFrameEnabled(true),
    m_HDRSceneEnabled(false),
    m_bHDRThumbnailProcessNeeded(false),
    m_bHDR1xExtraBufferNeeded(true),
    m_bHDROutputCropEnabled(false),
    m_tempMap(),
    m_bAFBracketingOn(false),
    m_bReFocusOn(false),
    m_bChromaFlashOn(false),
    m_bOptiZoomOn(false),
    m_bSceneSelection(false),
    m_SelectedScene(CAM_SCENE_MODE_MAX),
    m_bSeeMoreOn(false),
    m_bStillMoreOn(false),
    m_bHfrMode(false),
    m_bSensorHDREnabled(false),
    m_bRdiMode(false),
    m_bSecureMode(false),
    m_bAeBracketingEnabled(false),
    mFlashValue(CAM_FLASH_MODE_OFF),
    mFlashDaemonValue(CAM_FLASH_MODE_OFF),
    mHfrMode(CAM_HFR_MODE_OFF),
    m_bHDRModeSensor(true),
    mOfflineRAW(false),
    m_bTruePortraitOn(false),
    mCds_mode(CAM_CDS_MODE_OFF),
    mParmEffect(CAM_EFFECT_MODE_OFF)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44169527 "~QCameraParameters"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraParameters
//
//DESCRIPTION: deconstructor of QCameraParameters
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraParameters
//
//DESCRIPTION: deconstructor of QCameraParameters
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraParameters
//
//DESCRIPTION: deconstructor of QCameraParameters
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 13242551 "KEY_QC_SUPPORTED_HFR_SIZES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hfr-size-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Supported PREVIEW/RECORDING SIZES IN HIGH FRAME RATE recording, sizes in pixels.
 Example value: \"800x480,432x320\". Read only.
"
      end

      attribute 13242679 "KEY_QC_PREVIEW_FRAME_RATE_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"preview-frame-rate-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The mode of preview frame rate.
 Example value: \"frame-rate-auto, frame-rate-fixed\".
"
      end

      attribute 13242807 "KEY_QC_SUPPORTED_PREVIEW_FRAME_RATE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"preview-frame-rate-modes\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13242935 "KEY_QC_PREVIEW_FRAME_RATE_AUTO_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"frame-rate-auto\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13243063 "KEY_QC_PREVIEW_FRAME_RATE_FIXED_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"frame-rate-fixed\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13243191 "KEY_QC_SUPPORTED_SKIN_TONE_ENHANCEMENT_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"skinToneEnhancement-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13243319 "KEY_QC_SUPPORTED_LIVESNAPSHOT_SIZES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"supported-live-snapshot-sizes\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Supported live snapshot sizes
"
      end

      attribute 13243447 "KEY_QC_SUPPORTED_RAW_FORMATS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"raw-format-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Supported Raw formats
"
      end

      attribute 13243575 "KEY_QC_RAW_FORMAT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"raw-format\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13243703 "KEY_QC_TOUCH_AF_AEC"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"touch-af-aec\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Touch Af/AEC settings.
"
      end

      attribute 13243831 "KEY_QC_SUPPORTED_TOUCH_AF_AEC"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"touch-af-aec-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13243959 "KEY_QC_TOUCH_INDEX_AEC"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"touch-index-aec\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Touch Index for AEC.
"
      end

      attribute 13244087 "KEY_QC_TOUCH_INDEX_AF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"touch-index-af\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Touch Index for AF.
"
      end

      attribute 13244215 "KEY_QC_SCENE_DETECT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"scene-detect\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Current auto scene detection mode.
 Example value: \"off\" or \"on\" constants. Read/write.
"
      end

      attribute 13244343 "KEY_QC_SUPPORTED_SCENE_DETECT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"scene-detect-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Supported auto scene detection settings.
 Example value: \"off,on\". Read only.
"
      end

      attribute 13244471 "KEY_QC_SELECTABLE_ZONE_AF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"selectable-zone-af\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13244599 "KEY_QC_ISO_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"iso\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13244727 "KEY_QC_CONTINUOUS_ISO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"continuous-iso\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13244855 "KEY_QC_MIN_ISO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-iso\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13244983 "KEY_QC_MAX_ISO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-iso\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245111 "KEY_QC_SUPPORTED_ISO_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"iso-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245239 "KEY_QC_EXPOSURE_TIME"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"exposure-time\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245367 "KEY_QC_MIN_EXPOSURE_TIME"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-exposure-time\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245495 "KEY_QC_MAX_EXPOSURE_TIME"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-exposure-time\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245623 "KEY_QC_LENSSHADE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"lensshade\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245751 "KEY_QC_SUPPORTED_LENSSHADE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"lensshade-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13245879 "KEY_QC_AUTO_EXPOSURE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto-exposure\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246007 "KEY_QC_SUPPORTED_AUTO_EXPOSURE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto-exposure-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246135 "KEY_QC_GPS_LATITUDE_REF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"gps-latitude-ref\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246263 "KEY_QC_GPS_LONGITUDE_REF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"gps-longitude-ref\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246391 "KEY_QC_GPS_ALTITUDE_REF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"gps-altitude-ref\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246519 "KEY_QC_GPS_STATUS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"gps-status\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246647 "KEY_QC_MEMORY_COLOR_ENHANCEMENT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"mce\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246775 "KEY_QC_SUPPORTED_MEM_COLOR_ENHANCE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"mce-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13246903 "KEY_QC_DIS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"dis\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247031 "KEY_QC_OIS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ois\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247159 "KEY_QC_SUPPORTED_DIS_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"dis-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247287 "KEY_QC_SUPPORTED_OIS_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ois-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247415 "KEY_QC_ZSL"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"zsl\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247543 "KEY_QC_SUPPORTED_ZSL_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"zsl-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247671 "KEY_QC_ZSL_BURST_INTERVAL"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"capture-burst-interval\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247799 "KEY_QC_ZSL_BURST_LOOKBACK"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"capture-burst-retroactive\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13247927 "KEY_QC_ZSL_QUEUE_DEPTH"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"capture-burst-queue-depth\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248055 "KEY_QC_CAMERA_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"camera-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248183 "KEY_QC_ORIENTATION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"orientation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248311 "KEY_QC_VIDEO_HIGH_FRAME_RATE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-hfr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248439 "KEY_QC_VIDEO_HIGH_SPEED_RECORDING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-hsr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248567 "KEY_QC_SUPPORTED_VIDEO_HIGH_FRAME_RATE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-hfr-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248695 "KEY_QC_HIGH_DYNAMIC_RANGE_IMAGING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248823 "KEY_QC_SUPPORTED_HDR_IMAGING_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13248951 "KEY_QC_AE_BRACKET_HDR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ae-bracket-hdr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249079 "KEY_QC_SUPPORTED_AE_BRACKET_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ae-bracket-hdr-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249207 "KEY_QC_CAPTURE_BURST_EXPOSURE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"capture-burst-exposures\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249335 "KEY_QC_NUM_SNAPSHOT_PER_SHUTTER"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"num-snaps-per-shutter\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249463 "KEY_QC_NUM_RETRO_BURST_PER_SHUTTER"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"num-retro-burst-per-shutter\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249591 "KEY_QC_SNAPSHOT_BURST_LED_ON_PERIOD"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"zsl-burst-led-on-period\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249719 "KEY_QC_SNAPSHOT_BURST_NUM"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"snapshot-burst-num\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249847 "KEY_QC_NO_DISPLAY_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"no-display-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13249975 "KEY_QC_RAW_PICUTRE_SIZE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"raw-size\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250103 "KEY_QC_TINTLESS_ENABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"tintless\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250231 "KEY_QC_SCENE_SELECTION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"scene-selection\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250359 "KEY_QC_CDS_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"cds-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250487 "KEY_QC_VIDEO_CDS_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-cds-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250615 "KEY_QC_SUPPORTED_CDS_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"cds-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250743 "KEY_QC_SUPPORTED_VIDEO_CDS_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-cds-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250871 "KEY_QC_TNR_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"tnr-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13250999 "KEY_QC_VIDEO_TNR_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-tnr-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251127 "KEY_QC_SUPPORTED_TNR_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"tnr-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251255 "KEY_QC_SUPPORTED_VIDEO_TNR_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-tnr-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251383 "KEY_INTERNAL_PERVIEW_RESTART"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"internal-restart\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251511 "KEY_QC_WB_MANUAL_CCT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"wb-manual-cct\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251639 "KEY_QC_MIN_WB_CCT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-wb-cct\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251767 "KEY_QC_MAX_WB_CCT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-wb-cct\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13251895 "KEY_QC_MANUAL_WB_GAINS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-wb-gains\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252023 "KEY_QC_MIN_WB_GAIN"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-wb-gain\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252151 "KEY_QC_MAX_WB_GAIN"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-wb-gain\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252279 "WHITE_BALANCE_MANUAL"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252407 "FOCUS_MODE_MANUAL_POSITION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252535 "KEY_QC_MANUAL_FOCUS_POSITION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-focus-position\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252663 "KEY_QC_MANUAL_FOCUS_POS_TYPE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-focus-pos-type\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252791 "KEY_QC_MIN_FOCUS_POS_INDEX"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-focus-pos-index\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13252919 "KEY_QC_MAX_FOCUS_POS_INDEX"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-focus-pos-index\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253047 "KEY_QC_MIN_FOCUS_POS_DAC"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-focus-pos-dac\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253175 "KEY_QC_MAX_FOCUS_POS_DAC"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-focus-pos-dac\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253303 "KEY_QC_MIN_FOCUS_POS_RATIO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-focus-pos-ratio\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253431 "KEY_QC_MAX_FOCUS_POS_RATIO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-focus-pos-ratio\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253559 "KEY_QC_MIN_FOCUS_POS_DIOPTER"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-focus-pos-diopter\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253687 "KEY_QC_MAX_FOCUS_POS_DIOPTER"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-focus-pos-diopter\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253815 "KEY_QC_FOCUS_POSITION_SCALE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"cur-focus-scale\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13253943 "KEY_QC_FOCUS_POSITION_DIOPTER"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"cur-focus-diopter\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254071 "KEY_QC_SUPPORTED_MANUAL_FOCUS_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-focus-modes\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254199 "KEY_QC_SUPPORTED_MANUAL_EXPOSURE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-exposure-modes\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254327 "KEY_QC_SUPPORTED_MANUAL_WB_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-wb-modes\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254455 "KEY_QC_FOCUS_SCALE_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"scale-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254583 "KEY_QC_FOCUS_DIOPTER_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"diopter-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254711 "KEY_QC_ISO_PRIORITY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"iso-priority\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254839 "KEY_QC_EXP_TIME_PRIORITY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"exp-time-priority\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13254967 "KEY_QC_USER_SETTING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"user-setting\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255095 "KEY_QC_WB_CCT_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"color-temperature\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255223 "KEY_QC_WB_GAIN_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"rbgb-gains\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255351 "KEY_QC_MANUAL_WB_TYPE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-wb-type\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255479 "KEY_QC_MANUAL_WB_VALUE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual-wb-value\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255607 "KEY_QC_CURRENT_EXPOSURE_TIME"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"cur-exposure-time\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255735 "KEY_QC_CURRENT_ISO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"cur-iso\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13255863 "KEY_QC_DENOISE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"denoise\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DENOISE
"
      end

      attribute 13255991 "KEY_QC_SUPPORTED_DENOISE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"denoise-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13256119 "KEY_QC_FOCUS_ALGO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"selectable-zone-af\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Selectable zone AF.
"
      end

      attribute 13256247 "KEY_QC_SUPPORTED_FOCUS_ALGOS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"selectable-zone-af-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13256375 "KEY_QC_FACE_DETECTION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"face-detection\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Face Detection
"
      end

      attribute 13256503 "KEY_QC_SUPPORTED_FACE_DETECTION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"face-detection-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13256631 "KEY_QC_FACE_RECOGNITION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"face-recognition\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Face Recognition
"
      end

      attribute 13256759 "KEY_QC_SUPPORTED_FACE_RECOGNITION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"face-recognition-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13256887 "KEY_QC_SUPPORTED_CAMERA_FEATURES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"qc-camera-features\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " supported camera features to be queried by Snapdragon SDK
Read only
"
      end

      attribute 13257015 "KEY_QC_MAX_NUM_REQUESTED_FACES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"qc-max-num-requested-faces\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates number of faces requested by the application.
This value will be rejected if the requested faces
greater than supported by hardware.
Write only.
"
      end

      attribute 13257143 "KEY_QC_PREVIEW_FLIP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"preview-flip\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "preview flip
"
      end

      attribute 13257271 "KEY_QC_VIDEO_FLIP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-flip\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "video flip
"
      end

      attribute 13257399 "KEY_QC_SNAPSHOT_PICTURE_FLIP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"snapshot-picture-flip\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "snapshot picture flip
"
      end

      attribute 13257527 "KEY_QC_SUPPORTED_FLIP_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"flip-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13257655 "KEY_QC_SNAPSHOT_FD_DATA"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"snapshot-fd-data-enable\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Face Detection, Facial processing requirement
"
      end

      attribute 13257783 "KEY_QC_AUTO_HDR_ENABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto-hdr-enable\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Auto HDR enable
"
      end

      attribute 13257911 "KEY_QC_VIDEO_ROTATION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-rotation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " video rotation
"
      end

      attribute 13258039 "KEY_QC_SUPPORTED_VIDEO_ROTATION_VALUES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-rotation-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13258167 "KEY_QC_REDEYE_REDUCTION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"redeye-reduction\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Redeye Reduction
"
      end

      attribute 13258295 "KEY_QC_SUPPORTED_REDEYE_REDUCTION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"redeye-reduction-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13258423 "EFFECT_EMBOSS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"emboss\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13258551 "EFFECT_SKETCH"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"sketch\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13258679 "EFFECT_NEON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"neon\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13258807 "KEY_QC_AF_BRACKET"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"af-bracket\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "AF Bracketing
"
      end

      attribute 13258935 "KEY_QC_SUPPORTED_AF_BRACKET_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"af-bracket-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13259063 "KEY_QC_RE_FOCUS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"re-focus\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Refocus
"
      end

      attribute 13259191 "KEY_QC_SUPPORTED_RE_FOCUS_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"re-focus-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13259319 "KEY_QC_CHROMA_FLASH"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"chroma-flash\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Chroma Flash
"
      end

      attribute 13259447 "KEY_QC_SUPPORTED_CHROMA_FLASH_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"chroma-flash-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13259575 "KEY_QC_OPTI_ZOOM"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"opti-zoom\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Opti Zoom
"
      end

      attribute 13259703 "KEY_QC_SUPPORTED_OPTI_ZOOM_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"opti-zoom-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13259831 "KEY_QC_AUTO_HDR_SUPPORTED"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto-hdr-supported\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Auto HDR supported
"
      end

      attribute 13259959 "KEY_QC_HDR_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " HDR modes
"
      end

      attribute 13260087 "KEY_QC_SUPPORTED_KEY_QC_HDR_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13260215 "KEY_QC_TRUE_PORTRAIT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"true-portrait\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True Portrait
"
      end

      attribute 13260343 "KEY_QC_SUPPORTED_TRUE_PORTRAIT_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"true-portrait-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13260471 "KEY_QC_SEE_MORE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"see-more\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "See more
"
      end

      attribute 13260599 "KEY_QC_SUPPORTED_SEE_MORE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"see-more-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13260727 "KEY_QC_STILL_MORE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"still-more\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Still more
"
      end

      attribute 13260855 "KEY_QC_SUPPORTED_STILL_MORE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"still-more-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13260983 "KEY_QC_LONGSHOT_SUPPORTED"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"longshot-supported\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Longshot
"
      end

      attribute 13261111 "KEY_QC_ZSL_HDR_SUPPORTED"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"zsl-hdr-supported\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ZSL+HDR
"
      end

      attribute 13261239 "TOUCH_AF_AEC_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"touch-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Touch AF/AEC
"
      end

      attribute 13261367 "TOUCH_AF_AEC_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"touch-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13261495 "SCENE_MODE_ASD"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"asd\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Scene mode
"
      end

      attribute 13261623 "SCENE_MODE_BACKLIGHT"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"backlight\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13261751 "SCENE_MODE_FLOWERS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"flowers\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13261879 "SCENE_MODE_AR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"AR\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13262007 "SCENE_MODE_HDR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13262135 "PIXEL_FORMAT_YUV420SP_ADRENO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"yuv420sp-adreno\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ADRENO"
      end

      attribute 13262263 "PIXEL_FORMAT_YV12"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"yuv420p\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NV12"
      end

      attribute 13262391 "PIXEL_FORMAT_NV12"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"nv12\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "NV12"
      end

      attribute 13262519 "QC_PIXEL_FORMAT_NV12_VENUS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"nv12-venus\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "NV12 VENUS"
      end

      attribute 13262647 "QC_PIXEL_FORMAT_YUV_RAW_8BIT_YUYV"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"yuv-raw8-yuyv\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for raw picture format
"
      end

      attribute 13262775 "QC_PIXEL_FORMAT_YUV_RAW_8BIT_YVYU"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"yuv-raw8-yvyu\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13262903 "QC_PIXEL_FORMAT_YUV_RAW_8BIT_UYVY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"yuv-raw8-uyvy\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263031 "QC_PIXEL_FORMAT_YUV_RAW_8BIT_VYUY"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"yuv-raw8-vyuy\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263159 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-8gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263287 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-8grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263415 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-8rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263543 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-8bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263671 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-10gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263799 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-10grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13263927 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-10rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264055 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-10bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264183 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-12gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264311 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-12grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264439 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-12rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264567 "QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-qcom-12bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264695 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-8gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264823 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-8grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13264951 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-8rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265079 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-8bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265207 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-10gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265335 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-10grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265463 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-10rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265591 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-10bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265719 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-12gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265847 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-12grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13265975 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-12rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266103 "QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-mipi-12bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266231 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-8gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266359 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-8grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266487 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-8rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266615 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-8bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266743 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-10gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266871 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-10grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13266999 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-10rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267127 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-10bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267255 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-12gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267383 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-12grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267511 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-12rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267639 "QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-qcom-12bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267767 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-8gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13267895 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-8grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268023 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-8rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268151 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-8bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268279 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-10gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268407 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-10grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268535 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-10rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268663 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-10bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268791 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-12gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13268919 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-12grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269047 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-12rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269175 "QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-mipi-12bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269303 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain8-8gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269431 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain8-8grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269559 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain8-8rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269687 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain8-8bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269815 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-8gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13269943 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-8grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270071 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-8rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270199 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-8bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270327 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-10gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270455 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-10grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270583 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-10rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270711 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-10bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270839 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12GBRG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-12gbrg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13270967 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12GRBG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-12grbg\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271095 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12RGGB"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-12rggb\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271223 "QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12BGGR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"bayer-ideal-plain16-12bggr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271351 "ISO_AUTO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ISO values
"
      end

      attribute 13271479 "ISO_HJR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO_HJR\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271607 "ISO_100"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO100\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271735 "ISO_200"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO200\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271863 "ISO_400"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO400\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13271991 "ISO_800"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO800\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13272119 "ISO_1600"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO1600\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13272247 "ISO_3200"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"ISO3200\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13272375 "ISO_MANUAL"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"manual\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13272503 "AUTO_EXPOSURE_FRAME_AVG"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"frame-average\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for auto exposure settings.
"
      end

      attribute 13272631 "AUTO_EXPOSURE_CENTER_WEIGHTED"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"center-weighted\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13272759 "AUTO_EXPOSURE_SPOT_METERING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"spot-metering\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13272887 "AUTO_EXPOSURE_SMART_METERING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"smart-metering\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273015 "AUTO_EXPOSURE_USER_METERING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"user-metering\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273143 "AUTO_EXPOSURE_SPOT_METERING_ADV"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"spot-metering-adv\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273271 "AUTO_EXPOSURE_CENTER_WEIGHTED_ADV"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"center-weighted-adv\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273399 "KEY_QC_SHARPNESS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"sharpness\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273527 "KEY_QC_MIN_SHARPNESS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-sharpness\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273655 "KEY_QC_MAX_SHARPNESS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-sharpness\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273783 "KEY_QC_SHARPNESS_STEP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"sharpness-step\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13273911 "KEY_QC_CONTRAST"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"contrast\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274039 "KEY_QC_MIN_CONTRAST"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-contrast\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274167 "KEY_QC_MAX_CONTRAST"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-contrast\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274295 "KEY_QC_CONTRAST_STEP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"contrast-step\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274423 "KEY_QC_SATURATION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"saturation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274551 "KEY_QC_MIN_SATURATION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-saturation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274679 "KEY_QC_MAX_SATURATION"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-saturation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274807 "KEY_QC_SATURATION_STEP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"saturation-step\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13274935 "KEY_QC_BRIGHTNESS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"luma-adaptation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275063 "KEY_QC_MIN_BRIGHTNESS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-brightness\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275191 "KEY_QC_MAX_BRIGHTNESS"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-brightness\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275319 "KEY_QC_BRIGHTNESS_STEP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"brightness-step\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275447 "KEY_QC_SCE_FACTOR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"skinToneEnhancement\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275575 "KEY_QC_MIN_SCE_FACTOR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"min-sce-factor\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275703 "KEY_QC_MAX_SCE_FACTOR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"max-sce-factor\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275831 "KEY_QC_SCE_FACTOR_STEP"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"sce-factor-step\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13275959 "KEY_QC_HISTOGRAM"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"histogram\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276087 "KEY_QC_SUPPORTED_HISTOGRAM_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"histogram-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276215 "KEY_QC_SUPPORTED_HDR_NEED_1X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-need-1x-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276343 "KEY_QC_HDR_NEED_1X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-need-1x\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276471 "KEY_QC_VIDEO_HDR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-hdr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276599 "KEY_QC_VT_ENABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"avtimer\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276727 "KEY_QC_SUPPORTED_VIDEO_HDR_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"video-hdr-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276855 "KEY_QC_SENSOR_HDR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"sensor-hdr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13276983 "KEY_QC_SUPPORTED_SENSOR_HDR_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"sensor-hdr-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13277111 "KEY_QC_RDI_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"rdi-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13277239 "KEY_QC_SUPPORTED_RDI_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"rdi-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13277367 "KEY_QC_SECURE_MODE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"secure-mode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13277495 "KEY_QC_SUPPORTED_SECURE_MODES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"secure-mode-values\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13277623 "SKIN_TONE_ENHANCEMENT_ENABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for SKIN TONE ENHANCEMENT
"
      end

      attribute 13277751 "SKIN_TONE_ENHANCEMENT_DISABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13277879 "DENOISE_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"denoise-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Denoise
"
      end

      attribute 13278007 "DENOISE_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"denoise-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13278135 "FOCUS_ALGO_AUTO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for auto exposure settings.
"
      end

      attribute 13278263 "FOCUS_ALGO_SPOT_METERING"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"spot-metering\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13278391 "FOCUS_ALGO_CENTER_WEIGHTED"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"center-weighted\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13278519 "FOCUS_ALGO_FRAME_AVERAGE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"frame-average\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13278647 "AE_BRACKET_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"Off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for AE Bracketing settings.
"
      end

      attribute 13278775 "AE_BRACKET"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"AE-Bracket\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13278903 "AF_BRACKET_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"af-bracket-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for AF Bracketing settings.
"
      end

      attribute 13279031 "AF_BRACKET_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"af-bracket-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13279159 "RE_FOCUS_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"re-focus-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Refocus settings.
"
      end

      attribute 13279287 "RE_FOCUS_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"re-focus-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13279415 "CHROMA_FLASH_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"chroma-flash-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Chroma Flash settings.
"
      end

      attribute 13279543 "CHROMA_FLASH_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"chroma-flash-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13279671 "OPTI_ZOOM_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"opti-zoom-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Opti Zoom settings.
"
      end

      attribute 13279799 "OPTI_ZOOM_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"opti-zoom-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13279927 "STILL_MORE_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"still-more-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Still More settings.
"
      end

      attribute 13280055 "STILL_MORE_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"still-more-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13280183 "HDR_MODE_SENSOR"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-mode-sensor\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for HDR mode settings.
"
      end

      attribute 13280311 "HDR_MODE_MULTI_FRAME"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"hdr-mode-multiframe\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13280439 "TRUE_PORTRAIT_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"true-portrait-off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for True Portrait settings.
"
      end

      attribute 13280567 "TRUE_PORTRAIT_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"true-portrait-on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13280695 "VIDEO_HFR_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for HFR settings.
"
      end

      attribute 13280823 "VIDEO_HFR_2X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"60\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13280951 "VIDEO_HFR_3X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"90\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281079 "VIDEO_HFR_4X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"120\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281207 "VIDEO_HFR_5X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"150\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281335 "VIDEO_HFR_6X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"180\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281463 "VIDEO_HFR_7X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"210\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281591 "VIDEO_HFR_8X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"240\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281719 "VIDEO_HFR_9X"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"480\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13281847 "VALUE_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for feature on/off settings.
"
      end

      attribute 13281975 "VALUE_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13282103 "VALUE_ENABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"enable\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for feature enable/disable settings.
"
      end

      attribute 13282231 "VALUE_DISABLE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"disable\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13282359 "VALUE_FALSE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"false\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for feature true/false settings.
"
      end

      attribute 13282487 "VALUE_TRUE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"true\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13282615 "FLIP_MODE_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Values for flip settings
"
      end

      attribute 13282743 "FLIP_MODE_V"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"flip-v\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13282871 "FLIP_MODE_H"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"flip-h\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13282999 "FLIP_MODE_VH"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"flip-vh\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13283127 "CDS_MODE_OFF"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"off\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Values for CDS Mode
"
      end

      attribute 13283255 "CDS_MODE_ON"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"on\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13283383 "CDS_MODE_AUTO"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"auto\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13283511 "KEY_SELECTED_AUTO_SCENE"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"selected-auto-scene\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13283639 "VIDEO_ROTATION_0"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"0\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values for Video rotation
"
      end

      attribute 13283767 "VIDEO_ROTATION_90"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"90\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13283895 "VIDEO_ROTATION_180"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"180\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13284023 "VIDEO_ROTATION_270"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= \"270\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3653431 "anonymous26"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13284151 "CAMERA_ORIENTATION_UNKNOWN"
	  public type class_ref 3653431 // anonymous26
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13284279 "CAMERA_ORIENTATION_PORTRAIT"
	  public type class_ref 3653431 // anonymous26
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13284407 "CAMERA_ORIENTATION_LANDSCAPE"
	  public type class_ref 3653431 // anonymous26
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3653559 "QCameraMap"
	visibility package stereotype "struct"
	nformals 1
	formal name "valueType" type "typename" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13284535 "desc"
	  const_attribute public explicit_type "char"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * const ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13284663 "val"
	  public explicit_type "valueType"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 7052087 // <dependency>
	relation 7052087 -_->
	  stereotype "friend"
	  a public
	    cpp default "${type}"
	    classrelation_ref 7052087 // <dependency>
	  b parent class_ref 3653175 // QCameraReprocScaleParam
      end

      classrelation 7052215 // m_reprocScaleParam (<directional composition>)
	relation 7052215 *-->
	  a role_name "m_reprocScaleParam" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052215 // m_reprocScaleParam (<directional composition>)
	  b parent class_ref 3653175 // QCameraReprocScaleParam
      end

      operation 44169655 "getSupportedHfrSizes"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "sizes" explicit_type "Vector<Size>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSupportedHfrSizes
//
//DESCRIPTION: return supported HFR sizes
//
//PARAMETERS :
//  @sizes  : [output] reference to a vector storing supported HFR sizes
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getSupportedHfrSizes
//
//DESCRIPTION: return supported HFR sizes
//
//PARAMETERS :
//  @sizes  : [output] reference to a vector storing supported HFR sizes
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getSupportedHfrSizes
//
//DESCRIPTION: return supported HFR sizes
//
//PARAMETERS :
//  @sizes  : [output] reference to a vector storing supported HFR sizes
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44169783 "setPreviewFrameRateMode"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewFrameRateMode
//
//DESCRIPTION: set preview frame rate mode
//
//PARAMETERS :
//  @mode    : preview frame rate mode
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFrameRateMode
//
//DESCRIPTION: set preview frame rate mode
//
//PARAMETERS :
//  @mode    : preview frame rate mode
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFrameRateMode
//
//DESCRIPTION: set preview frame rate mode
//
//PARAMETERS :
//  @mode    : preview frame rate mode
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44169911 "getPreviewFrameRateMode"
	preserve_cpp_body_indent const public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPreviewFrameRateMode
//
//DESCRIPTION: get preview frame rate mode
//
//PARAMETERS : none
//
//RETURN     : preview frame rate mode string
//==========================================================================

//===========================================================================
//FUNCTION   : getPreviewFrameRateMode
//
//DESCRIPTION: get preview frame rate mode
//
//PARAMETERS : none
//
//RETURN     : preview frame rate mode string
//==========================================================================

//===========================================================================
//FUNCTION   : getPreviewFrameRateMode
//
//DESCRIPTION: get preview frame rate mode
//
//PARAMETERS : none
//
//RETURN     : preview frame rate mode string
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170039 "setTouchIndexAec"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTouchIndexAec
//
//DESCRIPTION: set touch index AEC
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setTouchIndexAec
//
//DESCRIPTION: set touch index AEC
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setTouchIndexAec
//
//DESCRIPTION: set touch index AEC
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170167 "getTouchIndexAec"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "x" explicit_type "int"
	  param inout name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getTouchIndexAec
//
//DESCRIPTION: get touch index AEC
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getTouchIndexAec
//
//DESCRIPTION: get touch index AEC
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getTouchIndexAec
//
//DESCRIPTION: get touch index AEC
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170295 "setTouchIndexAf"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTouchIndexAf
//
//DESCRIPTION: set touch index AF
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setTouchIndexAf
//
//DESCRIPTION: set touch index AF
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setTouchIndexAf
//
//DESCRIPTION: set touch index AF
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170423 "getTouchIndexAf"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "x" explicit_type "int"
	  param inout name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getTouchIndexAf
//
//DESCRIPTION: get touch index AF
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getTouchIndexAf
//
//DESCRIPTION: get touch index AF
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getTouchIndexAf
//
//DESCRIPTION: get touch index AF
//
//PARAMETERS :
//  @x,y     :
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170551 "init"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param inout name "capabilities" type class_ref 3644855 // cam_capability_t
	  param inout name "mmOps" type class_ref 3644727 // mm_camera_vtbl_t
	  param inout name "adjustFPS" type class_ref 3644471 // QCameraAdjustFPS
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialize parameter obj
//
//PARAMETERS :
//  @capabilities  : ptr to camera capabilities
//  @mmops         : ptr to memory ops table for mapping/unmapping
//  @adjustFPS     : object reference for additional (possibly thermal)
//                   framerate adjustment
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialize parameter obj
//
//PARAMETERS :
//  @capabilities  : ptr to camera capabilities
//  @mmops         : ptr to memory ops table for mapping/unmapping
//  @adjustFPS     : object reference for additional (possibly thermal)
//                   framerate adjustment
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170679 "deinit"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: deinitialize
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: deinitialize
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: deinitialize
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170807 "assign"
	public explicit_return_type "int32_t"
	nparams 1
	  param inout name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44170935 "initDefaultParameters"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initDefaultParameters
//
//DESCRIPTION: initialize default parameters for the first time
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initDefaultParameters
//
//DESCRIPTION: initialize default parameters for the first time
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initDefaultParameters
//
//DESCRIPTION: initialize default parameters for the first time
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171063 "updateParameters"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "params" type class_ref 3649591 // QCameraParameters
	  param inout name "needRestart" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateParameters
//
//DESCRIPTION: update parameters from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//  @needRestart : [output] if preview need restart upon setting changes
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateParameters
//
//DESCRIPTION: update parameters from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//  @needRestart : [output] if preview need restart upon setting changes
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateParameters
//
//DESCRIPTION: update parameters from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//  @needRestart : [output] if preview need restart upon setting changes
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171191 "commitParameters"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitParameters
//
//DESCRIPTION: commit parameter changes to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitParameters
//
//DESCRIPTION: commit parameter changes to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitParameters
//
//DESCRIPTION: commit parameter changes to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171319 "getPreviewHalPixelFormat"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPreviewHalPixelFormat
//
//DESCRIPTION: get preview HAL pixel format
//
//PARAMETERS : none
//
//RETURN     : HAL pixel format
//==========================================================================

//===========================================================================
//FUNCTION   : getPreviewHalPixelFormat
//
//DESCRIPTION: get preview HAL pixel format
//
//PARAMETERS : none
//
//RETURN     : HAL pixel format
//==========================================================================

//===========================================================================
//FUNCTION   : getPreviewHalPixelFormat
//
//DESCRIPTION: get preview HAL pixel format
//
//PARAMETERS : none
//
//RETURN     : HAL pixel format
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171447 "getStreamRotation"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param inout name "featureConfig" type class_ref 3648567 // cam_pp_feature_config_t
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamFormat
//
//DESCRIPTION: get stream format by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @format     : [output] stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamFormat
//
//DESCRIPTION: get stream format by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @format     : [output] stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamFormat
//
//DESCRIPTION: get stream format by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @format     : [output] stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171575 "getStreamFormat"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param inout name "format" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamFormat
//
//DESCRIPTION: get stream format by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @format     : [output] stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamFormat
//
//DESCRIPTION: get stream format by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @format     : [output] stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamFormat
//
//DESCRIPTION: get stream format by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @format     : [output] stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171703 "getStreamDimension"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamDimension
//
//DESCRIPTION: get stream dimension by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @dim        : [output] stream dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamDimension
//
//DESCRIPTION: get stream dimension by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @dim        : [output] stream dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamDimension
//
//DESCRIPTION: get stream dimension by its type
//
//PARAMETERS :
//  @streamType : [input] stream type
//  @dim        : [output] stream dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171831 "getThumbnailSize"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param inout name "width" explicit_type "int"
	  param inout name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getthumbnailSize
//
//DESCRIPTION: get thumbnail size
//
//PARAMETERS :
//  @width, height : [output] thumbnail width and height
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getthumbnailSize
//
//DESCRIPTION: get thumbnail size
//
//PARAMETERS :
//  @width, height : [output] thumbnail width and height
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : getthumbnailSize
//
//DESCRIPTION: get thumbnail size
//
//PARAMETERS :
//  @width, height : [output] thumbnail width and height
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44171959 "getZSLBurstInterval"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getZSLBurstInterval
//
//DESCRIPTION: get ZSL burst interval setting
//
//PARAMETERS : none
//
//RETURN     : ZSL burst interval value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLBurstInterval
//
//DESCRIPTION: get ZSL burst interval setting
//
//PARAMETERS : none
//
//RETURN     : ZSL burst interval value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLBurstInterval
//
//DESCRIPTION: get ZSL burst interval setting
//
//PARAMETERS : none
//
//RETURN     : ZSL burst interval value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172087 "getZSLQueueDepth"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getZSLQueueDepth
//
//DESCRIPTION: get ZSL queue depth
//
//PARAMETERS : none
//
//RETURN     : ZSL queue depth value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLQueueDepth
//
//DESCRIPTION: get ZSL queue depth
//
//PARAMETERS : none
//
//RETURN     : ZSL queue depth value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLQueueDepth
//
//DESCRIPTION: get ZSL queue depth
//
//PARAMETERS : none
//
//RETURN     : ZSL queue depth value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172215 "getZSLBackLookCount"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getZSLBackLookCount
//
//DESCRIPTION: get ZSL backlook count setting
//
//PARAMETERS : none
//
//RETURN     : ZSL backlook count value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLBackLookCount
//
//DESCRIPTION: get ZSL backlook count setting
//
//PARAMETERS : none
//
//RETURN     : ZSL backlook count value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLBackLookCount
//
//DESCRIPTION: get ZSL backlook count setting
//
//PARAMETERS : none
//
//RETURN     : ZSL backlook count value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172343 "getMaxUnmatchedFramesInQueue"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getZSLMaxUnmatchedFrames
//
//DESCRIPTION: get allowed ZSL max unmatched frames number
//
//PARAMETERS : none
//
//RETURN     : ZSL backlook count value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLMaxUnmatchedFrames
//
//DESCRIPTION: get allowed ZSL max unmatched frames number
//
//PARAMETERS : none
//
//RETURN     : ZSL backlook count value
//==========================================================================

//===========================================================================
//FUNCTION   : getZSLMaxUnmatchedFrames
//
//DESCRIPTION: get allowed ZSL max unmatched frames number
//
//PARAMETERS : none
//
//RETURN     : ZSL backlook count value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172471 "isZSLMode"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bZslMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172599 "isRdiMode"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bRdiMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172727 "isSecureMode"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bSecureMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172855 "isNoDisplayMode"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bNoDisplayMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44172983 "isWNREnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bWNROn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173111 "isTNRPreviewEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bTNRPreviewOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173239 "isTNRVideoEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bTNRVideoOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173367 "isHfrMode"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bHfrMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173495 "getHfrFps"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "pFpsRange" type class_ref 3645495 // cam_fps_range_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { pFpsRange = m_hfrFpsRange;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173623 "getNumOfSnapshots"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfSnapshots
//
//DESCRIPTION: get number of snapshot per shutter
//
//PARAMETERS : none
//
//RETURN     : number of snapshot per shutter
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfSnapshots
//
//DESCRIPTION: get number of snapshot per shutter
//
//PARAMETERS : none
//
//RETURN     : number of snapshot per shutter
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfSnapshots
//
//DESCRIPTION: get number of snapshot per shutter
//
//PARAMETERS : none
//
//RETURN     : number of snapshot per shutter
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173751 "getNumOfRetroSnapshots"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfRetroSnapshots
//
//DESCRIPTION: get number of retro active snapshots per shutter
//
//PARAMETERS : none
//
//RETURN     : number of retro active snapshots per shutter
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfRetroSnapshots
//
//DESCRIPTION: get number of retro active snapshots per shutter
//
//PARAMETERS : none
//
//RETURN     : number of retro active snapshots per shutter
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfRetroSnapshots
//
//DESCRIPTION: get number of retro active snapshots per shutter
//
//PARAMETERS : none
//
//RETURN     : number of retro active snapshots per shutter
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44173879 "getNumOfExtraHDRInBufsIfNeeded"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfExtraHDRInBufsIfNeeded
//
//DESCRIPTION: get number of extra input buffers needed by HDR
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by HDR; 0 if not HDR enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraHDRInBufsIfNeeded
//
//DESCRIPTION: get number of extra input buffers needed by HDR
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by HDR; 0 if not HDR enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraHDRInBufsIfNeeded
//
//DESCRIPTION: get number of extra input buffers needed by HDR
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by HDR; 0 if not HDR enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44174007 "getNumOfExtraHDROutBufsIfNeeded"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfExtraHDROutBufsIfNeeded
//
//DESCRIPTION: get number of extra output buffers needed by HDR
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by HDR; 0 if not HDR enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraHDROutBufsIfNeeded
//
//DESCRIPTION: get number of extra output buffers needed by HDR
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by HDR; 0 if not HDR enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraHDROutBufsIfNeeded
//
//DESCRIPTION: get number of extra output buffers needed by HDR
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by HDR; 0 if not HDR enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44174135 "getBurstNum"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBurstNum
//
//DESCRIPTION: get burst number of snapshot
//
//PARAMETERS : none
//
//RETURN     : number of burst
//==========================================================================

//===========================================================================
//FUNCTION   : getBurstNum
//
//DESCRIPTION: get burst number of snapshot
//
//PARAMETERS : none
//
//RETURN     : number of burst
//==========================================================================

//===========================================================================
//FUNCTION   : getBurstNum
//
//DESCRIPTION: get burst number of snapshot
//
//PARAMETERS : none
//
//RETURN     : number of burst
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44174263 "getBurstLEDOnPeriod"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBurstLEDOnPeriod
//
//DESCRIPTION: get burst LED on period
//
//PARAMETERS : none
//
//RETURN     : burst LED on period
//==========================================================================

//===========================================================================
//FUNCTION   : getBurstLEDOnPeriod
//
//DESCRIPTION: get burst LED on period
//
//PARAMETERS : none
//
//RETURN     : burst LED on period
//==========================================================================

//===========================================================================
//FUNCTION   : getBurstLEDOnPeriod
//
//DESCRIPTION: get burst LED on period
//
//PARAMETERS : none
//
//RETURN     : burst LED on period
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44174391 "getRetroActiveBurstNum"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44174519 "getRecordingHintValue"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bRecordingHint;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44174647 "setRecordingHintValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRecordingHintValue
//
//DESCRIPTION: set recording hint
//
//PARAMETERS :
//  @value   : video hint value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRecordingHintValue
//
//DESCRIPTION: set recording hint
//
//PARAMETERS :
//  @value   : video hint value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRecordingHintValue
//
//DESCRIPTION: set recording hint
//
//PARAMETERS :
//  @value   : video hint value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return local copy of video hint"
      end

      operation 44174775 "getJpegQuality"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegQuality
//
//DESCRIPTION: get jpeg encoding quality
//
//PARAMETERS : none
//
//RETURN     : jpeg encoding quality
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegQuality
//
//DESCRIPTION: get jpeg encoding quality
//
//PARAMETERS : none
//
//RETURN     : jpeg encoding quality
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegQuality
//
//DESCRIPTION: get jpeg encoding quality
//
//PARAMETERS : none
//
//RETURN     : jpeg encoding quality
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " set local copy of video hint and send to server
 no change in parameters value"
      end

      operation 44174903 "getRotation"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getRotation
//
//DESCRIPTION: get application configured rotation
//
//PARAMETERS : none
//
//RETURN     : rotation value
//==========================================================================

//===========================================================================
//FUNCTION   : getRotation
//
//DESCRIPTION: get application configured rotation
//
//PARAMETERS : none
//
//RETURN     : rotation value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175031 "getDeviceRotation"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getDeviceRotation
//
//DESCRIPTION: get device rotation value
//
//PARAMETERS : none
//
//RETURN     : device rotation value
//==========================================================================

//===========================================================================
//FUNCTION   : getDeviceRotation
//
//DESCRIPTION: get device rotation value
//
//PARAMETERS : none
//
//RETURN     : device rotation value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175159 "getJpegExifRotation"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegExifRotation
//
//DESCRIPTION: get exif rotation value
//
//PARAMETERS : none
//
//RETURN     : rotation value
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegExifRotation
//
//DESCRIPTION: get exif rotation value
//
//PARAMETERS : none
//
//RETURN     : rotation value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175287 "useJpegExifRotation"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : useJpegExifRotation
//
//DESCRIPTION: Check if jpeg exif rotation need to be used
//
//PARAMETERS : none
//
//RETURN     : true if jpeg exif rotation need to be used
//==========================================================================

//===========================================================================
//FUNCTION   : useJpegExifRotation
//
//DESCRIPTION: Check if jpeg exif rotation need to be used
//
//PARAMETERS : none
//
//RETURN     : true if jpeg exif rotation need to be used
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175415 "getEffectValue"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getEffectValue
//
//DESCRIPTION: get effect value
//
//PARAMETERS : none
//
//RETURN     : effect value
//==========================================================================

//===========================================================================
//FUNCTION   : getEffectValue
//
//DESCRIPTION: get effect value
//
//PARAMETERS : none
//
//RETURN     : effect value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175543 "getExifDateTime"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "dateTime" explicit_type "String8"
	  param inout name "subsecTime" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifDateTime
//
//DESCRIPTION: query exif date time
//
//PARAMETERS :
//  @dateTime    : String to store exif date time.
//                 Should be leaved unchanged in case of error.
//  @subsecTime  : String to store exif time nanoseconds.
//                 Should be leaved unchanged in case of error.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifDateTime
//
//DESCRIPTION: query exif date time
//
//PARAMETERS :
//  @dateTime    : String to store exif date time.
//                 Should be leaved unchanged in case of error.
//  @subsecTime  : String to store exif time nanoseconds.
//                 Should be leaved unchanged in case of error.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175671 "getExifFocalLength"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "focalLength" type class_ref 3633207 // rat_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifFocalLength
//
//DESCRIPTION: get exif focal lenght
//
//PARAMETERS :
//  @focalLength : ptr to rational strcut to store focal lenght
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifFocalLength
//
//DESCRIPTION: get exif focal lenght
//
//PARAMETERS :
//  @focalLength : ptr to rational strcut to store focal lenght
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifFocalLength
//
//DESCRIPTION: get exif focal lenght
//
//PARAMETERS :
//  @focalLength : ptr to rational strcut to store focal lenght
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175799 "getExifIsoSpeed"
	preserve_cpp_body_indent public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifIsoSpeed
//
//DESCRIPTION: get exif ISO speed
//
//PARAMETERS : none
//
//RETURN     : ISO speed value
//==========================================================================

//===========================================================================
//FUNCTION   : getExifIsoSpeed
//
//DESCRIPTION: get exif ISO speed
//
//PARAMETERS : none
//
//RETURN     : ISO speed value
//==========================================================================

//===========================================================================
//FUNCTION   : getExifIsoSpeed
//
//DESCRIPTION: get exif ISO speed
//
//PARAMETERS : none
//
//RETURN     : ISO speed value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44175927 "getExifGpsProcessingMethod"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "gpsProcessingMethod" explicit_type "char"
	  param inout name "count" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifGpsProcessingMethod
//
//DESCRIPTION: get GPS processing method
//
//PARAMETERS :
//  @gpsProcessingMethod : string to store GPS process method
//  @count               : lenght of the string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifGpsProcessingMethod
//
//DESCRIPTION: get GPS processing method
//
//PARAMETERS :
//  @gpsProcessingMethod : string to store GPS process method
//  @count               : lenght of the string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifGpsProcessingMethod
//
//DESCRIPTION: get GPS processing method
//
//PARAMETERS :
//  @gpsProcessingMethod : string to store GPS process method
//  @count               : lenght of the string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176055 "getExifLatitude"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "latitude" type class_ref 3633207 // rat_t
	  param inout name "latRef" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifLatitude
//
//DESCRIPTION: get exif latitude
//
//PARAMETERS :
//  @latitude : ptr to rational struct to store latitude info
//  @ladRef   : charater to indicate latitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifLatitude
//
//DESCRIPTION: get exif latitude
//
//PARAMETERS :
//  @latitude : ptr to rational struct to store latitude info
//  @ladRef   : charater to indicate latitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifLatitude
//
//DESCRIPTION: get exif latitude
//
//PARAMETERS :
//  @latitude : ptr to rational struct to store latitude info
//  @ladRef   : charater to indicate latitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176183 "getExifLongitude"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "longitude" type class_ref 3633207 // rat_t
	  param inout name "lonRef" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifLongitude
//
//DESCRIPTION: get exif longitude
//
//PARAMETERS :
//  @longitude : ptr to rational struct to store longitude info
//  @lonRef    : charater to indicate longitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifLongitude
//
//DESCRIPTION: get exif longitude
//
//PARAMETERS :
//  @longitude : ptr to rational struct to store longitude info
//  @lonRef    : charater to indicate longitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifLongitude
//
//DESCRIPTION: get exif longitude
//
//PARAMETERS :
//  @longitude : ptr to rational struct to store longitude info
//  @lonRef    : charater to indicate longitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176311 "getExifAltitude"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "altitude" type class_ref 3633207 // rat_t
	  param inout name "altRef" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifAltitude
//
//DESCRIPTION: get exif altitude
//
//PARAMETERS :
//  @altitude : ptr to rational struct to store altitude info
//  @altRef   : charater to indicate altitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifAltitude
//
//DESCRIPTION: get exif altitude
//
//PARAMETERS :
//  @altitude : ptr to rational struct to store altitude info
//  @altRef   : charater to indicate altitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifAltitude
//
//DESCRIPTION: get exif altitude
//
//PARAMETERS :
//  @altitude : ptr to rational struct to store altitude info
//  @altRef   : charater to indicate altitude reference
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176439 "getExifGpsDateTimeStamp"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param inout name "gpsDateStamp" explicit_type "char"
	  param in name "bufLen" explicit_type "uint32_t"
	  param inout name "gpsTimeStamp" type class_ref 3633207 // rat_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifGpsDateTimeStamp
//
//DESCRIPTION: get exif GPS date time stamp
//
//PARAMETERS :
//  @gpsDateStamp : GPS date time stamp string
//  @bufLen       : length of the string
//  @gpsTimeStamp : ptr to rational struct to store time stamp info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifGpsDateTimeStamp
//
//DESCRIPTION: get exif GPS date time stamp
//
//PARAMETERS :
//  @gpsDateStamp : GPS date time stamp string
//  @bufLen       : length of the string
//  @gpsTimeStamp : ptr to rational struct to store time stamp info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getExifGpsDateTimeStamp
//
//DESCRIPTION: get exif GPS date time stamp
//
//PARAMETERS :
//  @gpsDateStamp : GPS date time stamp string
//  @bufLen       : length of the string
//  @gpsTimeStamp : ptr to rational struct to store time stamp info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176567 "updateFocusDistances"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "focusDistances" type class_ref 3653687 // cam_focus_distances_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateFocusDistances
//
//DESCRIPTION: update focus distances
//
//PARAMETERS :
//  @focusDistances : ptr to focus distance info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateFocusDistances
//
//DESCRIPTION: update focus distances
//
//PARAMETERS :
//  @focusDistances : ptr to focus distance info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateFocusDistances
//
//DESCRIPTION: update focus distances
//
//PARAMETERS :
//  @focusDistances : ptr to focus distance info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176695 "isAEBracketEnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isAEBracketEnabled
//
//DESCRIPTION: checks if AE bracketing is enabled
//
//PARAMETERS :
//
//RETURN     : TRUE/FALSE
//==========================================================================

//===========================================================================
//FUNCTION   : isAEBracketEnabled
//
//DESCRIPTION: checks if AE bracketing is enabled
//
//PARAMETERS :
//
//RETURN     : TRUE/FALSE
//==========================================================================

//===========================================================================
//FUNCTION   : isAEBracketEnabled
//
//DESCRIPTION: checks if AE bracketing is enabled
//
//PARAMETERS :
//
//RETURN     : TRUE/FALSE
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176823 "setAEBracketing"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAEBracketing
//
//DESCRIPTION: enables AE bracketing
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAEBracketing
//
//DESCRIPTION: enables AE bracketing
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAEBracketing
//
//DESCRIPTION: enables AE bracketing
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44176951 "isFpsDebugEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bDebugFps;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177079 "isHistogramEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bHistogramEnabled;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177207 "isSceneSelectionEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bSceneSelection;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177335 "setSelectedScene"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "scene" type class_ref 3647671 // cam_scene_mode_type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSelectedScene
//
//DESCRIPTION: select specific scene
//
//PARAMETERS :
//  @scene   : scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSelectedScene
//
//DESCRIPTION: select specific scene
//
//PARAMETERS :
//  @scene   : scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSelectedScene
//
//DESCRIPTION: select specific scene
//
//PARAMETERS :
//  @scene   : scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177463 "getSelectedScene"
	preserve_cpp_body_indent public return_type class_ref 3647671 // cam_scene_mode_type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSelectedScene
//
//DESCRIPTION: get selected scene
//
//PARAMETERS :
//
//RETURN     : currently selected scene
//==========================================================================

//===========================================================================
//FUNCTION   : getSelectedScene
//
//DESCRIPTION: get selected scene
//
//PARAMETERS :
//
//RETURN     : currently selected scene
//==========================================================================

//===========================================================================
//FUNCTION   : getSelectedScene
//
//DESCRIPTION: get selected scene
//
//PARAMETERS :
//
//RETURN     : currently selected scene
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177591 "isFaceDetectionEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return ((m_nFaceProcMask & CAM_FACE_PROCESS_MASK_DETECTION) != 0);};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177719 "getFaceDetectionOption"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return  m_bFaceDetectionOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177847 "setFaceDetectionOption"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFaceDetectionOption
//
//DESCRIPTION: set if face detection is enabled by SendCommand
//
//PARAMETERS :
//  @enabled : bool flag if face detection should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceDetectionOption
//
//DESCRIPTION: set if face detection is enabled by SendCommand
//
//PARAMETERS :
//  @enabled : bool flag if face detection should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceDetectionOption
//
//DESCRIPTION: set if face detection is enabled by SendCommand
//
//PARAMETERS :
//  @enabled : bool flag if face detection should be enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44177975 "setHistogram"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHistogram
//
//DESCRIPTION: set histogram
//
//PARAMETERS :
//  @enabled : if histogram is enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHistogram
//
//DESCRIPTION: set histogram
//
//PARAMETERS :
//  @enabled : if histogram is enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHistogram
//
//DESCRIPTION: set histogram
//
//PARAMETERS :
//  @enabled : if histogram is enabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178103 "setFaceDetection"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "enabled" explicit_type "bool"
	  param in name "initCommit" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFaceDetection
//
//DESCRIPTION: set face detection
//
//PARAMETERS :
//  @enabled : if face detection is enabled
//  @initCommit : if configuration list need to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceDetection
//
//DESCRIPTION: set face detection
//
//PARAMETERS :
//  @enabled : if face detection is enabled
//  @initCommit : if configuration list need to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceDetection
//
//DESCRIPTION: set face detection
//
//PARAMETERS :
//  @enabled : if face detection is enabled
//  @initCommit : if configuration list need to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178231 "setFrameSkip"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "pattern" explicit_type "msm_vfe_frame_skip_pattern"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFrameSkip
//
//DESCRIPTION: send ISP frame skip pattern to camera daemon
//
//PARAMETERS :
//  @pattern : skip pattern for ISP
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFrameSkip
//
//DESCRIPTION: send ISP frame skip pattern to camera daemon
//
//PARAMETERS :
//  @pattern : skip pattern for ISP
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFrameSkip
//
//DESCRIPTION: send ISP frame skip pattern to camera daemon
//
//PARAMETERS :
//  @pattern : skip pattern for ISP
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178359 "getThermalMode"
	cpp_inline public return_type class_ref 3653815 // qcamera_thermal_mode
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_ThermalMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178487 "updateRecordingHintValue"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateRecordingHintValue
//
//DESCRIPTION: update recording hint locally and to daemon
//
//PARAMETERS :
//  @value   : video hint value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateRecordingHintValue
//
//DESCRIPTION: update recording hint locally and to daemon
//
//PARAMETERS :
//  @value   : video hint value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateRecordingHintValue
//
//DESCRIPTION: update recording hint locally and to daemon
//
//PARAMETERS :
//  @value   : video hint value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178615 "setHDRAEBracket"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "hdrBracket" type class_ref 3653943 // cam_exp_bracketing_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHDRAEBracket
//
//DESCRIPTION: enables AE bracketing for HDR
//
//PARAMETERS :
//  @hdrBracket : HDR bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRAEBracket
//
//DESCRIPTION: enables AE bracketing for HDR
//
//PARAMETERS :
//  @hdrBracket : HDR bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRAEBracket
//
//DESCRIPTION: enables AE bracketing for HDR
//
//PARAMETERS :
//  @hdrBracket : HDR bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178743 "isHDREnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isHDREnabled
//
//DESCRIPTION: if HDR is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isHDREnabled
//
//DESCRIPTION: if HDR is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isHDREnabled
//
//DESCRIPTION: if HDR is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178871 "isAutoHDREnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isAutoHDREnabled
//
//DESCRIPTION: Query auto HDR status
//
//PARAMETERS : None
//
//RETURN     : bool true/false
//==========================================================================

//===========================================================================
//FUNCTION   : isAutoHDREnabled
//
//DESCRIPTION: Query auto HDR status
//
//PARAMETERS : None
//
//RETURN     : bool true/false
//==========================================================================

//===========================================================================
//FUNCTION   : isAutoHDREnabled
//
//DESCRIPTION: Query auto HDR status
//
//PARAMETERS : None
//
//RETURN     : bool true/false
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44178999 "stopAEBracket"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : restoreAEBracket
//
//DESCRIPTION: restores client AE bracketing configuration after HDR is done
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : restoreAEBracket
//
//DESCRIPTION: restores client AE bracketing configuration after HDR is done
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : restoreAEBracket
//
//DESCRIPTION: restores client AE bracketing configuration after HDR is done
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179127 "updateFlash"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "commitSettings" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateFlash
//
//DESCRIPTION: restores client flash configuration or disables flash
//
//PARAMETERS :
//  @commitSettings : flag indicating whether settings need to be commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateFlash
//
//DESCRIPTION: restores client flash configuration or disables flash
//
//PARAMETERS :
//  @commitSettings : flag indicating whether settings need to be commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateFlash
//
//DESCRIPTION: restores client flash configuration or disables flash
//
//PARAMETERS :
//  @commitSettings : flag indicating whether settings need to be commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179255 "updateRAW"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "max_dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179383 "isAVTimerEnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isAVTimerEnabled
//
//DESCRIPTION: if AVTimer is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isAVTimerEnabled
//
//DESCRIPTION: if AVTimer is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isAVTimerEnabled
//
//DESCRIPTION: if AVTimer is enabled
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179511 "isDISEnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isDISEnabled
//
//DESCRIPTION: if DIS is enabled
//
//PARAMETERS : none
//
//RETURN    : true: needed
//              false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isDISEnabled
//
//DESCRIPTION: if DIS is enabled
//
//PARAMETERS : none
//
//RETURN    : true: needed
//              false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isDISEnabled
//
//DESCRIPTION: if DIS is enabled
//
//PARAMETERS : none
//
//RETURN    : true: needed
//              false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179639 "getISType"
	preserve_cpp_body_indent public return_type class_ref 3654071 // cam_is_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getISType
//
//DESCRIPTION: returns IS type
//
//PARAMETERS : none
//
//RETURN     : IS type
//
//==========================================================================

//===========================================================================
//FUNCTION   : getISType
//
//DESCRIPTION: returns IS type
//
//PARAMETERS : none
//
//RETURN     : IS type
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179767 "getMobicatMask"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : MobicatMask
//
//DESCRIPTION: returns mobicat mask
//
//PARAMETERS : none
//
//RETURN     : mobicat mask
//
//==========================================================================

//===========================================================================
//FUNCTION   : MobicatMask
//
//DESCRIPTION: returns mobicat mask
//
//PARAMETERS : none
//
//RETURN     : mobicat mask
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44179895 "getFocusMode"
	const cpp_inline public return_type class_ref 3654199 // cam_focus_mode_type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mFocusMode;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180023 "setNumOfSnapshot"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setNumOfSnapshot
//
//DESCRIPTION: set number of snapshot per shutter from user setting
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setNumOfSnapshot
//
//DESCRIPTION: set number of snapshot per shutter from user setting
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setNumOfSnapshot
//
//DESCRIPTION: set number of snapshot per shutter from user setting
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180151 "adjustPreviewFpsRange"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "fpsRange" type class_ref 3645495 // cam_fps_range_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : adjustPreviewFpsRanges
//
//DESCRIPTION: adjust preview FPS ranges
//             according to external events
//
//PARAMETERS :
//  @minFPS  : min FPS value
//  @maxFPS  : max FPS value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : adjustPreviewFpsRanges
//
//DESCRIPTION: adjust preview FPS ranges
//             according to external events
//
//PARAMETERS :
//  @minFPS  : min FPS value
//  @maxFPS  : max FPS value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : adjustPreviewFpsRanges
//
//DESCRIPTION: adjust preview FPS ranges
//             according to external events
//
//PARAMETERS :
//  @minFPS  : min FPS value
//  @maxFPS  : max FPS value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180279 "isJpegPictureFormat"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return (mPictureFormat == CAM_FORMAT_JPEG);};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180407 "isNV16PictureFormat"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return (mPictureFormat == CAM_FORMAT_YUV_422_NV16);};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180535 "isNV21PictureFormat"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return (mPictureFormat == CAM_FORMAT_YUV_420_NV21);};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180663 "getDenoiseProcessPlate"
	preserve_cpp_body_indent public return_type class_ref 3654327 // cam_denoise_process_type_t
	nparams 1
	  param in name "type" type class_ref 3654455 // cam_intf_parm_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getDenoiseProcessPlate
//
//DESCRIPTION: query denoise process plate
//
//PARAMETERS : None
//
//RETURN     : NR process plate vlaue
//==========================================================================

//===========================================================================
//FUNCTION   : getDenoiseProcessPlate
//
//DESCRIPTION: query denoise process plate
//
//PARAMETERS : None
//
//RETURN     : NR process plate vlaue
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180791 "getLiveSnapshotSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getLiveSnapshotSize
//
//DESCRIPTION: get live snapshot size
//
//PARAMETERS : dim - Update dim with the liveshot size
//
//==========================================================================

//===========================================================================
//FUNCTION   : getLiveSnapshotSize
//
//DESCRIPTION: get live snapshot size
//
//PARAMETERS : dim - Update dim with the liveshot size
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44180919 "getRawSize"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {dim = m_rawSize; return NO_ERROR;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181047 "setRawSize"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRawSize
//
//DESCRIPTION: set live snapshot size
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRawSize
//
//DESCRIPTION: set live snapshot size
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRawSize
//
//DESCRIPTION: set live snapshot size
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181175 "getFlipMode"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFlipMode
//
//DESCRIPTION: get flip mode
//
//PARAMETERS :
//  @cam_intf_parm_type_t : [input] stream type
//
//RETURN     : int type of flip mode
//             0 - no filp
//             1 - FLIP_H
//             2 - FLIP_V
//             3 - FLIP_H | FLIP_V
//==========================================================================

//===========================================================================
//FUNCTION   : getFlipMode
//
//DESCRIPTION: get flip mode
//
//PARAMETERS :
//  @cam_intf_parm_type_t : [input] stream type
//
//RETURN     : int type of flip mode
//             0 - no filp
//             1 - FLIP_H
//             2 - FLIP_V
//             3 - FLIP_H | FLIP_V
//==========================================================================

//===========================================================================
//FUNCTION   : getFlipMode
//
//DESCRIPTION: get flip mode
//
//PARAMETERS :
//  @cam_intf_parm_type_t : [input] stream type
//
//RETURN     : int type of flip mode
//             0 - no filp
//             1 - FLIP_H
//             2 - FLIP_V
//             3 - FLIP_H | FLIP_V
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181303 "isSnapshotFDNeeded"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isSnapshotFDNeeded
//
//DESCRIPTION: check whether Face Detection Metadata is needed
//
//PARAMETERS : none
//
//RETURN     : bool type of status
//             0 - need
//             1 - not need
//==========================================================================

//===========================================================================
//FUNCTION   : isSnapshotFDNeeded
//
//DESCRIPTION: check whether Face Detection Metadata is needed
//
//PARAMETERS : none
//
//RETURN     : bool type of status
//             0 - need
//             1 - not need
//==========================================================================

//===========================================================================
//FUNCTION   : isSnapshotFDNeeded
//
//DESCRIPTION: check whether Face Detection Metadata is needed
//
//PARAMETERS : none
//
//RETURN     : bool type of status
//             0 - need
//             1 - not need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181431 "isHDR1xFrameEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bHDR1xFrameEnabled;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181559 "isYUVFrameInfoNeeded"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isYUVFrameInfoNeeded
//
//DESCRIPTION: In AE-Bracket mode, we need set yuv buffer information for up-layer
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isYUVFrameInfoNeeded
//
//DESCRIPTION: In AE-Bracket mode, we need set yuv buffer information for up-layer
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : isYUVFrameInfoNeeded
//
//DESCRIPTION: In AE-Bracket mode, we need set yuv buffer information for up-layer
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181687 "getFrameFmtString"
	preserve_cpp_body_indent public explicit_return_type "char"
	nparams 1
	  param in name "fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameFmtString
//
//DESCRIPTION: get string name of frame format
//
//PARAMETERS :
//  @frame   : frame format
//
//RETURN     : string name of frame format
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameFmtString
//
//DESCRIPTION: get string name of frame format
//
//PARAMETERS :
//  @frame   : frame format
//
//RETURN     : string name of frame format
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameFmtString
//
//DESCRIPTION: get string name of frame format
//
//PARAMETERS :
//  @frame   : frame format
//
//RETURN     : string name of frame format
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181815 "isHDR1xExtraBufferNeeded"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bHDR1xExtraBufferNeeded;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44181943 "isHDROutputCropEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bHDROutputCropEnabled;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182071 "isPreviewFlipChanged"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_bPreviewFlipChanged; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182199 "isVideoFlipChanged"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_bVideoFlipChanged; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182327 "isSnapshotFlipChanged"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_bSnapshotFlipChanged; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182455 "setHDRSceneEnable"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "bflag" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHDRSceneEnable
//
//DESCRIPTION: sets hdr scene deteced flag
//
//PARAMETERS :
//  @bflag : hdr scene deteced
//
//RETURN     : nothing
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRSceneEnable
//
//DESCRIPTION: sets hdr scene deteced flag
//
//PARAMETERS :
//  @bflag : hdr scene deteced
//
//RETURN     : nothing
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRSceneEnable
//
//DESCRIPTION: sets hdr scene deteced flag
//
//PARAMETERS :
//  @bflag : hdr scene deteced
//
//RETURN     : nothing
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182583 "updateAWBParams"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "awb_params" type class_ref 3647799 // cam_awb_params_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateAWBParams
//
//DESCRIPTION: update CCT parameters key
//
//PARAMETERS :
//  @awb_params : WB parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateAWBParams
//
//DESCRIPTION: update CCT parameters key
//
//PARAMETERS :
//  @awb_params : WB parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182711 "getASDStateString"
	preserve_cpp_body_indent public explicit_return_type "char"
	nparams 1
	  param in name "scene" type class_ref 3647287 // cam_auto_scene_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getASDStateString
//
//DESCRIPTION: get ASD result in string format
//
//PARAMETERS :
//  @scene : selected scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getASDStateString
//
//DESCRIPTION: get ASD result in string format
//
//PARAMETERS :
//  @scene : selected scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getASDStateString
//
//DESCRIPTION: get ASD result in string format
//
//PARAMETERS :
//  @scene : selected scene mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182839 "isHDRThumbnailProcessNeeded"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_bHDRThumbnailProcessNeeded; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44182967 "getAutoFlickerMode"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183095 "setMinPpMask"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "min_pp_mask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { m_nMinRequiredPpMask = min_pp_mask; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183223 "sendStreamConfigInfo"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "stream_config_info" type class_ref 3654583 // cam_stream_size_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendStreamConfigInfo
//
//DESCRIPTION: send Stream config info.
//
//PARAMETERS :
//  @stream_config_info: Stream config information
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendStreamConfigInfo
//
//DESCRIPTION: send Stream config info.
//
//PARAMETERS :
//  @stream_config_info: Stream config information
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183351 "setStreamConfigure"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "isCapture" explicit_type "bool"
	  param in name "previewAsPostview" explicit_type "bool"
	  param in name "resetConfig" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setStreamConfigure
//
//DESCRIPTION: set stream type, stream dimension for all configured streams.
//
//PARAMETERS :
//  @isCapture: Whether this configureation is for an image capture
//  @previewAsPostview: Use preview as postview
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setStreamConfigure
//
//DESCRIPTION: set stream type, stream dimension for all configured streams.
//
//PARAMETERS :
//  @isCapture: Whether this configureation is for an image capture
//  @previewAsPostview: Use preview as postview
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183479 "addOnlineRotation"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "rotation" explicit_type "uint32_t"
	  param in name "streamId" explicit_type "uint32_t"
	  param in name "device_rotation" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addOnlineRotation
//
//DESCRIPTION: send additional rotation information for specific stream
//
//PARAMETERS :
//  @rotation: rotation
//  @streamId: internal stream id
//  @device_rotation: device rotation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addOnlineRotation
//
//DESCRIPTION: send additional rotation information for specific stream
//
//PARAMETERS :
//  @rotation: rotation
//  @streamId: internal stream id
//  @device_rotation: device rotation
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183607 "getNumOfExtraBuffersForImageProc"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForImageProc
//
//DESCRIPTION: get number of extra input buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForImageProc
//
//DESCRIPTION: get number of extra input buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForImageProc
//
//DESCRIPTION: get number of extra input buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183735 "getNumOfExtraBuffersForVideo"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForVideo
//
//DESCRIPTION: get number of extra buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForVideo
//
//DESCRIPTION: get number of extra buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183863 "getNumOfExtraBuffersForPreview"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForPreview
//
//DESCRIPTION: get number of extra buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

//===========================================================================
//FUNCTION   : getNumOfExtraBuffersForPreview
//
//DESCRIPTION: get number of extra buffers needed by image processing
//
//PARAMETERS : none
//
//RETURN     : number of extra buffers needed by ImageProc;
//             0 if not ImageProc enabled
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44183991 "getExifBufIndex"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 1
	  param in name "captureIndex" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifBufIndex
//
//DESCRIPTION: get index of metadata to be used for EXIF
//
//PARAMETERS : @captureIndex - index of current captured frame
//
//RETURN     : index of metadata to be used for EXIF
//==========================================================================

//===========================================================================
//FUNCTION   : getExifBufIndex
//
//DESCRIPTION: get index of metadata to be used for EXIF
//
//PARAMETERS : @captureIndex - index of current captured frame
//
//RETURN     : index of metadata to be used for EXIF
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184119 "needThumbnailReprocess"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "pFeatureMask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needThumbnailReprocess
//
//DESCRIPTION: Check if thumbnail reprocessing is needed
//
//PARAMETERS : @pFeatureMask - feature mask
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needThumbnailReprocess
//
//DESCRIPTION: Check if thumbnail reprocessing is needed
//
//PARAMETERS : @pFeatureMask - feature mask
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needThumbnailReprocess
//
//DESCRIPTION: Check if thumbnail reprocessing is needed
//
//PARAMETERS : @pFeatureMask - feature mask
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184247 "isUbiFocusEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bAFBracketingOn && !m_bReFocusOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184375 "isChromaFlashEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bChromaFlashOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184503 "isTruePortraitEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bTruePortraitOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184631 "getTPMaxMetaSize"
	cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return m_pCapability->true_portrait_settings_need.meta_max_size;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184759 "isSeeMoreEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bSeeMoreOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44184887 "isStillMoreEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bStillMoreOn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185015 "isOptiZoomEnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isOptiZoomEnabled
//
//DESCRIPTION: checks whether optizoom is enabled
//
//PARAMETERS :
//
//RETURN     : true - enabled, false - disabled
//
//==========================================================================

//===========================================================================
//FUNCTION   : isOptiZoomEnabled
//
//DESCRIPTION: checks whether optizoom is enabled
//
//PARAMETERS :
//
//RETURN     : true - enabled, false - disabled
//
//==========================================================================

//===========================================================================
//FUNCTION   : isOptiZoomEnabled
//
//DESCRIPTION: checks whether optizoom is enabled
//
//PARAMETERS :
//
//RETURN     : true - enabled, false - disabled
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185143 "commitAFBracket"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "afBracket" type class_ref 3654711 // cam_af_bracketing_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitAFBracket
//
//DESCRIPTION: commit AF Bracket.
//
//PARAMETERS :
//  @AFBracket : AF bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitAFBracket
//
//DESCRIPTION: commit AF Bracket.
//
//PARAMETERS :
//  @AFBracket : AF bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitAFBracket
//
//DESCRIPTION: commit AF Bracket.
//
//PARAMETERS :
//  @AFBracket : AF bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185271 "commitFlashBracket"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "flashBracket" type class_ref 3654839 // cam_flash_bracketing_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitFlashBracket
//
//DESCRIPTION: commit Flash Bracket.
//
//PARAMETERS :
//  @AFBracket : Flash bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitFlashBracket
//
//DESCRIPTION: commit Flash Bracket.
//
//PARAMETERS :
//  @AFBracket : Flash bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitFlashBracket
//
//DESCRIPTION: commit Flash Bracket.
//
//PARAMETERS :
//  @AFBracket : Flash bracketing configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185399 "set3ALock"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "lockStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : set3ALock
//
//DESCRIPTION: enable/disable 3A lock.
//
//PARAMETERS :
//  @lockStr : lock value string.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : set3ALock
//
//DESCRIPTION: enable/disable 3A lock.
//
//PARAMETERS :
//  @lockStr : lock value string.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : set3ALock
//
//DESCRIPTION: enable/disable 3A lock.
//
//PARAMETERS :
//  @lockStr : lock value string.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185527 "setAndCommitZoom"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "zoom_level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAndCommitZoom
//
//DESCRIPTION: set zoom.
//
//PARAMETERS :
//    @zoom_level : zoom level to set.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAndCommitZoom
//
//DESCRIPTION: set zoom.
//
//PARAMETERS :
//    @zoom_level : zoom level to set.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAndCommitZoom
//
//DESCRIPTION: set zoom.
//
//PARAMETERS :
//    @zoom_level : zoom level to set.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185655 "getBurstCountForAdvancedCapture"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBurstCountForAdvancedCapture
//
//DESCRIPTION: get burst count for advanced capture.
//
//PARAMETERS : none
//
//RETURN     : number of snapshot required for advanced capture.
//==========================================================================

//===========================================================================
//FUNCTION   : getBurstCountForAdvancedCapture
//
//DESCRIPTION: get burst count for advanced capture.
//
//PARAMETERS : none
//
//RETURN     : number of snapshot required for advanced capture.
//==========================================================================

//===========================================================================
//FUNCTION   : getBurstCountForAdvancedCapture
//
//DESCRIPTION: get burst count for advanced capture.
//
//PARAMETERS : none
//
//RETURN     : number of snapshot required for advanced capture.
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185783 "getNumberInBufsForSingleShot"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumberInBufsForSingleShot
//
//DESCRIPTION: get number of input buffers for single shot
//
//PARAMETERS : none
//
//RETURN     : number of input buffers for single shot
//==========================================================================

//===========================================================================
//FUNCTION   : getNumberInBufsForSingleShot
//
//DESCRIPTION: get number of input buffers for single shot
//
//PARAMETERS : none
//
//RETURN     : number of input buffers for single shot
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44185911 "getNumberOutBufsForSingleShot"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getNumberOutBufsForSingleShot
//
//DESCRIPTION: get number of output buffers for single shot
//
//PARAMETERS : none
//
//RETURN     : number of output buffers for single shot
//==========================================================================

//===========================================================================
//FUNCTION   : getNumberOutBufsForSingleShot
//
//DESCRIPTION: get number of output buffers for single shot
//
//PARAMETERS : none
//
//RETURN     : number of output buffers for single shot
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186039 "setLongshotEnable"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setLongshotEnable
//
//DESCRIPTION: set a flag indicating longshot mode
//
//PARAMETERS :
//  @enable  : true - Longshot enabled
//             false - Longshot disabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLongshotEnable
//
//DESCRIPTION: set a flag indicating longshot mode
//
//PARAMETERS :
//  @enable  : true - Longshot enabled
//             false - Longshot disabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLongshotEnable
//
//DESCRIPTION: set a flag indicating longshot mode
//
//PARAMETERS :
//  @enable  : true - Longshot enabled
//             false - Longshot disabled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186167 "dump"
	preserve_cpp_body_indent public explicit_return_type "String8"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: Composes a string based on current configuration
//
//PARAMETERS : none
//
//RETURN     : Formatted string
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: Composes a string based on current configuration
//
//PARAMETERS : none
//
//RETURN     : Formatted string
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION: Composes a string based on current configuration
//
//PARAMETERS : none
//
//RETURN     : Formatted string
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186295 "isUbiRefocus"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bReFocusOn &&
            (m_pCapability->refocus_af_bracketing_need.output_count > 1);};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186423 "getRefocusMaxMetaSize"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            return m_pCapability->refocus_af_bracketing_need.meta_max_size;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186551 "getRefocusOutputCount"
	cpp_inline public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            return m_pCapability->refocus_af_bracketing_need.output_count;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186679 "generateThumbFromMain"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return isUbiFocusEnabled() ||
            isChromaFlashEnabled() || isOptiZoomEnabled() || isUbiRefocus()
            || isHDREnabled() || isStillMoreEnabled() || isTruePortraitEnabled(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186807 "updateCurrentFocusPosition"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "cur_pos_info" type class_ref 3647927 // cam_focus_pos_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateCurrentFocusPosition
//
//DESCRIPTION: update current focus position from metadata callback
//
//PARAMETERS :
//  @pos : current focus position
//
//RETURN     : void
//==========================================================================

//===========================================================================
//FUNCTION   : updateCurrentFocusPosition
//
//DESCRIPTION: update current focus position from metadata callback
//
//PARAMETERS :
//  @pos : current focus position
//
//RETURN     : void
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44186935 "updateAEInfo"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "ae_params" type class_ref 3648055 // cam_3a_params_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateAEInfo
//
//DESCRIPTION: update exposure information from metadata callback
//
//PARAMETERS :
//  @ae_params : auto exposure params
//
//RETURN     : void
//==========================================================================

//===========================================================================
//FUNCTION   : updateAEInfo
//
//DESCRIPTION: update exposure information from metadata callback
//
//PARAMETERS :
//  @ae_params : auto exposure params
//
//RETURN     : void
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187063 "isDisplayFrameNeeded"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_bDisplayFrame; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187191 "setDisplayFrame"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {m_bDisplayFrame=enabled; return 0;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187319 "isAdvCamFeaturesEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return isUbiFocusEnabled() ||
            isChromaFlashEnabled() || m_bOptiZoomOn || isHDREnabled() ||
            isHDREnabled() || isStillMoreEnabled();};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187447 "setAecLock"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "aecLockStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAecLock
//
//DESCRIPTION: set AEC lock value
//
//PARAMETERS :
//  @aecLockStr : AEC lock value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAecLock
//
//DESCRIPTION: set AEC lock value
//
//PARAMETERS :
//  @aecLockStr : AEC lock value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAecLock
//
//DESCRIPTION: set AEC lock value
//
//PARAMETERS :
//  @aecLockStr : AEC lock value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187575 "updateDebugLevel"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateDebugLevel
//
//DESCRIPTION: send CAM_INTF_PARM_UPDATE_DEBUG_LEVEL to backend
//
//PARAMETERS : none
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

//===========================================================================
//FUNCTION   : updateDebugLevel
//
//DESCRIPTION: send CAM_INTF_PARM_UPDATE_DEBUG_LEVEL to backend
//
//PARAMETERS : none
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187703 "is4k2kVideoResolution"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : is4k2kVideoResolution
//
//DESCRIPTION: if resolution is 4k x 2k or true 4k x 2k
//
//PARAMETERS : none
//
//RETURN     : true: video resolution is 4k x 2k
//             false: video resolution is not 4k x 2k
//==========================================================================

//===========================================================================
//FUNCTION   : is4k2kVideoResolution
//
//DESCRIPTION: if resolution is 4k x 2k or true 4k x 2k
//
//PARAMETERS : none
//
//RETURN     : true: video resolution is 4k x 2k
//             false: video resolution is not 4k x 2k
//==========================================================================

//===========================================================================
//FUNCTION   : is4k2kVideoResolution
//
//DESCRIPTION: if resolution is 4k x 2k or true 4k x 2k
//
//PARAMETERS : none
//
//RETURN     : true: video resolution is 4k x 2k
//             false: video resolution is not 4k x 2k
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187831 "getBrightness"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBrightness
//
//DESCRIPTION: get brightness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBrightness
//
//DESCRIPTION: get brightness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44187959 "updateOisValue"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "oisValue" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateOisValue
//
//DESCRIPTION: update OIS value
//
//PARAMETERS :
//  @oisValue : OIS value TRUE/FALSE
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateOisValue
//
//DESCRIPTION: update OIS value
//
//PARAMETERS :
//  @oisValue : OIS value TRUE/FALSE
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188087 "setIntEvent"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3654967 // cam_int_evt_params_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setIntEvent
//
//DESCRIPTION: set setIntEvent
//
//PARAMETERS :
//  @params : image size and dimensions
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setIntEvent
//
//DESCRIPTION: set setIntEvent
//
//PARAMETERS :
//  @params : image size and dimensions
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188215 "setOfflineRAW"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setOfflineRAW
//
//DESCRIPTION: Function to decide Offline RAW feature.
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setOfflineRAW
//
//DESCRIPTION: Function to decide Offline RAW feature.
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188343 "getofflineRAW"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mOfflineRAW;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188471 "updatePpFeatureMask"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updatePpFeatureMask
//
//DESCRIPTION: Updates the feature mask for a particular stream depending
//             on current client configuration.
//
//PARAMETERS :
// @stream_type: Camera stream type
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

//===========================================================================
//FUNCTION   : updatePpFeatureMask
//
//DESCRIPTION: Updates the feature mask for a particular stream depending
//             on current client configuration.
//
//PARAMETERS :
// @stream_type: Camera stream type
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188599 "setStreamPpMask"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param in name "pp_mask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setStreamPpMask
//
//DESCRIPTION: Stores a particular feature mask for a given camera stream
//
//PARAMETERS :
// @stream_type: Camera stream type
// @pp_mask  : Feature mask
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

//===========================================================================
//FUNCTION   : setStreamPpMask
//
//DESCRIPTION: Stores a particular feature mask for a given camera stream
//
//PARAMETERS :
// @stream_type: Camera stream type
// @pp_mask  : Feature mask
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188727 "getStreamPpMask"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param inout name "pp_mask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamPpMask
//
//DESCRIPTION: Retrieves the feature mask for a given camera stream
//
//PARAMETERS :
// @stream_type: Camera stream type
// @pp_mask  : Feature mask
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamPpMask
//
//DESCRIPTION: Retrieves the feature mask for a given camera stream
//
//PARAMETERS :
// @stream_type: Camera stream type
// @pp_mask  : Feature mask
//
//RETURN     : NO_ERROR --success
//             int32_t type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188855 "getSharpness"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_nSharpness;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44188983 "getEffect"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParmEffect;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189111 "updateFlashMode"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "flash_mode" type class_ref 3655095 // cam_flash_mode_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateFlashMode
//
//DESCRIPTION: update flash mode
//
//PARAMETERS :
//  @flashStr : LED flash mode value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateFlashMode
//
//DESCRIPTION: update flash mode
//
//PARAMETERS :
//  @flashStr : LED flash mode value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189239 "configureFlash"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame_config" type class_ref 3651895 // cam_capture_frame_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureFlash
//
//DESCRIPTION: configure Flash Bracketing.
//
//PARAMETERS :
//   @frame_config : output configaration structure to fill in.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureFlash
//
//DESCRIPTION: configure Flash Bracketing.
//
//PARAMETERS :
//   @frame_config : output configaration structure to fill in.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189367 "configureAEBracketing"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame_config" type class_ref 3651895 // cam_capture_frame_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureAEBracketing
//
//DESCRIPTION: configure AE Bracketing.
//
//PARAMETERS :
//   @frame_config : output configaration structure to fill in.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureAEBracketing
//
//DESCRIPTION: configure AE Bracketing.
//
//PARAMETERS :
//   @frame_config : output configaration structure to fill in.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189495 "configureHDRBracketing"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame_config" type class_ref 3651895 // cam_capture_frame_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureHDRBracketing
//
//DESCRIPTION: configure HDR Bracketing.
//
//PARAMETERS :
//   @frame_config : output configaration structure to fill in.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureHDRBracketing
//
//DESCRIPTION: configure HDR Bracketing.
//
//PARAMETERS :
//   @frame_config : output configaration structure to fill in.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189623 "configFrameCapture"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "commitSettings" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configFrameCapture
//
//DESCRIPTION: configuration for ZSL special captures (FLASH/HDR etc)
//
//PARAMETERS :
//  @commitSettings : flag to enable or disable commit this this settings
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configFrameCapture
//
//DESCRIPTION: configuration for ZSL special captures (FLASH/HDR etc)
//
//PARAMETERS :
//  @commitSettings : flag to enable or disable commit this this settings
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189751 "resetFrameCapture"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "commitSettings" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : resetFrameCapture
//
//DESCRIPTION: reset special captures settings(FLASH/HDR etc)
//
//PARAMETERS :
//  @commitSettings : flag to enable or disable commit this this settings
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : resetFrameCapture
//
//DESCRIPTION: reset special captures settings(FLASH/HDR etc)
//
//PARAMETERS :
//  @commitSettings : flag to enable or disable commit this this settings
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44189879 "getStillMoreSettings"
	cpp_inline public return_type class_ref 3655223 // cam_still_more_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_stillmore_config;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190007 "setStillMoreSettings"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "stillmore_config" type class_ref 3655223 // cam_still_more_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {m_stillmore_config = stillmore_config;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190135 "getStillMoreCapability"
	cpp_inline public return_type class_ref 3655223 // cam_still_more_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_pCapability->stillmore_settings_need;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190263 "getZoomLevel"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mZoomLevel;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190391 "getParmZoomLevel"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mParmZoomLevel;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190519 "getReprocCount"
	cpp_inline public explicit_return_type "int8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mTotalPPCount;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190647 "getCurPPCount"
	cpp_inline public explicit_return_type "int8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mCurPPCount;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190775 "setReprocCount"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setReprocCount
//
//DESCRIPTION: Set total reprocessing pass count
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : setReprocCount
//
//DESCRIPTION: Set total reprocessing pass count
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44190903 "setCurPPCount"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {mCurPPCount = count;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191031 "updateCurrentFocusPosition"
	public explicit_return_type "int32_t"
	nparams 1
	  param in name "pos" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191159 "setToneMapMode"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "enable" explicit_type "uint32_t"
	  param in name "initCommit" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setToneMapMode
//
//DESCRIPTION: enable or disable tone map
//
//PARAMETERS :
//  @enable : enable: 1; disable 0
//  @initCommit: if configuration list needs to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setToneMapMode
//
//DESCRIPTION: enable or disable tone map
//
//PARAMETERS :
//  @enable : enable: 1; disable 0
//  @initCommit: if configuration list needs to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191287 "setTintless"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTintless
//
//DESCRIPTION: set tintless mode
//
//PARAMETERS :
//  @enable : 1 = enable, 0 = disable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTintless
//
//DESCRIPTION: set tintless mode
//
//PARAMETERS :
//  @enable : 1 = enable, 0 = disable
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191415 "setBufBatchCount"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "buf_cnt" explicit_type "int8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBufBatchCount
//
//DESCRIPTION: Function to configure batch buffer
//
//PARAMETERS : int8_t buf_cnt
//                    Buffer batch count
//
//RETURN     :  None
//==========================================================================

//===========================================================================
//FUNCTION   : setBufBatchCount
//
//DESCRIPTION: Function to configure batch buffer
//
//PARAMETERS : int8_t buf_cnt
//                    Buffer batch count
//
//RETURN     :  None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191543 "getBufBatchCount"
	cpp_inline public explicit_return_type "int8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mBufBatchCnt;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191671 "getCaptureFrameConfig"
	cpp_inline public return_type class_ref 3651895 // cam_capture_frame_config_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return m_captureFrameConfig; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191799 "setJpegRotation"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "rotation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setJpegRotation
//
//DESCRIPTION: set jpeg rotation value configured internally
//
//PARAMETERS : none
//
//RETURN     : jpeg rotation value
//==========================================================================

//===========================================================================
//FUNCTION   : setJpegRotation
//
//DESCRIPTION: set jpeg rotation value configured internally
//
//PARAMETERS : none
//
//RETURN     : jpeg rotation value
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44191927 "getJpegRotation"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mJpegRotation;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192055 "setPreviewSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewSize
//
//DESCRIPTION: set preview size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewSize
//
//DESCRIPTION: set preview size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewSize
//
//DESCRIPTION: set preview size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192183 "setVideoSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setVideoSize
//
//DESCRIPTION: set video size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoSize
//
//DESCRIPTION: set video size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoSize
//
//DESCRIPTION: set video size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192311 "setPictureSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPictureSize
//
//DESCRIPTION: set picture size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPictureSize
//
//DESCRIPTION: set picture size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPictureSize
//
//DESCRIPTION: set picture size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192439 "setLiveSnapshotSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setLiveSnapshotSize
//
//DESCRIPTION: set live snapshot size
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLiveSnapshotSize
//
//DESCRIPTION: set live snapshot size
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLiveSnapshotSize
//
//DESCRIPTION: set live snapshot size
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192567 "setPreviewFormat"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewFormat
//
//DESCRIPTION: set preview format from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFormat
//
//DESCRIPTION: set preview format from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFormat
//
//DESCRIPTION: set preview format from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192695 "setPictureFormat"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPictureFormat
//
//DESCRIPTION: set picture format from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPictureFormat
//
//DESCRIPTION: set picture format from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPictureFormat
//
//DESCRIPTION: set picture format from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192823 "setOrientation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setOrientaion
//
//DESCRIPTION: set orientaion from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setOrientaion
//
//DESCRIPTION: set orientaion from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setOrientaion
//
//DESCRIPTION: set orientaion from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44192951 "setJpegThumbnailSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setJpegThumbnailSize
//
//DESCRIPTION: set jpeg thumbnail size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setJpegThumbnailSize
//
//DESCRIPTION: set jpeg thumbnail size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setJpegThumbnailSize
//
//DESCRIPTION: set jpeg thumbnail size from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193079 "setJpegQuality"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setJpegQuality
//
//DESCRIPTION: set jpeg encpding quality from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setJpegQuality
//
//DESCRIPTION: set jpeg encpding quality from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setJpegQuality
//
//DESCRIPTION: set jpeg encpding quality from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193207 "setPreviewFpsRange"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewFpsRange
//
//DESCRIPTION: set preview FPS range from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFpsRange
//
//DESCRIPTION: set preview FPS range from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFpsRange
//
//DESCRIPTION: set preview FPS range from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193335 "setPreviewFrameRate"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewFrameRate
//
//DESCRIPTION: set preview frame rate from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFrameRate
//
//DESCRIPTION: set preview frame rate from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFrameRate
//
//DESCRIPTION: set preview frame rate from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193463 "setAutoExposure"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAutoExposure
//
//DESCRIPTION: set auto exposure value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAutoExposure
//
//DESCRIPTION: set auto exposure value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAutoExposure
//
//DESCRIPTION: set auto exposure value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193591 "setEffect"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setEffect
//
//DESCRIPTION: set effect value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setEffect
//
//DESCRIPTION: set effect value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setEffect
//
//DESCRIPTION: set effect value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193719 "setBrightness"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBrightness
//
//DESCRIPTION: set brightness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBrightness
//
//DESCRIPTION: set brightness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBrightness
//
//DESCRIPTION: set brightness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193847 "setFocusMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFocusMode
//
//DESCRIPTION: set focus mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusMode
//
//DESCRIPTION: set focus mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusMode
//
//DESCRIPTION: set focus mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44193975 "setFocusPosition"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFocusPosition
//
//DESCRIPTION: set focus position from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusPosition
//
//DESCRIPTION: set focus position from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194103 "setSharpness"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSharpness
//
//DESCRIPTION: set sharpness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSharpness
//
//DESCRIPTION: set sharpness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSharpness
//
//DESCRIPTION: set sharpness control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194231 "setSaturation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSaturation
//
//DESCRIPTION: set saturation control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSaturation
//
//DESCRIPTION: set saturation control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSaturation
//
//DESCRIPTION: set saturation control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194359 "setContrast"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setContrast
//
//DESCRIPTION: set contrast control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setContrast
//
//DESCRIPTION: set contrast control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setContrast
//
//DESCRIPTION: set contrast control value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194487 "setSkinToneEnhancement"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSkintoneEnahancement
//
//DESCRIPTION: set skin tone enhancement factor from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSkintoneEnahancement
//
//DESCRIPTION: set skin tone enhancement factor from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSkintoneEnahancement
//
//DESCRIPTION: set skin tone enhancement factor from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194615 "setSceneDetect"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSceneDetect
//
//DESCRIPTION: set scenen detect value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneDetect
//
//DESCRIPTION: set scenen detect value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneDetect
//
//DESCRIPTION: set scenen detect value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194743 "setVideoHDR"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setVideoHDR
//
//DESCRIPTION: set video HDR value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoHDR
//
//DESCRIPTION: set video HDR value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoHDR
//
//DESCRIPTION: set video HDR value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194871 "setVtEnable"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setVtEnable
//
//DESCRIPTION: set vt Time Stamp enable from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVtEnable
//
//DESCRIPTION: set vt Time Stamp enable from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVtEnable
//
//DESCRIPTION: set vt Time Stamp enable from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44194999 "setZoom"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setZoom
//
//DESCRIPTION: set zoom value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZoom
//
//DESCRIPTION: set zoom value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZoom
//
//DESCRIPTION: set zoom value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195127 "setISOValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setISOValue
//
//DESCRIPTION: set ISO value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setISOValue
//
//DESCRIPTION: set ISO value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setISOValue
//
//DESCRIPTION: set ISO value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195255 "setContinuousISO"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setContinuousISO
//
//DESCRIPTION: set continuous ISO value
//
//PARAMETERS :
//  @params : ISO value parameter
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setContinuousISO
//
//DESCRIPTION: set continuous ISO value
//
//PARAMETERS :
//  @params : ISO value parameter
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195383 "setExposureTime"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setExposureTime
//
//DESCRIPTION: set exposure time from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setExposureTime
//
//DESCRIPTION: set exposure time from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195511 "setRotation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRotation
//
//DESCRIPTION: set rotation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRotation
//
//DESCRIPTION: set rotation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRotation
//
//DESCRIPTION: set rotation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195639 "setVideoRotation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setVideoRotation
//
//DESCRIPTION: set rotation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoRotation
//
//DESCRIPTION: set rotation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoRotation
//
//DESCRIPTION: set rotation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195767 "setFlash"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFlash
//
//DESCRIPTION: set flash mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFlash
//
//DESCRIPTION: set flash mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFlash
//
//DESCRIPTION: set flash mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44195895 "setAecLock"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAecLock
//
//DESCRIPTION: set AEC lock value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAecLock
//
//DESCRIPTION: set AEC lock value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAecLock
//
//DESCRIPTION: set AEC lock value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196023 "setAwbLock"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAwbLock
//
//DESCRIPTION: set AWB lock from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAwbLock
//
//DESCRIPTION: set AWB lock from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAwbLock
//
//DESCRIPTION: set AWB lock from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196151 "setMCEValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setMCEValue
//
//DESCRIPTION: set memory color enhancement value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMCEValue
//
//DESCRIPTION: set memory color enhancement value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMCEValue
//
//DESCRIPTION: set memory color enhancement value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196279 "setDISValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setDISValue
//
//DESCRIPTION: enable/disable DIS from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setDISValue
//
//DESCRIPTION: enable/disable DIS from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setDISValue
//
//DESCRIPTION: enable/disable DIS from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196407 "setLensShadeValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setLensShadeValue
//
//DESCRIPTION: set lens shade value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLensShadeValue
//
//DESCRIPTION: set lens shade value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLensShadeValue
//
//DESCRIPTION: set lens shade value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196535 "setExposureCompensation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setExposureCompensation
//
//DESCRIPTION: set exposure compensation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setExposureCompensation
//
//DESCRIPTION: set exposure compensation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setExposureCompensation
//
//DESCRIPTION: set exposure compensation value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196663 "setWhiteBalance"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setWhiteBalance
//
//DESCRIPTION: set white balance value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWhiteBalance
//
//DESCRIPTION: set white balance value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWhiteBalance
//
//DESCRIPTION: set white balance value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196791 "setManualWhiteBalance"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setManualWhiteBalance
//
//DESCRIPTION: set manual white balance from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setManualWhiteBalance
//
//DESCRIPTION: set manual white balance from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44196919 "setAntibanding"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAntibanding
//
//DESCRIPTION: set antibanding value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAntibanding
//
//DESCRIPTION: set antibanding value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAntibanding
//
//DESCRIPTION: set antibanding value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197047 "setFocusAreas"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFocusAreas
//
//DESCRIPTION: set focus areas from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusAreas
//
//DESCRIPTION: set focus areas from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusAreas
//
//DESCRIPTION: set focus areas from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197175 "setMeteringAreas"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setMeteringAreas
//
//DESCRIPTION: set metering areas from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMeteringAreas
//
//DESCRIPTION: set metering areas from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMeteringAreas
//
//DESCRIPTION: set metering areas from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197303 "setSceneMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSceneMode
//
//DESCRIPTION: set scenen mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneMode
//
//DESCRIPTION: set scenen mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneMode
//
//DESCRIPTION: set scenen mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197431 "setSelectableZoneAf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSelectableZoneAf
//
//DESCRIPTION: set selectable zone auto focus value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSelectableZoneAf
//
//DESCRIPTION: set selectable zone auto focus value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSelectableZoneAf
//
//DESCRIPTION: set selectable zone auto focus value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197559 "setAEBracket"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAEBracket
//
//DESCRIPTION: set AE bracket from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAEBracket
//
//DESCRIPTION: set AE bracket from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAEBracket
//
//DESCRIPTION: set AE bracket from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197687 "setAFBracket"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAFBracket
//
//DESCRIPTION: set AF bracket from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAFBracket
//
//DESCRIPTION: set AF bracket from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAFBracket
//
//DESCRIPTION: set AF bracket from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197815 "setReFocus"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setReFocus
//
//DESCRIPTION: set refocus from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setReFocus
//
//DESCRIPTION: set refocus from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44197943 "setChromaFlash"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setChromaFlash
//
//DESCRIPTION: set chroma flash from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setChromaFlash
//
//DESCRIPTION: set chroma flash from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setChromaFlash
//
//DESCRIPTION: set chroma flash from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198071 "setOptiZoom"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setOptiZoom
//
//DESCRIPTION: set opti zoom from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setOptiZoom
//
//DESCRIPTION: set opti zoom from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setOptiZoom
//
//DESCRIPTION: set opti zoom from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198199 "setHDRMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHDRMode
//
//DESCRIPTION: set HDR mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRMode
//
//DESCRIPTION: set HDR mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198327 "setHDRNeed1x"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHDRNeed1x
//
//DESCRIPTION: set HDR need 1x from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRNeed1x
//
//DESCRIPTION: set HDR need 1x from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198455 "setTruePortrait"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTruePortrait
//
//DESCRIPTION: set true portrait from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTruePortrait
//
//DESCRIPTION: set true portrait from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198583 "setSeeMore"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSeeMore
//
//DESCRIPTION: set see more (llvd) from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSeeMore
//
//DESCRIPTION: set see more (llvd) from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198711 "setStillMore"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setStillMore
//
//DESCRIPTION: set stillmore from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setStillMore
//
//DESCRIPTION: set stillmore from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198839 "setRedeyeReduction"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRedeyeReduction
//
//DESCRIPTION: set red eye reduction setting from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRedeyeReduction
//
//DESCRIPTION: set red eye reduction setting from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRedeyeReduction
//
//DESCRIPTION: set red eye reduction setting from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44198967 "setGpsLocation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setGpsLocation
//
//DESCRIPTION: set GPS location information from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setGpsLocation
//
//DESCRIPTION: set GPS location information from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setGpsLocation
//
//DESCRIPTION: set GPS location information from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199095 "setRecordingHint"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRecordingHint
//
//DESCRIPTION: set recording hint value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRecordingHint
//
//DESCRIPTION: set recording hint value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRecordingHint
//
//DESCRIPTION: set recording hint value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199223 "setNoDisplayMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setNoDisplayMode
//
//DESCRIPTION: set no display mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setNoDisplayMode
//
//DESCRIPTION: set no display mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setNoDisplayMode
//
//DESCRIPTION: set no display mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199351 "setWaveletDenoise"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setWaveletDenoise
//
//DESCRIPTION: set wavelet denoise value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWaveletDenoise
//
//DESCRIPTION: set wavelet denoise value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWaveletDenoise
//
//DESCRIPTION: set wavelet denoise value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199479 "setTemporalDenoise"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTemporalDenoise
//
//DESCRIPTION: set temporal denoise value from properties
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTemporalDenoise
//
//DESCRIPTION: set temporal denoise value from properties
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199607 "setZslMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setZslMode
//
//DESCRIPTION: set ZSL mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZslMode
//
//DESCRIPTION: set ZSL mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZslMode
//
//DESCRIPTION: set ZSL mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199735 "setZslAttributes"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setZslAttributes
//
//DESCRIPTION: set ZSL related attributes from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZslAttributes
//
//DESCRIPTION: set ZSL related attributes from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZslAttributes
//
//DESCRIPTION: set ZSL related attributes from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199863 "setAutoHDR"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAutoHDR
//
//DESCRIPTION: Enable/disable auto HDR
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAutoHDR
//
//DESCRIPTION: Enable/disable auto HDR
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAutoHDR
//
//DESCRIPTION: Enable/disable auto HDR
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44199991 "setCameraMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setCameraMode
//
//DESCRIPTION: set camera mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCameraMode
//
//DESCRIPTION: set camera mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCameraMode
//
//DESCRIPTION: set camera mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200119 "setSceneSelectionMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSceneSelectionMode
//
//DESCRIPTION: set scene selection mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneSelectionMode
//
//DESCRIPTION: set scene selection mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneSelectionMode
//
//DESCRIPTION: set scene selection mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200247 "setFaceRecognition"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFaceRecognition
//
//DESCRIPTION: set face recognition mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceRecognition
//
//DESCRIPTION: set face recognition mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceRecognition
//
//DESCRIPTION: set face recognition mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200375 "setFlip"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFlip
//
//DESCRIPTION: set preview/ video/ picture flip mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFlip
//
//DESCRIPTION: set preview/ video/ picture flip mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFlip
//
//DESCRIPTION: set preview/ video/ picture flip mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200503 "setBurstNum"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBurstNum
//
//DESCRIPTION: set burst number of snapshot
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBurstNum
//
//DESCRIPTION: set burst number of snapshot
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBurstNum
//
//DESCRIPTION: set burst number of snapshot
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200631 "setRetroActiveBurstNum"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRetroActiveBurstNum
//
//DESCRIPTION: set retro active burst num
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRetroActiveBurstNum
//
//DESCRIPTION: set retro active burst num
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRetroActiveBurstNum
//
//DESCRIPTION: set retro active burst num
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200759 "setBurstLEDOnPeriod"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//
//FUNCTION   : setBurstLEDOnPeriod
//
//DESCRIPTION: set burst LED on period
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//
//FUNCTION   : setBurstLEDOnPeriod
//
//DESCRIPTION: set burst LED on period
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//
//FUNCTION   : setBurstLEDOnPeriod
//
//DESCRIPTION: set burst LED on period
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44200887 "setSnapshotFDReq"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSnapshotFDReq
//
//DESCRIPTION: set requirement of Face Detection Metadata in Snapshot mode.
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSnapshotFDReq
//
//DESCRIPTION: set requirement of Face Detection Metadata in Snapshot mode.
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSnapshotFDReq
//
//DESCRIPTION: set requirement of Face Detection Metadata in Snapshot mode.
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201015 "setStatsDebugMask"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setStatsDebugMask
//
//DESCRIPTION: get the value from persist file in Stats module that will
//             control funtionality in the module
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setStatsDebugMask
//
//DESCRIPTION: get the value from persist file in Stats module that will
//             control funtionality in the module
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setStatsDebugMask
//
//DESCRIPTION: get the value from persist file in Stats module that will
//             control funtionality in the module
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201143 "setPAAF"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPAAF
//
//DESCRIPTION: get the value from persist file in Stats module that will
//             control the preview assisted AF in the module
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPAAF
//
//DESCRIPTION: get the value from persist file in Stats module that will
//             control the preview assisted AF in the module
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPAAF
//
//DESCRIPTION: get the value from persist file in Stats module that will
//             control the preview assisted AF in the module
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201271 "setTintlessValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTintlessValue
//
//DESCRIPTION: enable/disable tintless from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTintlessValue
//
//DESCRIPTION: enable/disable tintless from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTintlessValue
//
//DESCRIPTION: enable/disable tintless from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201399 "setCDSMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setCDSMode
//
//DESCRIPTION: Set CDS mode
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCDSMode
//
//DESCRIPTION: Set CDS mode
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCDSMode
//
//DESCRIPTION: Set CDS mode
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201527 "setMobicat"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setMobicat
//
//DESCRIPTION: set Mobicat on/off.
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMobicat
//
//DESCRIPTION: set Mobicat on/off.
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMobicat
//
//DESCRIPTION: set Mobicat on/off.
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201655 "setRdiMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==========================================================
//FUNCTION   : setRdiMode
//
//DESCRIPTION: set Rdi mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//===========================================================

//==========================================================
//FUNCTION   : setRdiMode
//
//DESCRIPTION: set Rdi mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//===========================================================

//==========================================================
//FUNCTION   : setRdiMode
//
//DESCRIPTION: set Rdi mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//===========================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201783 "setSecureMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==========================================================
//FUNCTION   : setSecureMode
//
//DESCRIPTION: set secure mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//===========================================================

//==========================================================
//FUNCTION   : setSecureMode
//
//DESCRIPTION: set secure mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//===========================================================

//==========================================================
//FUNCTION   : setSecureMode
//
//DESCRIPTION: set secure mode from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//===========================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44201911 "setAutoExposure"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "autoExp" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAutoExposure
//
//DESCRIPTION: set auto exposure
//
//PARAMETERS :
//  @autoExp : auto exposure value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAutoExposure
//
//DESCRIPTION: set auto exposure
//
//PARAMETERS :
//  @autoExp : auto exposure value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAutoExposure
//
//DESCRIPTION: set auto exposure
//
//PARAMETERS :
//  @autoExp : auto exposure value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202039 "setPreviewFpsRange"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 4
	  param in name "min_fps" explicit_type "int"
	  param in name "max_fps" explicit_type "int"
	  param in name "vid_min_fps" explicit_type "int"
	  param in name "vid_max_fps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPreviewFpsRanges
//
//DESCRIPTION: set preview FPS ranges
//
//PARAMETERS :
//  @minFPS  : min FPS value
//  @maxFPS  : max FPS value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFpsRanges
//
//DESCRIPTION: set preview FPS ranges
//
//PARAMETERS :
//  @minFPS  : min FPS value
//  @maxFPS  : max FPS value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPreviewFpsRanges
//
//DESCRIPTION: set preview FPS ranges
//
//PARAMETERS :
//  @minFPS  : min FPS value
//  @maxFPS  : max FPS value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202167 "setEffect"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "effect" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setEffect
//
//DESCRIPTION: set effect
//
//PARAMETERS :
//  @effect  : effect value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setEffect
//
//DESCRIPTION: set effect
//
//PARAMETERS :
//  @effect  : effect value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setEffect
//
//DESCRIPTION: set effect
//
//PARAMETERS :
//  @effect  : effect value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202295 "setBrightness"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "brightness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBrightness
//
//DESCRIPTION: set brightness control value
//
//PARAMETERS :
//  @brightness  : brightness control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBrightness
//
//DESCRIPTION: set brightness control value
//
//PARAMETERS :
//  @brightness  : brightness control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBrightness
//
//DESCRIPTION: set brightness control value
//
//PARAMETERS :
//  @brightness  : brightness control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202423 "setFocusMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "focusMode" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFocusMode
//
//DESCRIPTION: set focus mode
//
//PARAMETERS :
//  @focusMode  : focus mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusMode
//
//DESCRIPTION: set focus mode
//
//PARAMETERS :
//  @focusMode  : focus mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusMode
//
//DESCRIPTION: set focus mode
//
//PARAMETERS :
//  @focusMode  : focus mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202551 "setFocusPosition"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "typeStr" explicit_type "char"
	  param in name "posStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFocusPosition
//
//DESCRIPTION: set focus position
//
//PARAMETERS :
//  @typeStr : focus position type, index or dac_code
//  @posStr : focus positon.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusPosition
//
//DESCRIPTION: set focus position
//
//PARAMETERS :
//  @typeStr : focus position type, index or dac_code
//  @posStr : focus positon.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202679 "setSharpness"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "sharpness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSharpness
//
//DESCRIPTION: set sharpness control value
//
//PARAMETERS :
//  @sharpness  : sharpness control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSharpness
//
//DESCRIPTION: set sharpness control value
//
//PARAMETERS :
//  @sharpness  : sharpness control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSharpness
//
//DESCRIPTION: set sharpness control value
//
//PARAMETERS :
//  @sharpness  : sharpness control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202807 "setSaturation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "saturation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSaturation
//
//DESCRIPTION: set saturation control value
//
//PARAMETERS :
//  @saturation : saturation control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSaturation
//
//DESCRIPTION: set saturation control value
//
//PARAMETERS :
//  @saturation : saturation control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSaturation
//
//DESCRIPTION: set saturation control value
//
//PARAMETERS :
//  @saturation : saturation control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44202935 "setContrast"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "contrast" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setContrast
//
//DESCRIPTION: set contrast control value
//
//PARAMETERS :
//  @contrast : contrast control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setContrast
//
//DESCRIPTION: set contrast control value
//
//PARAMETERS :
//  @contrast : contrast control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setContrast
//
//DESCRIPTION: set contrast control value
//
//PARAMETERS :
//  @contrast : contrast control value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203063 "setSkinToneEnhancement"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "sceFactor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSkinToneEnhancement
//
//DESCRIPTION: set skin tone enhancement value
//
//PARAMETERS :
//  @sceFactore  : skin tone enhancement factor value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSkinToneEnhancement
//
//DESCRIPTION: set skin tone enhancement value
//
//PARAMETERS :
//  @sceFactore  : skin tone enhancement factor value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSkinToneEnhancement
//
//DESCRIPTION: set skin tone enhancement value
//
//PARAMETERS :
//  @sceFactore  : skin tone enhancement factor value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203191 "setSceneDetect"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "sceneDetect" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSceneDetect
//
//DESCRIPTION: set scenen detect value
//
//PARAMETERS :
//  @sceneDetect  : scene detect value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneDetect
//
//DESCRIPTION: set scenen detect value
//
//PARAMETERS :
//  @sceneDetect  : scene detect value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneDetect
//
//DESCRIPTION: set scenen detect value
//
//PARAMETERS :
//  @sceneDetect  : scene detect value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203319 "setVideoHDR"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "videoHDR" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setVideoHDR
//
//DESCRIPTION: set video HDR value
//
//PARAMETERS :
//  @videoHDR  : svideo HDR value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoHDR
//
//DESCRIPTION: set video HDR value
//
//PARAMETERS :
//  @videoHDR  : svideo HDR value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVideoHDR
//
//DESCRIPTION: set video HDR value
//
//PARAMETERS :
//  @videoHDR  : svideo HDR value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203447 "setSensorSnapshotHDR"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "snapshotHDR" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSensorSnapshotHDR
//
//DESCRIPTION: set snapshot HDR value
//
//PARAMETERS :
//  @snapshotHDR  : snapshot HDR value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSensorSnapshotHDR
//
//DESCRIPTION: set snapshot HDR value
//
//PARAMETERS :
//  @snapshotHDR  : snapshot HDR value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSensorSnapshotHDR
//
//DESCRIPTION: set snapshot HDR value
//
//PARAMETERS :
//  @snapshotHDR  : snapshot HDR value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203575 "setVtEnable"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "vtEnable" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setVtEnable
//
//DESCRIPTION: set vt Enable value
//
//PARAMETERS :
//  @videoHDR  : svtEnable value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVtEnable
//
//DESCRIPTION: set vt Enable value
//
//PARAMETERS :
//  @videoHDR  : svtEnable value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setVtEnable
//
//DESCRIPTION: set vt Enable value
//
//PARAMETERS :
//  @videoHDR  : svtEnable value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203703 "setZoom"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "zoom_level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setZoom
//
//DESCRIPTION: set zoom level
//
//PARAMETERS :
//  @zoom_level : zoom level
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZoom
//
//DESCRIPTION: set zoom level
//
//PARAMETERS :
//  @zoom_level : zoom level
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setZoom
//
//DESCRIPTION: set zoom level
//
//PARAMETERS :
//  @zoom_level : zoom level
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203831 "setISOValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "isoValue" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setISOValue
//
//DESCRIPTION: set ISO value
//
//PARAMETERS :
//  @isoValue : ISO value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setISOValue
//
//DESCRIPTION: set ISO value
//
//PARAMETERS :
//  @isoValue : ISO value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setISOValue
//
//DESCRIPTION: set ISO value
//
//PARAMETERS :
//  @isoValue : ISO value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44203959 "setContinuousISO"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "isoValue" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setContinuousISO
//
//DESCRIPTION: set ISO value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setContinuousISO
//
//DESCRIPTION: set ISO value from user setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204087 "setExposureTime"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "expTimeStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setExposureTime
//
//DESCRIPTION: set exposure time
//
//PARAMETERS :
//  @expTimeStr : string of exposure time in ms
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setExposureTime
//
//DESCRIPTION: set exposure time
//
//PARAMETERS :
//  @expTimeStr : string of exposure time in ms
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204215 "setFlash"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "flashStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFlash
//
//DESCRIPTION: set flash mode
//
//PARAMETERS :
//  @flashStr : LED flash mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFlash
//
//DESCRIPTION: set flash mode
//
//PARAMETERS :
//  @flashStr : LED flash mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFlash
//
//DESCRIPTION: set flash mode
//
//PARAMETERS :
//  @flashStr : LED flash mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204343 "setAwbLock"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "awbLockStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAwbLock
//
//DESCRIPTION: set AWB lock value
//
//PARAMETERS :
//  @awbLockStr : AWB lock value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAwbLock
//
//DESCRIPTION: set AWB lock value
//
//PARAMETERS :
//  @awbLockStr : AWB lock value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAwbLock
//
//DESCRIPTION: set AWB lock value
//
//PARAMETERS :
//  @awbLockStr : AWB lock value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204471 "setMCEValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "mceStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setMCEValue
//
//DESCRIPTION: set memory color enhancement value
//
//PARAMETERS :
//  @mceStr : MCE value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMCEValue
//
//DESCRIPTION: set memory color enhancement value
//
//PARAMETERS :
//  @mceStr : MCE value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMCEValue
//
//DESCRIPTION: set memory color enhancement value
//
//PARAMETERS :
//  @mceStr : MCE value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204599 "setDISValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "disStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setDISValue
//
//DESCRIPTION: set DIS value
//
//PARAMETERS :
//  @disStr : DIS value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setDISValue
//
//DESCRIPTION: set DIS value
//
//PARAMETERS :
//  @disStr : DIS value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setDISValue
//
//DESCRIPTION: set DIS value
//
//PARAMETERS :
//  @disStr : DIS value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204727 "setHighFrameRate"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "hfrMode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHighFrameRate
//
//DESCRIPTION: set high frame rate
//
//PARAMETERS :
//  @hfrMode : HFR mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHighFrameRate
//
//DESCRIPTION: set high frame rate
//
//PARAMETERS :
//  @hfrMode : HFR mode
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204855 "setLensShadeValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "lensShadeStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setLensShadeValue
//
//DESCRIPTION: set lens shade value
//
//PARAMETERS :
//  @lensSahdeStr : lens shade value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLensShadeValue
//
//DESCRIPTION: set lens shade value
//
//PARAMETERS :
//  @lensSahdeStr : lens shade value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setLensShadeValue
//
//DESCRIPTION: set lens shade value
//
//PARAMETERS :
//  @lensSahdeStr : lens shade value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44204983 "setExposureCompensation"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "expComp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setExposureCompensation
//
//DESCRIPTION: set exposure compensation value
//
//PARAMETERS :
//  @expComp : exposure compensation value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setExposureCompensation
//
//DESCRIPTION: set exposure compensation value
//
//PARAMETERS :
//  @expComp : exposure compensation value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setExposureCompensation
//
//DESCRIPTION: set exposure compensation value
//
//PARAMETERS :
//  @expComp : exposure compensation value
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205111 "setWhiteBalance"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "wbStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setWhiteBalance
//
//DESCRIPTION: set white balance mode
//
//PARAMETERS :
//  @wbStr   : white balance mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWhiteBalance
//
//DESCRIPTION: set white balance mode
//
//PARAMETERS :
//  @wbStr   : white balance mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWhiteBalance
//
//DESCRIPTION: set white balance mode
//
//PARAMETERS :
//  @wbStr   : white balance mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205239 "setWBManualCCT"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "cctStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setWBManualCCT
//
//DESCRIPTION: set setWBManualCCT time
//
//PARAMETERS :
//  @cctStr : string of wb cct, range (2000, 8000) in K.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWBManualCCT
//
//DESCRIPTION: set setWBManualCCT time
//
//PARAMETERS :
//  @cctStr : string of wb cct, range (2000, 8000) in K.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205367 "setManualWBGains"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "gainStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setManualWBGains
//
//DESCRIPTION: set manual wb gains for r,g,b
//
//PARAMETERS :
//  @cctStr : string of wb gains, range (1.0, 4.0).
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setManualWBGains
//
//DESCRIPTION: set manual wb gains for r,g,b
//
//PARAMETERS :
//  @cctStr : string of wb gains, range (1.0, 4.0).
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205495 "setAntibanding"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "antiBandingStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAntibanding
//
//DESCRIPTION: set antibanding value
//
//PARAMETERS :
//  @antiBandingStr : antibanding value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAntibanding
//
//DESCRIPTION: set antibanding value
//
//PARAMETERS :
//  @antiBandingStr : antibanding value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAntibanding
//
//DESCRIPTION: set antibanding value
//
//PARAMETERS :
//  @antiBandingStr : antibanding value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205623 "setFocusAreas"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "focusAreasStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFocusAreas
//
//DESCRIPTION: set focus areas
//
//PARAMETERS :
//  @focusAreasStr : focus areas value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusAreas
//
//DESCRIPTION: set focus areas
//
//PARAMETERS :
//  @focusAreasStr : focus areas value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFocusAreas
//
//DESCRIPTION: set focus areas
//
//PARAMETERS :
//  @focusAreasStr : focus areas value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205751 "setMeteringAreas"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "meteringAreasStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setMeteringAreas
//
//DESCRIPTION: set metering areas value
//
//PARAMETERS :
//  @meteringAreasStr : metering areas value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMeteringAreas
//
//DESCRIPTION: set metering areas value
//
//PARAMETERS :
//  @meteringAreasStr : metering areas value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMeteringAreas
//
//DESCRIPTION: set metering areas value
//
//PARAMETERS :
//  @meteringAreasStr : metering areas value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44205879 "setSceneMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "sceneModeStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSceneMode
//
//DESCRIPTION: set scene mode
//
//PARAMETERS :
//  @sceneModeStr : scene mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneMode
//
//DESCRIPTION: set scene mode
//
//PARAMETERS :
//  @sceneModeStr : scene mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSceneMode
//
//DESCRIPTION: set scene mode
//
//PARAMETERS :
//  @sceneModeStr : scene mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206007 "setSelectableZoneAf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "selZoneAFStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSelectableZoneAf
//
//DESCRIPTION: set selectable zone AF algorithm
//
//PARAMETERS :
//  @selZoneAFStr : selectable zone AF algorithm value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSelectableZoneAf
//
//DESCRIPTION: set selectable zone AF algorithm
//
//PARAMETERS :
//  @selZoneAFStr : selectable zone AF algorithm value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSelectableZoneAf
//
//DESCRIPTION: set selectable zone AF algorithm
//
//PARAMETERS :
//  @selZoneAFStr : selectable zone AF algorithm value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206135 "setAEBracket"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "aecBracketStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAEBracket
//
//DESCRIPTION: set AE bracket value
//
//PARAMETERS :
//  @aecBracketStr : AE bracket value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAEBracket
//
//DESCRIPTION: set AE bracket value
//
//PARAMETERS :
//  @aecBracketStr : AE bracket value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAEBracket
//
//DESCRIPTION: set AE bracket value
//
//PARAMETERS :
//  @aecBracketStr : AE bracket value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206263 "setAFBracket"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "afBracketStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setAFBracket
//
//DESCRIPTION: set AF bracket value
//
//PARAMETERS :
//  @afBracketStr : AF bracket value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAFBracket
//
//DESCRIPTION: set AF bracket value
//
//PARAMETERS :
//  @afBracketStr : AF bracket value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setAFBracket
//
//DESCRIPTION: set AF bracket value
//
//PARAMETERS :
//  @afBracketStr : AF bracket value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206391 "setReFocus"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "reFocusStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setReFocus
//
//DESCRIPTION: set refocus value
//
//PARAMETERS :
//  @afBracketStr : refocus value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setReFocus
//
//DESCRIPTION: set refocus value
//
//PARAMETERS :
//  @afBracketStr : refocus value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206519 "setChromaFlash"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "chromaFlashStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setChromaFlash
//
//DESCRIPTION: set chroma flash value
//
//PARAMETERS :
//  @aecBracketStr : chroma flash value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setChromaFlash
//
//DESCRIPTION: set chroma flash value
//
//PARAMETERS :
//  @aecBracketStr : chroma flash value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setChromaFlash
//
//DESCRIPTION: set chroma flash value
//
//PARAMETERS :
//  @aecBracketStr : chroma flash value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206647 "setOptiZoom"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "optiZoomStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setOptiZoom
//
//DESCRIPTION: set opti zoom value
//
//PARAMETERS :
//  @aecBracketStr : opti zoom value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setOptiZoom
//
//DESCRIPTION: set opti zoom value
//
//PARAMETERS :
//  @optiZoomStr : opti zoom value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setOptiZoom
//
//DESCRIPTION: set opti zoom value
//
//PARAMETERS :
//  @optiZoomStr : opti zoom value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206775 "setHDRMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "hdrModeStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHDRMode
//
//DESCRIPTION: set hdr mode value
//
//PARAMETERS :
//  @hdrModeStr : hdr mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRMode
//
//DESCRIPTION: set hdr mode value
//
//PARAMETERS :
//  @hdrModeStr : hdr mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44206903 "setHDRNeed1x"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "hdrNeed1xStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHDRNeed1x
//
//DESCRIPTION: set hdr need 1x value
//
//PARAMETERS :
//  @hdrModeStr : hdr need 1x value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setHDRNeed1x
//
//DESCRIPTION: set hdr need 1x value
//
//PARAMETERS :
//  @hdrModeStr : hdr need 1x value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207031 "setTruePortrait"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "truePortraitStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTruePortrait
//
//DESCRIPTION: set true portrait value
//
//PARAMETERS :
//  @optiZoomStr : true portrait value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTruePortrait
//
//DESCRIPTION: set true portrait value
//
//PARAMETERS :
//  @optiZoomStr : true portrait value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207159 "setSeeMore"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "seeMoreStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSeeMore
//
//DESCRIPTION: set see more value
//
//PARAMETERS :
//  @seeMoreStr : see more value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSeeMore
//
//DESCRIPTION: set see more value
//
//PARAMETERS :
//  @seeMoreStr : see more value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207287 "setStillMore"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "stillMoreStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setStillMore
//
//DESCRIPTION: set still more value
//
//PARAMETERS :
//  @seeMoreStr : still more value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setStillMore
//
//DESCRIPTION: set still more value
//
//PARAMETERS :
//  @seeMoreStr : still more value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207415 "setRedeyeReduction"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "redeyeStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRedeyeReduction
//
//DESCRIPTION: set red eye reduction value
//
//PARAMETERS :
//  @redeyeStr : red eye reduction value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRedeyeReduction
//
//DESCRIPTION: set red eye reduction value
//
//PARAMETERS :
//  @redeyeStr : red eye reduction value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRedeyeReduction
//
//DESCRIPTION: set red eye reduction value
//
//PARAMETERS :
//  @redeyeStr : red eye reduction value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207543 "setWaveletDenoise"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "wnrStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setWaveletDenoise
//
//DESCRIPTION: set wavelet denoise value
//
//PARAMETERS :
//  @wnrStr : wavelet denoise value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWaveletDenoise
//
//DESCRIPTION: set wavelet denoise value
//
//PARAMETERS :
//  @wnrStr : wavelet denoise value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setWaveletDenoise
//
//DESCRIPTION: set wavelet denoise value
//
//PARAMETERS :
//  @wnrStr : wavelet denoise value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207671 "setFaceRecognition"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "faceRecog" explicit_type "char"
	  param in name "maxFaces" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFaceRecognition
//
//DESCRIPTION: set face recognition value
//
//PARAMETERS :
//  @faceRecog  : face recognition value string
//  @maxFaces   : number of max faces to be detected/recognized
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFaceRecognition
//
//DESCRIPTION: set face recognition value
//
//PARAMETERS :
//  @faceRecog  : face recognition value string
//  @maxFaces   : number of max faces to be detected/recognized
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207799 "setTintlessValue"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "tintStr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setTintlessValue
//
//DESCRIPTION: set tintless value
//
//PARAMETERS :
//  @tintStr : Tintless value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTintlessValue
//
//DESCRIPTION: set tintless value
//
//PARAMETERS :
//  @tintStr : Tintless value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setTintlessValue
//
//DESCRIPTION: set tintless value
//
//PARAMETERS :
//  @tintStr : Tintless value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44207927 "UpdateHFRFrameRate"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "params" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : UpdateHFRFrameRate
//
//DESCRIPTION: set preview FPS range based on HFR setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : bool true/false
//                 true -if HAL needs to overwrite FPS range set by app, false otherwise.
//==========================================================================

//===========================================================================
//FUNCTION   : UpdateHFRFrameRate
//
//DESCRIPTION: set preview FPS range based on HFR setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : bool true/false
//                 true -if HAL needs to overwrite FPS range set by app, false otherwise.
//==========================================================================

//===========================================================================
//FUNCTION   : UpdateHFRFrameRate
//
//DESCRIPTION: set preview FPS range based on HFR setting
//
//PARAMETERS :
//  @params  : user setting parameters
//
//RETURN     : bool true/false
//                 true -if HAL needs to overwrite FPS range set by app, false otherwise.
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208055 "setRdiMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "str" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setRdiMode
//
//DESCRIPTION: set rdi mode value
//
//PARAMETERS :
//  @str     : rdi mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRdiMode
//
//DESCRIPTION: set rdi mode value
//
//PARAMETERS :
//  @str     : rdi mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setRdiMode
//
//DESCRIPTION: set rdi mode value
//
//PARAMETERS :
//  @str     : rdi mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208183 "setSecureMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "str" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSecureMode
//
//DESCRIPTION: set secure mode value
//
//PARAMETERS :
//  @str     : secure mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSecureMode
//
//DESCRIPTION: set secure mode value
//
//PARAMETERS :
//  @str     : secure mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSecureMode
//
//DESCRIPTION: set secure mode value
//
//PARAMETERS :
//  @str     : secure mode value string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208311 "setCDSMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "cds_mode" explicit_type "int32_t"
	  param in name "initCommit" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setCDSMode
//
//DESCRIPTION: set CDS mode
//
//PARAMETERS :
//  @cds_mode : cds mode
//  @initCommit: if configuration list needs to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setCDSMode
//
//DESCRIPTION: set CDS mode
//
//PARAMETERS :
//  @cds_mode : cds mode
//  @initCommit: if configuration list needs to be initialized and commited
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208439 "parseGains"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 4
	  param in name "gainStr" explicit_type "char"
	  param inout name "r_gain" explicit_type "float"
	  param inout name "g_gain" explicit_type "float"
	  param inout name "b_gain" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : parseGains
//
//DESCRIPTION: parse WB gains
//
//PARAMETERS :
//  @gainStr : WB result string
//  @r_gain  : WB red gain
//  @g_gain  : WB green gain
//  @b_gain  : WB blue gain
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseGains
//
//DESCRIPTION: parse WB gains
//
//PARAMETERS :
//  @gainStr : WB result string
//  @r_gain  : WB red gain
//  @g_gain  : WB green gain
//  @b_gain  : WB blue gain
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} & ${p1}, ${t2} & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208567 "parse_pair"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 5
	  param in name "str" explicit_type "char"
	  param inout name "first" explicit_type "int"
	  param inout name "second" explicit_type "int"
	  param in name "delim" explicit_type "char"
	  param inout name "endptr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : parse_pair
//
//DESCRIPTION: helper function to parse string like \"640x480\" or \"10000,20000\"
//
//PARAMETERS :
//  @str     : input string to be parse
//  @first   : [output] first value of the pair
//  @second  : [output]  second value of the pair
//  @delim   : [input] delimeter to seperate the pair
//  @endptr  : [output] ptr to the end of the pair string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parse_pair
//
//DESCRIPTION: helper function to parse string like \"640x480\" or \"10000,20000\"
//
//PARAMETERS :
//  @str     : input string to be parse
//  @first   : [output] first value of the pair
//  @second  : [output]  second value of the pair
//  @delim   : [input] delimeter to seperate the pair
//  @endptr  : [output] ptr to the end of the pair string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parse_pair
//
//DESCRIPTION: helper function to parse string like \"640x480\" or \"10000,20000\"
//
//PARAMETERS :
//  @str     : input string to be parse
//  @first   : [output] first value of the pair
//  @second  : [output]  second value of the pair
//  @delim   : [input] delimeter to seperate the pair
//  @endptr  : [output] ptr to the end of the pair string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208695 "parseSizesList"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "sizesStr" explicit_type "char"
	  param inout name "sizes" explicit_type "Vector<Size>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : parseSizesList
//
//DESCRIPTION: helper function to parse string containing sizes
//
//PARAMETERS :
//  @sizesStr: [input] input string to be parse
//  @sizes   : [output] reference to store parsed sizes
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : parseSizesList
//
//DESCRIPTION: helper function to parse string containing sizes
//
//PARAMETERS :
//  @sizesStr: [input] input string to be parse
//  @sizes   : [output] reference to store parsed sizes
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : parseSizesList
//
//DESCRIPTION: helper function to parse string containing sizes
//
//PARAMETERS :
//  @sizesStr: [input] input string to be parse
//  @sizes   : [output] reference to store parsed sizes
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208823 "parseNDimVector"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 4
	  param in name "str" explicit_type "char"
	  param inout name "num" explicit_type "int"
	  param in name "N" explicit_type "int"
	  param in name "delim" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : parseNDimVector
//
//DESCRIPTION: helper function to parse a string like \"(1, 2, 3, 4, ..., N)\"
//             into N-dimension vector
//
//PARAMETERS :
//  @str     : string to be parsed
//  @num     : output array of size N to store vector element values
//  @N       : number of dimension
//  @delim   : delimeter to seperete string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseNDimVector
//
//DESCRIPTION: helper function to parse a string like \"(1, 2, 3, 4, ..., N)\"
//             into N-dimension vector
//
//PARAMETERS :
//  @str     : string to be parsed
//  @num     : output array of size N to store vector element values
//  @N       : number of dimension
//  @delim   : delimeter to seperete string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseNDimVector
//
//DESCRIPTION: helper function to parse a string like \"(1, 2, 3, 4, ..., N)\"
//             into N-dimension vector
//
//PARAMETERS :
//  @str     : string to be parsed
//  @num     : output array of size N to store vector element values
//  @N       : number of dimension
//  @delim   : delimeter to seperete string
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44208951 "parseCameraAreaString"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 4
	  param in name "str" explicit_type "char"
	  param in name "max_num_areas" explicit_type "int"
	  param inout name "pAreas" type class_ref 3655351 // cam_area_t
	  param inout name "num_areas_found" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : parseCameraAreaString
//
//DESCRIPTION: helper function to parse a string of camera areas like
//             \"(1, 2, 3, 4, 5),(1, 2, 3, 4, 5),...\"
//
//PARAMETERS :
//  @str             : string to be parsed
//  @max_num_areas   : max number of areas
//  @pAreas          : ptr to struct to store areas
//  @num_areas_found : number of areas found
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseCameraAreaString
//
//DESCRIPTION: helper function to parse a string of camera areas like
//             \"(1, 2, 3, 4, 5),(1, 2, 3, 4, 5),...\"
//
//PARAMETERS :
//  @str             : string to be parsed
//  @max_num_areas   : max number of areas
//  @pAreas          : ptr to struct to store areas
//  @num_areas_found : number of areas found
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseCameraAreaString
//
//DESCRIPTION: helper function to parse a string of camera areas like
//             \"(1, 2, 3, 4, 5),(1, 2, 3, 4, 5),...\"
//
//PARAMETERS :
//  @str             : string to be parsed
//  @max_num_areas   : max number of areas
//  @pAreas          : ptr to struct to store areas
//  @num_areas_found : number of areas found
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209079 "validateCameraAreas"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param inout name "areas" type class_ref 3655351 // cam_area_t
	  param in name "num_areas" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : validateCameraAreas
//
//DESCRIPTION: helper function to validate camera areas within (-1000, 1000)
//
//PARAMETERS :
//  @areas     : ptr to array of areas
//  @num_areas : number of areas
//
//RETURN     : true --  area is in valid range
//             false -- not valid
//==========================================================================

//===========================================================================
//FUNCTION   : validateCameraAreas
//
//DESCRIPTION: helper function to validate camera areas within (-1000, 1000)
//
//PARAMETERS :
//  @areas     : ptr to array of areas
//  @num_areas : number of areas
//
//RETURN     : true --  area is in valid range
//             false -- not valid
//==========================================================================

//===========================================================================
//FUNCTION   : validateCameraAreas
//
//DESCRIPTION: helper function to validate camera areas within (-1000, 1000)
//
//PARAMETERS :
//  @areas     : ptr to array of areas
//  @num_areas : number of areas
//
//RETURN     : true --  area is in valid range
//             false -- not valid
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209207 "parseGPSCoordinate"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "coord_str" explicit_type "char"
	  param inout name "coord" type class_ref 3633207 // rat_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : parseGPSCoordinate
//
//DESCRIPTION: parse GPS coordinate string
//
//PARAMETERS :
//  @coord_str : [input] coordinate string
//  @coord     : [output]  ptr to struct to store coordinate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseGPSCoordinate
//
//DESCRIPTION: parse GPS coordinate string
//
//PARAMETERS :
//  @coord_str : [input] coordinate string
//  @coord     : [output]  ptr to struct to store coordinate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : parseGPSCoordinate
//
//DESCRIPTION: parse GPS coordinate string
//
//PARAMETERS :
//  @coord_str : [input] coordinate string
//  @coord     : [output]  ptr to struct to store coordinate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209335 "getRational"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "rat" type class_ref 3633207 // rat_t
	  param in name "num" explicit_type "int"
	  param in name "denom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getRational
//
//DESCRIPTION: compose rational struct
//
//PARAMETERS :
//  @rat     : ptr to struct to store rational info
//  @num     :num of the rational
//  @denom   : denom of the rational
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRational
//
//DESCRIPTION: compose rational struct
//
//PARAMETERS :
//  @rat     : ptr to struct to store rational info
//  @num     :num of the rational
//  @denom   : denom of the rational
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRational
//
//DESCRIPTION: compose rational struct
//
//PARAMETERS :
//  @rat     : ptr to struct to store rational info
//  @num     :num of the rational
//  @denom   : denom of the rational
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209463 "createSizesString"
	preserve_cpp_body_indent private explicit_return_type "String8"
	nparams 2
	  param in name "sizes" type class_ref 3646135 // cam_dimension_t
	  param in name "len" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : createSizesString
//
//DESCRIPTION: create string obj contains array of dimensions
//
//PARAMETERS :
//  @sizes   : array of dimensions
//  @len     : size of dimension array
//
//RETURN     : string obj
//==========================================================================

//===========================================================================
//FUNCTION   : createSizesString
//
//DESCRIPTION: create string obj contains array of dimensions
//
//PARAMETERS :
//  @sizes   : array of dimensions
//  @len     : size of dimension array
//
//RETURN     : string obj
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209591 "createHfrValuesString"
	private explicit_return_type "String8"
	nparams 4
	  param in name "values" type class_ref 3655479 // cam_hfr_info_t
	  param in name "len" explicit_type "size_t"
	  param in name "map" explicit_type "QCameraMap<cam_hfr_mode_t>"
	  param in name "map_len" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209719 "createHfrSizesString"
	preserve_cpp_body_indent private explicit_return_type "String8"
	nparams 2
	  param in name "values" type class_ref 3655479 // cam_hfr_info_t
	  param in name "len" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : createHfrSizesString
//
//DESCRIPTION: create string obj contains array of hfr sizes
//
//PARAMETERS :
//  @values  : array of hfr info
//  @len     : size of the array
//
//RETURN     : string obj
//==========================================================================

//===========================================================================
//FUNCTION   : createHfrSizesString
//
//DESCRIPTION: create string obj contains array of hfr sizes
//
//PARAMETERS :
//  @values  : array of hfr info
//  @len     : size of the array
//
//RETURN     : string obj
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209847 "createFpsRangeString"
	preserve_cpp_body_indent private explicit_return_type "String8"
	nparams 3
	  param in name "fps" type class_ref 3645495 // cam_fps_range_t
	  param in name "len" explicit_type "size_t"
	  param inout name "default_fps_index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : createFpsRangeString
//
//DESCRIPTION: create string obj contains array of FPS ranges
//
//PARAMETERS :
//  @fps     : array of fps ranges
//  @len     : size of the array
//  @default_fps_index : reference to index of default fps range
//
//RETURN     : string obj
//==========================================================================

//===========================================================================
//FUNCTION   : createFpsRangeString
//
//DESCRIPTION: create string obj contains array of FPS ranges
//
//PARAMETERS :
//  @fps     : array of fps ranges
//  @len     : size of the array
//  @default_fps_index : reference to index of default fps range
//
//RETURN     : string obj
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44209975 "createFpsString"
	preserve_cpp_body_indent private explicit_return_type "String8"
	nparams 1
	  param inout name "fps" type class_ref 3645495 // cam_fps_range_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : createFpsString
//
//DESCRIPTION: create string obj contains array of FPS rates
//
//PARAMETERS :
//  @fps     : default fps range
//
//RETURN     : string obj
//==========================================================================

//===========================================================================
//FUNCTION   : createFpsString
//
//DESCRIPTION: create string obj contains array of FPS rates
//
//PARAMETERS :
//  @fps     : default fps range
//
//RETURN     : string obj
//==========================================================================

//===========================================================================
//FUNCTION   : createFpsString
//
//DESCRIPTION: create string obj contains array of FPS rates
//
//PARAMETERS :
//  @fps     : default fps range
//
//RETURN     : string obj
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44210103 "createZoomRatioValuesString"
	preserve_cpp_body_indent private explicit_return_type "String8"
	nparams 2
	  param inout name "zoomRatios" explicit_type "uint32_t"
	  param in name "length" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : createZoomRatioValuesString
//
//DESCRIPTION: create string obj contains array of zoom ratio values
//
//PARAMETERS :
//  @zoomRaios  : array of zoom ratios
//  @length     : size of the array
//
//RETURN     : string obj
//==========================================================================

//===========================================================================
//FUNCTION   : createZoomRatioValuesString
//
//DESCRIPTION: create string obj contains array of zoom ratio values
//
//PARAMETERS :
//  @zoomRaios  : array of zoom ratios
//  @length     : size of the array
//
//RETURN     : string obj
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44210231 "initBatchUpdate"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "p_table" type class_ref 3655607 // parm_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initBatchUpdate
//
//DESCRIPTION: init camera parameters buf entries
//
//PARAMETERS :
//  @p_table : ptr to parameter buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initBatchUpdate
//
//DESCRIPTION: init camera parameters buf entries
//
//PARAMETERS :
//  @p_table : ptr to parameter buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initBatchUpdate
//
//DESCRIPTION: init camera parameters buf entries
//
//PARAMETERS :
//  @p_table : ptr to parameter buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ops for batch set/get params with server"
      end

      operation 44210359 "commitSetBatch"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitSetBatch
//
//DESCRIPTION: commit all set parameters in the batch work to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitSetBatch
//
//DESCRIPTION: commit all set parameters in the batch work to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitSetBatch
//
//DESCRIPTION: commit all set parameters in the batch work to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44210487 "commitGetBatch"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitGetBatch
//
//DESCRIPTION: commit all get parameters in the batch work to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitGetBatch
//
//DESCRIPTION: commit all get parameters in the batch work to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitGetBatch
//
//DESCRIPTION: commit all get parameters in the batch work to backend
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44210615 "updateParamEntry"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "key" explicit_type "char"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : updateParamEntry
//
//DESCRIPTION: update a parameter entry in the local temp map obj
//
//PARAMETERS :
//  @key     : key of the entry
//  @value   : value of the entry
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateParamEntry
//
//DESCRIPTION: update a parameter entry in the local temp map obj
//
//PARAMETERS :
//  @key     : key of the entry
//  @value   : value of the entry
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : updateParamEntry
//
//DESCRIPTION: update a parameter entry in the local temp map obj
//
//PARAMETERS :
//  @key     : key of the entry
//  @value   : value of the entry
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ops to tempororily update parameter entries and commit"
      end

      operation 44210743 "commitParamChanges"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : commitParamChanges
//
//DESCRIPTION: commit all changes in local temp map obj into parameter obj
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitParamChanges
//
//DESCRIPTION: commit all changes in local temp map obj into parameter obj
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : commitParamChanges
//
//DESCRIPTION: commit all changes in local temp map obj into parameter obj
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7052343 // THUMBNAIL_SIZES_MAP (<directional composition>)
	relation 7052343 *-->
	  a role_name "THUMBNAIL_SIZES_MAP" multiplicity "[]" init_value "= {
    { 512, 288 }, //1.777778
    { 480, 288 }, //1.666667
    { 256, 154 }, //1.66233
    { 432, 288 }, //1.5
    { 320, 240 }, //1.33333
    { 176, 144 }, //1.222222
    { 0, 0 }      // required by Android SDK
}" class_relation const_relation private
	    comment " Map from strings to values
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052343 // THUMBNAIL_SIZES_MAP (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13284791 "AUTO_EXPOSURE_MAP"
	class_attribute const_attribute private explicit_type "cam_auto_exposure_mode_type"
	multiplicity "[]"
	init_value "= {
    { AUTO_EXPOSURE_FRAME_AVG,           CAM_AEC_MODE_FRAME_AVERAGE },
    { AUTO_EXPOSURE_CENTER_WEIGHTED,     CAM_AEC_MODE_CENTER_WEIGHTED },
    { AUTO_EXPOSURE_SPOT_METERING,       CAM_AEC_MODE_SPOT_METERING },
    { AUTO_EXPOSURE_SMART_METERING,      CAM_AEC_MODE_SMART_METERING },
    { AUTO_EXPOSURE_USER_METERING,       CAM_AEC_MODE_USER_METERING },
    { AUTO_EXPOSURE_SPOT_METERING_ADV,   CAM_AEC_MODE_SPOT_METERING_ADV },
    { AUTO_EXPOSURE_CENTER_WEIGHTED_ADV, CAM_AEC_MODE_CENTER_WEIGHTED_ADV },
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13284919 "PREVIEW_FORMATS_MAP"
	class_attribute const_attribute private explicit_type "cam_format_t"
	multiplicity "[]"
	init_value "= {
    {PIXEL_FORMAT_YUV420SP,        CAM_FORMAT_YUV_420_NV21},
    {PIXEL_FORMAT_YUV420P,         CAM_FORMAT_YUV_420_YV12},
    {PIXEL_FORMAT_YUV420SP_ADRENO, CAM_FORMAT_YUV_420_NV21_ADRENO},
    {PIXEL_FORMAT_YV12,            CAM_FORMAT_YUV_420_YV12},
    {PIXEL_FORMAT_NV12,            CAM_FORMAT_YUV_420_NV12},
    {QC_PIXEL_FORMAT_NV12_VENUS,   CAM_FORMAT_YUV_420_NV12_VENUS}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285047 "PICTURE_TYPES_MAP"
	class_attribute const_attribute private explicit_type "cam_format_t"
	multiplicity "[]"
	init_value "= {
    {PIXEL_FORMAT_JPEG,                          CAM_FORMAT_JPEG},
    {PIXEL_FORMAT_YUV420SP,                      CAM_FORMAT_YUV_420_NV21},
    {PIXEL_FORMAT_YUV422SP,                      CAM_FORMAT_YUV_422_NV16},
    {QC_PIXEL_FORMAT_YUV_RAW_8BIT_YUYV,          CAM_FORMAT_YUV_RAW_8BIT_YUYV},
    {QC_PIXEL_FORMAT_YUV_RAW_8BIT_YVYU,          CAM_FORMAT_YUV_RAW_8BIT_YVYU},
    {QC_PIXEL_FORMAT_YUV_RAW_8BIT_UYVY,          CAM_FORMAT_YUV_RAW_8BIT_UYVY},
    {QC_PIXEL_FORMAT_YUV_RAW_8BIT_VYUY,          CAM_FORMAT_YUV_RAW_8BIT_VYUY},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8GBRG,       CAM_FORMAT_BAYER_QCOM_RAW_8BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8GRBG,       CAM_FORMAT_BAYER_QCOM_RAW_8BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8RGGB,       CAM_FORMAT_BAYER_QCOM_RAW_8BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_8BGGR,       CAM_FORMAT_BAYER_QCOM_RAW_8BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10GBRG,      CAM_FORMAT_BAYER_QCOM_RAW_10BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10GRBG,      CAM_FORMAT_BAYER_QCOM_RAW_10BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10RGGB,      CAM_FORMAT_BAYER_QCOM_RAW_10BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_10BGGR,      CAM_FORMAT_BAYER_QCOM_RAW_10BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12GBRG,      CAM_FORMAT_BAYER_QCOM_RAW_12BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12GRBG,      CAM_FORMAT_BAYER_QCOM_RAW_12BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12RGGB,      CAM_FORMAT_BAYER_QCOM_RAW_12BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_QCOM_RAW_12BGGR,      CAM_FORMAT_BAYER_QCOM_RAW_12BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8GBRG,       CAM_FORMAT_BAYER_MIPI_RAW_8BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8GRBG,       CAM_FORMAT_BAYER_MIPI_RAW_8BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8RGGB,       CAM_FORMAT_BAYER_MIPI_RAW_8BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_8BGGR,       CAM_FORMAT_BAYER_MIPI_RAW_8BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10GBRG,      CAM_FORMAT_BAYER_MIPI_RAW_10BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10GRBG,      CAM_FORMAT_BAYER_MIPI_RAW_10BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10RGGB,      CAM_FORMAT_BAYER_MIPI_RAW_10BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_10BGGR,      CAM_FORMAT_BAYER_MIPI_RAW_10BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12GBRG,      CAM_FORMAT_BAYER_MIPI_RAW_12BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12GRBG,      CAM_FORMAT_BAYER_MIPI_RAW_12BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12RGGB,      CAM_FORMAT_BAYER_MIPI_RAW_12BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_MIPI_RAW_12BGGR,      CAM_FORMAT_BAYER_MIPI_RAW_12BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8GBRG,     CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_8BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8GRBG,     CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_8BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8RGGB,     CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_8BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_8BGGR,     CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_8BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10GBRG,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_10BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10GRBG,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_10BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10RGGB,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_10BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_10BGGR,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_10BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12GBRG,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_12BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12GRBG,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_12BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12RGGB,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_12BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_QCOM_12BGGR,    CAM_FORMAT_BAYER_IDEAL_RAW_QCOM_12BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8GBRG,     CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_8BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8GRBG,     CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_8BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8RGGB,     CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_8BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_8BGGR,     CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_8BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10GBRG,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_10BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10GRBG,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_10BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10RGGB,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_10BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_10BGGR,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_10BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12GBRG,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_12BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12GRBG,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_12BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12RGGB,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_12BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_MIPI_12BGGR,    CAM_FORMAT_BAYER_IDEAL_RAW_MIPI_12BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8GBRG,   CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN8_8BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8GRBG,   CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN8_8BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8RGGB,   CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN8_8BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN8_8BGGR,   CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN8_8BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8GBRG,  CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_8BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8GRBG,  CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_8BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8RGGB,  CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_8BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_8BGGR,  CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_8BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10GBRG, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_10BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10GRBG, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_10BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10RGGB, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_10BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_10BGGR, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_10BPP_BGGR},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12GBRG, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_12BPP_GBRG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12GRBG, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_12BPP_GRBG},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12RGGB, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_12BPP_RGGB},
    {QC_PIXEL_FORMAT_BAYER_IDEAL_PLAIN16_12BGGR, CAM_FORMAT_BAYER_IDEAL_RAW_PLAIN16_12BPP_BGGR}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285175 "FOCUS_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_focus_mode_type"
	multiplicity "[]"
	init_value "= {
    { FOCUS_MODE_AUTO,               CAM_FOCUS_MODE_AUTO },
    { FOCUS_MODE_INFINITY,           CAM_FOCUS_MODE_INFINITY },
    { FOCUS_MODE_MACRO,              CAM_FOCUS_MODE_MACRO },
    { FOCUS_MODE_FIXED,              CAM_FOCUS_MODE_FIXED },
    { FOCUS_MODE_EDOF,               CAM_FOCUS_MODE_EDOF },
    { FOCUS_MODE_CONTINUOUS_PICTURE, CAM_FOCUS_MODE_CONTINOUS_PICTURE },
    { FOCUS_MODE_CONTINUOUS_VIDEO,   CAM_FOCUS_MODE_CONTINOUS_VIDEO }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285303 "EFFECT_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_effect_mode_type"
	multiplicity "[]"
	init_value "= {
    { EFFECT_NONE,       CAM_EFFECT_MODE_OFF },
    { EFFECT_MONO,       CAM_EFFECT_MODE_MONO },
    { EFFECT_NEGATIVE,   CAM_EFFECT_MODE_NEGATIVE },
    { EFFECT_SOLARIZE,   CAM_EFFECT_MODE_SOLARIZE },
    { EFFECT_SEPIA,      CAM_EFFECT_MODE_SEPIA },
    { EFFECT_POSTERIZE,  CAM_EFFECT_MODE_POSTERIZE },
    { EFFECT_WHITEBOARD, CAM_EFFECT_MODE_WHITEBOARD },
    { EFFECT_BLACKBOARD, CAM_EFFECT_MODE_BLACKBOARD },
    { EFFECT_AQUA,       CAM_EFFECT_MODE_AQUA },
    { EFFECT_EMBOSS,     CAM_EFFECT_MODE_EMBOSS },
    { EFFECT_SKETCH,     CAM_EFFECT_MODE_SKETCH },
    { EFFECT_NEON,       CAM_EFFECT_MODE_NEON }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285431 "SCENE_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_scene_mode_type"
	multiplicity "[]"
	init_value "= {
    { SCENE_MODE_AUTO,           CAM_SCENE_MODE_OFF },
    { SCENE_MODE_ACTION,         CAM_SCENE_MODE_ACTION },
    { SCENE_MODE_PORTRAIT,       CAM_SCENE_MODE_PORTRAIT },
    { SCENE_MODE_LANDSCAPE,      CAM_SCENE_MODE_LANDSCAPE },
    { SCENE_MODE_NIGHT,          CAM_SCENE_MODE_NIGHT },
    { SCENE_MODE_NIGHT_PORTRAIT, CAM_SCENE_MODE_NIGHT_PORTRAIT },
    { SCENE_MODE_THEATRE,        CAM_SCENE_MODE_THEATRE },
    { SCENE_MODE_BEACH,          CAM_SCENE_MODE_BEACH },
    { SCENE_MODE_SNOW,           CAM_SCENE_MODE_SNOW },
    { SCENE_MODE_SUNSET,         CAM_SCENE_MODE_SUNSET },
    { SCENE_MODE_STEADYPHOTO,    CAM_SCENE_MODE_ANTISHAKE },
    { SCENE_MODE_FIREWORKS ,     CAM_SCENE_MODE_FIREWORKS },
    { SCENE_MODE_SPORTS ,        CAM_SCENE_MODE_SPORTS },
    { SCENE_MODE_PARTY,          CAM_SCENE_MODE_PARTY },
    { SCENE_MODE_CANDLELIGHT,    CAM_SCENE_MODE_CANDLELIGHT },
    { SCENE_MODE_ASD,            CAM_SCENE_MODE_AUTO },
    { SCENE_MODE_BACKLIGHT,      CAM_SCENE_MODE_BACKLIGHT },
    { SCENE_MODE_FLOWERS,        CAM_SCENE_MODE_FLOWERS },
    { SCENE_MODE_AR,             CAM_SCENE_MODE_AR },
    { SCENE_MODE_HDR,            CAM_SCENE_MODE_HDR },
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285559 "FLASH_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_flash_mode_t"
	multiplicity "[]"
	init_value "= {
    { FLASH_MODE_OFF,   CAM_FLASH_MODE_OFF },
    { FLASH_MODE_AUTO,  CAM_FLASH_MODE_AUTO },
    { FLASH_MODE_ON,    CAM_FLASH_MODE_ON },
    { FLASH_MODE_TORCH, CAM_FLASH_MODE_TORCH }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285687 "FOCUS_ALGO_MAP"
	class_attribute const_attribute private explicit_type "cam_focus_algorithm_type"
	multiplicity "[]"
	init_value "= {
    { FOCUS_ALGO_AUTO,            CAM_FOCUS_ALGO_AUTO },
    { FOCUS_ALGO_SPOT_METERING,   CAM_FOCUS_ALGO_SPOT },
    { FOCUS_ALGO_CENTER_WEIGHTED, CAM_FOCUS_ALGO_CENTER_WEIGHTED },
    { FOCUS_ALGO_FRAME_AVERAGE,   CAM_FOCUS_ALGO_AVERAGE }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285815 "WHITE_BALANCE_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_wb_mode_type"
	multiplicity "[]"
	init_value "= {
    { WHITE_BALANCE_AUTO,            CAM_WB_MODE_AUTO },
    { WHITE_BALANCE_INCANDESCENT,    CAM_WB_MODE_INCANDESCENT },
    { WHITE_BALANCE_FLUORESCENT,     CAM_WB_MODE_FLUORESCENT },
    { WHITE_BALANCE_WARM_FLUORESCENT,CAM_WB_MODE_WARM_FLUORESCENT},
    { WHITE_BALANCE_DAYLIGHT,        CAM_WB_MODE_DAYLIGHT },
    { WHITE_BALANCE_CLOUDY_DAYLIGHT, CAM_WB_MODE_CLOUDY_DAYLIGHT },
    { WHITE_BALANCE_TWILIGHT,        CAM_WB_MODE_TWILIGHT },
    { WHITE_BALANCE_SHADE,           CAM_WB_MODE_SHADE }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13285943 "ANTIBANDING_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_antibanding_mode_type"
	multiplicity "[]"
	init_value "= {
    { ANTIBANDING_OFF,  CAM_ANTIBANDING_MODE_OFF },
    { ANTIBANDING_50HZ, CAM_ANTIBANDING_MODE_50HZ },
    { ANTIBANDING_60HZ, CAM_ANTIBANDING_MODE_60HZ },
    { ANTIBANDING_AUTO, CAM_ANTIBANDING_MODE_AUTO }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286071 "ISO_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_iso_mode_type"
	multiplicity "[]"
	init_value "= {
    { ISO_AUTO,  CAM_ISO_MODE_AUTO },
    { ISO_HJR,   CAM_ISO_MODE_DEBLUR },
    { ISO_100,   CAM_ISO_MODE_100 },
    { ISO_200,   CAM_ISO_MODE_200 },
    { ISO_400,   CAM_ISO_MODE_400 },
    { ISO_800,   CAM_ISO_MODE_800 },
    { ISO_1600,  CAM_ISO_MODE_1600 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286199 "HFR_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_hfr_mode_t"
	multiplicity "[]"
	init_value "= {
    { VIDEO_HFR_OFF, CAM_HFR_MODE_OFF },
    { VIDEO_HFR_2X,  CAM_HFR_MODE_60FPS },
    { VIDEO_HFR_3X,  CAM_HFR_MODE_90FPS },
    { VIDEO_HFR_4X,  CAM_HFR_MODE_120FPS },
    { VIDEO_HFR_5X,  CAM_HFR_MODE_150FPS }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286327 "BRACKETING_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_bracket_mode"
	multiplicity "[]"
	init_value "= {
    { AE_BRACKET_OFF, CAM_EXP_BRACKETING_OFF },
    { AE_BRACKET,     CAM_EXP_BRACKETING_ON }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286455 "ON_OFF_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { VALUE_OFF, 0 },
    { VALUE_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286583 "ENABLE_DISABLE_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { VALUE_ENABLE,  1 },
    { VALUE_DISABLE, 0 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286711 "DENOISE_ON_OFF_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { DENOISE_OFF, 0 },
    { DENOISE_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286839 "TRUE_FALSE_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { VALUE_FALSE, 0},
    { VALUE_TRUE,  1}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13286967 "TOUCH_AF_AEC_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { QCameraParameters::TOUCH_AF_AEC_OFF, 0 },
    { QCameraParameters::TOUCH_AF_AEC_ON, 1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287095 "FLIP_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_flip_t"
	multiplicity "[]"
	init_value "= {
    {FLIP_MODE_OFF, 0},
    {FLIP_MODE_V, FLIP_V},
    {FLIP_MODE_H, FLIP_H},
    {FLIP_MODE_VH, FLIP_V_H}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287223 "AF_BRACKETING_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { AF_BRACKET_OFF, 0 },
    { AF_BRACKET_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287351 "RE_FOCUS_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { RE_FOCUS_OFF, 0 },
    { RE_FOCUS_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287479 "CHROMA_FLASH_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { CHROMA_FLASH_OFF, 0 },
    { CHROMA_FLASH_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287607 "OPTI_ZOOM_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { OPTI_ZOOM_OFF, 0 },
    { OPTI_ZOOM_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287735 "TRUE_PORTRAIT_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { TRUE_PORTRAIT_OFF, 0 },
    { TRUE_PORTRAIT_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287863 "CDS_MODES_MAP"
	class_attribute const_attribute private explicit_type "cam_cds_mode_type_t"
	multiplicity "[]"
	init_value "= {
    { CDS_MODE_OFF, CAM_CDS_MODE_OFF },
    { CDS_MODE_ON, CAM_CDS_MODE_ON },
    { CDS_MODE_AUTO, CAM_CDS_MODE_AUTO}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13287991 "HDR_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { HDR_MODE_SENSOR, 0 },
    { HDR_MODE_MULTI_FRAME, 1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13288119 "VIDEO_ROTATION_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { VIDEO_ROTATION_0, 0 },
    { VIDEO_ROTATION_90, 90 },
    { VIDEO_ROTATION_180, 180 },
    { VIDEO_ROTATION_270, 270 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13288247 "SEE_MORE_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13288375 "STILL_MORE_MODES_MAP"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "= {
    { STILL_MORE_OFF, 0 },
    { STILL_MORE_ON,  1 }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7052471 // m_pCapability (<unidirectional association>)
	relation 7052471 --->
	  a role_name "m_pCapability" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052471 // m_pCapability (<unidirectional association>)
	  b parent class_ref 3644855 // cam_capability_t
      end

      classrelation 7052599 // m_pCamOpsTbl (<unidirectional association>)
	relation 7052599 --->
	  a role_name "m_pCamOpsTbl" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052599 // m_pCamOpsTbl (<unidirectional association>)
	  b parent class_ref 3644727 // mm_camera_vtbl_t
      end

      classrelation 7052727 // m_pParamHeap (<unidirectional association>)
	relation 7052727 --->
	  a role_name "m_pParamHeap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052727 // m_pParamHeap (<unidirectional association>)
	  b parent class_ref 3645111 // QCameraHeapMemory
      end

      classrelation 7052855 // m_pParamBuf (<unidirectional association>)
	relation 7052855 --->
	  a role_name "m_pParamBuf" private
	    comment " ptr to param buf in m_pParamHeap"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052855 // m_pParamBuf (<unidirectional association>)
	  b parent class_ref 3655607 // parm_buffer_t
      end

      classrelation 7052983 // mIsType (<directional composition>)
	relation 7052983 *-->
	  a role_name "mIsType" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7052983 // mIsType (<directional composition>)
	  b parent class_ref 3654071 // cam_is_type_t
      end

      attribute 13288503 "m_bZslMode"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if ZSL is enabled"
      end

      attribute 13288631 "m_bZslMode_new"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13288759 "m_bForceZslMode"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13288887 "m_bRecordingHint"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " local copy of recording hint"
      end

      attribute 13289015 "m_bRecordingHint_new"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13289143 "m_bHistogramEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if histogram is enabled"
      end

      attribute 13289271 "m_nFaceProcMask"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " face process mask"
      end

      attribute 13289399 "m_bFaceDetectionOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  if face Detection turned on by user"
      end

      attribute 13289527 "m_bDebugFps"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if FPS need to be logged"
      end

      classrelation 7053111 // mFocusMode (<directional composition>)
	relation 7053111 *-->
	  a role_name "mFocusMode" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053111 // mFocusMode (<directional composition>)
	  b parent class_ref 3654199 // cam_focus_mode_type
      end

      classrelation 7053239 // mPreviewFormat (<directional composition>)
	relation 7053239 *-->
	  a role_name "mPreviewFormat" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053239 // mPreviewFormat (<directional composition>)
	  b parent class_ref 3628215 // cam_format_t
      end

      attribute 13289655 "mPictureFormat"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " could be CAMERA_PICTURE_TYPE_JPEG or cam_format_t"
      end

      attribute 13289783 "m_bNeedRestart"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if preview needs restart after parameters updated"
      end

      attribute 13289911 "m_bNoDisplayMode"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290039 "m_bWNROn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290167 "m_bTNRPreviewOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290295 "m_bTNRVideoOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290423 "m_bInited"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290551 "m_nBurstNum"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290679 "m_nRetroBurstNum"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13290807 "m_nBurstLEDOnPeriod"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7053367 // m_AEBracketingClient (<directional composition>)
	relation 7053367 *-->
	  a role_name "m_AEBracketingClient" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053367 // m_AEBracketingClient (<directional composition>)
	  b parent class_ref 3653943 // cam_exp_bracketing_t
      end

      attribute 13290935 "m_bUpdateEffects"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cause reapplying of effects"
      end

      attribute 13291063 "m_bSceneTransitionAuto"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicate that scene has changed to Auto"
      end

      attribute 13291191 "m_bPreviewFlipChanged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if flip setting for preview changed"
      end

      attribute 13291319 "m_bVideoFlipChanged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if flip setting for video changed"
      end

      attribute 13291447 "m_bSnapshotFlipChanged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if flip setting for snapshot changed"
      end

      attribute 13291575 "m_bFixedFrameRateSet"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates that a fixed frame rate is set"
      end

      classrelation 7053495 // m_ThermalMode (<directional composition>)
	relation 7053495 *-->
	  a role_name "m_ThermalMode" private
	    comment " adjust fps vs adjust frameskip"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053495 // m_ThermalMode (<directional composition>)
	  b parent class_ref 3653815 // qcamera_thermal_mode
      end

      classrelation 7053623 // m_LiveSnapshotSize (<directional composition>)
	relation 7053623 *-->
	  a role_name "m_LiveSnapshotSize" private
	    comment " live snapshot size"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053623 // m_LiveSnapshotSize (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      classrelation 7053751 // m_rawSize (<directional composition>)
	relation 7053751 *-->
	  a role_name "m_rawSize" private
	    comment " live snapshot size"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053751 // m_rawSize (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13291703 "m_bHDREnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if HDR is enabled"
      end

      attribute 13291831 "m_bAVTimerEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "if AVTimer is enabled"
      end

      attribute 13291959 "m_bDISEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13292087 "m_bOISEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7053879 // m_stillmore_config (<directional composition>)
	relation 7053879 *-->
	  a role_name "m_stillmore_config" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7053879 // m_stillmore_config (<directional composition>)
	  b parent class_ref 3655223 // cam_still_more_t
      end

      attribute 13292215 "m_MobiMask"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7054007 // m_AdjustFPS (<unidirectional association>)
	relation 7054007 --->
	  a role_name "m_AdjustFPS" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054007 // m_AdjustFPS (<unidirectional association>)
	  b parent class_ref 3644471 // QCameraAdjustFPS
      end

      attribute 13292343 "m_bHDR1xFrameEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if frame with exposure compensation 0 during HDR is enabled"
      end

      attribute 13292471 "m_HDRSceneEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Auto HDR indication"
      end

      attribute 13292599 "m_bHDRThumbnailProcessNeeded"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if thumbnail need to be processed for HDR"
      end

      attribute 13292727 "m_bHDR1xExtraBufferNeeded"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if extra frame with exposure compensation 0 during HDR is needed"
      end

      attribute 13292855 "m_bHDROutputCropEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if HDR output frame need to be scaled to user resolution"
      end

      attribute 13292983 "m_tempMap"
	private explicit_type "String8,String8"
	stereotype "DefaultKeyedVector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " map for temororily store parameters to be set"
      end

      classrelation 7054135 // m_default_fps_range (<directional composition>)
	relation 7054135 *-->
	  a role_name "m_default_fps_range" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054135 // m_default_fps_range (<directional composition>)
	  b parent class_ref 3645495 // cam_fps_range_t
      end

      attribute 13293111 "m_bAFBracketingOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13293239 "m_bReFocusOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13293367 "m_bChromaFlashOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13293495 "m_bOptiZoomOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13293623 "m_bSceneSelection"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13293751 "m_SceneSelectLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7054263 // m_SelectedScene (<directional composition>)
	relation 7054263 *-->
	  a role_name "m_SelectedScene" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054263 // m_SelectedScene (<directional composition>)
	  b parent class_ref 3647671 // cam_scene_mode_type
      end

      attribute 13293879 "m_bSeeMoreOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13294007 "m_bStillMoreOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7054391 // m_hfrFpsRange (<directional composition>)
	relation 7054391 *-->
	  a role_name "m_hfrFpsRange" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054391 // m_hfrFpsRange (<directional composition>)
	  b parent class_ref 3645495 // cam_fps_range_t
      end

      attribute 13294135 "m_bHfrMode"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13294263 "m_bSensorHDREnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if HDR is enabled"
      end

      attribute 13294391 "m_bRdiMode"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " if RDI mode"
      end

      attribute 13294519 "m_bUbiRefocus"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13294647 "m_bDisplayFrame"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13294775 "m_bSecureMode"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13294903 "m_bAeBracketingEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295031 "mFlashValue"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295159 "mFlashDaemonValue"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295287 "mHfrMode"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295415 "m_bHDRModeSensor"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295543 "mOfflineRAW"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295671 "m_bTruePortraitOn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295799 "m_nMinRequiredPpMask"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13295927 "mStreamPpMask"
	private explicit_type "uint32_t"
	multiplicity "[CAM_STREAM_TYPE_MAX]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296055 "m_nSharpness"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296183 "mTotalPPCount"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296311 "mCurPPCount"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296439 "mZoomLevel"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296567 "m_bStreamsConfigured"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296695 "mParmZoomLevel"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296823 "mCds_mode"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13296951 "mParmEffect"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7054519 // m_captureFrameConfig (<directional composition>)
	relation 7054519 *-->
	  a role_name "m_captureFrameConfig" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054519 // m_captureFrameConfig (<directional composition>)
	  b parent class_ref 3651895 // cam_capture_frame_config_t
      end

      attribute 13297079 "mBufBatchCnt"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13297207 "mRotation"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13297335 "mJpegRotation"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3649719 "QCameraThermalAdapter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44228151 "getInstance"
	class_operation preserve_cpp_body_indent public return_type class_ref 3649719 // QCameraThermalAdapter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44228279 "init"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "thermalCb" type class_ref 3644343 // QCameraThermalCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44228407 "deinit"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13316151 "mStrCamera"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"camera\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13316279 "mStrCamcorder"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "= \"camcorder\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44228535 "thermalCallback"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param in name "level" explicit_type "int"
	  param inout name "userdata" explicit_type "void"
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7063863 // mCallback (<unidirectional association>)
	relation 7063863 --->
	  a role_name "mCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063863 // mCallback (<unidirectional association>)
	  b parent class_ref 3644343 // QCameraThermalCallback
      end

      attribute 13316407 "mHandle"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13316535 "mRegister"
	private explicit_type "int (*)(char *name, int (*callback)(int, void *userdata, void *data), void *data)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    int (*${name})(char *name,
            int (*callback)(int, void *userdata, void *data), void *data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13316663 "mUnregister"
	private explicit_type "int (*)(int handle)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    int (*${name})(int handle)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13316791 "mCameraHandle"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13316919 "mCamcorderHandle"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44228663 "QCameraThermalAdapter"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)} :
                                        mCallback(NULL),
                                        mHandle(NULL),
                                        mRegister(NULL),
                                        mUnregister(NULL),
                                        mCameraHandle(0),
                                        mCamcorderHandle(0)
 :
                                        mCallback(NULL),
                                        mHandle(NULL),
                                        mRegister(NULL),
                                        mUnregister(NULL),
                                        mCameraHandle(0),
                                        mCamcorderHandle(0)
 :
                                        mCallback(NULL),
                                        mHandle(NULL),
                                        mRegister(NULL),
                                        mUnregister(NULL),
                                        mCameraHandle(0),
                                        mCamcorderHandle(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44228791 "QCameraThermalAdapter"
	private explicit_return_type ""
	nparams 1
	  param in name "copy" type class_ref 3649719 // QCameraThermalAdapter
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44228919 "operator ="
	private return_type class_ref 3649719 // QCameraThermalAdapter
	nparams 1
	  param in name "copy" type class_ref 3649719 // QCameraThermalAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " not implemented"
      end
    end

    class 3649975 "api_result_list"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3650103 "QCameraMemoryPool"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44160695 "QCameraMemoryPool"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraMemoryPool
//
//DESCRIPTION: default constructor of QCameraMemoryPool
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraMemoryPool
//
//DESCRIPTION: default constructor of QCameraMemoryPool
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraMemoryPool
//
//DESCRIPTION: default constructor of QCameraMemoryPool
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44160823 "~QCameraMemoryPool"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraMemoryPool
//
//DESCRIPTION: deconstructor of QCameraMemoryPool
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraMemoryPool
//
//DESCRIPTION: deconstructor of QCameraMemoryPool
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraMemoryPool
//
//DESCRIPTION: deconstructor of QCameraMemoryPool
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44160951 "allocateBuffer"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 6
	  param inout name "memInfo" type class_ref 3652407 // QCameraMemInfo
	  param in name "heap_id" explicit_type "uint"
	  param in name "size" explicit_type "size_t"
	  param in name "cached" explicit_type "bool"
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param in name "secure_mode" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateBuffer
//
//DESCRIPTION: allocates a buffer from the memory pool,
//             it will re-use cached buffers if possible
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @heap_id : type of heap
//  @size    : size of the buffer
//  @cached  : whether the buffer should be cached
//  @streaType: type of stream this buffer belongs to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateBuffer
//
//DESCRIPTION: allocates a buffer from the memory pool,
//             it will re-use cached buffers if possible
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @heap_id : type of heap
//  @size    : size of the buffer
//  @cached  : whether the buffer should be cached
//  @streaType: type of stream this buffer belongs to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44161079 "releaseBuffer"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "memInfo" type class_ref 3652407 // QCameraMemInfo
	  param in name "streamType" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseBuffer
//
//DESCRIPTION: release one cached buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @streamType: Type of stream the buffers belongs to
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : releaseBuffer
//
//DESCRIPTION: release one cached buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @streamType: Type of stream the buffers belongs to
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : releaseBuffer
//
//DESCRIPTION: release one cached buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @streamType: Type of stream the buffers belongs to
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44161207 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : clear
//
//DESCRIPTION: clears all cached buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : clear
//
//DESCRIPTION: clears all cached buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : clear
//
//DESCRIPTION: clears all cached buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44161335 "findBufferLocked"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 5
	  param inout name "memInfo" type class_ref 3652407 // QCameraMemInfo
	  param in name "heap_id" explicit_type "uint"
	  param in name "size" explicit_type "size_t"
	  param in name "cached" explicit_type "bool"
	  param in name "streamType" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : findBufferLocked
//
//DESCRIPTION: search for a appropriate cached buffer
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @heap_id : type of heap
//  @size    : size of the buffer
//  @cached  : whether the buffer should be cached
//  @streaType: type of stream this buffer belongs to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : findBufferLocked
//
//DESCRIPTION: search for a appropriate cached buffer
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//  @heap_id : type of heap
//  @size    : size of the buffer
//  @cached  : whether the buffer should be cached
//  @streaType: type of stream this buffer belongs to
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13239095 "mPools"
	protected explicit_type "QCameraMemory::QCameraMemInfo"
	multiplicity "[CAM_STREAM_TYPE_MAX]"
	stereotype "android::List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13239223 "mLock"
	protected explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3652023 "QCameraVideoChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " video channel class"
      classrelation 7049399 // <generalisation>
	relation 7049399 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7049399 // <generalisation>
	  b parent class_ref 3648311 // QCameraChannel
      end

      operation 44155575 "QCameraVideoChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cam_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraVideoChannel
//
//DESCRIPTION: constructor of QCameraVideoChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraVideoChannel
//
//DESCRIPTION: constructor of QCameraVideoChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraVideoChannel
//
//DESCRIPTION: constructor of QCameraVideoChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)} :
    QCameraChannel(cam_handle, cam_ops)
 :
    QCameraChannel(cam_handle, cam_ops)
 :
    QCameraChannel(cam_handle, cam_ops)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44155703 "QCameraVideoChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraVideoChannel
//
//DESCRIPTION: default constructor of QCameraVideoChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraVideoChannel
//
//DESCRIPTION: default constructor of QCameraVideoChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraVideoChannel
//
//DESCRIPTION: default constructor of QCameraVideoChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44155831 "~QCameraVideoChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraVideoChannel
//
//DESCRIPTION: destructor of QCameraVideoChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraVideoChannel
//
//DESCRIPTION: destructor of QCameraVideoChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraVideoChannel
//
//DESCRIPTION: destructor of QCameraVideoChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44155959 "releaseFrame"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "isMetaData" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseFrame
//
//DESCRIPTION: return video frame from app
//
//PARAMETERS :
//  @opaque     : ptr to video frame to be returned
//  @isMetaData : if frame is a metadata or real frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFrame
//
//DESCRIPTION: return video frame from app
//
//PARAMETERS :
//  @opaque     : ptr to video frame to be returned
//  @isMetaData : if frame is a metadata or real frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFrame
//
//DESCRIPTION: return video frame from app
//
//PARAMETERS :
//  @opaque     : ptr to video frame to be returned
//  @isMetaData : if frame is a metadata or real frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3652663 "QCameraStreamMemory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Externel heap memory is used for memories shared with
 framework. They are allocated from /dev/ion or gralloc."
      classrelation 7050679 // <generalisation>
	relation 7050679 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7050679 // <generalisation>
	  b parent class_ref 3644983 // QCameraMemory
      end

      operation 44162743 "QCameraStreamMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 5
	  param in name "memory" explicit_type "camera_request_memory"
	  param in name "cached" explicit_type "bool"
	  param inout name "pool" type class_ref 3650103 // QCameraMemoryPool
	    defaultvalue "NULL"
	  param in name "streamType" explicit_type "cam_stream_type_t"
	    defaultvalue "CAM_STREAM_TYPE_DEFAULT"
	  param in name "bufType" explicit_type "cam_stream_buf_type"
	    defaultvalue "CAM_STREAM_BUF_TYPE_MPLANE"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraStreamMemory
//
//DESCRIPTION: constructor of QCameraStreamMemory
//             ION memory allocated directly from /dev/ion and shared with framework
//
//PARAMETERS :
//  @memory    : camera memory request ops table
//  @cached    : flag indicates if using cached memory
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraStreamMemory
//
//DESCRIPTION: constructor of QCameraStreamMemory
//             ION memory allocated directly from /dev/ion and shared with framework
//
//PARAMETERS :
//  @memory    : camera memory request ops table
//  @cached    : flag indicates if using cached memory
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}
    :QCameraMemory(cached, pool, streamType),
     mGetMemory(memory)

    :QCameraMemory(cached, pool, streamType),
     mGetMemory(memory)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44162871 "~QCameraStreamMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraStreamMemory
//
//DESCRIPTION: deconstructor of QCameraStreamMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraStreamMemory
//
//DESCRIPTION: deconstructor of QCameraStreamMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraStreamMemory
//
//DESCRIPTION: deconstructor of QCameraStreamMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44162999 "allocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 3
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	  param in name "isSecure" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163127 "allocateMore"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163255 "deallocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163383 "cacheOps"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163511 "getRegFlags"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "regFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163639 "getMemory"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "camera_memory_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163767 "getMatchBufIndex"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44163895 "getPtr"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13239479 "mGetMemory"
	protected explicit_type "camera_request_memory"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13239607 "mCameraMemory"
	protected explicit_type "camera_memory_t"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3652791 "QCameraVideoMemory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Externel heap memory is used for memories shared with
 framework. They are allocated from /dev/ion or gralloc."
      classrelation 7050807 // <generalisation>
	relation 7050807 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7050807 // <generalisation>
	  b parent class_ref 3652663 // QCameraStreamMemory
      end

      operation 44164023 "QCameraVideoMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "memory" explicit_type "camera_request_memory"
	  param in name "cached" explicit_type "bool"
	  param in name "bufType" explicit_type "cam_stream_buf_type"
	    defaultvalue "CAM_STREAM_BUF_TYPE_MPLANE"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraVideoMemory
//
//DESCRIPTION: constructor of QCameraVideoMemory
//             VideoStream buffers also include metadata buffers
//
//PARAMETERS :
//  @memory    : camera memory request ops table
//  @cached    : flag indicates if using cached ION memory
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraVideoMemory
//
//DESCRIPTION: constructor of QCameraVideoMemory
//             VideoStream buffers also include metadata buffers
//
//PARAMETERS :
//  @memory    : camera memory request ops table
//  @cached    : flag indicates if using cached ION memory
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}
    : QCameraStreamMemory(memory, cached)

    : QCameraStreamMemory(memory, cached)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44164151 "~QCameraVideoMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraVideoMemory
//
//DESCRIPTION: deconstructor of QCameraVideoMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraVideoMemory
//
//DESCRIPTION: deconstructor of QCameraVideoMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraVideoMemory
//
//DESCRIPTION: deconstructor of QCameraVideoMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44164279 "allocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 3
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	  param in name "isSecure" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44164407 "allocateMore"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "count" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMore
//
//DESCRIPTION: allocate more requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44164535 "deallocate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44164663 "getMemory"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "camera_memory_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMemory
//
//DESCRIPTION: get camera memory
//
//PARAMETERS :
//  @index   : buffer index
//  @metadata: flag if it's metadata
//
//RETURN     : camera memory ptr
//             NULL if not supported or failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44164791 "getMatchBufIndex"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "opaque" explicit_type "void"
	  param in name "metadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by opaque ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//  @metadata: flag if it's metadata
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44164919 "allocateMeta"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "buf_cnt" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateMeta
//
//DESCRIPTION: allocate video encoder metadata structure
//
//PARAMETERS :
//  @fd_cnt : Total FD count
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateMeta
//
//DESCRIPTION: allocate video encoder metadata structure
//
//PARAMETERS :
//  @fd_cnt : Total FD count
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44165047 "deallocateMeta"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocateMeta
//
//DESCRIPTION: deallocate video metadata buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocateMeta
//
//DESCRIPTION: deallocate video metadata buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13239735 "mMetadata"
	private explicit_type "camera_memory_t"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13239863 "mMetaBufCount"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3653175 "QCameraReprocScaleParam"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44167095 "QCameraReprocScaleParam"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 3649591 // QCameraParameters
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraReprocScaleParam
//
//DESCRIPTION: constructor of QCameraReprocScaleParam
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraReprocScaleParam
//
//DESCRIPTION: constructor of QCameraReprocScaleParam
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraReprocScaleParam
//
//DESCRIPTION: constructor of QCameraReprocScaleParam
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} * ${p0}${)}
  : mParent(parent),
    mScaleEnabled(false),
    mIsUnderScaling(false),
    mScaleDirection(0),
    mNeedScaleCnt(0),
    mSensorSizeTblCnt(0),
    mSensorSizeTbl(NULL),
    mTotalSizeTblCnt(0)

  : mParent(parent),
    mScaleEnabled(false),
    mIsUnderScaling(false),
    mScaleDirection(0),
    mNeedScaleCnt(0),
    mSensorSizeTblCnt(0),
    mSensorSizeTbl(NULL),
    mTotalSizeTblCnt(0)

  : mParent(parent),
    mScaleEnabled(false),
    mIsUnderScaling(false),
    mScaleDirection(0),
    mNeedScaleCnt(0),
    mSensorSizeTblCnt(0),
    mSensorSizeTbl(NULL),
    mTotalSizeTblCnt(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44167223 "~QCameraReprocScaleParam"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~~QCameraReprocScaleParam
//
//DESCRIPTION: destructor of QCameraReprocScaleParam
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~~QCameraReprocScaleParam
//
//DESCRIPTION: destructor of QCameraReprocScaleParam
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~~QCameraReprocScaleParam
//
//DESCRIPTION: destructor of QCameraReprocScaleParam
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44167351 "setScaleEnable"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setScaleEnable
//
//DESCRIPTION: enable or disable Reproc Scale
//
//PARAMETERS :
//  @enabled : enable: 1; disable 0
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setScaleEnable
//
//DESCRIPTION: enable or disable Reproc Scale
//
//PARAMETERS :
//  @enabled : enable: 1; disable 0
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : setScaleEnable
//
//DESCRIPTION: enable or disable Reproc Scale
//
//PARAMETERS :
//  @enabled : enable: 1; disable 0
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44167479 "setScaleSizeTbl"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 4
	  param in name "scale_cnt" explicit_type "size_t"
	  param inout name "scale_tbl" type class_ref 3646135 // cam_dimension_t
	  param in name "org_cnt" explicit_type "size_t"
	  param inout name "org_tbl" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setScaledSizeTbl
//
//DESCRIPTION: re-set picture size table with dimensions that need scaling if Reproc Scale is enabled
//
//PARAMETERS :
//  @scale_cnt   : count of picture sizes that want scale
//  @scale_tbl    : picture size table that want scale
//  @org_cnt     : sensor supported picture size count
//  @org_tbl      : sensor supported picture size table
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setScaledSizeTbl
//
//DESCRIPTION: re-set picture size table with dimensions that need scaling if Reproc Scale is enabled
//
//PARAMETERS :
//  @scale_cnt   : count of picture sizes that want scale
//  @scale_tbl    : picture size table that want scale
//  @org_cnt     : sensor supported picture size count
//  @org_tbl      : sensor supported picture size table
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44167607 "setValidatePicSize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "width" explicit_type "int"
	  param inout name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setValidatePicSize
//
//DESCRIPTION: set sensor supported size and change scale status.
//
//PARAMETERS :
//  @width    : input picture width
//  @height   : input picture height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setValidatePicSize
//
//DESCRIPTION: set sensor supported size and change scale status.
//
//PARAMETERS :
//  @width    : input picture width
//  @height   : input picture height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setValidatePicSize
//
//DESCRIPTION: set sensor supported size and change scale status.
//
//PARAMETERS :
//  @width    : input picture width
//  @height   : input picture height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44167735 "isScaleEnabled"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isScaleEnabled
//
//DESCRIPTION: check if Reproc Scale is enabled
//
//PARAMETERS :  none
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isScaleEnabled
//
//DESCRIPTION: check if Reproc Scale is enabled
//
//PARAMETERS :  none
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isScaleEnabled
//
//DESCRIPTION: check if Reproc Scale is enabled
//
//PARAMETERS :  none
//
//RETURN     : bool type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44167863 "isUnderScaling"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isUnderScaling
//
//DESCRIPTION: check if we are in Reproc Scaling requirment
//
//PARAMETERS :  none
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isUnderScaling
//
//DESCRIPTION: check if we are in Reproc Scaling requirment
//
//PARAMETERS :  none
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isUnderScaling
//
//DESCRIPTION: check if we are in Reproc Scaling requirment
//
//PARAMETERS :  none
//
//RETURN     : bool type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44167991 "getScaleSizeTblCnt"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getScaledSizeTblCnt
//
//DESCRIPTION: get picture size cnt that need scale
//
//PARAMETERS : none
//
//RETURN     : uint8_t type of picture size count
//==========================================================================

//===========================================================================
//FUNCTION   : getScaledSizeTblCnt
//
//DESCRIPTION: get picture size cnt that need scale
//
//PARAMETERS : none
//
//RETURN     : uint8_t type of picture size count
//==========================================================================

//===========================================================================
//FUNCTION   : getScaledSizeTblCnt
//
//DESCRIPTION: get picture size cnt that need scale
//
//PARAMETERS : none
//
//RETURN     : uint8_t type of picture size count
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168119 "getScaledSizeTbl"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3646135 // cam_dimension_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getScaledSizeTbl
//
//DESCRIPTION: get picture size table that need scale
//
//PARAMETERS :  none
//
//RETURN     : cam_dimension_t list of picture size table
//==========================================================================

//===========================================================================
//FUNCTION   : getScaledSizeTbl
//
//DESCRIPTION: get picture size table that need scale
//
//PARAMETERS :  none
//
//RETURN     : cam_dimension_t list of picture size table
//==========================================================================

//===========================================================================
//FUNCTION   : getScaledSizeTbl
//
//DESCRIPTION: get picture size table that need scale
//
//PARAMETERS :  none
//
//RETURN     : cam_dimension_t list of picture size table
//==========================================================================

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168247 "getTotalSizeTblCnt"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getTotalSizeTblCnt
//
//DESCRIPTION: get total picture size count after adding dimensions that need scaling
//
//PARAMETERS : none
//
//RETURN     : uint8_t type of picture size count
//==========================================================================

//===========================================================================
//FUNCTION   : getTotalSizeTblCnt
//
//DESCRIPTION: get total picture size count after adding dimensions that need scaling
//
//PARAMETERS : none
//
//RETURN     : uint8_t type of picture size count
//==========================================================================

//===========================================================================
//FUNCTION   : getTotalSizeTblCnt
//
//DESCRIPTION: get total picture size count after adding dimensions that need scaling
//
//PARAMETERS : none
//
//RETURN     : uint8_t type of picture size count
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168375 "getTotalSizeTbl"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3646135 // cam_dimension_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getTotalSizeTbl
//
//DESCRIPTION: get picture size table after adding dimensions that need scaling
//
//PARAMETERS :  none
//
//RETURN     : cam_dimension_t list of picture size table
//==========================================================================

//===========================================================================
//FUNCTION   : getTotalSizeTbl
//
//DESCRIPTION: get picture size table after adding dimensions that need scaling
//
//PARAMETERS :  none
//
//RETURN     : cam_dimension_t list of picture size table
//==========================================================================

//===========================================================================
//FUNCTION   : getTotalSizeTbl
//
//DESCRIPTION: get picture size table after adding dimensions that need scaling
//
//PARAMETERS :  none
//
//RETURN     : cam_dimension_t list of picture size table
//==========================================================================

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168503 "getPicSizeFromAPK"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "width" explicit_type "int"
	  param inout name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPicSizeFromAPK
//
//DESCRIPTION: get picture size that get from APK
//
//PARAMETERS :
//  @width     : input width
//  @height    : input height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getPicSizeFromAPK
//
//DESCRIPTION: get picture size that get from APK
//
//PARAMETERS :
//  @width     : input width
//  @height    : input height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getPicSizeFromAPK
//
//DESCRIPTION: get picture size that get from APK
//
//PARAMETERS :
//  @width     : input width
//  @height    : input height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168631 "getPicSizeSetted"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "width" explicit_type "int"
	  param inout name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPicSizeSetted
//
//DESCRIPTION: get picture size that setted into mm-camera
//
//PARAMETERS :
//  @width     : input width
//  @height    : input height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getPicSizeSetted
//
//DESCRIPTION: get picture size that setted into mm-camera
//
//PARAMETERS :
//  @width     : input width
//  @height    : input height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getPicSizeSetted
//
//DESCRIPTION: get picture size that setted into mm-camera
//
//PARAMETERS :
//  @width     : input width
//  @height    : input height
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168759 "isScalePicSize"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isScalePicSize
//
//DESCRIPTION: check if current picture size is from Scale Table
//
//PARAMETERS :
//  @width     : current picture width
//  @height    : current picture height
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isScalePicSize
//
//DESCRIPTION: check if current picture size is from Scale Table
//
//PARAMETERS :
//  @width     : current picture width
//  @height    : current picture height
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isScalePicSize
//
//DESCRIPTION: check if current picture size is from Scale Table
//
//PARAMETERS :
//  @width     : current picture width
//  @height    : current picture height
//
//RETURN     : bool type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44168887 "isValidatePicSize"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isValidatePicSize
//
//DESCRIPTION: check if current picture size is validate
//
//PARAMETERS :
//  @width     : current picture width
//  @height    : current picture height
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isValidatePicSize
//
//DESCRIPTION: check if current picture size is validate
//
//PARAMETERS :
//  @width     : current picture width
//  @height    : current picture height
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : isValidatePicSize
//
//DESCRIPTION: check if current picture size is validate
//
//PARAMETERS :
//  @width     : current picture width
//  @height    : current picture height
//
//RETURN     : bool type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44169015 "setSensorSupportedPicSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setSensorSupportedPicSize
//
//DESCRIPTION: set sensor supported picture size.
//   For Snapshot stream size configuration, we need use sensor supported size.
//   We will use CPP to do Scaling based on output Snapshot stream.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSensorSupportedPicSize
//
//DESCRIPTION: set sensor supported picture size.
//   For Snapshot stream size configuration, we need use sensor supported size.
//   We will use CPP to do Scaling based on output Snapshot stream.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setSensorSupportedPicSize
//
//DESCRIPTION: set sensor supported picture size.
//   For Snapshot stream size configuration, we need use sensor supported size.
//   We will use CPP to do Scaling based on output Snapshot stream.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44169143 "checkScaleSizeTable"
	preserve_cpp_body_indent private explicit_return_type "size_t"
	nparams 4
	  param in name "scale_cnt" explicit_type "size_t"
	  param inout name "scale_tbl" type class_ref 3646135 // cam_dimension_t
	  param in name "org_cnt" explicit_type "size_t"
	  param inout name "org_tbl" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : checkScaleSizeTable
//
//DESCRIPTION: check PICTURE_SIZE_NEED_SCALE to choose
//
//PARAMETERS :
//  @scale_cnt   : count of picture sizes that want scale
//  @scale_tbl    : picture size table that want scale
//  @org_cnt     : sensor supported picture size count
//  @org_tbl      : sensor supported picture size table
//
//RETURN     : bool type of status
//==========================================================================

//===========================================================================
//FUNCTION   : checkScaleSizeTable
//
//DESCRIPTION: check PICTURE_SIZE_NEED_SCALE to choose
//
//PARAMETERS :
//  @scale_cnt   : count of picture sizes that want scale
//  @scale_tbl    : picture size table that want scale
//  @org_cnt     : sensor supported picture size count
//  @org_tbl      : sensor supported picture size table
//
//RETURN     : bool type of status
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7051191 // mParent (<unidirectional association>)
	relation 7051191 --->
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7051191 // mParent (<unidirectional association>)
	  b parent class_ref 3649591 // QCameraParameters
      end

      attribute 13241783 "mScaleEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13241911 "mIsUnderScaling"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "if in scale status"
      end

      attribute 13242039 "mScaleDirection"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 0: Upscaling; 1: Downscaling"
      end

      attribute 13242167 "mNeedScaleCnt"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " picture size cnt that need scale operation
"
      end

      classrelation 7051319 // mNeedScaledSizeTbl (<directional composition>)
	relation 7051319 *-->
	  a role_name "mNeedScaledSizeTbl" multiplicity "[MAX_SCALE_SIZES_CNT]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7051319 // mNeedScaledSizeTbl (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13242295 "mSensorSizeTblCnt"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " sensor supported size cnt and table
"
      end

      classrelation 7051447 // mSensorSizeTbl (<unidirectional association>)
	relation 7051447 --->
	  a role_name "mSensorSizeTbl" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7051447 // mSensorSizeTbl (<unidirectional association>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13242423 "mTotalSizeTblCnt"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Total size cnt (sensor supported + need scale cnt)
"
      end

      classrelation 7051575 // mTotalSizeTbl (<directional composition>)
	relation 7051575 *-->
	  a role_name "mTotalSizeTbl" multiplicity "[MAX_SIZES_CNT]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7051575 // mTotalSizeTbl (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      classrelation 7051703 // mPicSizeFromAPK (<directional composition>)
	relation 7051703 *-->
	  a role_name "mPicSizeFromAPK" private
	    comment " dimension that APK is expected"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7051703 // mPicSizeFromAPK (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      classrelation 7051831 // mPicSizeSetted (<directional composition>)
	relation 7051831 *-->
	  a role_name "mPicSizeSetted" private
	    comment " dimension that config vfe"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7051831 // mPicSizeSetted (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end
    end

    class 3653303 "typedef26"
      visibility package stereotype "typedef" explicit_base_type "CameraParameters"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3653815 "qcamera_thermal_mode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13315895 "QCAMERA_THERMAL_ADJUST_FPS"
	public type class_ref 3653815 // qcamera_thermal_mode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13316023 "QCAMERA_THERMAL_ADJUST_FRAMESKIP"
	public type class_ref 3653815 // qcamera_thermal_mode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3657015 "qcamera_jpeg_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13297463 "jobId"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " job ID"
      end

      attribute 13297591 "client_hdl"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " handle of jpeg client (obtained when open jpeg)"
      end

      classrelation 7054647 // src_frame (<unidirectional association>)
	relation 7054647 --->
	  a role_name "src_frame" public
	    comment " source frame (need to be returned back to kernel"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054647 // src_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7054775 // src_reproc_frame (<unidirectional association>)
	relation 7054775 --->
	  a role_name "src_reproc_frame" public
	    comment "after done)
 original source"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054775 // src_reproc_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7054903 // metadata (<unidirectional association>)
	relation 7054903 --->
	  a role_name "metadata" public
	    comment "frame for reproc if not NULL
 source frame metadata"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7054903 // metadata (<unidirectional association>)
	  b parent class_ref 3649207 // metadata_buffer_t
      end

      attribute 13297719 "reproc_frame_release"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " false release original buffer, true don't release it"
      end

      classrelation 7055031 // src_reproc_bufs (<unidirectional association>)
	relation 7055031 --->
	  a role_name "src_reproc_bufs" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055031 // src_reproc_bufs (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7055159 // pJpegExifObj (<unidirectional association>)
	relation 7055159 --->
	  a role_name "pJpegExifObj" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055159 // pJpegExifObj (<unidirectional association>)
	  b parent class_ref 3646647 // QCameraExif
      end
    end

    class 3657143 "qcamera_pp_request_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13297847 "reprocCount"
	public explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7055287 // src_frame (<unidirectional association>)
	relation 7055287 --->
	  a role_name "src_frame" public
	    comment " source frame that needs post process"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055287 // src_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7055415 // src_reproc_frame (<unidirectional association>)
	relation 7055415 --->
	  a role_name "src_reproc_frame" public
	    comment " source frame (need to be"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055415 // src_reproc_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end
    end

    class 3657271 "qcamera_pp_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "returned back to kernel after done)"
      attribute 13297975 "jobId"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " job ID"
      end

      attribute 13298103 "reprocCount"
	public explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Current pass count"
      end

      classrelation 7055543 // src_frame (<unidirectional association>)
	relation 7055543 --->
	  a role_name "src_frame" public
	    comment " source frame"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055543 // src_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      attribute 13298231 "reproc_frame_release"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " false release original buffer"
      end

      classrelation 7055671 // src_reproc_bufs (<unidirectional association>)
	relation 7055671 --->
	  a role_name "src_reproc_bufs" public
	    comment " true don't release it
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055671 // src_reproc_bufs (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7055799 // src_reproc_frame (<unidirectional association>)
	relation 7055799 --->
	  a role_name "src_reproc_frame" public
	    comment " source frame (need to be"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7055799 // src_reproc_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end
    end

    class 3657399 "qcamera_release_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13298487 "data"
	public explicit_type "camera_memory_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ptr to data memory struct"
      end

      classrelation 7056183 // frame (<unidirectional association>)
	relation 7056183 --->
	  a role_name "frame" public
	    comment " ptr to frame"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056183 // frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7056311 // streamBufs (<unidirectional association>)
	relation 7056311 --->
	  a role_name "streamBufs" public
	    comment "ptr to stream buffers"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056311 // streamBufs (<unidirectional association>)
	  b parent class_ref 3644983 // QCameraMemory
      end

      attribute 13298615 "unlinkFile"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " unlink any stored buffers on error"
      end
    end

    class 3657527 "qcamera_data_argm_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13298743 "msg_type"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " msg type of data notify"
      end

      attribute 13298871 "data"
	public explicit_type "camera_memory_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ptr to data memory struct"
      end

      attribute 13298999 "index"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " index of the buf in the whole buffer"
      end

      attribute 13299127 "metadata"
	public explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ptr to meta data"
      end

      classrelation 7056439 // release_data (<directional composition>)
	relation 7056439 *-->
	  a role_name "release_data" public
	    comment " any data needs to be release after notify"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056439 // release_data (<directional composition>)
	  b parent class_ref 3657399 // qcamera_release_data_t
      end
    end

    class 3658295 "qcamera_api_result_type_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "BEGIN OF: API EVT********
 set preview window
 set callbacks
 enable msg type
 disable msg type
 query certain msg type is enabled
 set parameters
 get parameters
 put parameters, release param buf
 start preview (zsl, camera mode, camcorder mode)
 start no display preview (zsl, camera mode, camcorder mode)
 stop preview (zsl, camera mode, camcorder mode)
 query if preview is running
 request to store meta data in video buffers
 start recording
 stop recording
 query if recording is running
 release recording frame
 prepare snapshot in case LED needs to be flashed
 take picutre (zsl, regualr capture, live snapshot
 cancel picture
 start auto focus
 stop auto focus
 send command
 release camera resource
 dump
 register a face image in imaging lib
END OF: API EVT********
 internal evt notify
 evt notify from server
 evt notify from jpeg
 internal evt that snapshot is done
 evt notify from thermal daemon
 stop capture channel
 internal preview restart"
      attribute 13305911 "QCAMERA_API_RESULT_TYPE_DEF"
	public type class_ref 3658295 // qcamera_api_result_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13306039 "QCAMERA_API_RESULT_TYPE_ENABLE_FLAG"
	public type class_ref 3658295 // qcamera_api_result_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13306167 "QCAMERA_API_RESULT_TYPE_PARAMS"
	public type class_ref 3658295 // qcamera_api_result_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13306295 "QCAMERA_API_RESULT_TYPE_HANDLE"
	public type class_ref 3658295 // qcamera_api_result_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13306423 "QCAMERA_API_RESULT_TYPE_MAX"
	public type class_ref 3658295 // qcamera_api_result_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 309559 "HAL"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1737143 "QCamera2HWI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3643063 // qcamera_ch_type_enum_t
	class_ref 3643191 // qcamera_evt_argm_t
	class_ref 3643319 // qcamera_callback_type_m
	class_ref 3643447 // camera_release_callback
	class_ref 3643575 // qcamera_callback_argm_t
	class_ref 3643703 // QCameraCbNotifier
	class_ref 3643831 // QCamera2HardwareInterface
      end
    end

    artifact 1737271 "QCameraAllocator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3644215 // QCameraAllocator
      end
    end

    artifact 1737399 "QCameraChannel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3648311 // QCameraChannel
	class_ref 3649079 // QCameraPicChannel
	class_ref 3652023 // QCameraVideoChannel
	class_ref 3648439 // QCameraReprocessChannel
      end
    end

    artifact 1737527 "QCameraMem"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3644983 // QCameraMemory
	class_ref 3650103 // QCameraMemoryPool
	class_ref 3645111 // QCameraHeapMemory
	class_ref 3652663 // QCameraStreamMemory
	class_ref 3652791 // QCameraVideoMemory
	class_ref 3648183 // QCameraGrallocMemory
      end
    end

    artifact 1737655 "QCameraParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3644471 // QCameraAdjustFPS
	class_ref 3653175 // QCameraReprocScaleParam
	class_ref 3653303 // typedef26
	class_ref 3649591 // QCameraParameters
      end
    end

    artifact 1737783 "QCameraPostProc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3657015 // qcamera_jpeg_data_t
	class_ref 3657143 // qcamera_pp_request_t
	class_ref 3657271 // qcamera_pp_data_t
	class_ref 3647415 // qcamera_jpeg_evt_payload_t
	class_ref 3657399 // qcamera_release_data_t
	class_ref 3657527 // qcamera_data_argm_t
	class_ref 3646647 // QCameraExif
	class_ref 3645751 // QCameraPostProcessor
      end
    end

    artifact 1737911 "QCameraStateMachine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3645879 // qcamera_sm_evt_enum_t
	class_ref 3658295 // qcamera_api_result_type_t
	class_ref 3646007 // qcamera_api_result_t
      end
    end

    artifact 1738167 "QCameraStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3648695 // stream_cb_routine
	class_ref 3646263 // QCameraStream
      end
    end

    artifact 1738295 "QCameraThermalAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3645367 // qcamera_thermal_level_enum_t
	class_ref 3653815 // qcamera_thermal_mode
	class_ref 3644343 // QCameraThermalCallback
	class_ref 3649719 // QCameraThermalAdapter
      end
    end
  end

  package_ref 396983 // wrapper
end
