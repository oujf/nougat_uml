format 213
"qcamera" // android::device::huawei::angler::camera::QCamera2::util::qcamera
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/huawei/angler/camera/QCamera2/util/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/huawei/angler/camera/QCamera2/util/"
  cpp_namespace "qcamera"
  classview 345527 "util"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3643959 "QCameraQueue"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44283191 "QCameraQueue"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraQueue
//
//DESCRIPTION: default constructor of QCameraQueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraQueue
//
//DESCRIPTION: default constructor of QCameraQueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraQueue
//
//DESCRIPTION: default constructor of QCameraQueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44283319 "QCameraQueue"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "data_rel_fn" type class_ref 3705783 // release_data_fn
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraQueue
//
//DESCRIPTION: constructor of QCameraQueue
//
//PARAMETERS :
//  @data_rel_fn : function ptr to release node data internal resource
//  @user_data   : user data ptr
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraQueue
//
//DESCRIPTION: constructor of QCameraQueue
//
//PARAMETERS :
//  @data_rel_fn : function ptr to release node data internal resource
//  @user_data   : user data ptr
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraQueue
//
//DESCRIPTION: constructor of QCameraQueue
//
//PARAMETERS :
//  @data_rel_fn : function ptr to release node data internal resource
//  @user_data   : user data ptr
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44283447 "~QCameraQueue"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraQueue
//
//DESCRIPTION: deconstructor of QCameraQueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraQueue
//
//DESCRIPTION: deconstructor of QCameraQueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraQueue
//
//DESCRIPTION: deconstructor of QCameraQueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44283575 "init"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: Put the queue to active state (ready to enqueue and dequeue)
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: Put the queue to active state (ready to enqueue and dequeue)
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: Put the queue to active state (ready to enqueue and dequeue)
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44283703 "enqueue"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : enqueue
//
//DESCRIPTION: enqueue data into the queue
//
//PARAMETERS :
//  @data    : data to be enqueued
//
//RETURN     : true -- success; false -- failed
//==========================================================================

//===========================================================================
//FUNCTION   : enqueue
//
//DESCRIPTION: enqueue data into the queue
//
//PARAMETERS :
//  @data    : data to be enqueued
//
//RETURN     : true -- success; false -- failed
//==========================================================================

//===========================================================================
//FUNCTION   : enqueue
//
//DESCRIPTION: enqueue data into the queue
//
//PARAMETERS :
//  @data    : data to be enqueued
//
//RETURN     : true -- success; false -- failed
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44283831 "enqueueWithPriority"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : enqueueWithPriority
//
//DESCRIPTION: enqueue data into queue with priority, will insert into the
//             head of the queue
//
//PARAMETERS :
//  @data    : data to be enqueued
//
//RETURN     : true -- success; false -- failed
//==========================================================================

//===========================================================================
//FUNCTION   : enqueueWithPriority
//
//DESCRIPTION: enqueue data into queue with priority, will insert into the
//             head of the queue
//
//PARAMETERS :
//  @data    : data to be enqueued
//
//RETURN     : true -- success; false -- failed
//==========================================================================

//===========================================================================
//FUNCTION   : enqueueWithPriority
//
//DESCRIPTION: enqueue data into queue with priority, will insert into the
//             head of the queue
//
//PARAMETERS :
//  @data    : data to be enqueued
//
//RETURN     : true -- success; false -- failed
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44283959 "flush"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION: flush all nodes from the queue, queue will be empty after this
//             operation.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION: flush all nodes from the queue, queue will be empty after this
//             operation.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION: flush all nodes from the queue, queue will be empty after this
//             operation.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This call will put queue into uninitialized state.
Need to call init() in order to use the queue again "
      end

      operation 44284087 "flushNodes"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "match" type class_ref 3705911 // match_fn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flushNodes
//
//DESCRIPTION: flush only specific nodes, depending on
//             the given matching function.
//
//PARAMETERS :
//  @match   : matching function
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flushNodes
//
//DESCRIPTION: flush only specific nodes, depending on
//             the given matching function.
//
//PARAMETERS :
//  @match   : matching function
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flushNodes
//
//DESCRIPTION: flush only specific nodes, depending on
//             the given matching function.
//
//PARAMETERS :
//  @match   : matching function
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44284215 "flushNodes"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "match" type class_ref 3705655 // match_fn_data
	  param inout name "match_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flushNodes
//
//DESCRIPTION: flush only specific nodes, depending on
//             the given matching function.
//
//PARAMETERS :
//  @match   : matching function
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flushNodes
//
//DESCRIPTION: flush only specific nodes, depending on
//             the given matching function.
//
//PARAMETERS :
//  @match   : matching function
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flushNodes
//
//DESCRIPTION: flush only specific nodes, depending on
//             the given matching function.
//
//PARAMETERS :
//  @match   : matching function
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44284343 "dequeue"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "bFromHead" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dequeue
//
//DESCRIPTION: dequeue data from the queue
//
//PARAMETERS :
//  @bFromHead : if true, dequeue from the head
//               if false, dequeue from the tail
//
//RETURN     : data ptr. NULL if not any data in the queue.
//==========================================================================

//===========================================================================
//FUNCTION   : dequeue
//
//DESCRIPTION: dequeue data from the queue
//
//PARAMETERS :
//  @bFromHead : if true, dequeue from the head
//               if false, dequeue from the tail
//
//RETURN     : data ptr. NULL if not any data in the queue.
//==========================================================================

//===========================================================================
//FUNCTION   : dequeue
//
//DESCRIPTION: dequeue data from the queue
//
//PARAMETERS :
//  @bFromHead : if true, dequeue from the head
//               if false, dequeue from the tail
//
//RETURN     : data ptr. NULL if not any data in the queue.
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44284471 "peek"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : peek
//
//DESCRIPTION: return the head element without removing it
//
//PARAMETERS : None
//
//RETURN     : data ptr. NULL if not any data in the queue.
//==========================================================================

//===========================================================================
//FUNCTION   : peek
//
//DESCRIPTION: return the head element without removing it
//
//PARAMETERS : None
//
//RETURN     : data ptr. NULL if not any data in the queue.
//==========================================================================

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44284599 "isEmpty"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isEmpty
//
//DESCRIPTION: return if the queue is empty or not
//
//PARAMETERS : None
//
//RETURN     : true -- queue is empty; false -- not empty
//==========================================================================

//===========================================================================
//FUNCTION   : isEmpty
//
//DESCRIPTION: return if the queue is empty or not
//
//PARAMETERS : None
//
//RETURN     : true -- queue is empty; false -- not empty
//==========================================================================

//===========================================================================
//FUNCTION   : isEmpty
//
//DESCRIPTION: return if the queue is empty or not
//
//PARAMETERS : None
//
//RETURN     : true -- queue is empty; false -- not empty
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44284727 "getCurrentSize"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_size;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3706039 "camera_q_node"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7132983 // list (<directional composition>)
	  relation 7132983 *-->
	    a role_name "list" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7132983 // list (<directional composition>)
	    b parent class_ref 3671991 // cam_list
	end

	attribute 13582263 "data"
	  public explicit_type "void"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 7133111 // m_head (<directional composition>)
	relation 7133111 *-->
	  a role_name "m_head" private
	    comment " dummy head"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7133111 // m_head (<directional composition>)
	  b parent class_ref 3706039 // camera_q_node
      end

      attribute 13582391 "m_size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13582519 "m_active"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13582647 "m_lock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7133239 // m_dataFn (<directional composition>)
	relation 7133239 *-->
	  a role_name "m_dataFn" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7133239 // m_dataFn (<directional composition>)
	  b parent class_ref 3705783 // release_data_fn
      end

      attribute 13582775 "m_userData"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3644087 "QCameraCmdThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44279351 "QCameraCmdThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraCmdThread
//
//DESCRIPTION: default constructor of QCameraCmdThread
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraCmdThread
//
//DESCRIPTION: default constructor of QCameraCmdThread
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraCmdThread
//
//DESCRIPTION: default constructor of QCameraCmdThread
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)} :
    cmd_queue()
 :
    cmd_queue()
 :
    cmd_queue()
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44279479 "~QCameraCmdThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraCmdThread
//
//DESCRIPTION: deconstructor of QCameraCmdThread
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraCmdThread
//
//DESCRIPTION: deconstructor of QCameraCmdThread
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraCmdThread
//
//DESCRIPTION: deconstructor of QCameraCmdThread
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44279607 "launch"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "start_routine" explicit_type "void *(*)(void *)"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}void *(*${p0})(void *)${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : launch
//
//DESCRIPTION: launch Cmd Thread
//
//PARAMETERS :
//  @start_routine : thread routine function ptr
//  @user_data     : user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : launch
//
//DESCRIPTION: launch Cmd Thread
//
//PARAMETERS :
//  @start_routine : thread routine function ptr
//  @user_data     : user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : launch
//
//DESCRIPTION: launch Cmd Thread
//
//PARAMETERS :
//  @start_routine : thread routine function ptr
//  @user_data     : user data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}void *(*${p0})(void *), ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44279735 "setName"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setName
//
//DESCRIPTION: name the cmd thread
//
//PARAMETERS :
//  @name : desired name for the thread
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setName
//
//DESCRIPTION: name the cmd thread
//
//PARAMETERS :
//  @name : desired name for the thread
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setName
//
//DESCRIPTION: name the cmd thread
//
//PARAMETERS :
//  @name : desired name for the thread
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44279863 "exit"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : exit
//
//DESCRIPTION: exit the CMD thread
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : exit
//
//DESCRIPTION: exit the CMD thread
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : exit
//
//DESCRIPTION: exit the CMD thread
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44279991 "sendCmd"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "cmd" type class_ref 3705143 // camera_cmd_type_t
	  param in name "sync_cmd" explicit_type "uint8_t"
	  param in name "priority" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : sendCmd
//
//DESCRIPTION: send a command to the Cmd Thread
//
//PARAMETERS :
//  @cmd     : command to be executed.
//  @sync_cmd: flag to indicate if this is a synchorinzed cmd. If true, this call
//             will wait until signal is set after the command is completed.
//  @priority: flag to indicate if this is a cmd with priority. If true, the cmd
//             will be enqueued to the head with priority.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendCmd
//
//DESCRIPTION: send a command to the Cmd Thread
//
//PARAMETERS :
//  @cmd     : command to be executed.
//  @sync_cmd: flag to indicate if this is a synchorinzed cmd. If true, this call
//             will wait until signal is set after the command is completed.
//  @priority: flag to indicate if this is a cmd with priority. If true, the cmd
//             will be enqueued to the head with priority.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : sendCmd
//
//DESCRIPTION: send a command to the Cmd Thread
//
//PARAMETERS :
//  @cmd     : command to be executed.
//  @sync_cmd: flag to indicate if this is a synchorinzed cmd. If true, this call
//             will wait until signal is set after the command is completed.
//  @priority: flag to indicate if this is a cmd with priority. If true, the cmd
//             will be enqueued to the head with priority.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44280119 "getCmd"
	preserve_cpp_body_indent public return_type class_ref 3705143 // camera_cmd_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCmd
//
//DESCRIPTION: dequeue a cmommand from cmd queue
//
//PARAMETERS : None
//
//RETURN     : cmd dequeued
//==========================================================================

//===========================================================================
//FUNCTION   : getCmd
//
//DESCRIPTION: dequeue a cmommand from cmd queue
//
//PARAMETERS : None
//
//RETURN     : cmd dequeued
//==========================================================================

//===========================================================================
//FUNCTION   : getCmd
//
//DESCRIPTION: dequeue a cmommand from cmd queue
//
//PARAMETERS : None
//
//RETURN     : cmd dequeued
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7132471 // cmd_queue (<directional composition>)
	relation 7132471 *-->
	  a role_name "cmd_queue" public
	    comment " cmd queue "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7132471 // cmd_queue (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      attribute 13579575 "cmd_pid"
	public explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " cmd thread ID "
      end

      classrelation 7132599 // cmd_sem (<directional composition>)
	relation 7132599 *-->
	  a role_name "cmd_sem" public
	    comment " semaphore for cmd thread "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7132599 // cmd_sem (<directional composition>)
	  b parent class_ref 3659831 // cam_semaphore_t
      end

      classrelation 7132727 // sync_sem (<directional composition>)
	relation 7132727 *-->
	  a role_name "sync_sem" public
	    comment " semaphore for synchronized call signal "
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7132727 // sync_sem (<directional composition>)
	  b parent class_ref 3659831 // cam_semaphore_t
      end
    end

    class 3649847 "QCameraPerfLock"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44281655 "QCameraPerfLock"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraPerfLock constructor
//
//DESCRIPTION: initialize member variables
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPerfLock constructor
//
//DESCRIPTION: initialize member variables
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

${inline}${class}::${name}${(}${)} :
        perf_lock_acq(NULL),
        perf_lock_rel(NULL),
        mDlHandle(NULL),
        mPerfLockEnable(0),
        mPerfLockHandle(-1),
        mPerfLockHandleTimed(-1),
        mTimerSet(0),
        mPerfLockTimeout(0),
        mStartTimeofLock(0)
 :
        perf_lock_acq(NULL),
        perf_lock_rel(NULL),
        mDlHandle(NULL),
        mPerfLockEnable(0),
        mPerfLockHandle(-1),
        mPerfLockHandleTimed(-1),
        mTimerSet(0),
        mPerfLockTimeout(0),
        mStartTimeofLock(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44281783 "~QCameraPerfLock"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraPerfLock destructor
//
//DESCRIPTION: class desctructor
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraPerfLock destructor
//
//DESCRIPTION: class desctructor
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44281911 "lock_init"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lock_init
//
//DESCRIPTION: opens the performance lib and initilizes the perf lock functions
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

//===========================================================================
//FUNCTION   : lock_init
//
//DESCRIPTION: opens the performance lib and initilizes the perf lock functions
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282039 "lock_deinit"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lock_deinit
//
//DESCRIPTION: deinitialize the perf lock parameters
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

//===========================================================================
//FUNCTION   : lock_deinit
//
//DESCRIPTION: deinitialize the perf lock parameters
//
//PARAMETERS :
//  None
//
//RETURN     : void
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282167 "lock_rel"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lock_rel
//
//DESCRIPTION: release the performance lock
//
//PARAMETERS :
//  None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : lock_rel
//
//DESCRIPTION: release the performance lock
//
//PARAMETERS :
//  None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282295 "lock_acq"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lock_acq
//
//DESCRIPTION: acquire the performance lock
//
//PARAMETERS :
//  None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : lock_acq
//
//DESCRIPTION: acquire the performance lock
//
//PARAMETERS :
//  None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282423 "lock_acq_timed"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "timer_val" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lock_acq_timed
//
//DESCRIPTION: Acquire the performance lock for the specified duration.
//             If an existing lock timeout has not elapsed, extend the
//             lock further for the specified duration
//
//PARAMETERS :
// @timer_val: lock duration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : lock_acq_timed
//
//DESCRIPTION: Acquire the performance lock for the specified duration.
//             If an existing lock timeout has not elapsed, extend the
//             lock further for the specified duration
//
//PARAMETERS :
// @timer_val: lock duration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282551 "lock_rel_timed"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : lock_rel_timed
//
//DESCRIPTION: release the performance lock
//
//PARAMETERS :
//  None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : lock_rel_timed
//
//DESCRIPTION: release the performance lock
//
//PARAMETERS :
//  None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282679 "isTimerReset"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : isTimerReset
//
//DESCRIPTION: Check if timout duration is reached
//
//PARAMETERS : None
//
//RETURN     : true if timeout reached
//             false if timeout not reached
//
//==========================================================================

//===========================================================================
//FUNCTION   : isTimerReset
//
//DESCRIPTION: Check if timout duration is reached
//
//PARAMETERS : None
//
//RETURN     : true if timeout reached
//             false if timeout not reached
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282807 "powerHintInternal"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "hint" explicit_type "power_hint_t"
	  param in name "enable" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : powerHintInternal
//
//DESCRIPTION: Sets the requested power hint and state to power HAL.
//
//PARAMETERS :
//enable     : Enable power hint if set to 1. Disable if set to 0.
//RETURN     : void
//
//==========================================================================

//===========================================================================
//FUNCTION   : powerHintInternal
//
//DESCRIPTION: Sets the requested power hint and state to power HAL.
//
//PARAMETERS :
//enable     : Enable power hint if set to 1. Disable if set to 0.
//RETURN     : void
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44282935 "powerHint"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "hint" explicit_type "power_hint_t"
	  param in name "enable" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : powerHint
//
//DESCRIPTION: Sets the requested power hint and state to power HAL.
//
//PARAMETERS :
//hint       : Power hint
//enable     : Enable power hint if set to 1. Disable if set to 0.
//RETURN     : void
//
//==========================================================================

//===========================================================================
//FUNCTION   : powerHint
//
//DESCRIPTION: Sets the requested power hint and state to power HAL.
//
//PARAMETERS :
//hint       : Power hint
//enable     : Enable power hint if set to 1. Disable if set to 0.
//RETURN     : void
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13580727 "perf_lock_acq"
	private explicit_type "int32_t (*)(int, int, int[], int)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}
    int32_t        (*${name})(int, int, int[], int)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13580855 "perf_lock_rel"
	private explicit_type "int32_t (*)(int)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}    int32_t        (*${name})(int)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44283063 "startTimer"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "timer_val" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start_timer
//
//DESCRIPTION: get the start of the timer
//
//PARAMETERS :
// @timer_val: timer duration in milliseconds
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : start_timer
//
//DESCRIPTION: get the start of the timer
//
//PARAMETERS :
// @timer_val: timer duration in milliseconds
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13580983 "mDlHandle"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13581111 "mPerfLockEnable"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13581239 "mLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13581367 "mPerfLockHandle"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Performance lock library handle"
      end

      attribute 13581495 "mPerfLockHandleTimed"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Performance lock library handle"
      end

      attribute 13581623 "m_pPowerModule"
	private explicit_type "power_module_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " power module Handle"
      end

      attribute 13581751 "mCurrentPowerHint"
	private explicit_type "power_hint_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13581879 "mCurrentPowerHintEnable"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13582007 "mTimerSet"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13582135 "mPerfLockTimeout"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7132855 // mStartTimeofLock (<directional composition>)
	relation 7132855 *-->
	  a role_name "mStartTimeofLock" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7132855 // mStartTimeofLock (<directional composition>)
	  b parent class_ref 3650487 // nsecs_t
      end
    end

    class 3705143 "camera_cmd_type_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13578807 "CAMERA_CMD_TYPE_NONE"
	public type class_ref 3705143 // camera_cmd_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13578935 "CAMERA_CMD_TYPE_START_DATA_PROC"
	public type class_ref 3705143 // camera_cmd_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13579063 "CAMERA_CMD_TYPE_STOP_DATA_PROC"
	public type class_ref 3705143 // camera_cmd_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13579191 "CAMERA_CMD_TYPE_DO_NEXT_JOB"
	public type class_ref 3705143 // camera_cmd_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13579319 "CAMERA_CMD_TYPE_EXIT"
	public type class_ref 3705143 // camera_cmd_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13579447 "CAMERA_CMD_TYPE_MAX"
	public type class_ref 3705143 // camera_cmd_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3705271 "camera_cmd_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 7132343 // cmd (<directional composition>)
	relation 7132343 *-->
	  a role_name "cmd" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7132343 // cmd (<directional composition>)
	  b parent class_ref 3705143 // camera_cmd_type_t
      end
    end

    class 3705399 "QCameraFlash"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44280247 "getInstance"
	class_operation preserve_cpp_body_indent public return_type class_ref 3705399 // QCameraFlash
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getInstance
//
//DESCRIPTION: Get and create the QCameraFlash singleton.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : getInstance
//
//DESCRIPTION: Get and create the QCameraFlash singleton.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : getInstance
//
//DESCRIPTION: Get and create the QCameraFlash singleton.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44280375 "registerCallbacks"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "callbacks" explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : registerCallbacks
//
//DESCRIPTION: provide flash module with reference to callbacks to framework
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : registerCallbacks
//
//DESCRIPTION: provide flash module with reference to callbacks to framework
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : registerCallbacks
//
//DESCRIPTION: provide flash module with reference to callbacks to framework
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44280503 "initFlash"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "camera_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initFlash
//
//DESCRIPTION: Reserve and initialize the flash unit associated with a
//             given camera id. This function is blocking until the
//             operation completes or fails. Each flash unit can be \"inited\"
//             by only one process at a time.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EBUSY   : The flash unit or the resource needed to turn on the
//             the flash is busy, typically because the flash is
//             already in use.
//  -EINVAL  : No flash present at camera_id.
//==========================================================================

//===========================================================================
//FUNCTION   : initFlash
//
//DESCRIPTION: Reserve and initialize the flash unit associated with a
//             given camera id. This function is blocking until the
//             operation completes or fails. Each flash unit can be \"inited\"
//             by only one process at a time.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EBUSY   : The flash unit or the resource needed to turn on the
//             the flash is busy, typically because the flash is
//             already in use.
//  -EINVAL  : No flash present at camera_id.
//==========================================================================

//===========================================================================
//FUNCTION   : initFlash
//
//DESCRIPTION: Reserve and initialize the flash unit associated with a
//             given camera id. This function is blocking until the
//             operation completes or fails. Each flash unit can be \"inited\"
//             by only one process at a time.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EBUSY   : The flash unit or the resource needed to turn on the
//             the flash is busy, typically because the flash is
//             already in use.
//  -EINVAL  : No flash present at camera_id.
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44280631 "setFlashMode"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "camera_id" explicit_type "int"
	  param in name "mode" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFlashMode
//
//DESCRIPTION: Turn on or off the flash associated with a given handle.
//             This function is blocking until the operation completes or
//             fails.
//
//PARAMETERS :
//  @camera_id  : Camera id of the flash
//  @on         : Whether to turn flash on (true) or off (false)
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id, or it is not inited.
//  -EALREADY: Flash is already in requested state
//==========================================================================

//===========================================================================
//FUNCTION   : setFlashMode
//
//DESCRIPTION: Turn on or off the flash associated with a given handle.
//             This function is blocking until the operation completes or
//             fails.
//
//PARAMETERS :
//  @camera_id  : Camera id of the flash
//  @on         : Whether to turn flash on (true) or off (false)
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id, or it is not inited.
//  -EALREADY: Flash is already in requested state
//==========================================================================

//===========================================================================
//FUNCTION   : setFlashMode
//
//DESCRIPTION: Turn on or off the flash associated with a given handle.
//             This function is blocking until the operation completes or
//             fails.
//
//PARAMETERS :
//  @camera_id  : Camera id of the flash
//  @on         : Whether to turn flash on (true) or off (false)
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id, or it is not inited.
//  -EALREADY: Flash is already in requested state
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44280759 "deinitFlash"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "camera_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deinitFlash
//
//DESCRIPTION: Release the flash unit associated with a given camera
//             position. This function is blocking until the operation
//             completes or fails.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//==========================================================================

//===========================================================================
//FUNCTION   : deinitFlash
//
//DESCRIPTION: Release the flash unit associated with a given camera
//             position. This function is blocking until the operation
//             completes or fails.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//==========================================================================

//===========================================================================
//FUNCTION   : deinitFlash
//
//DESCRIPTION: Release the flash unit associated with a given camera
//             position. This function is blocking until the operation
//             completes or fails.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44280887 "reserveFlashForCamera"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "camera_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : reserveFlashForCamera
//
//DESCRIPTION: Give control of the flash to the camera, and notify
//             framework that the flash has become unavailable.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//  -ENOSYS  : No callback available for torch_mode_status_change.
//==========================================================================

//===========================================================================
//FUNCTION   : reserveFlashForCamera
//
//DESCRIPTION: Give control of the flash to the camera, and notify
//             framework that the flash has become unavailable.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//  -ENOSYS  : No callback available for torch_mode_status_change.
//==========================================================================

//===========================================================================
//FUNCTION   : reserveFlashForCamera
//
//DESCRIPTION: Give control of the flash to the camera, and notify
//             framework that the flash has become unavailable.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//  -ENOSYS  : No callback available for torch_mode_status_change.
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44281015 "releaseFlashFromCamera"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "camera_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseFlashFromCamera
//
//DESCRIPTION: Release control of the flash from the camera, and notify
//             framework that the flash has become available.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//  -ENOSYS  : No callback available for torch_mode_status_change.
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFlashFromCamera
//
//DESCRIPTION: Release control of the flash from the camera, and notify
//             framework that the flash has become available.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//  -ENOSYS  : No callback available for torch_mode_status_change.
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFlashFromCamera
//
//DESCRIPTION: Release control of the flash from the camera, and notify
//             framework that the flash has become available.
//
//PARAMETERS :
//  @camera_id : Camera id of the flash.
//
//RETURN     :
//  0        : success
//  -EINVAL  : No camera present at camera_id or not inited.
//  -ENOSYS  : No callback available for torch_mode_status_change.
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44281143 "QCameraFlash"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCameraFlash
//
//DESCRIPTION: default constructor of QCameraFlash
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraFlash
//
//DESCRIPTION: default constructor of QCameraFlash
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCameraFlash
//
//DESCRIPTION: default constructor of QCameraFlash
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)} : m_callbacks(NULL)
 : m_callbacks(NULL)
 : m_callbacks(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44281271 "~QCameraFlash"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCameraFlash
//
//DESCRIPTION: deconstructor of QCameraFlash
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraFlash
//
//DESCRIPTION: deconstructor of QCameraFlash
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCameraFlash
//
//DESCRIPTION: deconstructor of QCameraFlash
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44281399 "QCameraFlash"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 3705399 // QCameraFlash
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44281527 "operator ="
	private return_type class_ref 3705399 // QCameraFlash
	nparams 1
	  param in name "" type class_ref 3705399 // QCameraFlash
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 13579703 "m_callbacks"
	const_attribute private explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13579831 "m_flashFds"
	private explicit_type "int32_t"
	multiplicity "[MM_CAMERA_MAX_NUM_SENSORS]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13579959 "m_flashOn"
	private explicit_type "bool"
	multiplicity "[MM_CAMERA_MAX_NUM_SENSORS]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13580087 "m_cameraOpen"
	private explicit_type "bool"
	multiplicity "[MM_CAMERA_MAX_NUM_SENSORS]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3705655 "match_fn_data"
      visibility package stereotype "typedef" explicit_base_type "bool"
      cpp_decl "${comment}typedef ${type}(* ${name})(void *data, void *user_data, void *match_data);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3705783 "release_data_fn"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* data, void *user_data);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3705911 "match_fn"
      visibility package stereotype "typedef" explicit_base_type "bool"
      cpp_decl "${comment}typedef ${type}(* ${name})(void *data, void *user_data);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 310455 "qcamera"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1741367 "QCameraCmdThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3705143 // camera_cmd_type_t
	class_ref 3705271 // camera_cmd_t
	class_ref 3644087 // QCameraCmdThread
      end
    end

    artifact 1741495 "QCameraFlash"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3705399 // QCameraFlash
      end
    end

    artifact 1741751 "QCameraPerf"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3649847 // QCameraPerfLock
      end
    end

    artifact 1741879 "QCameraQueue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3705655 // match_fn_data
	class_ref 3705783 // release_data_fn
	class_ref 3705911 // match_fn
	class_ref 3643959 // QCameraQueue
      end
    end
  end
end
