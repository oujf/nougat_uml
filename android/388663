format 213
"HAL3" // android::device::huawei::angler::camera::QCamera2::HAL3
  revision 2
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/huawei/angler/camera/QCamera2/HAL3/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/device/huawei/angler/camera/QCamera2/HAL3/"
  cpp_namespace "qcamera"
  classview 345783 "HAL3"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 3650487 "nsecs_t"
      visibility package stereotype "typedef" explicit_base_type "int64_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Time related macros "
    end

    class 3660471 "channel_cb_routine"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(mm_camera_super_buf_t *metadata,
                                camera3_stream_buffer_t *buffer,
                                uint32_t frame_number, void *userdata);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3660599 "QCamera3Channel"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44229047 "QCamera3Channel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 8
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "userData" explicit_type "void"
	  param in name "numBuffers" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3Channel
//
//DESCRIPTION: constrcutor of QCamera3Channel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3Channel
//
//DESCRIPTION: constrcutor of QCamera3Channel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44229175 "~QCamera3Channel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3Channel
//
//DESCRIPTION: destructor of QCamera3Channel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Channel
//
//DESCRIPTION: destructor of QCamera3Channel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Channel
//
//DESCRIPTION: destructor of QCamera3Channel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44229303 "start"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start channel, which will start all streams belong to this channel
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start channel, which will start all streams belong to this channel
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start channel, which will start all streams belong to this channel
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44229431 "stop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop a channel, which will stop all streams belong to this channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop a channel, which will stop all streams belong to this channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop a channel, which will stop all streams belong to this channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44229559 "setBatchSize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "batchSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBatchSize
//
//DESCRIPTION: Set batch size for the channel. This is a dummy implementation
//             for the base class
//
//PARAMETERS :
//  @batchSize  : Number of image buffers in a batch
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBatchSize
//
//DESCRIPTION: Set batch size for the channel. This is a dummy implementation
//             for the base class
//
//PARAMETERS :
//  @batchSize  : Number of image buffers in a batch
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44229687 "queueBatchBuf"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : queueBatchBuf
//
//DESCRIPTION: This is a dummy implementation for the base class
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queueBatchBuf
//
//DESCRIPTION: This is a dummy implementation for the base class
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44229815 "setPerFrameMapUnmap"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setPerFrameMapUnmap
//
//DESCRIPTION: Sets internal enable flag
//
//PARAMETERS :
// @enable : Bool value for the enable flag
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setPerFrameMapUnmap
//
//DESCRIPTION: Sets internal enable flag
//
//PARAMETERS :
// @enable : Bool value for the enable flag
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44229943 "bufDone"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return a stream buf back to kernel
//
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return a stream buf back to kernel
//
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return a stream buf back to kernel
//
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230071 "setBundleInfo"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "bundleInfo" type class_ref 3660727 // cam_bundle_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230199 "getStreamTypeMask"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamTypeMask
//
//DESCRIPTION: Get bit mask of all stream types in this channel
//
//PARAMETERS : None
//
//RETURN     : Bit mask of all stream types in this channel
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamTypeMask
//
//DESCRIPTION: Get bit mask of all stream types in this channel
//
//PARAMETERS : None
//
//RETURN     : Bit mask of all stream types in this channel
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamTypeMask
//
//DESCRIPTION: Get bit mask of all stream types in this channel
//
//PARAMETERS : None
//
//RETURN     : Bit mask of all stream types in this channel
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230327 "getStreamID"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 1
	  param in name "streamMask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamID
//
//DESCRIPTION: Get StreamID of requested stream type
//
//PARAMETERS : streamMask
//
//RETURN     : Stream ID
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamID
//
//DESCRIPTION: Get StreamID of requested stream type
//
//PARAMETERS : streamMask
//
//RETURN     : Stream ID
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamID
//
//DESCRIPTION: Get StreamID of requested stream type
//
//PARAMETERS : streamMask
//
//RETURN     : Stream ID
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230455 "initialize"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230583 "request"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param inout name "" explicit_type "buffer_handle_t"
	  param in name "" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return 0;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230711 "request"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 4
	  param inout name "" explicit_type "buffer_handle_t"
	  param in name "" explicit_type "uint32_t"
	  param inout name "" explicit_type "camera3_stream_buffer_t"
	  param inout name "" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} { return 0;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230839 "streamCbRoutine"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44230967 "registerBuffer"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231095 "getStreamBufs"
	abstract cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231223 "putStreamBufs"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231351 "getStreamByHandle"
	preserve_cpp_body_indent public return_type class_ref 3660855 // QCamera3Stream
	nparams 1
	  param in name "streamHandle" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamByHandle
//
//DESCRIPTION: return stream object by stream handle
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByHandle
//
//DESCRIPTION: return stream object by stream handle
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByHandle
//
//DESCRIPTION: return stream object by stream handle
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231479 "getMyHandle"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_handle;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231607 "getNumOfStreams"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_numStreams;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231735 "getNumBuffers"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mNumBuffers;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231863 "getStreamByIndex"
	preserve_cpp_body_indent public return_type class_ref 3660855 // QCamera3Stream
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamByIndex
//
//DESCRIPTION: return stream object by index
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamByIndex
//
//DESCRIPTION: return stream object by index
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44231991 "streamCbRoutine"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION: callback routine for stream
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION: callback routine for stream
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION: callback routine for stream
//
//PARAMETERS :
//  @streamHandle : stream handle
//
//RETURN     : stream object. NULL if not found
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44232119 "dumpYUV"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "dim" type class_ref 3646135 // cam_dimension_t
	  param in name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param in name "name" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dumpYUV
//
//DESCRIPTION: function to dump the YUV data from ISP/pproc
//
//PARAMETERS :
//  @frame   : frame to be dumped
//  @dim     : dimension of the stream
//  @offset  : offset of the data
//  @name    : 1 if it is ISP output/pproc input, 2 if it is pproc output
//
//RETURN  :
//==========================================================================

//===========================================================================
//FUNCTION   : dumpYUV
//
//DESCRIPTION: function to dump the YUV data from ISP/pproc
//
//PARAMETERS :
//  @frame   : frame to be dumped
//  @dim     : dimension of the stream
//  @offset  : offset of the data
//  @name    : 1 if it is ISP output/pproc input, 2 if it is pproc output
//
//RETURN  :
//==========================================================================

//===========================================================================
//FUNCTION   : dumpYUV
//
//DESCRIPTION: function to dump the YUV data from ISP/pproc
//
//PARAMETERS :
//  @frame   : frame to be dumped
//  @dim     : dimension of the stream
//  @offset  : offset of the data
//  @name    : 1 if it is ISP output/pproc input, 2 if it is pproc output
//
//RETURN  :
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13317047 "mUserData"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7063991 // mPaddingInfo (<unidirectional association>)
	relation 7063991 --->
	  a role_name "mPaddingInfo" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7063991 // mPaddingInfo (<unidirectional association>)
	  b parent class_ref 3651511 // cam_padding_info_t
      end

      classrelation 7064119 // mStreams (<unidirectional association>)
	relation 7064119 --->
	  a role_name "mStreams" multiplicity "[MAX_STREAM_NUM_IN_BUNDLE]" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7064119 // mStreams (<unidirectional association>)
	  b parent class_ref 3660855 // QCamera3Stream
      end

      attribute 13317175 "m_numStreams"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44232247 "addStream"
	preserve_cpp_body_indent protected explicit_return_type "int32_t"
	nparams 8
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param in name "streamFormat" type class_ref 3628215 // cam_format_t
	  param in name "streamDim" type class_ref 3646135 // cam_dimension_t
	  param in name "streamRotation" type class_ref 3651639 // cam_rotation_t
	  param in name "minStreamBufNum" explicit_type "uint8_t"
	  param in name "postprocessMask" explicit_type "uint32_t"
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	  param in name "batchSize" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addStream
//
//DESCRIPTION: add a stream into channel
//
//PARAMETERS :
//  @streamType     : stream type
//  @streamFormat   : stream format
//  @streamDim      : stream dimension
//  @streamRotation : rotation of the stream
//  @minStreamBufNum : minimal buffer count for particular stream type
//  @postprocessMask : post-proccess feature mask
//  @isType         : type of image stabilization required on the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addStream
//
//DESCRIPTION: add a stream into channel
//
//PARAMETERS :
//  @streamType     : stream type
//  @streamFormat   : stream format
//  @streamDim      : stream dimension
//  @streamRotation : rotation of the stream
//  @minStreamBufNum : minimal buffer count for particular stream type
//  @postprocessMask : post-proccess feature mask
//  @isType         : type of image stabilization required on the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44232375 "allocateStreamInfoBuf"
	protected explicit_return_type "int32_t"
	nparams 1
	  param inout name "stream" explicit_type "camera3_stream_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13317303 "m_camHandle"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7064247 // m_camOps (<unidirectional association>)
	relation 7064247 --->
	  a role_name "m_camOps" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7064247 // m_camOps (<unidirectional association>)
	  b parent class_ref 3651127 // mm_camera_ops_t
      end

      attribute 13317431 "m_bIsActive"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13317559 "m_handle"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7064375 // mDataCB (<directional composition>)
	relation 7064375 *-->
	  a role_name "mDataCB" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7064375 // mDataCB (<directional composition>)
	  b parent class_ref 3651383 // mm_camera_buf_notify_t
      end

      classrelation 7064503 // mStreamInfoBuf (<unidirectional association>)
	relation 7064503 --->
	  a role_name "mStreamInfoBuf" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7064503 // mStreamInfoBuf (<unidirectional association>)
	  b parent class_ref 3661111 // QCamera3HeapMemory
      end

      classrelation 7064631 // mChannelCB (<directional composition>)
	relation 7064631 *-->
	  a role_name "mChannelCB" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7064631 // mChannelCB (<directional composition>)
	  b parent class_ref 3660471 // channel_cb_routine
      end

      attribute 13317687 "mPostProcMask"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "cam_padding_info_t *mPaddingInfo;
"
      end

      attribute 13317815 "mYUVDump"
	protected explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7064759 // mIsType (<directional composition>)
	relation 7064759 *-->
	  a role_name "mIsType" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7064759 // mIsType (<directional composition>)
	  b parent class_ref 3654071 // cam_is_type_t
      end

      attribute 13317943 "mNumBuffers"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13318071 "mPerFrameMapUnmapEnable"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Enable unmapping of buffer before issuing buffer callback. Default value
for this flag is true and is selectively set to false for the usecases
such as HFR to avoid any performance hit due to mapping/unmapping 
"
      end
    end

    class 3660855 "QCamera3Stream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44270903 "QCamera3Stream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 5
	  param in name "camHandle" explicit_type "uint32_t"
	  param in name "chId" explicit_type "uint32_t"
	  param inout name "camOps" type class_ref 3651127 // mm_camera_ops_t
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "channel" type class_ref 3660599 // QCamera3Channel
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3Stream
//
//DESCRIPTION: constructor of QCamera3Stream
//
//PARAMETERS :
//  @allocator  : memory allocator obj
//  @camHandle  : camera handle
//  @chId       : channel handle
//  @camOps     : ptr to camera ops table
//  @paddingInfo: ptr to padding info
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3Stream
//
//DESCRIPTION: constructor of QCamera3Stream
//
//PARAMETERS :
//  @allocator  : memory allocator obj
//  @camHandle  : camera handle
//  @chId       : channel handle
//  @camOps     : ptr to camera ops table
//  @paddingInfo: ptr to padding info
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3Stream
//
//DESCRIPTION: constructor of QCamera3Stream
//
//PARAMETERS :
//  @allocator  : memory allocator obj
//  @camHandle  : camera handle
//  @chId       : channel handle
//  @camOps     : ptr to camera ops table
//  @paddingInfo: ptr to padding info
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)} :
        mCamHandle(camHandle),
        mChannelHandle(chId),
        mHandle(0),
        mCamOps(camOps),
        mStreamInfo(NULL),
        mMemOps(NULL),
        mNumBufs(0),
        mDataCB(NULL),
        mUserData(NULL),
        mDataQ(releaseFrameData, this),
        mStreamInfoBuf(NULL),
        mStreamBufs(NULL),
        mBufDefs(NULL),
        mChannel(channel)
 :
        mCamHandle(camHandle),
        mChannelHandle(chId),
        mHandle(0),
        mCamOps(camOps),
        mStreamInfo(NULL),
        mMemOps(NULL),
        mNumBufs(0),
        mDataCB(NULL),
        mUserData(NULL),
        mDataQ(releaseFrameData, this),
        mStreamInfoBuf(NULL),
        mStreamBufs(NULL),
        mBufDefs(NULL),
        mChannel(channel),
        mBatchSize(0),
        mNumBatchBufs(0),
        mStreamBatchBufs(NULL),
        mBatchBufDefs(NULL),
        mCurrentBatchBufDef(NULL),
        mBufsStaged(0),
        mFreeBatchBufQ(NULL, this)
 :
        mCamHandle(camHandle),
        mChannelHandle(chId),
        mHandle(0),
        mCamOps(camOps),
        mStreamInfo(NULL),
        mMemOps(NULL),
        mNumBufs(0),
        mDataCB(NULL),
        mUserData(NULL),
        mDataQ(releaseFrameData, this),
        mStreamInfoBuf(NULL),
        mStreamBufs(NULL),
        mBufDefs(NULL),
        mChannel(channel),
        mBatchSize(0),
        mNumBatchBufs(0),
        mStreamBatchBufs(NULL),
        mBatchBufDefs(NULL),
        mCurrentBatchBufDef(NULL),
        mBufsStaged(0),
        mFreeBatchBufQ(NULL, this)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44271031 "~QCamera3Stream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3Stream
//
//DESCRIPTION: deconstructor of QCamera3Stream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Stream
//
//DESCRIPTION: deconstructor of QCamera3Stream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Stream
//
//DESCRIPTION: deconstructor of QCamera3Stream
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44271159 "init"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 11
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param in name "streamFormat" type class_ref 3628215 // cam_format_t
	  param in name "streamDim" type class_ref 3646135 // cam_dimension_t
	  param in name "streamRotation" type class_ref 3651639 // cam_rotation_t
	  param inout name "reprocess_config" type class_ref 3668407 // cam_stream_reproc_config_t
	  param in name "minNumBuffers" explicit_type "uint8_t"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param in name "is_type" type class_ref 3654071 // cam_is_type_t
	  param in name "batchSize" explicit_type "uint32_t"
	  param in name "stream_cb" type class_ref 3668279 // hal3_stream_cb_routine
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} * ${p10}${v10}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialize stream obj
//
//PARAMETERS :
//  @streamType     : stream type
//  @streamFormat   : stream format
//  @streamDim      : stream dimension
//  @reprocess_config: reprocess stream input configuration
//  @minNumBuffers  : minimal buffer count for particular stream type
//  @postprocess_mask: PP mask
//  @is_type  : Image stabilization type, cam_is_type_t
//  @batchSize  : Number of image buffers in a batch.
//                0: No batch. N: container with N image buffers
//  @stream_cb      : callback handle
//  @userdata       : user data
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialize stream obj
//
//PARAMETERS :
//  @streamType     : stream type
//  @streamFormat   : stream format
//  @streamDim      : stream dimension
//  @reprocess_config: reprocess stream input configuration
//  @minNumBuffers  : minimal buffer count for particular stream type
//  @postprocess_mask: PP mask
//  @is_type  : Image stabilization type, cam_is_type_t
//  @batchSize  : Number of image buffers in a batch.
//                0: No batch. N: container with N image buffers
//  @stream_cb      : callback handle
//  @userdata       : user data
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} * ${p10}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44271287 "bufDone"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @index   : index of buffer to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: return stream buffer to kernel
//
//PARAMETERS :
//  @index   : index of buffer to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44271415 "bufRelease"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufRelease
//
//DESCRIPTION: release all resources associated with this buffer
//
//PARAMETERS :
//  @index   : index of buffer to be released
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufRelease
//
//DESCRIPTION: release all resources associated with this buffer
//
//PARAMETERS :
//  @index   : index of buffer to be released
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufRelease
//
//DESCRIPTION: release all resources associated with this buffer
//
//PARAMETERS :
//  @index   : index of buffer to be released
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44271543 "processDataNotify"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processDataNotify
//
//DESCRIPTION: process stream data notify
//
//PARAMETERS :
//  @frame   : stream frame received
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processDataNotify
//
//DESCRIPTION: process stream data notify
//
//PARAMETERS :
//  @frame   : stream frame received
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : processDataNotify
//
//DESCRIPTION: process stream data notify
//
//PARAMETERS :
//  @frame   : stream frame received
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44271671 "start"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start stream. Will start main stream thread to handle stream
//             related ops.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start stream. Will start main stream thread to handle stream
//             related ops.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start stream. Will start main stream thread to handle stream
//             related ops.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44271799 "stop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop stream. Will stop main stream thread
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop stream. Will stop main stream thread
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop stream. Will stop main stream thread
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44271927 "queueBatchBuf"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : queueBatchBuf
//
//DESCRIPTION: queue batch container to downstream.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queueBatchBuf
//
//DESCRIPTION: queue batch container to downstream.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272055 "dataNotifyCB"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: callback for data notify. This function is registered with
//             mm-camera-interface to handle data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: callback for data notify. This function is registered with
//             mm-camera-interface to handle data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: callback for data notify. This function is registered with
//             mm-camera-interface to handle data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272183 "dataProcRoutine"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataProcRoutine
//
//DESCRIPTION: function to process data in the main stream thread
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcRoutine
//
//DESCRIPTION: function to process data in the main stream thread
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcRoutine
//
//DESCRIPTION: function to process data in the main stream thread
//
//PARAMETERS :
//  @data    : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272311 "getMyHandle"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mHandle;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272439 "getMyType"
	preserve_cpp_body_indent const public explicit_return_type "cam_stream_type_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMyType
//
//DESCRIPTION: query stream type
//
//PARAMETERS : None
//
//RETURN     : type of stream
//==========================================================================

//===========================================================================
//FUNCTION   : getMyType
//
//DESCRIPTION: query stream type
//
//PARAMETERS : None
//
//RETURN     : type of stream
//==========================================================================

//===========================================================================
//FUNCTION   : getMyType
//
//DESCRIPTION: query stream type
//
//PARAMETERS : None
//
//RETURN     : type of stream
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272567 "getFrameOffset"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameOffset
//
//DESCRIPTION: query stream buffer frame offset info
//
//PARAMETERS :
//  @offset  : reference to struct to store the queried frame offset info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameOffset
//
//DESCRIPTION: query stream buffer frame offset info
//
//PARAMETERS :
//  @offset  : reference to struct to store the queried frame offset info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameOffset
//
//DESCRIPTION: query stream buffer frame offset info
//
//PARAMETERS :
//  @offset  : reference to struct to store the queried frame offset info
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272695 "getFrameDimension"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameDimension
//
//DESCRIPTION: query stream frame dimension info
//
//PARAMETERS :
//  @dim     : reference to struct to store the queried frame dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameDimension
//
//DESCRIPTION: query stream frame dimension info
//
//PARAMETERS :
//  @dim     : reference to struct to store the queried frame dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameDimension
//
//DESCRIPTION: query stream frame dimension info
//
//PARAMETERS :
//  @dim     : reference to struct to store the queried frame dimension
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272823 "getFormat"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFormat
//
//DESCRIPTION: query stream format
//
//PARAMETERS :
//  @fmt     : reference to stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFormat
//
//DESCRIPTION: query stream format
//
//PARAMETERS :
//  @fmt     : reference to stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFormat
//
//DESCRIPTION: query stream format
//
//PARAMETERS :
//  @fmt     : reference to stream format
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44272951 "getStreamBufs"
	cpp_inline public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return mStreamBufs;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273079 "getMyServerID"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMyServerID
//
//DESCRIPTION: query server stream ID
//
//PARAMETERS : None
//
//RETURN     : stream ID from server
//==========================================================================

//===========================================================================
//FUNCTION   : getMyServerID
//
//DESCRIPTION: query server stream ID
//
//PARAMETERS : None
//
//RETURN     : stream ID from server
//==========================================================================

//===========================================================================
//FUNCTION   : getMyServerID
//
//DESCRIPTION: query server stream ID
//
//PARAMETERS : None
//
//RETURN     : stream ID from server
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273207 "mapBuf"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 5
	  param in name "buf_type" explicit_type "uint8_t"
	  param in name "buf_idx" explicit_type "uint32_t"
	  param in name "plane_idx" explicit_type "int32_t"
	  param in name "fd" explicit_type "int"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : mapBuf
//
//DESCRIPTION: map stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//  @fd       : fd of the buffer
//  @size     : lenght of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : mapBuf
//
//DESCRIPTION: map stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//  @fd       : fd of the buffer
//  @size     : lenght of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273335 "unmapBuf"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "buf_type" explicit_type "uint8_t"
	  param in name "buf_idx" explicit_type "uint32_t"
	  param in name "plane_idx" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unmapBuf
//
//DESCRIPTION: unmap stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapBuf
//
//DESCRIPTION: unmap stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapBuf
//
//DESCRIPTION: unmap stream related buffer to backend server
//
//PARAMETERS :
//  @buf_type : mapping type of buffer
//  @buf_idx  : index of buffer
//  @plane_idx: plane index
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273463 "setParameter"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "param" type class_ref 3660215 // cam_stream_parm_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setParameter
//
//DESCRIPTION: set stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be set
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setParameter
//
//DESCRIPTION: set stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be set
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setParameter
//
//DESCRIPTION: set stream based parameters
//
//PARAMETERS :
//  @param   : ptr to parameters to be set
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273591 "releaseFrameData"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseFrameData
//
//DESCRIPTION: callback function to release frame data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFrameData
//
//DESCRIPTION: callback function to release frame data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseFrameData
//
//DESCRIPTION: callback function to release frame data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCameraReprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13342647 "mCamHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13342775 "mChannelHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13342903 "mHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " stream handle from mm-camera-interface"
      end

      classrelation 7079735 // mCamOps (<unidirectional association>)
	relation 7079735 --->
	  a role_name "mCamOps" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079735 // mCamOps (<unidirectional association>)
	  b parent class_ref 3651127 // mm_camera_ops_t
      end

      classrelation 7079863 // mStreamInfo (<unidirectional association>)
	relation 7079863 --->
	  a role_name "mStreamInfo" private
	    comment " ptr to stream info buf"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079863 // mStreamInfo (<unidirectional association>)
	  b parent class_ref 3645239 // cam_stream_info_t
      end

      classrelation 7079991 // mMemVtbl (<directional composition>)
	relation 7079991 *-->
	  a role_name "mMemVtbl" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079991 // mMemVtbl (<directional composition>)
	  b parent class_ref 3660343 // mm_camera_stream_mem_vtbl_t
      end

      classrelation 7080119 // mMemOps (<unidirectional association>)
	relation 7080119 --->
	  a role_name "mMemOps" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080119 // mMemOps (<unidirectional association>)
	  b parent class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
      end

      attribute 13343031 "mNumBufs"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7080247 // mDataCB (<directional composition>)
	relation 7080247 *-->
	  a role_name "mDataCB" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080247 // mDataCB (<directional composition>)
	  b parent class_ref 3668279 // hal3_stream_cb_routine
      end

      attribute 13343159 "mUserData"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7080375 // mDataQ (<directional composition>)
	relation 7080375 *-->
	  a role_name "mDataQ" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080375 // mDataQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7080503 // mProcTh (<directional composition>)
	relation 7080503 *-->
	  a role_name "mProcTh" private
	    comment " thread for dataCB"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080503 // mProcTh (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      classrelation 7080631 // mStreamInfoBuf (<unidirectional association>)
	relation 7080631 --->
	  a role_name "mStreamInfoBuf" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080631 // mStreamInfoBuf (<unidirectional association>)
	  b parent class_ref 3661111 // QCamera3HeapMemory
      end

      classrelation 7080759 // mStreamBufs (<unidirectional association>)
	relation 7080759 --->
	  a role_name "mStreamBufs" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080759 // mStreamBufs (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      classrelation 7080887 // mBufDefs (<unidirectional association>)
	relation 7080887 --->
	  a role_name "mBufDefs" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7080887 // mBufDefs (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7081015 // mFrameLenOffset (<directional composition>)
	relation 7081015 *-->
	  a role_name "mFrameLenOffset" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081015 // mFrameLenOffset (<directional composition>)
	  b parent class_ref 3630007 // cam_frame_len_offset_t
      end

      classrelation 7081143 // mPaddingInfo (<directional composition>)
	relation 7081143 *-->
	  a role_name "mPaddingInfo" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081143 // mPaddingInfo (<directional composition>)
	  b parent class_ref 3651511 // cam_padding_info_t
      end

      classrelation 7081271 // mChannel (<unidirectional association>)
	relation 7081271 --->
	  a role_name "mChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081271 // mChannel (<unidirectional association>)
	  b parent class_ref 3660599 // QCamera3Channel
      end

      attribute 13343287 "mLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Lock controlling access to 'mBufDefs'"
      end

      attribute 13343415 "mBatchSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 0: No batch, non-0: Number of imaage bufs in a batch"
      end

      attribute 13343543 "mNumBatchBufs"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of batch buffers which can hold image bufs"
      end

      classrelation 7081399 // mStreamBatchBufs (<unidirectional association>)
	relation 7081399 --->
	  a role_name "mStreamBatchBufs" private
	    comment "Pointer to batch buffers memory"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081399 // mStreamBatchBufs (<unidirectional association>)
	  b parent class_ref 3661111 // QCamera3HeapMemory
      end

      classrelation 7081527 // mBatchBufDefs (<unidirectional association>)
	relation 7081527 --->
	  a role_name "mBatchBufDefs" private
	    comment "Pointer to array of batch bufDefs"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081527 // mBatchBufDefs (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7081655 // mCurrentBatchBufDef (<unidirectional association>)
	relation 7081655 --->
	  a role_name "mCurrentBatchBufDef" private
	    comment "batch buffer in progress during"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081655 // mCurrentBatchBufDef (<unidirectional association>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      attribute 13343671 "mBufsStaged"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "aggregation
Number of image buffers aggregated into"
      end

      classrelation 7081783 // mFreeBatchBufQ (<directional composition>)
	relation 7081783 *-->
	  a role_name "mFreeBatchBufQ" private
	    comment "currentBatchBufDef
Buffer queue containing empty batch buffers"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081783 // mFreeBatchBufQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      operation 44273719 "get_bufs"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 6
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_bufs
//
//DESCRIPTION: static function entry to allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : get_bufs
//
//DESCRIPTION: static function entry to allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : get_bufs
//
//DESCRIPTION: static function entry to allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273847 "put_bufs"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : put_bufs
//
//DESCRIPTION: static function entry to deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : put_bufs
//
//DESCRIPTION: static function entry to deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : put_bufs
//
//DESCRIPTION: static function entry to deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44273975 "invalidate_buf"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : invalidate_buf
//
//DESCRIPTION: static function entry to invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : invalidate_buf
//
//DESCRIPTION: static function entry to invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274103 "clean_invalidate_buf"
	class_operation preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : clean_invalidate_buf
//
//DESCRIPTION: static function entry to clean and invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : clean_invalidate_buf
//
//DESCRIPTION: static function entry to clean and invalidate a specific stream buffer
//
//PARAMETERS :
//  @index      : index of the stream buffer to invalidate
//  @user_data  : user data ptr of ops_tbl
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274231 "getBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 5
	  param inout name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufs
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBufs
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBufs
//
//DESCRIPTION: allocate stream buffers
//
//PARAMETERS :
//  @offset     : offset info of stream buffers
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}, ${t3} * * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274359 "putBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putBufs
//
//DESCRIPTION: deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putBufs
//
//DESCRIPTION: deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putBufs
//
//DESCRIPTION: deallocate stream buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274487 "invalidateBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : invalidateBuf
//
//DESCRIPTION: invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : invalidateBuf
//
//DESCRIPTION: invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274615 "cleanInvalidateBuf"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cleanInvalidateBuf
//
//DESCRIPTION: clean and invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cleanInvalidateBuf
//
//DESCRIPTION: clean and invalidate a specific stream buffer
//
//PARAMETERS :
//  @index   : index of the buffer to invalidate
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274743 "getBatchBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 4
	  param inout name "num_bufs" explicit_type "uint8_t"
	  param inout name "initial_reg_flag" explicit_type "uint8_t"
	  param inout name "bufs" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}, ${t2} * * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBatchBufs
//
//DESCRIPTION: allocate batch containers for the stream
//
//PARAMETERS :
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
// @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBatchBufs
//
//DESCRIPTION: allocate batch containers for the stream
//
//PARAMETERS :
//  @num_bufs   : number of buffers allocated
//  @initial_reg_flag: flag to indicate if buffer needs to be registered
//                     at kernel initially
//  @bufs       : output of allocated buffers
// @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * * ${p1}, ${t2} * * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274871 "putBatchBufs"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "ops_tbl" type class_ref 3660087 // mm_camera_map_unmap_ops_tbl_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putBatchBufs
//
//DESCRIPTION: deallocate stream batch buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : putBatchBufs
//
//DESCRIPTION: deallocate stream batch buffers
//
//PARAMETERS :
//  @ops_tbl    : ptr to buf mapping/unmapping ops
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44274999 "getBatchBufDef"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "batchBufDef" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "index" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBatchBufDef
//
//DESCRIPTION: query detailed buffer information of batch buffer
//
//PARAMETERS :
//  @bufDef  : [output] reference to struct to store buffer definition
//  @@index  : [input] index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBatchBufDef
//
//DESCRIPTION: query detailed buffer information of batch buffer
//
//PARAMETERS :
//  @bufDef  : [output] reference to struct to store buffer definition
//  @@index  : [input] index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44275127 "aggregateBufToBatch"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "bufDef" type class_ref 3646391 // mm_camera_buf_def_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : aggregateBufToBatch
//
//DESCRIPTION: queue batch container to downstream.
//
//PARAMETERS :
//  @bufDef : image buffer to be aggregated into batch
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : aggregateBufToBatch
//
//DESCRIPTION: queue batch container to downstream.
//
//PARAMETERS :
//  @bufDef : image buffer to be aggregated into batch
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44275255 "handleBatchBuffer"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "superBuf" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handleBatchBuffer
//
//DESCRIPTION: separate individual buffers from the batch and issue callback
//
//PARAMETERS :
//  @superBuf : Received superbuf containing batch buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : handleBatchBuffer
//
//DESCRIPTION: separate individual buffers from the batch and issue callback
//
//PARAMETERS :
//  @superBuf : Received superbuf containing batch buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44275383 "flushFreeBatchBufQ"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flushFreeBatchBufQ
//
//DESCRIPTION: dequeue all the entries of mFreeBatchBufQ and call flush.
//             QCameraQueue::flush calls 'free(node->data)' which should be
//             avoided for mFreeBatchBufQ as the entries are not allocated
//             during each enqueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : flushFreeBatchBufQ
//
//DESCRIPTION: dequeue all the entries of mFreeBatchBufQ and call flush.
//             QCameraQueue::flush calls 'free(node->data)' which should be
//             avoided for mFreeBatchBufQ as the entries are not allocated
//             during each enqueue
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3660983 "QCamera3StreamMem"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44275511 "QCamera3StreamMem"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "maxHeapBuffer" explicit_type "uint32_t"
	  param in name "queueHeapBuffers" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3StreamMem
//
//DESCRIPTION: default constructor of QCamera3StreamMem
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3StreamMem
//
//DESCRIPTION: default constructor of QCamera3StreamMem
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)} :
        mHeapMem(maxHeapBuffer),
        mGrallocMem(maxHeapBuffer),
        mMaxHeapBuffers(maxHeapBuffer),
        mQueueHeapBuffers(queueHeapBuffers)
 :
        mHeapMem(maxHeapBuffer),
        mGrallocMem(maxHeapBuffer),
        mMaxHeapBuffers(maxHeapBuffer),
        mQueueHeapBuffers(queueHeapBuffers)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44275639 "~QCamera3StreamMem"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3StreamMem
//
//DESCRIPTION: destructor of QCamera3StreamMem
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3StreamMem
//
//DESCRIPTION: destructor of QCamera3StreamMem
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44275767 "getCnt"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated/registered
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated/registered
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44275895 "getRegFlags"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "regFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated/registered buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getRegFlags
//
//DESCRIPTION: query initial reg flags
//
//PARAMETERS :
//  @regFlags: initial reg flags of the allocated/registered buffers
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276023 "getFd"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFd
//
//DESCRIPTION: return file descriptor of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : file descriptor
//==========================================================================

//===========================================================================
//FUNCTION   : getFd
//
//DESCRIPTION: return file descriptor of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : file descriptor
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to access individual QCamera3Buffer object"
      end

      operation 44276151 "getSize"
	preserve_cpp_body_indent public explicit_return_type "ssize_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSize
//
//DESCRIPTION: return buffer size of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer size
//==========================================================================

//===========================================================================
//FUNCTION   : getSize
//
//DESCRIPTION: return buffer size of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer size
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276279 "invalidateCache"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : invalidateCache
//
//DESCRIPTION: invalidate the cache of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : invalidateCache
//
//DESCRIPTION: invalidate the cache of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276407 "cleanInvalidateCache"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cleanInvalidateCache
//
//DESCRIPTION: clean and invalidate the cache of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cleanInvalidateCache
//
//DESCRIPTION: clean and invalidate the cache of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276535 "getBufDef"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "bufDef" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufDef
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @offset  : [input] frame buffer offset
//  @bufDef  : [output] reference to struct to store buffer definition
//  @index   : [input] index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBufDef
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @offset  : [input] frame buffer offset
//  @bufDef  : [output] reference to struct to store buffer definition
//  @index   : [input] index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276663 "getPtr"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return virtual address of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : virtual address
//==========================================================================

//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: return virtual address of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : virtual address
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276791 "valid"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : valid
//
//DESCRIPTION: return whether there is a valid buffer at the current index
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : true if there is a buffer, false otherwise
//==========================================================================

//===========================================================================
//FUNCTION   : valid
//
//DESCRIPTION: return whether there is a valid buffer at the current index
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : true if there is a buffer, false otherwise
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44276919 "registerBuffer"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: registers frameworks-allocated gralloc buffer_handle_t
//
//PARAMETERS :
//  @buffers : buffer_handle_t pointer
//  @type :    cam_stream_type_t
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: registers frameworks-allocated gralloc buffer_handle_t
//
//PARAMETERS :
//  @buffers : buffer_handle_t pointer
//  @type :    cam_stream_type_t
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gralloc buffer related functions"
      end

      operation 44277047 "unregisterBuffer"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44277175 "getMatchBufIndex"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "object" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44277303 "getBufferHandle"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufferHandle
//
//DESCRIPTION: return framework pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr if match found
//NULL if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getBufferHandle
//
//DESCRIPTION: return framework pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr if match found
//NULL if failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44277431 "unregisterBuffers"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unregisterBuffers
//
//DESCRIPTION: unregister buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBuffers
//
//DESCRIPTION: unregister buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44277559 "allocateAll"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @count   : number of buffers to be allocated
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: relace with unififed clear() function?
 Heap buffer related functions"
      end

      operation 44277687 "allocateOne"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44277815 "deallocate"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate heap buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate heap buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44277943 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {unregisterBuffers(); deallocate(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: replace with unified clear() function?
 Clear function: unregister for gralloc buffer, and deallocate for heap buffer"
      end

      operation 44278071 "markFrameNumber"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : markFrameNumber
//
//DESCRIPTION: We use this function from the request call path to mark the
//             buffers with the frame number they are intended for this info
//             is used later when giving out callback & it is duty of PP to
//             ensure that data for that particular frameNumber/Request is
//             written to this buffer.
//PARAMETERS :
//  @index   : index of the buffer
//  @frame#  : Frame number from the framework
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : markFrameNumber
//
//DESCRIPTION: We use this function from the request call path to mark the
//             buffers with the frame number they are intended for this info
//             is used later when giving out callback & it is duty of PP to
//             ensure that data for that particular frameNumber/Request is
//             written to this buffer.
//PARAMETERS :
//  @index   : index of the buffer
//  @frame#  : Frame number from the framework
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Frame number getter and setter"
      end

      operation 44278199 "getFrameNumber"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameNumber
//
//DESCRIPTION: We use this to fetch the frameNumber for the request with which
//             this buffer was given to HAL
//
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t frameNumber
//             positive/zero  -- success
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameNumber
//
//DESCRIPTION: We use this to fetch the frameNumber for the request with which
//             this buffer was given to HAL
//
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t frameNumber
//             positive/zero  -- success
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44278327 "getGrallocBufferIndex"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getGrallocBufferIndex
//
//DESCRIPTION: We use this to fetch the gralloc buffer index based on frameNumber
//
//PARAMETERS :
//  @frameNumber : frame Number
//
//RETURN     : int32_t buffer index
//             positive/zero  -- success
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getGrallocBufferIndex
//
//DESCRIPTION: We use this to fetch the gralloc buffer index based on frameNumber
//
//PARAMETERS :
//  @frameNumber : frame Number
//
//RETURN     : int32_t buffer index
//             positive/zero  -- success
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44278455 "getHeapBufferIndex"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getHeapBufferIndex
//
//DESCRIPTION: We use this to fetch the heap buffer index based on frameNumber
//
//PARAMETERS :
//  @frameNumber : frame Number
//
//RETURN     : int32_t buffer index
//             positive/zero  -- success
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getHeapBufferIndex
//
//DESCRIPTION: We use this to fetch the heap buffer index based on frameNumber
//
//PARAMETERS :
//  @frameNumber : frame Number
//
//RETURN     : int32_t buffer index
//             positive/zero  -- success
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7081911 // mHeapMem (<directional composition>)
	relation 7081911 *-->
	  a role_name "mHeapMem" private
	    comment "variables
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7081911 // mHeapMem (<directional composition>)
	  b parent class_ref 3661111 // QCamera3HeapMemory
      end

      classrelation 7082039 // mGrallocMem (<directional composition>)
	relation 7082039 *-->
	  a role_name "mGrallocMem" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7082039 // mGrallocMem (<directional composition>)
	  b parent class_ref 3667895 // QCamera3GrallocMemory
      end

      attribute 13343799 "mMaxHeapBuffers"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13343927 "mLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344055 "mQueueHeapBuffers"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3661111 "QCamera3HeapMemory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Internal heap memory is used for memories used internally
 They are allocated from /dev/ion. Examples are: capabilities,
 parameters, metadata, and internal YUV data for jpeg encoding."
      classrelation 7075255 // <generalisation>
	relation 7075255 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7075255 // <generalisation>
	  b parent class_ref 3667639 // QCamera3Memory
      end

      operation 44262199 "QCamera3HeapMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "maxCnt" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3HeapMemory
//
//DESCRIPTION: constructor of QCamera3HeapMemory for ion memory used internally in HAL
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3HeapMemory
//
//DESCRIPTION: constructor of QCamera3HeapMemory for ion memory used internally in HAL
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}${)}
    : QCamera3Memory()

    : QCamera3Memory()
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44262327 "~QCamera3HeapMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3HeapMemory
//
//DESCRIPTION: deconstructor of QCamera3HeapMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3HeapMemory
//
//DESCRIPTION: deconstructor of QCamera3HeapMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3HeapMemory
//
//DESCRIPTION: deconstructor of QCamera3HeapMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44262455 "allocate"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocate
//
//DESCRIPTION: allocate requested number of buffers of certain size
//
//PARAMETERS :
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44262583 "allocateOne"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocateOne
//
//DESCRIPTION: allocate one buffer
//
//PARAMETERS :
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocateOne
//
//DESCRIPTION: allocate one buffer
//
//PARAMETERS :
//  @size    : lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44262711 "deallocate"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocate
//
//DESCRIPTION: deallocate buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44262839 "cacheOps"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44262967 "getMatchBufIndex"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "object" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @object  : object ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @object  : object ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @object  : object ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263095 "getPtr"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: Return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: Return buffer pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263223 "markFrameNumber"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : markFrameNumber
//
//DESCRIPTION: We use this function from the request call path to mark the
//             buffers with the frame number they are intended for this info
//             is used later when giving out callback & it is duty of PP to
//             ensure that data for that particular frameNumber/Request is
//             written to this buffer.
//PARAMETERS :
//  @index   : index of the buffer
//  @frame#  : Frame number from the framework
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : markFrameNumber
//
//DESCRIPTION: We use this function from the request call path to mark the
//             buffers with the frame number they are intended for this info
//             is used later when giving out callback & it is duty of PP to
//             ensure that data for that particular frameNumber/Request is
//             written to this buffer.
//PARAMETERS :
//  @index   : index of the buffer
//  @frame#  : Frame number from the framework
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263351 "getFrameNumber"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameNumber
//
//DESCRIPTION: We use this to fetch the frameNumber for the request with which
//             this buffer was given to HAL
//
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t frameNumber
//             positive/zero  -- success
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameNumber
//
//DESCRIPTION: We use this to fetch the frameNumber for the request with which
//             this buffer was given to HAL
//
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t frameNumber
//             positive/zero  -- success
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263479 "getBufferIndex"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufferIndex
//
//DESCRIPTION: We use this to fetch the buffer index for the request with
//             a particular frame number
//
//
//PARAMETERS :
//  @frameNumber  : frame number of the buffer
//
//RETURN     : int32_t buffer index
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getBufferIndex
//
//DESCRIPTION: We use this to fetch the buffer index for the request with
//             a particular frame number
//
//
//PARAMETERS :
//  @frameNumber  : frame number of the buffer
//
//RETURN     : int32_t buffer index
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263607 "getPtrLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtrLocked
//
//DESCRIPTION: Return buffer pointer.
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtrLocked
//
//DESCRIPTION: Return buffer pointer.
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263735 "allocOneBuffer"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 3
	  param inout name "memInfo" explicit_type "QCamera3MemInfo"
	  param in name "heap_id" explicit_type "uint"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : allocOneBuffer
//
//DESCRIPTION: impl of allocating one buffers of certain size
//
//PARAMETERS :
//  @memInfo : [output] reference to struct to store additional memory allocation info
//  @heap    : [input] heap id to indicate where the buffers will be allocated from
//  @size    : [input] lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : allocOneBuffer
//
//DESCRIPTION: impl of allocating one buffers of certain size
//
//PARAMETERS :
//  @memInfo : [output] reference to struct to store additional memory allocation info
//  @heap    : [input] heap id to indicate where the buffers will be allocated from
//  @size    : [input] lenght of the buffer to be allocated
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44263863 "deallocOneBuffer"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "memInfo" explicit_type "QCamera3MemInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deallocOneBuffer
//
//DESCRIPTION: impl of deallocating one buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocOneBuffer
//
//DESCRIPTION: impl of deallocating one buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : deallocOneBuffer
//
//DESCRIPTION: impl of deallocating one buffers
//
//PARAMETERS :
//  @memInfo : reference to struct that stores additional memory allocation info
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13340215 "mQueueAll"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13340343 "mMaxCnt"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3661239 "QCamera3ProcessingChannel"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3ProcessingChannel is used to handle all streams that are directly
generated by hardware and given to frameworks without any postprocessing at HAL.
It also handles input streams that require reprocessing by hardware and then
returned to frameworks. "
      classrelation 7064887 // <generalisation>
	relation 7064887 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7064887 // <generalisation>
	  b parent class_ref 3660599 // QCamera3Channel
      end

      operation 44232503 "QCamera3ProcessingChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 11
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "userData" explicit_type "void"
	  param inout name "stream" explicit_type "camera3_stream_t"
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "metadataChannel" type class_ref 3660599 // QCamera3Channel
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "MAX_INFLIGHT_REQUESTS"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}, ${t10} ${p10}${v10}${)}${volatile}${throw}${abstract};
"
	cpp_def "// QCamera3ProcessingChannel methods 
//===========================================================================
//FUNCTION   : QCamera3ProcessingChannel
//
//DESCRIPTION: constructor of QCamera3ProcessingChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @cb_routine : callback routine to frame aggregator
//  @paddingInfo: stream padding info
//  @userData   : HWI handle
//  @stream     : camera3_stream_t structure
//  @stream_type: Channel stream type
//  @postprocess_mask: the postprocess mask for streams of this channel
//  @metadataChannel: handle to the metadataChannel
//  @numBuffers : number of max dequeued buffers
//RETURN     : none
//==========================================================================

// QCamera3ProcessingChannel methods 
//===========================================================================
//FUNCTION   : QCamera3ProcessingChannel
//
//DESCRIPTION: constructor of QCamera3ProcessingChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @cb_routine : callback routine to frame aggregator
//  @paddingInfo: stream padding info
//  @userData   : HWI handle
//  @stream     : camera3_stream_t structure
//  @stream_type: Channel stream type
//  @postprocess_mask: the postprocess mask for streams of this channel
//  @metadataChannel: handle to the metadataChannel
//  @numBuffers : number of max dequeued buffers
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}, ${t10} ${p10}${)} :
            QCamera3Channel(cam_handle, channel_handle, cam_ops, cb_routine,
                    paddingInfo, postprocess_mask, userData, numBuffers),
            m_postprocessor(this),
            mMemory(numBuffers),
            mCamera3Stream(stream),
            mNumBufs(CAM_MAX_NUM_BUFS_PER_STREAM),
            mStreamType(stream_type),
            mPostProcStarted(false),
            mInputBufferConfig(false),
            m_pMetaChannel(metadataChannel),
            mMetaFrame(NULL),
            mOfflineMemory(0),
            mOfflineMetaMemory(numBuffers + (MAX_REPROCESS_PIPELINE_STAGES - 1),
                    false)
 :
            QCamera3Channel(cam_handle, channel_handle, cam_ops, cb_routine,
                    paddingInfo, postprocess_mask, userData, numBuffers),
            m_postprocessor(this),
            mMemory(numBuffers),
            mCamera3Stream(stream),
            mNumBufs(CAM_MAX_NUM_BUFS_PER_STREAM),
            mStreamType(stream_type),
            mPostProcStarted(false),
            mInputBufferConfig(false),
            m_pMetaChannel(metadataChannel),
            mMetaFrame(NULL),
            mOfflineMemory(0),
            mOfflineMetaMemory(numBuffers + (MAX_REPROCESS_PIPELINE_STAGES - 1),
                    false)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44232631 "~QCamera3ProcessingChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3ProcessingChannel
//
//DESCRIPTION: destructor of QCamera3ProcessingChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3ProcessingChannel
//
//DESCRIPTION: destructor of QCamera3ProcessingChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44232759 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION:
//
//PARAMETERS : isType : type of image stabilization on the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION:
//
//PARAMETERS : isType : type of image stabilization on the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44232887 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 4
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	  param inout name "pInputBuffer" explicit_type "camera3_stream_buffer_t"
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: handle the request - either with an input buffer or a direct
//             output request
//
//PARAMETERS :
//@buffer          : pointer to the output buffer
//@frameNumber     : frame number of the request
//@pInputBuffer    : pointer to input buffer if an input request
//@metadata        : parameters associated with the request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: handle the request - either with an input buffer or a direct
//             output request
//
//PARAMETERS :
//@buffer          : pointer to the output buffer
//@frameNumber     : frame number of the request
//@pInputBuffer    : pointer to input buffer if an input request
//@metadata        : parameters associated with the request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233015 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION:
//
//PARAMETERS :
//@super_frame : the super frame with filled buffer
//@stream      : stream on which the buffer was requested and filled
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION:
//
//PARAMETERS :
//@super_frame : the super frame with filled buffer
//@stream      : stream on which the buffer was requested and filled
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233143 "getStreamBufs"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: get the buffers allocated to the stream
//
//PARAMETERS :
//@len       : buffer length
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: get the buffers allocated to the stream
//
//PARAMETERS :
//@len       : buffer length
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233271 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: release the buffers allocated to the stream
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: release the buffers allocated to the stream
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233399 "registerBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: register streaming buffer to the channel object
//
//PARAMETERS :
//  @buffer     : buffer to be registered
//  @isType     : image stabilization type on the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: register streaming buffer to the channel object
//
//PARAMETERS :
//  @buffer     : buffer to be registered
//  @isType     : image stabilization type on the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233527 "stop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop processing channel, which will stop all streams within,
//             including the reprocessing channel in postprocessor.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop processing channel, which will stop all streams within,
//             including the reprocessing channel in postprocessor.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233655 "getReprocessType"
	abstract cpp_virtual public return_type class_ref 3661367 // reprocess_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233783 "reprocessCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "resultBuffer" explicit_type "buffer_handle_t"
	  param in name "resultFrameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : reprocessCbRoutine
//
//DESCRIPTION: callback function for the reprocessed frame. This frame now
//             should be returned to the framework
//
//PARAMETERS :
//@resultBuffer      : buffer containing the reprocessed data
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : NONE
//
//==========================================================================

//===========================================================================
//FUNCTION   : reprocessCbRoutine
//
//DESCRIPTION: callback function for the reprocessed frame. This frame now
//             should be returned to the framework
//
//PARAMETERS :
//@resultBuffer      : buffer containing the reprocessed data
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : NONE
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44233911 "queueReprocMetadata"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "metadata" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : queueReprocMetadata
//
//DESCRIPTION: queue the reprocess metadata to the postprocessor
//
//PARAMETERS : metadata : the metadata corresponding to the pp frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queueReprocMetadata
//
//DESCRIPTION: queue the reprocess metadata to the postprocessor
//
//PARAMETERS : metadata : the metadata corresponding to the pp frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234039 "metadataBufDone"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION : metadataBufDone
//
//DESCRIPTION: Buffer done method for a metadata buffer
//
//PARAMETERS :
//@recvd_frame : received metadata frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : metadataBufDone
//
//DESCRIPTION: Buffer done method for a metadata buffer
//
//PARAMETERS :
//@recvd_frame : received metadata frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234167 "translateStreamTypeAndFormat"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param inout name "stream" explicit_type "camera3_stream_t"
	  param inout name "streamType" explicit_type "cam_stream_type_t"
	  param inout name "streamFormat" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION : translateStreamTypeAndFormat
//
//DESCRIPTION: translates the framework stream format into HAL stream type
//             and format
//
//PARAMETERS :
//@streamType   : translated stream type
//@streamFormat : translated stream format
//@stream       : fwk stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : translateStreamTypeAndFormat
//
//DESCRIPTION: translates the framework stream format into HAL stream type
//             and format
//
//PARAMETERS :
//@streamType   : translated stream type
//@streamFormat : translated stream format
//@stream       : fwk stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234295 "setReprocConfig"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 5
	  param inout name "reproc_cfg" type class_ref 3661495 // reprocess_config_t
	  param inout name "pInputBuffer" explicit_type "camera3_stream_buffer_t"
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	  param in name "streamFormat" type class_ref 3628215 // cam_format_t
	  param in name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION : setReprocConfig
//
//DESCRIPTION: sets the reprocessing parameters for the input buffer
//
//PARAMETERS :
//@reproc_cfg : the configuration to be set
//@pInputBuffer : pointer to the input buffer
//@metadata : pointer to the reprocessing metadata buffer
//@streamFormat : format of the input stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : setReprocConfig
//
//DESCRIPTION: sets the reprocessing parameters for the input buffer
//
//PARAMETERS :
//@reproc_cfg : the configuration to be set
//@pInputBuffer : pointer to the input buffer
//@metadata : pointer to the reprocessing metadata buffer
//@streamFormat : format of the input stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234423 "setFwkInputPPData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 6
	  param inout name "src_frame" type class_ref 3661623 // qcamera_fwk_input_pp_data_t
	  param inout name "pInputBuffer" explicit_type "camera3_stream_buffer_t"
	  param inout name "reproc_cfg" type class_ref 3661495 // reprocess_config_t
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	  param inout name "output_buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFwkInputPPData
//
//DESCRIPTION: fill out the framework src frame information for reprocessing
//
//PARAMETERS :
//  @src_frame         : input pp data to be filled out
//  @pInputBuffer      : input buffer for reprocessing
//  @reproc_cfg        : pointer to the reprocess config
//  @metadata          : pointer to the metadata buffer
//  @output_buffer     : output buffer for reprocessing; could be NULL if not
//                       framework allocated
//  @frameNumber       : frame number of the request
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setFwkInputPPData
//
//DESCRIPTION: fill out the framework src frame information for reprocessing
//
//PARAMETERS :
//  @src_frame         : input pp data to be filled out
//  @pInputBuffer      : input buffer for reprocessing
//  @reproc_cfg        : pointer to the reprocess config
//  @metadata          : pointer to the metadata buffer
//  @output_buffer     : output buffer for reprocessing; could be NULL if not
//                       framework allocated
//  @frameNumber       : frame number of the request
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234551 "checkStreamCbErrors"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : checkStreamCbErrors
//
//DESCRIPTION: check the stream callback for errors
//
//PARAMETERS :
//  @super_frame : the super frame with filled buffer
//  @stream      : stream on which the buffer was requested and filled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : checkStreamCbErrors
//
//DESCRIPTION: check the stream callback for errors
//
//PARAMETERS :
//  @super_frame : the super frame with filled buffer
//  @stream      : stream on which the buffer was requested and filled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234679 "getStreamSize"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamSize
//
//DESCRIPTION: get the size from the camera3_stream_t for the channel
//
//PARAMETERS :
//  @dim     : Return the size of the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamSize
//
//DESCRIPTION: get the size from the camera3_stream_t for the channel
//
//PARAMETERS :
//  @dim     : Return the size of the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7065015 // m_postprocessor (<directional composition>)
	relation 7065015 *-->
	  a role_name "m_postprocessor" public
	    comment " post processor"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065015 // m_postprocessor (<directional composition>)
	  b parent class_ref 3661751 // QCamera3PostProcessor
      end

      operation 44234807 "isWNREnabled"
	cpp_inline protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_bWNROn;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44234935 "startPostProc"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param in name "config" type class_ref 3661495 // reprocess_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startPostProc
//
//DESCRIPTION: figure out if the postprocessor needs to be restarted and if yes
//             start it
//
//PARAMETERS :
//@inputBufExists : whether there is an input buffer for post processing
//@config         : reprocessing configuration
//@metadata       : metadata associated with the reprocessing request
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : startPostProc
//
//DESCRIPTION: figure out if the postprocessor needs to be restarted and if yes
//             start it
//
//PARAMETERS :
//@inputBufExists : whether there is an input buffer for post processing
//@config         : reprocessing configuration
//@metadata       : metadata associated with the reprocessing request
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44235063 "issueChannelCb"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "resultBuffer" explicit_type "buffer_handle_t"
	  param in name "resultFrameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : issueChannelCb
//
//DESCRIPTION: function to set the result and issue channel callback
//
//PARAMETERS :
//@resultBuffer      : buffer containing the data
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : NONE
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : issueChannelCb
//
//DESCRIPTION: function to set the result and issue channel callback
//
//PARAMETERS :
//@resultBuffer      : buffer containing the data
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : NONE
//
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44235191 "releaseOfflineMemory"
	preserve_cpp_body_indent protected explicit_return_type "int32_t"
	nparams 1
	  param in name "resultFrameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseOfflineMemory
//
//DESCRIPTION: function to clean up the offline memory used for input reprocess
//
//PARAMETERS :
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             non-zero failure code
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOfflineMemory
//
//DESCRIPTION: function to clean up the offline memory used for input reprocess
//
//PARAMETERS :
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             non-zero failure code
//
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7065143 // mMemory (<directional composition>)
	relation 7065143 *-->
	  a role_name "mMemory" protected
	    comment "output buffer allocated by fwk"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065143 // mMemory (<directional composition>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      attribute 13318199 "mCamera3Stream"
	protected explicit_type "camera3_stream_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13318327 "mNumBufs"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13318455 "mStreamType"
	protected explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7065271 // mStreamFormat (<directional composition>)
	relation 7065271 *-->
	  a role_name "mStreamFormat" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065271 // mStreamFormat (<directional composition>)
	  b parent class_ref 3628215 // cam_format_t
      end

      attribute 13318583 "mIntent"
	protected explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13318711 "mPostProcStarted"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13318839 "mInputBufferConfig"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set when the processing channel is configured"
      end

      classrelation 7065399 // m_pMetaChannel (<unidirectional association>)
	relation 7065399 --->
	  a role_name "m_pMetaChannel" protected
	    comment " for processing input(framework) buffers
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065399 // m_pMetaChannel (<unidirectional association>)
	  b parent class_ref 3660599 // QCamera3Channel
      end

      classrelation 7065527 // mMetaFrame (<unidirectional association>)
	relation 7065527 --->
	  a role_name "mMetaFrame" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065527 // mMetaFrame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7065655 // mOfflineMemory (<directional composition>)
	relation 7065655 *-->
	  a role_name "mOfflineMemory" protected
	    comment "reprocessing input buffer"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065655 // mOfflineMemory (<directional composition>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      classrelation 7065783 // mOfflineMetaMemory (<directional composition>)
	relation 7065783 *-->
	  a role_name "mOfflineMetaMemory" protected
	    comment "reprocessing metadata buffer"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7065783 // mOfflineMetaMemory (<directional composition>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      attribute 13318967 "mFreeOfflineMetaBuffersList"
	protected explicit_type "uint32_t"
	stereotype "List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13319095 "mFreeOfflineMetaBuffersLock"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13319223 "m_bWNROn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3661367 "reprocess_type_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13323959 "REPROCESS_TYPE_NONE"
	public type class_ref 3661367 // reprocess_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324087 "REPROCESS_TYPE_JPEG"
	public type class_ref 3661367 // reprocess_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324215 "REPROCESS_TYPE_YUV"
	public type class_ref 3661367 // reprocess_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324343 "REPROCESS_TYPE_PRIVATE"
	public type class_ref 3661367 // reprocess_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324471 "REPROCESS_TYPE_RAW"
	public type class_ref 3661367 // reprocess_type_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3661495 "reprocess_config_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13326263 "stream_type"
	public explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7069879 // stream_format (<directional composition>)
	relation 7069879 *-->
	  a role_name "stream_format" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7069879 // stream_format (<directional composition>)
	  b parent class_ref 3628215 // cam_format_t
      end

      classrelation 7070007 // input_stream_dim (<directional composition>)
	relation 7070007 *-->
	  a role_name "input_stream_dim" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070007 // input_stream_dim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      classrelation 7070135 // input_stream_plane_info (<directional composition>)
	relation 7070135 *-->
	  a role_name "input_stream_plane_info" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070135 // input_stream_plane_info (<directional composition>)
	  b parent class_ref 3664183 // cam_stream_buf_plane_info_t
      end

      classrelation 7070263 // output_stream_dim (<directional composition>)
	relation 7070263 *-->
	  a role_name "output_stream_dim" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070263 // output_stream_dim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      classrelation 7070391 // padding (<unidirectional association>)
	relation 7070391 --->
	  a role_name "padding" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070391 // padding (<unidirectional association>)
	  b parent class_ref 3651511 // cam_padding_info_t
      end

      classrelation 7070519 // reprocess_type (<directional composition>)
	relation 7070519 *-->
	  a role_name "reprocess_type" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070519 // reprocess_type (<directional composition>)
	  b parent class_ref 3661367 // reprocess_type_t
      end

      classrelation 7070647 // src_channel (<unidirectional association>)
	relation 7070647 --->
	  a role_name "src_channel" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070647 // src_channel (<unidirectional association>)
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end
    end

    class 3661623 "qcamera_fwk_input_pp_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13340727 "src_frame"
	public explicit_type "camera3_stream_buffer_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " source frame"
      end

      classrelation 7075639 // metadata_buffer (<directional composition>)
	relation 7075639 *-->
	  a role_name "metadata_buffer" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7075639 // metadata_buffer (<directional composition>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7075767 // input_buffer (<directional composition>)
	relation 7075767 *-->
	  a role_name "input_buffer" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7075767 // input_buffer (<directional composition>)
	  b parent class_ref 3646391 // mm_camera_buf_def_t
      end

      classrelation 7075895 // reproc_config (<directional composition>)
	relation 7075895 *-->
	  a role_name "reproc_config" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7075895 // reproc_config (<directional composition>)
	  b parent class_ref 3661495 // reprocess_config_t
      end

      attribute 13340855 "output_buffer"
	public explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13340983 "frameNumber"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3661751 "QCamera3PostProcessor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44266551 "QCamera3PostProcessor"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "ch_ctrl" type class_ref 3661239 // QCamera3ProcessingChannel
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3PostProcessor
//
//DESCRIPTION: constructor of QCamera3PostProcessor.
//
//PARAMETERS :
//  @cam_ctrl : ptr to HWI object
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3PostProcessor
//
//DESCRIPTION: constructor of QCamera3PostProcessor.
//
//PARAMETERS :
//  @cam_ctrl : ptr to HWI object
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${t0} * ${p0}${)}
    : m_parent(ch_ctrl),
      mJpegCB(NULL),
      mJpegUserData(NULL),
      mJpegClientHandle(0),
      mJpegSessionId(0),
      m_bThumbnailNeeded(TRUE),
      m_pReprocChannel(NULL),
      m_inputPPQ(releasePPInputData, this),
      m_inputFWKPPQ(NULL, this),
      m_ongoingPPQ(releaseOngoingPPData, this),
      m_inputJpegQ(releaseJpegData, this),
      m_ongoingJpegQ(releaseJpegData, this),
      m_inputMetaQ(releaseMetadata, this),
      m_jpegSettingsQ(NULL, this)

    : m_parent(ch_ctrl),
      mJpegCB(NULL),
      mJpegUserData(NULL),
      mJpegClientHandle(0),
      mJpegSessionId(0),
      m_bThumbnailNeeded(TRUE),
      m_pReprocChannel(NULL),
      m_inputPPQ(releasePPInputData, this),
      m_inputFWKPPQ(NULL, this),
      m_ongoingPPQ(releaseOngoingPPData, this),
      m_inputJpegQ(releaseJpegData, this),
      m_ongoingJpegQ(releaseJpegData, this),
      m_inputMetaQ(releaseMetadata, this),
      m_jpegSettingsQ(NULL, this)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44266679 "~QCamera3PostProcessor"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3PostProcessor
//
//DESCRIPTION: deconstructor of QCamera3PostProcessor.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3PostProcessor
//
//DESCRIPTION: deconstructor of QCamera3PostProcessor.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3PostProcessor
//
//DESCRIPTION: deconstructor of QCamera3PostProcessor.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44266807 "init"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 2
	  param inout name "memory" type class_ref 3660983 // QCamera3StreamMem
	  param in name "postprocess_mask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of postprocessor
//
//PARAMETERS :
//  @memory              : output buffer memory
//  @postprocess_mask    : postprocess mask for the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : init
//
//DESCRIPTION: initialization of postprocessor
//
//PARAMETERS :
//  @memory              : output buffer memory
//  @postprocess_mask    : postprocess mask for the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44266935 "initJpeg"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "jpeg_cb" type class_ref 3657655 // jpeg_encode_callback_t
	  param inout name "max_pic_dim" type class_ref 3646135 // cam_dimension_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initJpeg
//
//DESCRIPTION: initialization of jpeg through postprocessor
//
//PARAMETERS :
//  @jpeg_cb      : callback to handle jpeg event from mm-camera-interface
//  @max_pic_dim  : max picture dimensions
//  @user_data    : user data ptr for jpeg callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initJpeg
//
//DESCRIPTION: initialization of jpeg through postprocessor
//
//PARAMETERS :
//  @jpeg_cb      : callback to handle jpeg event from mm-camera-interface
//  @max_pic_dim  : max picture dimensions
//  @user_data    : user data ptr for jpeg callback
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267063 "deinit"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: de-initialization of postprocessor
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: de-initialization of postprocessor
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : deinit
//
//DESCRIPTION: de-initialization of postprocessor
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267191 "start"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "config" type class_ref 3661495 // reprocess_config_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start postprocessor. Data process thread and data notify thread
//             will be launched.
//
//PARAMETERS :
//  @config        : reprocess configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : if any reprocess is needed, a reprocess channel/stream
//             will be started.
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start postprocessor. Data process thread and data notify thread
//             will be launched.
//
//PARAMETERS :
//  @config        : reprocess configuration
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : if any reprocess is needed, a reprocess channel/stream
//             will be started.
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267319 "stop"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop postprocessor. Data process and notify thread will be stopped.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : reprocess channel will be stopped and deleted if there is any
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop postprocessor. Data process and notify thread will be stopped.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : reprocess channel will be stopped and deleted if there is any
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop postprocessor. Data process and notify thread will be stopped.
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : reprocess channel will be stopped and deleted if there is any
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267447 "processData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3661623 // qcamera_fwk_input_pp_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267575 "processData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param inout name "input" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "output" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process input frame
//  @output  : process output frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process input frame
//  @output  : process output frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267703 "processData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processData
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process frame
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : depends on if offline reprocess is needed, received frame will
//             be sent to either input queue of postprocess or jpeg encoding
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267831 "processPPData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processPPData
//
//DESCRIPTION: process received frame after reprocess.
//
//PARAMETERS :
//  @frame   : received frame from reprocess channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : The frame after reprocess need to send to jpeg encoding.
//==========================================================================

//===========================================================================
//FUNCTION   : processPPData
//
//DESCRIPTION: process received frame after reprocess.
//
//PARAMETERS :
//  @frame   : received frame from reprocess channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : The frame after reprocess need to send to jpeg encoding.
//==========================================================================

//===========================================================================
//FUNCTION   : processPPData
//
//DESCRIPTION: process received frame after reprocess.
//
//PARAMETERS :
//  @frame   : received frame from reprocess channel.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//NOTE       : The frame after reprocess need to send to jpeg encoding.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44267959 "processPPMetadata"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "reproc_meta" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processPPMetadata
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process metadata frame received from pic channel
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : processPPMetadata
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process metadata frame received from pic channel
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : processPPMetadata
//
//DESCRIPTION: enqueue data into dataProc thread
//
//PARAMETERS :
//  @frame   : process metadata frame received from pic channel
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268087 "processJpegSettingData"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "jpeg_settings" type class_ref 3663159 // jpeg_settings_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processJpegSettingData
//
//DESCRIPTION: enqueue jpegSetting into dataProc thread
//
//PARAMETERS :
//  @jpeg_settings : jpeg settings data received from pic channel
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : processJpegSettingData
//
//DESCRIPTION: enqueue jpegSetting into dataProc thread
//
//PARAMETERS :
//  @jpeg_settings : jpeg settings data received from pic channel
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//===========================================================================
//FUNCTION   : processJpegSettingData
//
//DESCRIPTION: enqueue jpegSetting into dataProc thread
//
//PARAMETERS :
//  @jpeg_settings : jpeg settings data received from pic channel
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268215 "dequeuePPJob"
	preserve_cpp_body_indent public return_type class_ref 3668151 // qcamera_hal3_pp_data_t
	nparams 1
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dequeuePPJob
//
//DESCRIPTION: find a postprocessing job from ongoing pp queue by frame number
//
//PARAMETERS :
//  @frameNumber : frame number for the pp job
//
//RETURN     : ptr to a pp job struct. NULL if not found.
//==========================================================================

//===========================================================================
//FUNCTION   : dequeuePPJob
//
//DESCRIPTION: find a postprocessing job from ongoing pp queue by frame number
//
//PARAMETERS :
//  @frameNumber : frame number for the pp job
//
//RETURN     : ptr to a pp job struct. NULL if not found.
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268343 "findJpegJobByJobId"
	preserve_cpp_body_indent public return_type class_ref 3668023 // qcamera_hal3_jpeg_data_t
	nparams 1
	  param in name "jobId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : findJpegJobByJobId
//
//DESCRIPTION: find a jpeg job from ongoing Jpeg queue by its job ID
//
//PARAMETERS :
//  @jobId   : job Id of the job
//
//RETURN     : ptr to a jpeg job struct. NULL if not found.
//
//NOTE       : Currently only one job is sending to mm-jpeg-interface for jpeg
//             encoding. Therefore simply dequeue from the ongoing Jpeg Queue
//             will serve the purpose to find the jpeg job.
//==========================================================================

//===========================================================================
//FUNCTION   : findJpegJobByJobId
//
//DESCRIPTION: find a jpeg job from ongoing Jpeg queue by its job ID
//
//PARAMETERS :
//  @jobId   : job Id of the job
//
//RETURN     : ptr to a jpeg job struct. NULL if not found.
//
//NOTE       : Currently only one job is sending to mm-jpeg-interface for jpeg
//             encoding. Therefore simply dequeue from the ongoing Jpeg Queue
//             will serve the purpose to find the jpeg job.
//==========================================================================

//===========================================================================
//FUNCTION   : findJpegJobByJobId
//
//DESCRIPTION: find a jpeg job from ongoing Jpeg queue by its job ID
//
//PARAMETERS :
//  @jobId   : job Id of the job
//
//RETURN     : ptr to a jpeg job struct. NULL if not found.
//
//NOTE       : Currently only one job is sending to mm-jpeg-interface for jpeg
//             encoding. Therefore simply dequeue from the ongoing Jpeg Queue
//             will serve the purpose to find the jpeg job.
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268471 "releaseJpegJobData"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "job" type class_ref 3668023 // qcamera_hal3_jpeg_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseJpegJobData
//
//DESCRIPTION: function to release internal resources in jpeg job struct
//
//PARAMETERS :
//  @job     : ptr to jpeg job struct
//
//RETURN     : None
//
//NOTE       : original source frame need to be queued back to kernel for
//             future use. Output buf of jpeg job need to be released since
//             it's allocated for each job. Exif object need to be deleted.
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegJobData
//
//DESCRIPTION: function to release internal resources in jpeg job struct
//
//PARAMETERS :
//  @job     : ptr to jpeg job struct
//
//RETURN     : None
//
//NOTE       : original source frame need to be queued back to kernel for
//             future use. Output buf of jpeg job need to be released since
//             it's allocated for each job. Exif object need to be deleted.
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegJobData
//
//DESCRIPTION: function to release internal resources in jpeg job struct
//
//PARAMETERS :
//  @job     : ptr to jpeg job struct
//
//RETURN     : None
//
//NOTE       : original source frame need to be queued back to kernel for
//             future use. Output buf of jpeg job need to be released since
//             it's allocated for each job. Exif object need to be deleted.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268599 "releasePPJobData"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "pp_job" type class_ref 3668151 // qcamera_hal3_pp_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releasePPJobData
//
//DESCRIPTION: function to release internal resources in p pjob struct
//
//PARAMETERS :
//  @job     : ptr to pp job struct
//
//RETURN     : None
//
//NOTE       : Original source metadata buffer needs to be released and
//             queued back to kernel for future use. src_frame, src_metadata,
//             and fwk_src_frame structures need to be freed.
//==========================================================================

//===========================================================================
//FUNCTION   : releasePPJobData
//
//DESCRIPTION: function to release internal resources in p pjob struct
//
//PARAMETERS :
//  @job     : ptr to pp job struct
//
//RETURN     : None
//
//NOTE       : Original source metadata buffer needs to be released and
//             queued back to kernel for future use. src_frame, src_metadata,
//             and fwk_src_frame structures need to be freed.
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268727 "releaseOfflineBuffers"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseOfflineBuffers
//
//DESCRIPTION: function to release/unmap offline buffers if any
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOfflineBuffers
//
//DESCRIPTION: function to release/unmap offline buffers if any
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOfflineBuffers
//
//DESCRIPTION: function to release/unmap offline buffers if any
//
//PARAMETERS : None
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268855 "sendEvtNotify"
	private explicit_return_type "int32_t"
	nparams 3
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44268983 "getColorfmtFromImgFmt"
	preserve_cpp_body_indent private return_type class_ref 3657783 // mm_jpeg_color_format
	nparams 1
	  param in name "img_fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getColorfmtFromImgFmt
//
//DESCRIPTION: function to return jpeg color format based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : jpeg color format that can be understandable by omx lib
//==========================================================================

//===========================================================================
//FUNCTION   : getColorfmtFromImgFmt
//
//DESCRIPTION: function to return jpeg color format based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : jpeg color format that can be understandable by omx lib
//==========================================================================

//===========================================================================
//FUNCTION   : getColorfmtFromImgFmt
//
//DESCRIPTION: function to return jpeg color format based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : jpeg color format that can be understandable by omx lib
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269111 "getJpegImgTypeFromImgFmt"
	preserve_cpp_body_indent private return_type class_ref 3657911 // mm_jpeg_format_t
	nparams 1
	  param in name "img_fmt" type class_ref 3628215 // cam_format_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegImgTypeFromImgFmt
//
//DESCRIPTION: function to return jpeg encode image type based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : return jpeg source image format (YUV or Bitstream)
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegImgTypeFromImgFmt
//
//DESCRIPTION: function to return jpeg encode image type based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : return jpeg source image format (YUV or Bitstream)
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegImgTypeFromImgFmt
//
//DESCRIPTION: function to return jpeg encode image type based on its image format
//
//PARAMETERS :
//  @img_fmt : image format
//
//RETURN     : return jpeg source image format (YUV or Bitstream)
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269239 "getJpegEncodeConfig"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "encode_parm" type class_ref 3658039 // mm_jpeg_encode_params_t
	  param inout name "main_stream" type class_ref 3660855 // QCamera3Stream
	  param inout name "jpeg_settings" type class_ref 3663159 // jpeg_settings_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getJpegEncodeConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//  #main_stream   : stream object where the input buffer comes from
//  @jpeg_settings : jpeg settings to be applied for encoding
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegEncodeConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//  #main_stream   : stream object where the input buffer comes from
//  @jpeg_settings : jpeg settings to be applied for encoding
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getJpegEncodeConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//  #main_stream   : stream object where the input buffer comes from
//  @jpeg_settings : jpeg settings to be applied for encoding
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269367 "getFWKJpegEncodeConfig"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param inout name "encode_parm" type class_ref 3658039 // mm_jpeg_encode_params_t
	  param inout name "frame" type class_ref 3661623 // qcamera_fwk_input_pp_data_t
	  param inout name "jpeg_settings" type class_ref 3663159 // jpeg_settings_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFWKJpegEncodeConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//  @frame         : framework input buffer
//  @jpeg_settings : jpeg settings to be applied for encoding
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFWKJpegEncodeConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//  @frame         : framework input buffer
//  @jpeg_settings : jpeg settings to be applied for encoding
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getFWKJpegEncodeConfig
//
//DESCRIPTION: function to prepare encoding job information
//
//PARAMETERS :
//  @encode_parm   : param to be filled with encoding configuration
//  @frame         : framework input buffer
//  @jpeg_settings : jpeg settings to be applied for encoding
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269495 "getExifData"
	preserve_cpp_body_indent private return_type class_ref 3663031 // QCamera3Exif
	nparams 2
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	  param inout name "jpeg_settings" type class_ref 3663159 // jpeg_settings_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifData
//
//DESCRIPTION: get exif data to be passed into jpeg encoding
//
//PARAMETERS :
//@metadata      : metadata of the encoding request
//@jpeg_settings : jpeg_settings for encoding
//
//RETURN     : exif data from user setting and GPS
//==========================================================================

//===========================================================================
//FUNCTION   : getExifData
//
//DESCRIPTION: get exif data to be passed into jpeg encoding
//
//PARAMETERS :
//@metadata      : metadata of the encoding request
//@jpeg_settings : jpeg_settings for encoding
//
//RETURN     : exif data from user setting and GPS
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269623 "encodeData"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "jpeg_job_data" type class_ref 3668023 // qcamera_hal3_jpeg_data_t
	  param inout name "needNewSess" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : encodeData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : encodeData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : encodeData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269751 "encodeFWKData"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param inout name "jpeg_job_data" type class_ref 3668023 // qcamera_hal3_jpeg_data_t
	  param inout name "needNewSess" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : encodeFWKData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : encodeFWKData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : encodeFWKData
//
//DESCRIPTION: function to prepare encoding job information and send to
//             mm-jpeg-interface to do the encoding job
//
//PARAMETERS :
//  @jpeg_job_data : ptr to a struct saving job related information
//  @needNewSess   : flag to indicate if a new jpeg encoding session need
//                   to be created. After creation, this flag will be toggled
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44269879 "releaseSuperBuf"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "super_buf" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseSuperBuf
//
//DESCRIPTION: function to release a superbuf frame by returning back to kernel
//
//PARAMETERS :
//  @super_buf : ptr to the superbuf frame
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseSuperBuf
//
//DESCRIPTION: function to release a superbuf frame by returning back to kernel
//
//PARAMETERS :
//  @super_buf : ptr to the superbuf frame
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseSuperBuf
//
//DESCRIPTION: function to release a superbuf frame by returning back to kernel
//
//PARAMETERS :
//  @super_buf : ptr to the superbuf frame
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270007 "releaseNotifyData"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "user_data" explicit_type "void"
	  param inout name "cookie" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270135 "processRawImageImpl"
	private explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270263 "releaseJpegData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseJpegData
//
//DESCRIPTION: callback function to release jpeg job node
//
//PARAMETERS :
//  @data      : ptr to ongoing jpeg job data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegData
//
//DESCRIPTION: callback function to release jpeg job node
//
//PARAMETERS :
//  @data      : ptr to ongoing jpeg job data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseJpegData
//
//DESCRIPTION: callback function to release jpeg job node
//
//PARAMETERS :
//  @data      : ptr to ongoing jpeg job data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270391 "releasePPInputData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releasePPInputData
//
//DESCRIPTION: callback function to release post process input data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releasePPInputData
//
//DESCRIPTION: callback function to release post process input data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releasePPInputData
//
//DESCRIPTION: callback function to release post process input data node
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270519 "releaseMetadata"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseMetaData
//
//DESCRIPTION: callback function to release metadata camera buffer
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseMetaData
//
//DESCRIPTION: callback function to release metadata camera buffer
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseMetaData
//
//DESCRIPTION: callback function to release metadata camera buffer
//
//PARAMETERS :
//  @data      : ptr to post process input data
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270647 "releaseOngoingPPData"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "void"
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : releaseOngoingPPData
//
//DESCRIPTION: callback function to release ongoing postprocess job node
//
//PARAMETERS :
//  @data      : ptr to onging postprocess job
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOngoingPPData
//
//DESCRIPTION: callback function to release ongoing postprocess job node
//
//PARAMETERS :
//  @data      : ptr to onging postprocess job
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : releaseOngoingPPData
//
//DESCRIPTION: callback function to release ongoing postprocess job node
//
//PARAMETERS :
//  @data      : ptr to onging postprocess job
//  @user_data : user data ptr (QCamera3Reprocessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44270775 "dataProcessRoutine"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataProcessRoutine
//
//DESCRIPTION: data process routine that handles input data either from input
//             Jpeg Queue to do jpeg encoding, or from input PP Queue to do
//             reprocess.
//
//PARAMETERS :
//  @data    : user data ptr (QCamera3PostProcessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcessRoutine
//
//DESCRIPTION: data process routine that handles input data either from input
//             Jpeg Queue to do jpeg encoding, or from input PP Queue to do
//             reprocess.
//
//PARAMETERS :
//  @data    : user data ptr (QCamera3PostProcessor)
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : dataProcessRoutine
//
//DESCRIPTION: data process routine that handles input data either from input
//             Jpeg Queue to do jpeg encoding, or from input PP Queue to do
//             reprocess.
//
//PARAMETERS :
//  @data    : user data ptr (QCamera3PostProcessor)
//
//RETURN     : None
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7077943 // m_parent (<unidirectional association>)
	relation 7077943 --->
	  a role_name "m_parent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077943 // m_parent (<unidirectional association>)
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end

      classrelation 7078071 // mJpegCB (<directional composition>)
	relation 7078071 *-->
	  a role_name "mJpegCB" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078071 // mJpegCB (<directional composition>)
	  b parent class_ref 3657655 // jpeg_encode_callback_t
      end

      attribute 13341879 "mJpegUserData"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7078199 // mJpegHandle (<directional composition>)
	relation 7078199 *-->
	  a role_name "mJpegHandle" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078199 // mJpegHandle (<directional composition>)
	  b parent class_ref 3658167 // mm_jpeg_ops_t
      end

      attribute 13342007 "mJpegClientHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13342135 "mJpegSessionId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13342263 "mPostProcMask"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13342391 "m_bThumbnailNeeded"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7078327 // mOutputMem (<unidirectional association>)
	relation 7078327 --->
	  a role_name "mOutputMem" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078327 // mOutputMem (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      classrelation 7078455 // m_pReprocChannel (<unidirectional association>)
	relation 7078455 --->
	  a role_name "m_pReprocChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078455 // m_pReprocChannel (<unidirectional association>)
	  b parent class_ref 3663287 // QCamera3ReprocessChannel
      end

      classrelation 7078583 // m_inputPPQ (<directional composition>)
	relation 7078583 *-->
	  a role_name "m_inputPPQ" private
	    comment " input queue for postproc"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078583 // m_inputPPQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7078711 // m_inputFWKPPQ (<directional composition>)
	relation 7078711 *-->
	  a role_name "m_inputFWKPPQ" private
	    comment " framework input queue for postproc"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078711 // m_inputFWKPPQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7078839 // m_ongoingPPQ (<directional composition>)
	relation 7078839 *-->
	  a role_name "m_ongoingPPQ" private
	    comment " ongoing postproc queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078839 // m_ongoingPPQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7078967 // m_inputJpegQ (<directional composition>)
	relation 7078967 *-->
	  a role_name "m_inputJpegQ" private
	    comment " input jpeg job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7078967 // m_inputJpegQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7079095 // m_ongoingJpegQ (<directional composition>)
	relation 7079095 *-->
	  a role_name "m_ongoingJpegQ" private
	    comment " ongoing jpeg job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079095 // m_ongoingJpegQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7079223 // m_inputRawQ (<directional composition>)
	relation 7079223 *-->
	  a role_name "m_inputRawQ" private
	    comment " input raw job queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079223 // m_inputRawQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7079351 // m_inputMetaQ (<directional composition>)
	relation 7079351 *-->
	  a role_name "m_inputMetaQ" private
	    comment " input meta queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079351 // m_inputMetaQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7079479 // m_jpegSettingsQ (<directional composition>)
	relation 7079479 *-->
	  a role_name "m_jpegSettingsQ" private
	    comment " input jpeg setting queue"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079479 // m_jpegSettingsQ (<directional composition>)
	  b parent class_ref 3643959 // QCameraQueue
      end

      classrelation 7079607 // m_dataProcTh (<directional composition>)
	relation 7079607 *-->
	  a role_name "m_dataProcTh" private
	    comment " thread for data processing"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7079607 // m_dataProcTh (<directional composition>)
	  b parent class_ref 3644087 // QCameraCmdThread
      end

      attribute 13342519 "mReprocJobLock"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3661879 "QCamera3RegularChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3RegularChannel is used to handle all streams that are directly
generated by hardware and given to frameworks without any postprocessing at HAL.
Examples are: all IMPLEMENTATION_DEFINED streams, CPU_READ streams. "
      classrelation 7065911 // <generalisation>
	relation 7065911 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7065911 // <generalisation>
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end

      operation 44235319 "QCamera3RegularChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 11
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "userData" explicit_type "void"
	  param inout name "stream" explicit_type "camera3_stream_t"
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "metadataChannel" type class_ref 3660599 // QCamera3Channel
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "MAX_INFLIGHT_REQUESTS"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}, ${t10} ${p10}${v10}${)}${volatile}${throw}${abstract};
"
	cpp_def "// Regular Channel methods 
//===========================================================================
//FUNCTION   : QCamera3RegularChannel
//
//DESCRIPTION: constructor of QCamera3RegularChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @cb_routine : callback routine to frame aggregator
//  @stream     : camera3_stream_t structure
//  @stream_type: Channel stream type
//  @postprocess_mask: feature mask for postprocessing
//  @metadataChannel : metadata channel for the session
//  @numBuffers : number of max dequeued buffers
//
//RETURN     : none
//==========================================================================

// Regular Channel methods 
//===========================================================================
//FUNCTION   : QCamera3RegularChannel
//
//DESCRIPTION: constructor of QCamera3RegularChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @cb_routine : callback routine to frame aggregator
//  @stream     : camera3_stream_t structure
//  @stream_type: Channel stream type
//  @postprocess_mask: feature mask for postprocessing
//  @metadataChannel : metadata channel for the session
//  @numBuffers : number of max dequeued buffers
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}, ${t10} ${p10}${)} :
            QCamera3ProcessingChannel(cam_handle, channel_handle, cam_ops,
                    cb_routine, paddingInfo, userData, stream, stream_type,
                    postprocess_mask, metadataChannel, numBuffers),
            mRotation(ROTATE_0),
            mBatchSize(0)
 :
            QCamera3ProcessingChannel(cam_handle, channel_handle, cam_ops,
                    cb_routine, paddingInfo, userData, stream, stream_type,
                    postprocess_mask, metadataChannel, numBuffers),
            mRotation(ROTATE_0),
            mBatchSize(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44235447 "~QCamera3RegularChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3RegularChannel
//
//DESCRIPTION: destructor of QCamera3RegularChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3RegularChannel
//
//DESCRIPTION: destructor of QCamera3RegularChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3RegularChannel
//
//DESCRIPTION: destructor of QCamera3RegularChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44235575 "setBatchSize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "batchSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBatchSize
//
//DESCRIPTION: Set batch size for the channel.
//
//PARAMETERS :
//  @batchSize  : Number of image buffers in a batch
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setBatchSize
//
//DESCRIPTION: Set batch size for the channel.
//
//PARAMETERS :
//  @batchSize  : Number of image buffers in a batch
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44235703 "getStreamTypeMask"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamTypeMask
//
//DESCRIPTION: Get bit mask of all stream types in this channel.
//             If stream is not initialized, then generate mask based on
//             local streamType
//
//PARAMETERS : None
//
//RETURN     : Bit mask of all stream types in this channel
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamTypeMask
//
//DESCRIPTION: Get bit mask of all stream types in this channel.
//             If stream is not initialized, then generate mask based on
//             local streamType
//
//PARAMETERS : None
//
//RETURN     : Bit mask of all stream types in this channel
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44235831 "queueBatchBuf"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : queueBatchBuf
//
//DESCRIPTION: queue batch container to downstream
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : queueBatchBuf
//
//DESCRIPTION: queue batch container to downstream
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success always
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44235959 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//   @isType : type of image stabilization required on this stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//   @isType : type of image stabilization required on this stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44236087 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: process a request from camera service. Stream on if ncessary.
//
//PARAMETERS :
//  @buffer  : buffer to be filled for this request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: process a request from camera service. Stream on if ncessary.
//
//PARAMETERS :
//  @buffer  : buffer to be filled for this request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: process a request from camera service. Stream on if ncessary.
//
//PARAMETERS :
//  @buffer  : buffer to be filled for this request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44236215 "getReprocessType"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3661367 // reprocess_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44236343 "initialize"
	private explicit_return_type "int32_t"
	nparams 1
	  param inout name "priv_handle" explicit_type "private_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7066039 // mRotation (<directional composition>)
	relation 7066039 *-->
	  a role_name "mRotation" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7066039 // mRotation (<directional composition>)
	  b parent class_ref 3651639 // cam_rotation_t
      end

      attribute 13319351 "mBatchSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3662007 "QCamera3MetadataChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3MetadataChannel is for metadata stream generated by camera daemon. "
      classrelation 7066167 // <generalisation>
	relation 7066167 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7066167 // <generalisation>
	  b parent class_ref 3660599 // QCamera3Channel
      end

      operation 44236471 "QCamera3MetadataChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 8
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "userData" explicit_type "void"
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "MIN_STREAMING_BUFFER_NUM"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}${)} :
                        QCamera3Channel(cam_handle, channel_handle, cam_ops,
                                cb_routine, paddingInfo, postprocess_mask,
                                userData, numBuffers),
                        mMemory(NULL)
 :
                        QCamera3Channel(cam_handle, channel_handle, cam_ops,
                                cb_routine, paddingInfo, postprocess_mask,
                                userData, numBuffers),
                        mMemory(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44236599 "~QCamera3MetadataChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44236727 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44236855 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44236983 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44237111 "getStreamBufs"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44237239 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44237367 "registerBuffer"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param inout name "" explicit_type "buffer_handle_t"
	  param in name "" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return NO_ERROR; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7066295 // mMemory (<unidirectional association>)
	relation 7066295 --->
	  a role_name "mMemory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7066295 // mMemory (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end
    end

    class 3662135 "QCamera3RawChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3RawChannel is for opaqueu/cross-platform raw stream containing
vendor specific bayer data or 16-bit unpacked bayer data "
      classrelation 7066423 // <generalisation>
	relation 7066423 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7066423 // <generalisation>
	  b parent class_ref 3661879 // QCamera3RegularChannel
      end

      operation 44237495 "QCamera3RawChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 11
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "userData" explicit_type "void"
	  param inout name "stream" explicit_type "camera3_stream_t"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "metadataChannel" type class_ref 3660599 // QCamera3Channel
	  param in name "raw_16" explicit_type "bool"
	    defaultvalue "false"
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "MAX_INFLIGHT_REQUESTS"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}${)}${volatile}${throw}${abstract};
"
	cpp_def "// RAW Channel related functions

// RAW Channel related functions

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} * ${p8}, ${t9} ${p9}, ${t10} ${p10}${)} :
                        QCamera3RegularChannel(cam_handle, channel_handle, cam_ops,
                                cb_routine, paddingInfo, userData, stream,
                                CAM_STREAM_TYPE_RAW, postprocess_mask, metadataChannel, numBuffers),
                        mIsRaw16(raw_16)
 :
                        QCamera3RegularChannel(cam_handle, channel_handle, cam_ops,
                                cb_routine, paddingInfo, userData, stream,
                                CAM_STREAM_TYPE_RAW, postprocess_mask, metadataChannel, numBuffers),
                        mIsRaw16(raw_16)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44237623 "~QCamera3RawChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44237751 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//@isType    : image stabilization type on the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//@isType    : image stabilization type on the stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44237879 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44238007 "getReprocessType"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3661367 // reprocess_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13319479 "mRawDump"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13319607 "mIsRaw16"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44238135 "dumpRawSnapshot"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44238263 "convertLegacyToRaw16"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44238391 "convertMipiToRaw16"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3662263 "QCamera3RawDumpChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "QCamera3RawDumpChannel is for internal use only for Raw dump
"
      classrelation 7066551 // <generalisation>
	relation 7066551 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7066551 // <generalisation>
	  b parent class_ref 3660599 // QCamera3Channel
      end

      operation 44238519 "QCamera3RawDumpChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 8
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "rawDumpSize" type class_ref 3646135 // cam_dimension_t
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "userData" explicit_type "void"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "3U"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${volatile}${throw}${abstract};
"
	cpp_def "// RAW Dump Channel related functions
//===========================================================================
//FUNCTION   : QCamera3RawDumpChannel
//
//DESCRIPTION: Constructor for RawDumpChannel
//
//PARAMETERS :
//  @cam_handle    : Handle for Camera
//  @cam_ops       : Function pointer table
//  @rawDumpSize   : Dimensions for the Raw stream
//  @paddinginfo   : Padding information for stream
//  @userData      : Cookie for parent
//  @pp mask       : PP feature mask for this stream
//  @numBuffers    : number of max dequeued buffers
//
//RETURN           : NA
//==========================================================================

// RAW Dump Channel related functions
//===========================================================================
//FUNCTION   : QCamera3RawDumpChannel
//
//DESCRIPTION: Constructor for RawDumpChannel
//
//PARAMETERS :
//  @cam_handle    : Handle for Camera
//  @cam_ops       : Function pointer table
//  @rawDumpSize   : Dimensions for the Raw stream
//  @paddinginfo   : Padding information for stream
//  @userData      : Cookie for parent
//  @pp mask       : PP feature mask for this stream
//  @numBuffers    : number of max dequeued buffers
//
//RETURN           : NA
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} ${p6}, ${t7} ${p7}${)} :
                        QCamera3Channel(cam_handle, channel_handle, cam_ops, NULL,
                                paddingInfo, postprocess_mask,
                                userData, numBuffers),
                        mDim(rawDumpSize),
                        mMemory(NULL)
 :
                        QCamera3Channel(cam_handle, channel_handle, cam_ops, NULL,
                                paddingInfo, postprocess_mask,
                                userData, numBuffers),
                        mDim(rawDumpSize),
                        mMemory(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44238647 "~QCamera3RawDumpChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3RawDumpChannel
//
//DESCRIPTION: Destructor for RawDumpChannel
//
//PARAMETERS :
//
//RETURN           : NA
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3RawDumpChannel
//
//DESCRIPTION: Destructor for RawDumpChannel
//
//PARAMETERS :
//
//RETURN           : NA
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3RawDumpChannel
//
//DESCRIPTION: Destructor for RawDumpChannel
//
//PARAMETERS :
//
//RETURN           : NA
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44238775 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION : intialize
//
//DESCRIPTION: Initializes channel params and creates underlying stream
//
//PARAMETERS : NA
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : intialize
//
//DESCRIPTION: Initializes channel params and creates underlying stream
//
//PARAMETERS :
//   @isType : type of image stabilization required on this stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : intialize
//
//DESCRIPTION: Initializes channel params and creates underlying stream
//
//PARAMETERS :
//   @isType : type of image stabilization required on this stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44238903 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION: Callback routine invoked for each frame generated for
//             Rawdump channel
//
//PARAMETERS :
//  @super_frame  : stream buf frame generated
//  @stream       : Underlying Stream object cookie
//
//RETURN          : NA
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION: Callback routine invoked for each frame generated for
//             Rawdump channel
//
//PARAMETERS :
//  @super_frame  : stream buf frame generated
//  @stream       : Underlying Stream object cookie
//
//RETURN          : NA
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION: Callback routine invoked for each frame generated for
//             Rawdump channel
//
//PARAMETERS :
//  @super_frame  : stream buf frame generated
//  @stream       : Underlying Stream object cookie
//
//RETURN          : NA
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44239031 "getStreamBufs"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: Callback function provided to interface to get buffers.
//
//PARAMETERS :
//  @len       : Length of each buffer to be allocated
//
//RETURN     : NULL on buffer allocation failure
//             QCamera3Memory object on sucess
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: Callback function provided to interface to get buffers.
//
//PARAMETERS :
//  @len       : Length of each buffer to be allocated
//
//RETURN     : NULL on buffer allocation failure
//             QCamera3StreamMem object on sucess
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: Callback function provided to interface to get buffers.
//
//PARAMETERS :
//  @len       : Length of each buffer to be allocated
//
//RETURN     : NULL on buffer allocation failure
//             QCamera3StreamMem object on sucess
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44239159 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: Callback function provided to interface to return buffers.
//             Although no handles are actually returned, implicitl assumption
//             that interface will no longer use buffers and channel can
//             deallocated if necessary.
//
//PARAMETERS : NA
//
//RETURN     : NA
//==========================================================================

//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: Callback function provided to interface to return buffers.
//             Although no handles are actually returned, implicitl assumption
//             that interface will no longer use buffers and channel can
//             deallocated if necessary.
//
//PARAMETERS : NA
//
//RETURN     : NA
//==========================================================================

//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: Callback function provided to interface to return buffers.
//             Although no handles are actually returned, implicitl assumption
//             that interface will no longer use buffers and channel can
//             deallocated if necessary.
//
//PARAMETERS : NA
//
//RETURN     : NA
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44239287 "registerBuffer"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param inout name "" explicit_type "buffer_handle_t"
	  param in name "" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return NO_ERROR; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44239415 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION : request
//
//DESCRIPTION: Request function used as trigger
//
//PARAMETERS :
//@recvd_frame : buffer- this will be NULL since this is internal channel
//@frameNumber : Undefined again since this is internal stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : request
//
//DESCRIPTION: Request function used as trigger
//
//PARAMETERS :
//@recvd_frame : buffer- this will be NULL since this is internal channel
//@frameNumber : Undefined again since this is internal stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : request
//
//DESCRIPTION: Request function used as trigger
//
//PARAMETERS :
//@recvd_frame : buffer- this will be NULL since this is internal channel
//@frameNumber : Undefined again since this is internal stream
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44239543 "dumpRawSnapshot"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 3646391 // mm_camera_buf_def_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dumpRawSnapshot
//
//DESCRIPTION: Helper function to dump Raw frames
//
//PARAMETERS :
// @frame      : stream buf frame to be dumped
//
// RETURN      : NA
//==========================================================================

//===========================================================================
//FUNCTION   : dumpRawSnapshot
//
//DESCRIPTION: Helper function to dump Raw frames
//
//PARAMETERS :
// @frame      : stream buf frame to be dumped
//
// RETURN      : NA
//==========================================================================

//===========================================================================
//FUNCTION   : dumpRawSnapshot
//
//DESCRIPTION: Helper function to dump Raw frames
//
//PARAMETERS :
// @frame      : stream buf frame to be dumped
//
// RETURN      : NA
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7066679 // mDim (<directional composition>)
	relation 7066679 *-->
	  a role_name "mDim" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7066679 // mDim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13319735 "mRawDump"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7066807 // mMemory (<unidirectional association>)
	relation 7066807 --->
	  a role_name "mMemory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7066807 // mMemory (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end
    end

    class 3662391 "QCamera3YUVChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3YUVChannel is used to handle flexible YUV streams that are directly
generated by hardware and given to frameworks without any postprocessing at HAL.
It is also used to handle input buffers that generate YUV outputs "
      classrelation 7066935 // <generalisation>
	relation 7066935 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7066935 // <generalisation>
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end

      operation 44239671 "QCamera3YUVChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 10
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "userData" explicit_type "void"
	  param inout name "stream" explicit_type "camera3_stream_t"
	  param in name "stream_type" explicit_type "cam_stream_type_t"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "metadataChannel" type class_ref 3660599 // QCamera3Channel
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "// QCamera3YUVChannel methods 
//===========================================================================
//FUNCTION   : QCamera3YUVChannel
//
//DESCRIPTION: constructor of QCamera3YUVChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @cb_routine : callback routine to frame aggregator
//  @paddingInfo : padding information for the stream
//  @stream     : camera3_stream_t structure
//  @stream_type: Channel stream type
//  @postprocess_mask: the postprocess mask for streams of this channel
//  @metadataChannel: handle to the metadataChannel
//RETURN     : none
//==========================================================================

// QCamera3YUVChannel methods 
//===========================================================================
//FUNCTION   : QCamera3YUVChannel
//
//DESCRIPTION: constructor of QCamera3YUVChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @cb_routine : callback routine to frame aggregator
//  @paddingInfo : padding information for the stream
//  @stream     : camera3_stream_t structure
//  @stream_type: Channel stream type
//  @postprocess_mask: the postprocess mask for streams of this channel
//  @metadataChannel: handle to the metadataChannel
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}${)} :
            QCamera3ProcessingChannel(cam_handle, channel_handle, cam_ops,
                    cb_routine, paddingInfo, userData, stream, stream_type,
                    postprocess_mask, metadataChannel)
 :
            QCamera3ProcessingChannel(cam_handle, channel_handle, cam_ops,
                    cb_routine, paddingInfo, userData, stream, stream_type,
                    postprocess_mask, metadataChannel)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44239799 "~QCamera3YUVChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3YUVChannel
//
//DESCRIPTION: destructor of QCamera3YUVChannel
//
//PARAMETERS : none
//
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3YUVChannel
//
//DESCRIPTION: destructor of QCamera3YUVChannel
//
//PARAMETERS : none
//
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44239927 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//@isType    : the image stabilization type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Initialize and add camera channel & stream
//
//PARAMETERS :
//@isType    : the image stabilization type
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44240055 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 5
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	  param inout name "pInputBuffer" explicit_type "camera3_stream_buffer_t"
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	  param inout name "needMetadata" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} & ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: entry function for a request on a YUV stream. This function
//             has the logic to service a request based on its type
//
//PARAMETERS :
//@buffer          : pointer to the output buffer
//@frameNumber     : frame number of the request
//@pInputBuffer    : pointer to input buffer if an input request
//@metadata        : parameters associated with the request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: entry function for a request on a YUV stream. This function
//             has the logic to service a request based on its type
//
//PARAMETERS :
//@buffer          : pointer to the output buffer
//@frameNumber     : frame number of the request
//@pInputBuffer    : pointer to input buffer if an input request
//@metadata        : parameters associated with the request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} & ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44240183 "getReprocessType"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3661367 // reprocess_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44240311 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION:
//
//PARAMETERS :
//@super_frame : the super frame with filled buffer
//@stream      : stream on which the buffer was requested and filled
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION:
//
//PARAMETERS :
//@super_frame : the super frame with filled buffer
//@stream      : stream on which the buffer was requested and filled
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44240439 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: release the buffers allocated to the stream
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: release the buffers allocated to the stream
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44240567 "reprocessCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "resultBuffer" explicit_type "buffer_handle_t"
	  param in name "resultFrameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : reprocessCbRoutine
//
//DESCRIPTION: callback function for the reprocessed frame. This frame now
//             should be returned to the framework. This same callback is
//             used during input reprocessing or offline postprocessing
//
//PARAMETERS :
//@resultBuffer      : buffer containing the reprocessed data
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : NONE
//
//==========================================================================

//===========================================================================
//FUNCTION   : reprocessCbRoutine
//
//DESCRIPTION: callback function for the reprocessed frame. This frame now
//             should be returned to the framework. This same callback is
//             used during input reprocessing or offline postprocessing
//
//PARAMETERS :
//@resultBuffer      : buffer containing the reprocessed data
//@resultFrameNumber : frame number on which the buffer was requested
//
//RETURN     : NONE
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3662519 "PpInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13319863 "frameNumber"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13319991 "offlinePpFlag"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13320119 "output"
	  public explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 7067063 // callback_buffer (<unidirectional association>)
	  relation 7067063 --->
	    a role_name "callback_buffer" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7067063 // callback_buffer (<unidirectional association>)
	    b parent class_ref 3646519 // mm_camera_super_buf_t
	end
      end

      attribute 13320247 "mBypass"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether offline postprocessing is required for this channel
"
      end

      attribute 13320375 "mFrameLen"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7067191 // mEdgeMode (<directional composition>)
	relation 7067191 *-->
	  a role_name "mEdgeMode" private
	    comment " Current edge, noise, and crop region setting
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7067191 // mEdgeMode (<directional composition>)
	  b parent class_ref 3662647 // cam_edge_application_t
      end

      attribute 13320503 "mNoiseRedMode"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7067319 // mCropRegion (<directional composition>)
	relation 7067319 *-->
	  a role_name "mCropRegion" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7067319 // mCropRegion (<directional composition>)
	  b parent class_ref 3662775 // cam_crop_region_t
      end

      attribute 13320631 "mOfflinePpLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mutex to protect mOfflinePpFlagMap and mFreeHeapBufferList
"
      end

      classrelation 7067447 // mOfflinePpInfoList (<directional composition>)
	relation 7067447 *-->
	  stereotype "List"
	  a role_name "mOfflinePpInfoList" private
	    comment " Map between free number and whether the request needs to be
 postprocessed.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7067447 // mOfflinePpInfoList (<directional composition>)
	  b parent class_ref 3662519 // PpInfo
      end

      attribute 13320759 "mFreeHeapBufferList"
	private explicit_type "uint32_t"
	stereotype "List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Heap buffer index list
"
      end

      operation 44240695 "needsFramePostprocessing"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "meta" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needsFramePostprocessing
//
//DESCRIPTION:
//
//PARAMETERS :
//
//RETURN     :
// TRUE if frame needs to be postprocessed
// FALSE is frame does not need to be postprocessed
//
//==========================================================================

//===========================================================================
//FUNCTION   : needsFramePostprocessing
//
//DESCRIPTION:
//
//PARAMETERS :
//
//RETURN     :
// TRUE if frame needs to be postprocessed
// FALSE is frame does not need to be postprocessed
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44240823 "handleOfflinePpCallback"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "resultFrameNumber" explicit_type "uint32_t"
	  param inout name "pendingCbs" explicit_type "Vector<mm_camera_super_buf_t *>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handleOfflinePpCallback
//
//DESCRIPTION: callback function for the reprocessed frame from offline
//             postprocessing.
//
//PARAMETERS :
//@resultFrameNumber : frame number on which the buffer was requested
//@pendingCbs        : pending buffers to be returned first
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : handleOfflinePpCallback
//
//DESCRIPTION: callback function for the reprocessed frame from offline
//             postprocessing.
//
//PARAMETERS :
//@resultFrameNumber : frame number on which the buffer was requested
//@pendingCbs        : pending buffers to be returned first
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3662903 "QCamera3PicChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3PicChannel is for JPEG stream, which contains a YUV stream generated
by the hardware, and encoded to a JPEG stream "
      classrelation 7067575 // <generalisation>
	relation 7067575 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7067575 // <generalisation>
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end

      operation 44240951 "QCamera3PicChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 12
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param inout name "userData" explicit_type "void"
	  param inout name "stream" explicit_type "camera3_stream_t"
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param in name "is4KVideo" explicit_type "bool"
	  param in name "isInputStreamConfigured" explicit_type "bool"
	  param inout name "metadataChannel" type class_ref 3660599 // QCamera3Channel
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "MAX_INFLIGHT_REQUESTS"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} * ${p10}${v10}, ${t11} ${p11}${v11}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} * ${p10}, ${t11} ${p11}${)} :
                        QCamera3ProcessingChannel(cam_handle, channel_handle,
                                cam_ops, cb_routine, paddingInfo, userData,
                                stream, CAM_STREAM_TYPE_SNAPSHOT,
                                postprocess_mask, metadataChannel, numBuffers),
                        mNumSnapshotBufs(0),
                        mInputBufferHint(isInputStreamConfigured),
                        mYuvMemory(NULL),
                        mFrameLen(0)
 :
                        QCamera3ProcessingChannel(cam_handle, channel_handle,
                                cam_ops, cb_routine, paddingInfo, userData,
                                stream, CAM_STREAM_TYPE_SNAPSHOT,
                                postprocess_mask, metadataChannel, numBuffers),
                        mNumSnapshotBufs(0),
                        mInputBufferHint(isInputStreamConfigured),
                        mYuvMemory(NULL),
                        mFrameLen(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44241079 "~QCamera3PicChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44241207 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44241335 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 4
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	  param inout name "pInputBuffer" explicit_type "camera3_stream_buffer_t"
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: handle the request - either with an input buffer or a direct
//             output request
//
//PARAMETERS :
//@buffer       : pointer to the output buffer
//@frameNumber  : frame number of the request
//@pInputBuffer : pointer to input buffer if an input request
//@metadata     : parameters associated with the request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

//===========================================================================
//FUNCTION   : request
//
//DESCRIPTION: handle the request - either with an input buffer or a direct
//             output request
//
//PARAMETERS :
//@buffer       : pointer to the output buffer
//@frameNumber  : frame number of the request
//@pInputBuffer : pointer to input buffer if an input request
//@metadata     : parameters associated with the request
//
//RETURN     : 0 on a success start of capture
//             -EINVAL on invalid input
//             -ENODEV on serious error
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44241463 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION:
//
//PARAMETERS :
//@super_frame : the super frame with filled buffer
//@stream      : stream on which the buffer was requested and filled
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : streamCbRoutine
//
//DESCRIPTION:
//
//PARAMETERS :
//@super_frame : the super frame with filled buffer
//@stream      : stream on which the buffer was requested and filled
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44241591 "getStreamBufs"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44241719 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44241847 "getReprocessType"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3661367 // reprocess_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

//===========================================================================
//FUNCTION   : getReprocessType
//
//DESCRIPTION: get the type of reprocess output supported by this channel
//
//PARAMETERS : NONE
//
//RETURN     : reprocess_type_t : type of reprocess
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44241975 "getExifData"
	preserve_cpp_body_indent public return_type class_ref 3663031 // QCamera3Exif
	nparams 2
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	  param inout name "jpeg_settings" type class_ref 3663159 // jpeg_settings_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getExifData
//
//DESCRIPTION: get exif data to be passed into jpeg encoding
//
//PARAMETERS : none
//
//RETURN     : exif data from user setting and GPS
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44242103 "overrideYuvSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : overrideYuvSize
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @width     : new width
//  @height    : new height
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : overrideYuvSize
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @width     : new width
//  @height    : new height
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44242231 "jpegEvtHandle"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 5
	  param in name "status" type class_ref 3649335 // jpeg_job_status_t
	  param in name "" explicit_type "uint32_t"
	  param in name "jobId" explicit_type "uint32_t"
	  param inout name "p_output" type class_ref 3649463 // mm_jpeg_output_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : jpegEvtHandle
//
//DESCRIPTION: Function registerd to mm-jpeg-interface to handle jpeg events.
//Construct result payload and call mChannelCb to deliver buffer
//to framework.
//
//PARAMETERS :
//  @status    : status of jpeg job
//  @client_hdl: jpeg client handle
//  @jobId     : jpeg job Id
//  @p_ouput   : ptr to jpeg output result struct
//  @userdata  : user data ptr
//
//RETURN     : none
//==========================================================================

// QCamera3PicChannel methods 
//===========================================================================
//FUNCTION   : jpegEvtHandle
//
//DESCRIPTION: Function registerd to mm-jpeg-interface to handle jpeg events.
//Construct result payload and call mChannelCb to deliver buffer
//to framework.
//
//PARAMETERS :
//  @status    : status of jpeg job
//  @client_hdl: jpeg client handle
//  @jobId     : jpeg job Id
//  @p_ouput   : ptr to jpeg output result struct
//  @userdata  : user data ptr
//
//RETURN     : none
//==========================================================================

// QCamera3PicChannel methods 
//===========================================================================
//FUNCTION   : jpegEvtHandle
//
//DESCRIPTION: Function registerd to mm-jpeg-interface to handle jpeg events.
//Construct result payload and call mChannelCb to deliver buffer
//to framework.
//
//PARAMETERS :
//  @status    : status of jpeg job
//  @client_hdl: jpeg client handle
//  @jobId     : jpeg job Id
//  @p_ouput   : ptr to jpeg output result struct
//  @userdata  : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44242359 "dataNotifyCB"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: Channel Level callback used for super buffer data notify.
//             This function is registered with mm-camera-interface to handle
//             data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: Channel Level callback used for super buffer data notify.
//             This function is registered with mm-camera-interface to handle
//             data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : dataNotifyCB
//
//DESCRIPTION: Channel Level callback used for super buffer data notify.
//             This function is registered with mm-camera-interface to handle
//             data notify
//
//PARAMETERS :
//  @recvd_frame   : stream frame received
//  userdata       : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44242487 "queueJpegSetting"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7067703 // m_max_pic_dim (<directional composition>)
	relation 7067703 *-->
	  a role_name "m_max_pic_dim" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7067703 // m_max_pic_dim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13320887 "mNumSnapshotBufs"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13321015 "mYuvWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13321143 "mYuvHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13321271 "mCurrentBufIndex"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13321399 "mInputBufferHint"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7067831 // mYuvMemory (<unidirectional association>)
	relation 7067831 --->
	  a role_name "mYuvMemory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7067831 // mYuvMemory (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      attribute 13321527 "mFreeBuffersLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Keep a list of free buffers
"
      end

      attribute 13321655 "mFreeBufferList"
	private explicit_type "uint32_t"
	stereotype "List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13321783 "mFrameLen"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3663031 "QCamera3Exif"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44265911 "QCamera3Exif"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3Exif
//
//DESCRIPTION: constructor of QCamera3Exif
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3Exif
//
//DESCRIPTION: constructor of QCamera3Exif
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3Exif
//
//DESCRIPTION: constructor of QCamera3Exif
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}
    : m_nNumEntries(0)

    : m_nNumEntries(0)

    : m_nNumEntries(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44266039 "~QCamera3Exif"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3Exif
//
//DESCRIPTION: deconstructor of QCamera3Exif. Will release internal memory ptr.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Exif
//
//DESCRIPTION: deconstructor of QCamera3Exif. Will release internal memory ptr.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Exif
//
//DESCRIPTION: deconstructor of QCamera3Exif. Will release internal memory ptr.
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44266167 "addEntry"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param in name "tagid" type class_ref 3627703 // exif_tag_id_t
	  param in name "type" type class_ref 3633079 // exif_tag_type_t
	  param in name "count" explicit_type "uint32_t"
	  param inout name "data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addEntry
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @tagid   : exif tag ID
//  @type    : data type
//  @count   : number of data in uint of its type
//  @data    : input data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addEntry
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @tagid   : exif tag ID
//  @type    : data type
//  @count   : number of data in uint of its type
//  @data    : input data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addEntry
//
//DESCRIPTION: function to add an entry to exif data
//
//PARAMETERS :
//  @tagid   : exif tag ID
//  @type    : data type
//  @count   : number of data in uint of its type
//  @data    : input data ptr
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44266295 "getNumOfEntries"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_nNumEntries;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44266423 "getEntries"
	cpp_inline public return_type class_ref 3640887 // QEXIF_INFO_DATA
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {return m_Entries;};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7077815 // m_Entries (<directional composition>)
	relation 7077815 *-->
	  a role_name "m_Entries" multiplicity "[MAX_HAL3_EXIF_TABLE_ENTRIES]" private
	    comment " exif tags for JPEG encoder"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077815 // m_Entries (<directional composition>)
	  b parent class_ref 3640887 // QEXIF_INFO_DATA
      end

      attribute 13341751 "m_nNumEntries"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of valid entries"
      end
    end

    class 3663159 "jpeg_settings_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13324599 "out_buf_index"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324727 "jpeg_orientation"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324855 "jpeg_quality"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13324983 "jpeg_thumb_quality"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7069751 // thumbnail_size (<directional composition>)
	relation 7069751 *-->
	  a role_name "thumbnail_size" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7069751 // thumbnail_size (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13325111 "gps_timestamp_valid"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13325239 "gps_timestamp"
	public explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13325367 "gps_coordinates_valid"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13325495 "gps_coordinates"
	public explicit_type "double"
	multiplicity "[3]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13325623 "gps_processing_method"
	public explicit_type "char"
	multiplicity "[GPS_PROCESSING_METHOD_SIZE]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13325751 "image_desc_valid"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13325879 "image_desc"
	public explicit_type "char"
	multiplicity "[EXIF_IMAGE_DESCRIPTION_SIZE]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3663287 "QCamera3ReprocessChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " reprocess channel class"
      classrelation 7067959 // <generalisation>
	relation 7067959 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7067959 // <generalisation>
	  b parent class_ref 3660599 // QCamera3Channel
      end

      operation 44242615 "QCamera3ReprocessChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 8
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param in name "cb_routine" type class_ref 3660471 // channel_cb_routine
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param inout name "userData" explicit_type "void"
	  param inout name "ch_hdl" explicit_type "void"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} * ${p7}${v7}${)}${volatile}${throw}${abstract};
"
	cpp_def "// Reprocess Channel methods 
//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

// Reprocess Channel methods 
//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} * ${p7}${)} :
    /* In case of framework reprocessing, pproc and jpeg operations could be
     * parallelized by allowing 1 extra buffer for reprocessing output:
     * ch_hdl->getNumBuffers() + 1 */
    QCamera3Channel(cam_handle, channel_handle, cam_ops, cb_routine, paddingInfo,
                    postprocess_mask, userData,
                    ((QCamera3ProcessingChannel *)ch_hdl)->getNumBuffers()
                              + (MAX_REPROCESS_PIPELINE_STAGES - 1)),
    inputChHandle(ch_hdl),
    mOfflineBuffersIndex(-1),
    mFrameLen(0),
    mReprocessType(REPROCESS_TYPE_NONE),
    m_pSrcChannel(NULL),
    m_pMetaChannel(NULL),
    mMemory(NULL),
    mGrallocMemory(0)
 :
    /* In case of framework reprocessing, pproc and jpeg operations could be
     * parallelized by allowing 1 extra buffer for reprocessing output:
     * ch_hdl->getNumBuffers() + 1 */
    QCamera3Channel(cam_handle, channel_handle, cam_ops, cb_routine, paddingInfo,
                    postprocess_mask, userData,
                    ((QCamera3ProcessingChannel *)ch_hdl)->getNumBuffers()
                              + (MAX_REPROCESS_PIPELINE_STAGES - 1)),
    inputChHandle(ch_hdl),
    mOfflineBuffersIndex(-1),
    mFrameLen(0),
    mReprocessType(REPROCESS_TYPE_NONE),
    m_pSrcChannel(NULL),
    m_pMetaChannel(NULL),
    mMemory(NULL),
    mGrallocMemory(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44242743 "QCamera3ReprocessChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: default constructor of QCamera3ReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)} :
    m_pSrcChannel(NULL),
    m_pMetaChannel(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44242871 "~QCamera3ReprocessChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3ReprocessChannel
//
//DESCRIPTION: destructor of QCamera3ReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3ReprocessChannel
//
//DESCRIPTION: destructor of QCamera3ReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3ReprocessChannel
//
//DESCRIPTION: destructor of QCamera3ReprocessChannel
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44242999 "start"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start reprocess channel.
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : start
//
//DESCRIPTION: start reprocess channel.
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " offline reprocess"
      end

      operation 44243127 "stop"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop channel
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop reprocess channel.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : stop
//
//DESCRIPTION: stop reprocess channel.
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44243255 "doReprocessOffline"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3661623 // qcamera_fwk_input_pp_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : doReprocessOffline
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @frame     : input frame for reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocessOffline
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @frame     : input frame for reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocessOffline
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @frame     : input frame for reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44243383 "doReprocess"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param in name "buf_fd" explicit_type "int"
	  param in name "buf_length" explicit_type "size_t"
	  param inout name "ret_val" explicit_type "int32_t"
	  param inout name "meta_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @buf_fd     : fd to the input buffer that needs reprocess
//  @buf_lenght : length of the input buffer
//  @ret_val    : result of reprocess.
//                Example: Could be faceID in case of register face image.
//  @meta_frame : metadata frame.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : doReprocess
//
//DESCRIPTION: request to do a reprocess on the frame
//
//PARAMETERS :
//  @buf_fd     : fd to the input buffer that needs reprocess
//  @buf_lenght : length of the input buffer
//  @ret_val    : result of reprocess.
//                Example: Could be faceID in case of register face image.
//  @meta_frame : metadata frame.
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44243511 "overrideMetadata"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param inout name "pp_buffer" type class_ref 3663415 // qcamera_hal3_pp_buffer_t
	  param inout name "meta_buffer" type class_ref 3646391 // mm_camera_buf_def_t
	  param inout name "jpeg_settings" type class_ref 3663159 // jpeg_settings_t
	  param inout name "fwk_frame" type class_ref 3661623 // qcamera_fwk_input_pp_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : overrideMetadata
//
//DESCRIPTION: Override metadata entry such as rotation, crop, and CDS info.
//
//PARAMETERS :
//  @frame     : input frame from source stream
//  meta_buffer: metadata buffer
//  @metadata  : corresponding metadata
//  @fwk_frame :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : overrideMetadata
//
//DESCRIPTION: Override metadata entry such as rotation, crop, and CDS info.
//
//PARAMETERS :
//  @frame     : input frame from source stream
//  meta_buffer: metadata buffer
//  @metadata  : corresponding metadata
//  @fwk_frame :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44243639 "overrideFwkMetadata"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "frame" type class_ref 3661623 // qcamera_fwk_input_pp_data_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION : overrideFwkMetadata
//
//DESCRIPTION: Override frameworks metadata such as crop, and CDS data.
//
//PARAMETERS :
//@frame : input frame for reprocessing
//
//RETURN : int32_t type of status
//NO_ERROR -- success
//none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION : overrideFwkMetadata
//
//DESCRIPTION: Override frameworks metadata such as crop, and CDS data.
//
//PARAMETERS :
//@frame : input frame for reprocessing
//
//RETURN : int32_t type of status
//NO_ERROR -- success
//none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44243767 "getStreamBufs"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: register the buffers of the reprocess channel
//
//PARAMETERS : none
//
//RETURN     : QCamera3Memory *
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: register the buffers of the reprocess channel
//
//PARAMETERS : none
//
//RETURN     : QCamera3StreamMem *
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: register the buffers of the reprocess channel
//
//PARAMETERS : none
//
//RETURN     : QCamera3StreamMem *
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44243895 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamBufs
//
//DESCRIPTION: register the buffers of the reprocess channel
//
//PARAMETERS : none
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: release the reprocess channel buffers
//
//PARAMETERS : none
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : putStreamBufs
//
//DESCRIPTION: release the reprocess channel buffers
//
//PARAMETERS : none
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244023 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244151 "unmapOfflineBuffers"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "all" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unmapOfflineBuffers
//
//DESCRIPTION: Unmaps offline buffers
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapOfflineBuffers
//
//DESCRIPTION: Unmaps offline buffers
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unmapOfflineBuffers
//
//DESCRIPTION: Unmaps offline buffers
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244279 "bufDone"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: Return reprocess stream buffer to free buffer list.
//             Note that this function doesn't queue buffer back to kernel.
//             It's up to doReprocessOffline to do that instead.
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : bufDone
//
//DESCRIPTION: Return reprocess stream buffer to free buffer list.
//             Note that this function doesn't queue buffer back to kernel.
//             It's up to doReprocessOffline to do that instead.
//PARAMETERS :
//  @recvd_frame  : stream buf frame to be returned
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244407 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3ReprocessChannel
//
//DESCRIPTION: constructor of QCamera3ReprocessChannel
//
//PARAMETERS :
//  @cam_handle : camera handle
//  @cam_ops    : ptr to camera ops table
//  @pp_mask    : post-proccess feature mask
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244535 "dataNotifyCB"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "recvd_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244663 "addReprocStreamsFromSource"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 4
	  param inout name "pp_config" type class_ref 3648567 // cam_pp_feature_config_t
	  param in name "src_config" type class_ref 3661495 // reprocess_config_t
	  param in name "is_type" type class_ref 3654071 // cam_is_type_t
	  param inout name "pMetaChannel" type class_ref 3660599 // QCamera3Channel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addReprocStreamsFromSource
//
//DESCRIPTION: add reprocess streams from input source channel
//
//PARAMETERS :
//  @config         : pp feature configuration
//  @src_config     : source reprocess configuration
//  @pMetaChannel   : ptr to metadata channel to get corresp. metadata
//  @offline        : configure for offline reprocessing
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addReprocStreamsFromSource
//
//DESCRIPTION: add reprocess streams from input source channel
//
//PARAMETERS :
//  @config         : pp feature configuration
//  @src_config     : source reprocess configuration
//  @isType         : type of image stabilization required on this stream
//  @pMetaChannel   : ptr to metadata channel to get corresp. metadata
//
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : addReprocStreamsFromSource
//
//DESCRIPTION: add reprocess streams from input source channel
//
//PARAMETERS :
//  @config         : pp feature configuration
//  @src_config     : source reprocess configuration
//  @isType         : type of image stabilization required on this stream
//  @pMetaChannel   : ptr to metadata channel to get corresp. metadata
//
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244791 "getStreamBySrcHandle"
	preserve_cpp_body_indent public return_type class_ref 3660855 // QCamera3Stream
	nparams 1
	  param in name "srcHandle" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getStreamBySrcHandle
//
//DESCRIPTION: find reprocess stream by its source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBySrcHandle
//
//DESCRIPTION: find reprocess stream by its source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getStreamBySrcHandle
//
//DESCRIPTION: find reprocess stream by its source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44244919 "getSrcStreamBySrcHandle"
	preserve_cpp_body_indent public return_type class_ref 3660855 // QCamera3Stream
	nparams 1
	  param in name "srcHandle" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSrcStreamBySrcHandle
//
//DESCRIPTION: find source stream by source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getSrcStreamBySrcHandle
//
//DESCRIPTION: find source stream by source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

//===========================================================================
//FUNCTION   : getSrcStreamBySrcHandle
//
//DESCRIPTION: find source stream by source stream handle
//
//PARAMETERS :
//  @srcHandle : source stream handle
//
//RETURN     : ptr to reprocess stream if found. NULL if not found
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44245047 "registerBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: register streaming buffer to the channel object
//
//PARAMETERS :
//  @buffer     : buffer to be registered
//  @isType     : the image stabilization type for the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: register streaming buffer to the channel object
//
//PARAMETERS :
//  @buffer     : buffer to be registered
//  @isType     : the image stabilization type for the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13321911 "inputChHandle"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3663543 "OfflineBuffer"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7068087 // stream (<unidirectional association>)
	  relation 7068087 --->
	    a role_name "stream" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7068087 // stream (<unidirectional association>)
	    b parent class_ref 3660855 // QCamera3Stream
	end

	attribute 13322039 "type"
	  public explicit_type "cam_mapping_buf_type"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13322167 "index"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 7068215 // mOfflineBuffers (<directional composition>)
	relation 7068215 *-->
	  stereotype "android::List"
	  a role_name "mOfflineBuffers" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068215 // mOfflineBuffers (<directional composition>)
	  b parent class_ref 3663543 // OfflineBuffer
      end

      classrelation 7068343 // mOfflineMetaBuffers (<directional composition>)
	relation 7068343 *-->
	  stereotype "android::List"
	  a role_name "mOfflineMetaBuffers" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068343 // mOfflineMetaBuffers (<directional composition>)
	  b parent class_ref 3663543 // OfflineBuffer
      end

      attribute 13322295 "mOfflineBuffersIndex"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13322423 "mOfflineMetaIndex"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13322551 "mFrameLen"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13322679 "mFreeBuffersLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Lock for free heap buffers"
      end

      attribute 13322807 "mFreeBufferList"
	private explicit_type "int32_t"
	stereotype "List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Free heap buffers list"
      end

      classrelation 7068471 // mReprocessType (<directional composition>)
	relation 7068471 *-->
	  a role_name "mReprocessType" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068471 // mReprocessType (<directional composition>)
	  b parent class_ref 3661367 // reprocess_type_t
      end

      attribute 13322935 "mSrcStreamHandles"
	private explicit_type "uint32_t"
	multiplicity "[MAX_STREAM_NUM_IN_BUNDLE]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7068599 // m_pSrcChannel (<unidirectional association>)
	relation 7068599 --->
	  a role_name "m_pSrcChannel" private
	    comment " ptr to source channel for reprocess"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068599 // m_pSrcChannel (<unidirectional association>)
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end

      classrelation 7068727 // m_pMetaChannel (<unidirectional association>)
	relation 7068727 --->
	  a role_name "m_pMetaChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068727 // m_pMetaChannel (<unidirectional association>)
	  b parent class_ref 3660599 // QCamera3Channel
      end

      classrelation 7068855 // mMemory (<unidirectional association>)
	relation 7068855 --->
	  a role_name "mMemory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068855 // mMemory (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      classrelation 7068983 // mGrallocMemory (<directional composition>)
	relation 7068983 *-->
	  a role_name "mGrallocMemory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7068983 // mGrallocMemory (<directional composition>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end
    end

    class 3663415 "qcamera_hal3_pp_buffer_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 7077687 // input (<unidirectional association>)
	relation 7077687 --->
	  a role_name "input" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077687 // input (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      attribute 13341495 "output"
	public explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13341623 "frameNumber"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3663671 "QCamera3SupportChannel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " QCamera3SupportChannel is for HAL internal consumption only "
      classrelation 7069111 // <generalisation>
	relation 7069111 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7069111 // <generalisation>
	  b parent class_ref 3660599 // QCamera3Channel
      end

      operation 44245175 "QCamera3SupportChannel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 10
	  param in name "cam_handle" explicit_type "uint32_t"
	  param in name "channel_handle" explicit_type "uint32_t"
	  param inout name "cam_ops" type class_ref 3651127 // mm_camera_ops_t
	  param inout name "paddingInfo" type class_ref 3651511 // cam_padding_info_t
	  param in name "postprocess_mask" explicit_type "uint32_t"
	  param in name "streamType" explicit_type "cam_stream_type_t"
	  param inout name "dim" type class_ref 3646135 // cam_dimension_t
	  param in name "streamFormat" type class_ref 3628215 // cam_format_t
	  param inout name "userData" explicit_type "void"
	  param in name "numBuffers" explicit_type "uint32_t"
	    defaultvalue "MIN_STREAMING_BUFFER_NUM
                    "
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} * ${p8}, ${t9} ${p9}${)} :
                        QCamera3Channel(cam_handle, channel_handle, cam_ops,
                                NULL, paddingInfo, postprocess_mask,
                                userData, numBuffers),
                        mMemory(NULL)
 :
                        QCamera3Channel(cam_handle, channel_handle, cam_ops,
                                NULL, paddingInfo, postprocess_mask,
                                userData, numBuffers),
                        mMemory(NULL)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44245303 "~QCamera3SupportChannel"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44245431 "initialize"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "isType" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44245559 "request"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44245687 "streamCbRoutine"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "super_frame" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "stream" type class_ref 3660855 // QCamera3Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44245815 "getStreamBufs"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 3660983 // QCamera3StreamMem
	nparams 1
	  param in name "len" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44245943 "putStreamBufs"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44246071 "registerBuffer"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param inout name "" explicit_type "buffer_handle_t"
	  param in name "" type class_ref 3654071 // cam_is_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return NO_ERROR; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7069239 // kDim (<directional composition>)
	relation 7069239 *-->
	  a role_name "kDim" init_value "= {640, 480}" class_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7069239 // kDim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      classrelation 7069367 // mMemory (<unidirectional association>)
	relation 7069367 --->
	  a role_name "mMemory" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7069367 // mMemory (<unidirectional association>)
	  b parent class_ref 3660983 // QCamera3StreamMem
      end

      classrelation 7069495 // mDim (<directional composition>)
	relation 7069495 *-->
	  a role_name "mDim" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7069495 // mDim (<directional composition>)
	  b parent class_ref 3646135 // cam_dimension_t
      end

      attribute 13323063 "mStreamType"
	private explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7069623 // mStreamFormat (<directional composition>)
	relation 7069623 *-->
	  a role_name "mStreamFormat" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7069623 // mStreamFormat (<directional composition>)
	  b parent class_ref 3628215 // cam_format_t
      end
    end

    class 3663799 "QCamera3CropRegionMapper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44246199 "QCamera3CropRegionMapper"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3CropRegionMapper
//
//DESCRIPTION: Constructor
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3CropRegionMapper
//
//DESCRIPTION: Constructor
//
//PARAMETERS : None
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}
        : mSensorW(0),
          mSensorH(0),
          mActiveArrayW(0),
          mActiveArrayH(0)

        : mSensorW(0),
          mSensorH(0),
          mActiveArrayW(0),
          mActiveArrayH(0)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44246327 "~QCamera3CropRegionMapper"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3CropRegionMapper
//
//DESCRIPTION: destructor
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3CropRegionMapper
//
//DESCRIPTION: destructor
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44246455 "update"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "active_array_w" explicit_type "uint32_t"
	  param in name "active_array_h" explicit_type "uint32_t"
	  param in name "sensor_w" explicit_type "uint32_t"
	  param in name "sensor_h" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : update
//
//DESCRIPTION: update sensor active array size and sensor output size
//
//PARAMETERS :
//  @active_array_w : active array width
//  @active_array_h : active array height
//  @sensor_w       : sensor output width
//  @sensor_h       : sensor output height
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : update
//
//DESCRIPTION: update sensor active array size and sensor output size
//
//PARAMETERS :
//  @active_array_w : active array width
//  @active_array_h : active array height
//  @sensor_w       : sensor output width
//  @sensor_h       : sensor output height
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44246583 "toActiveArray"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "crop_left" explicit_type "int32_t"
	  param inout name "crop_top" explicit_type "int32_t"
	  param inout name "crop_width" explicit_type "int32_t"
	  param inout name "crop_height" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : toActiveArray
//
//DESCRIPTION: Map crop rectangle from sensor output space to active array space
//
//PARAMETERS :
//  @crop_left   : x coordinate of top left corner of rectangle
//  @crop_top    : y coordinate of top left corner of rectangle
//  @crop_width  : width of rectangle
//  @crop_height : height of rectangle
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : toActiveArray
//
//DESCRIPTION: Map crop rectangle from sensor output space to active array space
//
//PARAMETERS :
//  @crop_left   : x coordinate of top left corner of rectangle
//  @crop_top    : y coordinate of top left corner of rectangle
//  @crop_width  : width of rectangle
//  @crop_height : height of rectangle
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44246711 "toSensor"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "crop_left" explicit_type "int32_t"
	  param inout name "crop_top" explicit_type "int32_t"
	  param inout name "crop_width" explicit_type "int32_t"
	  param inout name "crop_height" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : toSensor
//
//DESCRIPTION: Map crop rectangle from active array space to sensor output space
//
//PARAMETERS :
//  @crop_left   : x coordinate of top left corner of rectangle
//  @crop_top    : y coordinate of top left corner of rectangle
//  @crop_width  : width of rectangle
//  @crop_height : height of rectangle
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : toSensor
//
//DESCRIPTION: Map crop rectangle from active array space to sensor output space
//
//PARAMETERS :
//  @crop_left   : x coordinate of top left corner of rectangle
//  @crop_top    : y coordinate of top left corner of rectangle
//  @crop_width  : width of rectangle
//  @crop_height : height of rectangle
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44246839 "toActiveArray"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "x" explicit_type "uint32_t"
	  param inout name "y" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : toActiveArray
//
//DESCRIPTION: Map co-ordinate from sensor output space to active array space
//
//PARAMETERS :
//  @x   : x coordinate
//  @y   : y coordinate
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : toActiveArray
//
//DESCRIPTION: Map co-ordinate from sensor output space to active array space
//
//PARAMETERS :
//  @x   : x coordinate
//  @y   : y coordinate
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44246967 "toSensor"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "x" explicit_type "uint32_t"
	  param inout name "y" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : toSensor
//
//DESCRIPTION: Map co-ordinate from active array space to sensor output space
//
//PARAMETERS :
//  @x   : x coordinate
//  @y   : y coordinate
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : toSensor
//
//DESCRIPTION: Map co-ordinate from active array space to sensor output space
//
//PARAMETERS :
//  @x   : x coordinate
//  @y   : y coordinate
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13323191 "mSensorW"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " sensor output size 
"
      end

      attribute 13323319 "mSensorH"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13323447 "mActiveArrayW"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13323575 "mActiveArrayH"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44247095 "boundToSize"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param inout name "left" explicit_type "int32_t"
	  param inout name "top" explicit_type "int32_t"
	  param inout name "width" explicit_type "int32_t"
	  param inout name "height" explicit_type "int32_t"
	  param in name "bound_w" explicit_type "int32_t"
	  param in name "bound_h" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : boundToSize
//
//DESCRIPTION: Bound a particular rectangle inside a bounding box
//
//PARAMETERS :
//  @left    : x coordinate of top left corner of rectangle
//  @top     : y coordinate of top left corner of rectangle
//  @width   : width of rectangle
//  @height  : height of rectangle
//  @bound_w : width of bounding box
//  @bound_y : height of bounding box
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : boundToSize
//
//DESCRIPTION: Bound a particular rectangle inside a bounding box
//
//PARAMETERS :
//  @left    : x coordinate of top left corner of rectangle
//  @top     : y coordinate of top left corner of rectangle
//  @width   : width of rectangle
//  @height  : height of rectangle
//  @bound_w : width of bounding box
//  @bound_y : height of bounding box
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}, ${t3} & ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3663927 "stream_status_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13323703 "INVALID"
	public type class_ref 3663927 // stream_status_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13323831 "VALID"
	public type class_ref 3663927 // stream_status_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3664055 "metadata_response_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13326007 "iso_speed"
	public explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13326135 "exposure_time"
	public explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3664311 "optype_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13326391 "SET_ENABLE"
	public type class_ref 3664311 // optype_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13326519 "SET_CONTROLENABLE"
	public type class_ref 3664311 // optype_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13326647 "SET_RELOAD_CHROMATIX"
	public type class_ref 3664311 // optype_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13326775 "SET_STATUS"
	public type class_ref 3664311 // optype_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3664439 "stream_info_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13326903 "stream"
	public explicit_type "camera3_stream_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13327031 "buffer_set"
	public explicit_type "camera3_stream_buffer_set_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7070775 // status (<directional composition>)
	relation 7070775 *-->
	  a role_name "status" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070775 // status (<directional composition>)
	  b parent class_ref 3663927 // stream_status_t
      end

      attribute 13327159 "registered"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7070903 // channel (<unidirectional association>)
	relation 7070903 --->
	  a role_name "channel" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7070903 // channel (<unidirectional association>)
	  b parent class_ref 3661239 // QCamera3ProcessingChannel
      end
    end

    class 3664567 "QCamera3HardwareInterface"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13327287 "mCameraOps"
	class_attribute public explicit_type "camera3_device_ops_t"
	init_value "= {
    initialize:                         QCamera3HardwareInterface::initialize,
    configure_streams:                  QCamera3HardwareInterface::configure_streams,
    register_stream_buffers:            NULL,
    construct_default_request_settings: QCamera3HardwareInterface::construct_default_request_settings,
    process_capture_request:            QCamera3HardwareInterface::process_capture_request,
    get_metadata_vendor_tag_ops:        NULL,
    dump:                               QCamera3HardwareInterface::dump,
    flush:                              QCamera3HardwareInterface::flush,
    reserved:                           {0},
}"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " static variable and functions accessed by camera service 
"
      end

      operation 44247223 "initialize"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "device" explicit_type "camera3_device"
	  param in name "callback_ops" explicit_type "camera3_callback_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Pass framework callback pointers to HAL
//
//PARAMETERS :
//
//
//RETURN     : Success : 0
//             Failure: -ENODEV
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Pass framework callback pointers to HAL
//
//PARAMETERS :
//
//
//RETURN     : Success : 0
//             Failure: -ENODEV
//==========================================================================

//===========================================================================
//FUNCTION   : initialize
//
//DESCRIPTION: Pass framework callback pointers to HAL
//
//PARAMETERS :
//
//
//RETURN     : Success : 0
//             Failure: -ENODEV
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44247351 "configure_streams"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "device" explicit_type "camera3_device"
	  param inout name "stream_list" explicit_type "camera3_stream_configuration_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configure_streams
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     : Success: 0
//             Failure: -EINVAL (if stream configuration is invalid)
//                      -ENODEV (fatal error)
//==========================================================================

//===========================================================================
//FUNCTION   : configure_streams
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     : Success: 0
//             Failure: -EINVAL (if stream configuration is invalid)
//                      -ENODEV (fatal error)
//==========================================================================

//===========================================================================
//FUNCTION   : configure_streams
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     : Success: 0
//             Failure: -EINVAL (if stream configuration is invalid)
//                      -ENODEV (fatal error)
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44247479 "construct_default_request_settings"
	class_operation preserve_cpp_body_indent public explicit_return_type "camera_metadata_t"
	nparams 2
	  param in name "device" explicit_type "camera3_device"
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : construct_default_request_settings
//
//DESCRIPTION: Configure a settings buffer to meet the required use case
//
//PARAMETERS :
//
//
//RETURN     : Success: Return valid metadata
//             Failure: Return NULL
//==========================================================================

//===========================================================================
//FUNCTION   : construct_default_request_settings
//
//DESCRIPTION: Configure a settings buffer to meet the required use case
//
//PARAMETERS :
//
//
//RETURN     : Success: Return valid metadata
//             Failure: Return NULL
//==========================================================================

//===========================================================================
//FUNCTION   : construct_default_request_settings
//
//DESCRIPTION: Configure a settings buffer to meet the required use case
//
//PARAMETERS :
//
//
//RETURN     : Success: Return valid metadata
//             Failure: Return NULL
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44247607 "process_capture_request"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "device" explicit_type "camera3_device"
	  param inout name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : process_capture_request
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : process_capture_request
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : process_capture_request
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44247735 "dump"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "device" explicit_type "camera3_device"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44247863 "flush"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "device" explicit_type "camera3_device"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44247991 "close_camera_device"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : close_camera_device
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : close_camera_device
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : close_camera_device
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44248119 "QCamera3HardwareInterface"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "cameraId" explicit_type "uint32_t"
	  param in name "callbacks" explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3HardwareInterface
//
//DESCRIPTION: constructor of QCamera3HardwareInterface
//
//PARAMETERS :
//  @cameraId  : camera ID
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3HardwareInterface
//
//DESCRIPTION: constructor of QCamera3HardwareInterface
//
//PARAMETERS :
//  @cameraId  : camera ID
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}
    : mCameraId(cameraId),
      mCameraHandle(NULL),
      mCameraOpened(false),
      mCameraInitialized(false),
      mCallbackOps(NULL),
      mMetadataChannel(NULL),
      mPictureChannel(NULL),
      mRawChannel(NULL),
      mSupportChannel(NULL),
      mAnalysisChannel(NULL),
      mRawDumpChannel(NULL),
      mDummyBatchChannel(NULL),
      mChannelHandle(0),
      mFirstRequest(false),
      mFirstConfiguration(true),
      mFlush(false),
      mParamHeap(NULL),
      mParameters(NULL),
      mPrevParameters(NULL),
      m_bIsVideo(false),
      m_bIs4KVideo(false),
      m_bEisSupportedSize(false),
      m_bEisEnable(false),
      m_MobicatMask(0),
      mMinProcessedFrameDuration(0),
      mMinJpegFrameDuration(0),
      mMinRawFrameDuration(0),
      mMetaFrameCount(0U),
      mUpdateDebugLevel(false),
      mCallbacks(callbacks),
      mCaptureIntent(0),
      mHybridAeEnable(0),
      mBatchSize(0),
      mToBeQueuedVidBufs(0),
      mHFRVideoFps(DEFAULT_VIDEO_FPS),
      mOpMode(CAMERA3_STREAM_CONFIGURATION_NORMAL_MODE),
      mFirstFrameNumberInBatch(0),
      mNeedSensorRestart(false),
      mLdafCalibExist(false),
      mPowerHintEnabled(false),
      mLastCustIntentFrmNum(-1)

    : mCameraId(cameraId),
      mCameraHandle(NULL),
      mCameraOpened(false),
      mCameraInitialized(false),
      mCallbackOps(NULL),
      mMetadataChannel(NULL),
      mPictureChannel(NULL),
      mRawChannel(NULL),
      mSupportChannel(NULL),
      mAnalysisChannel(NULL),
      mRawDumpChannel(NULL),
      mDummyBatchChannel(NULL),
      mChannelHandle(0),
      mFirstRequest(false),
      mFirstConfiguration(true),
      mFlush(false),
      mParamHeap(NULL),
      mParameters(NULL),
      mPrevParameters(NULL),
      m_bIsVideo(false),
      m_bIs4KVideo(false),
      m_bEisSupportedSize(false),
      m_bEisEnable(false),
      m_MobicatMask(0),
      mMinProcessedFrameDuration(0),
      mMinJpegFrameDuration(0),
      mMinRawFrameDuration(0),
      mMetaFrameCount(0U),
      mUpdateDebugLevel(false),
      mCallbacks(callbacks),
      mCaptureIntent(0),
      mHybridAeEnable(0),
      mBatchSize(0),
      mToBeQueuedVidBufs(0),
      mHFRVideoFps(DEFAULT_VIDEO_FPS),
      mOpMode(CAMERA3_STREAM_CONFIGURATION_NORMAL_MODE),
      mFirstFrameNumberInBatch(0),
      mNeedSensorRestart(false),
      mLdafCalibExist(false),
      mPowerHintEnabled(false),
      mLastCustIntentFrmNum(-1)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44248247 "~QCamera3HardwareInterface"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3HardwareInterface
//
//DESCRIPTION: destructor of QCamera3HardwareInterface
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3HardwareInterface
//
//DESCRIPTION: destructor of QCamera3HardwareInterface
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3HardwareInterface
//
//DESCRIPTION: destructor of QCamera3HardwareInterface
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44248375 "camEvtHandle"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "camera_handle" explicit_type "uint32_t"
	  param inout name "evt" type class_ref 3637303 // mm_camera_event_t
	  param inout name "user_data" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : camEvtHandle
//
//DESCRIPTION: Function registered to mm-camera-interface to handle events
//
//PARAMETERS :
//  @camera_handle : interface layer camera handle
//  @evt           : ptr to event
//  @user_data     : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : camEvtHandle
//
//DESCRIPTION: Function registered to mm-camera-interface to handle events
//
//PARAMETERS :
//  @camera_handle : interface layer camera handle
//  @evt           : ptr to event
//  @user_data     : user data ptr
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : camEvtHandle
//
//DESCRIPTION: Function registered to mm-camera-interface to handle events
//
//PARAMETERS :
//  @camera_handle : interface layer camera handle
//  @evt           : ptr to event
//  @user_data     : user data ptr
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44248503 "openCamera"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "hw_device" explicit_type "hw_device_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS :
//  @hw_device  : double ptr for camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS :
//  @hw_device  : double ptr for camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS :
//  @hw_device  : double ptr for camera device struct
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44248631 "translateCapabilityToMetadata"
	preserve_cpp_body_indent public explicit_return_type "camera_metadata_t"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : translateCapabilityToMetadata
//
//DESCRIPTION: translate the capability into camera_metadata_t
//
//PARAMETERS : type of the request
//
//
//RETURN     : success: camera_metadata_t*
//             failure: NULL
//
//==========================================================================

//===========================================================================
//FUNCTION   : translateCapabilityToMetadata
//
//DESCRIPTION: translate the capability into camera_metadata_t
//
//PARAMETERS : type of the request
//
//
//RETURN     : success: camera_metadata_t*
//             failure: NULL
//
//==========================================================================

//===========================================================================
//FUNCTION   : translateCapabilityToMetadata
//
//DESCRIPTION: translate the capability into camera_metadata_t
//
//PARAMETERS : type of the request
//
//
//RETURN     : success: camera_metadata_t*
//             failure: NULL
//
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44248759 "getCamInfo"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "cameraId" explicit_type "uint32_t"
	  param inout name "info" explicit_type "camera_info"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCamInfo
//
//DESCRIPTION: query camera capabilities
//
//PARAMETERS :
//  @cameraId  : camera Id
//  @info      : camera info struct to be filled in with camera capabilities
//
//RETURN     : int type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getCamInfo
//
//DESCRIPTION: query camera capabilities
//
//PARAMETERS :
//  @cameraId  : camera Id
//  @info      : camera info struct to be filled in with camera capabilities
//
//RETURN     : int type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44248887 "initCapabilities"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "cameraId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initCapabilities
//
//DESCRIPTION: initialize camera capabilities in static data struct
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initCapabilities
//
//DESCRIPTION: initialize camera capabilities in static data struct
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249015 "initStaticMetadata"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "cameraId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initStaticMetadata
//
//DESCRIPTION: initialize the static metadata
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : int32_t type of status
//             0  -- success
//             non-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initStaticMetadata
//
//DESCRIPTION: initialize the static metadata
//
//PARAMETERS :
//  @cameraId  : camera Id
//
//RETURN     : int32_t type of status
//             0  -- success
//             non-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249143 "makeTable"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "dimTable" type class_ref 3646135 // cam_dimension_t
	  param in name "size" explicit_type "size_t"
	  param in name "max_size" explicit_type "size_t"
	  param inout name "sizeTable" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : makeTable
//
//DESCRIPTION: make a table of sizes
//
//PARAMETERS :
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : makeTable
//
//DESCRIPTION: make a table of sizes
//
//PARAMETERS :
//
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249271 "makeFPSTable"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "fpsTable" type class_ref 3645495 // cam_fps_range_t
	  param in name "size" explicit_type "size_t"
	  param in name "max_size" explicit_type "size_t"
	  param inout name "fpsRangesTable" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : makeFPSTable
//
//DESCRIPTION: make a table of fps ranges
//
//PARAMETERS :
//
//==========================================================================

//===========================================================================
//FUNCTION   : makeFPSTable
//
//DESCRIPTION: make a table of fps ranges
//
//PARAMETERS :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249399 "makeOverridesList"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param inout name "overridesTable" type class_ref 3664695 // cam_scene_mode_overrides_t
	  param in name "size" explicit_type "size_t"
	  param in name "max_size" explicit_type "size_t"
	  param inout name "overridesList" explicit_type "uint8_t"
	  param inout name "supported_indexes" explicit_type "uint8_t"
	  param in name "camera_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : makeOverridesList
//
//DESCRIPTION: make a list of scene mode overrides
//
//PARAMETERS :
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : makeOverridesList
//
//DESCRIPTION: make a list of scene mode overrides
//
//PARAMETERS :
//
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249527 "filterJpegSizes"
	class_operation preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 6
	  param inout name "jpegSizes" explicit_type "int32_t"
	  param inout name "processedSizes" explicit_type "int32_t"
	  param in name "processedSizesCnt" explicit_type "size_t"
	  param in name "maxCount" explicit_type "size_t"
	  param in name "active_array_size" type class_ref 3659959 // cam_rect_t
	  param in name "downscale_factor" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : filterJpegSizes
//
//DESCRIPTION: Returns the supported jpeg sizes based on the max dimension that
//             could be downscaled to
//
//PARAMETERS :
//
//RETURN     : length of jpegSizes array
//==========================================================================

//===========================================================================
//FUNCTION   : filterJpegSizes
//
//DESCRIPTION: Returns the supported jpeg sizes based on the max dimension that
//             could be downscaled to
//
//PARAMETERS :
//
//RETURN     : length of jpegSizes array
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249655 "convertToRegions"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "rect" type class_ref 3659959 // cam_rect_t
	  param inout name "region" explicit_type "int32_t"
	  param in name "weight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : convertToRegions
//
//DESCRIPTION: helper method to convert from cam_rect_t into int32_t array
//
//PARAMETERS :
//  @rect   : cam_rect_t struct to convert
//  @region : int32_t destination array
//  @weight : if we are converting from cam_area_t, weight is valid
//            else weight = -1
//
//==========================================================================

//===========================================================================
//FUNCTION   : convertToRegions
//
//DESCRIPTION: helper method to convert from cam_rect_t into int32_t array
//
//PARAMETERS :
//  @rect   : cam_rect_t struct to convert
//  @region : int32_t destination array
//  @weight : if we are converting from cam_area_t, weight is valid
//            else weight = -1
//
//==========================================================================

//===========================================================================
//FUNCTION   : convertToRegions
//
//DESCRIPTION: helper method to convert from cam_rect_t into int32_t array
//
//PARAMETERS :
//  @rect   : cam_rect_t struct to convert
//  @region : int32_t destination array
//  @weight : if we are converting from cam_area_t, weight is valid
//            else weight = -1
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249783 "convertFromRegions"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param inout name "roi" type class_ref 3655351 // cam_area_t
	  param in name "settings" explicit_type "camera_metadata_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : convertFromRegions
//
//DESCRIPTION: helper method to convert from array to cam_rect_t
//
//PARAMETERS :
//  @rect   : cam_rect_t struct to convert
//  @region : int32_t destination array
//  @weight : if we are converting from cam_area_t, weight is valid
//            else weight = -1
//
//==========================================================================

//===========================================================================
//FUNCTION   : convertFromRegions
//
//DESCRIPTION: helper method to convert from array to cam_rect_t
//
//PARAMETERS :
//  @rect   : cam_rect_t struct to convert
//  @region : int32_t destination array
//  @weight : if we are converting from cam_area_t, weight is valid
//            else weight = -1
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44249911 "resetIfNeededROI"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param inout name "roi" type class_ref 3655351 // cam_area_t
	  param in name "scalerCropRegion" type class_ref 3662775 // cam_crop_region_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : resetIfNeededROI
//
//DESCRIPTION: helper method to reset the roi if it is greater than scaler
//             crop region
//
//PARAMETERS :
//  @roi       : cam_area_t struct to resize
//  @scalerCropRegion : cam_crop_region_t region to compare against
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : resetIfNeededROI
//
//DESCRIPTION: helper method to reset the roi if it is greater than scaler
//             crop region
//
//PARAMETERS :
//  @roi       : cam_area_t struct to resize
//  @scalerCropRegion : cam_crop_region_t region to compare against
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : resetIfNeededROI
//
//DESCRIPTION: helper method to reset the roi if it is greater than scaler
//             crop region
//
//PARAMETERS :
//  @roi       : cam_area_t struct to resize
//  @scalerCropRegion : cam_crop_region_t region to compare against
//
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250039 "convertLandmarks"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "face" type class_ref 3664823 // cam_face_detection_info_t
	  param inout name "landmarks" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : convertLandmarks
//
//DESCRIPTION: helper method to extract the landmarks from face detection info
//
//PARAMETERS :
//  @face   : cam_rect_t struct to convert
//  @landmarks : int32_t destination array
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : convertLandmarks
//
//DESCRIPTION: helper method to extract the landmarks from face detection info
//
//PARAMETERS :
//  @face   : cam_rect_t struct to convert
//  @landmarks : int32_t destination array
//
//
//==========================================================================

//===========================================================================
//FUNCTION   : convertLandmarks
//
//DESCRIPTION: helper method to extract the landmarks from face detection info
//
//PARAMETERS :
//  @face   : cam_rect_t struct to convert
//  @landmarks : int32_t destination array
//
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250167 "getScalarFormat"
	class_operation preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "format" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPreviewHalPixelFormat
//
//DESCRIPTION: convert the format to type recognized by framework
//
//PARAMETERS : format : the format from backend
//
//* RETURN    : format recognized by framework
//
//==========================================================================

//===========================================================================
//FUNCTION   : getPreviewHalPixelFormat
//
//DESCRIPTION: convert the format to type recognized by framework
//
//PARAMETERS : format : the format from backend
//
//* RETURN    : format recognized by framework
//
//==========================================================================

//===========================================================================
//FUNCTION   : getPreviewHalPixelFormat
//
//DESCRIPTION: convert the format to type recognized by framework
//
//PARAMETERS : format : the format from backend
//
//* RETURN    : format recognized by framework
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250295 "getSensorSensitivity"
	class_operation preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "iso_mode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSensorSensitivity
//
//DESCRIPTION: convert iso_mode to an integer value
//
//PARAMETERS : iso_mode : the iso_mode supported by sensor
//
//* RETURN    : sensitivity supported by sensor
//
//==========================================================================

//===========================================================================
//FUNCTION   : getSensorSensitivity
//
//DESCRIPTION: convert iso_mode to an integer value
//
//PARAMETERS : iso_mode : the iso_mode supported by sensor
//
//* RETURN    : sensitivity supported by sensor
//
//==========================================================================

//===========================================================================
//FUNCTION   : getSensorSensitivity
//
//DESCRIPTION: convert iso_mode to an integer value
//
//PARAMETERS : iso_mode : the iso_mode supported by sensor
//
//* RETURN    : sensitivity supported by sensor
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250423 "computeNoiseModelEntryS"
	preserve_cpp_body_indent public explicit_return_type "double"
	nparams 1
	  param in name "sens" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : computeNoiseModelEntryS
//
//DESCRIPTION: function to map a given sensitivity to the S noise
//             model parameters in the DNG noise model.
//
//PARAMETERS : sens : the sensor sensitivity
//
//* RETURN    : S (sensor amplification) noise
//
//==========================================================================

//===========================================================================
//FUNCTION   : computeNoiseModelEntryS
//
//DESCRIPTION: function to map a given sensitivity to the S noise
//             model parameters in the DNG noise model.
//
//PARAMETERS : sens : the sensor sensitivity
//
//* RETURN    : S (sensor amplification) noise
//
//==========================================================================

//===========================================================================
//FUNCTION   : computeNoiseModelEntryS
//
//DESCRIPTION: function to map a given sensitivity to the S noise
//             model parameters in the DNG noise model.
//
//PARAMETERS : sens : the sensor sensitivity
//
//* RETURN    : S (sensor amplification) noise
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250551 "computeNoiseModelEntryO"
	preserve_cpp_body_indent public explicit_return_type "double"
	nparams 1
	  param in name "sens" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : computeNoiseModelEntryO
//
//DESCRIPTION: function to map a given sensitivity to the O noise
//             model parameters in the DNG noise model.
//
//PARAMETERS : sens : the sensor sensitivity
//
//* RETURN    : O (sensor readout) noise
//
//==========================================================================

//===========================================================================
//FUNCTION   : computeNoiseModelEntryO
//
//DESCRIPTION: function to map a given sensitivity to the O noise
//             model parameters in the DNG noise model.
//
//PARAMETERS : sens : the sensor sensitivity
//
//* RETURN    : O (sensor readout) noise
//
//==========================================================================

//===========================================================================
//FUNCTION   : computeNoiseModelEntryO
//
//DESCRIPTION: function to map a given sensitivity to the O noise
//             model parameters in the DNG noise model.
//
//PARAMETERS : sens : the sensor sensitivity
//
//* RETURN    : O (sensor readout) noise
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250679 "captureResultCb"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 5
	  param inout name "metadata" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "buffer" explicit_type "camera3_stream_buffer_t"
	  param in name "frame_number" explicit_type "uint32_t"
	  param in name "isInputBuffer" explicit_type "bool"
	  param inout name "userdata" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : captureResultCb
//
//DESCRIPTION: Callback handler for all channels (streams, as well as metadata)
//
//PARAMETERS :
//  @frame  : frame information from mm-camera-interface
//  @buffer : actual gralloc buffer to be returned to frameworks. NULL if metadata.
//  @userdata: userdata
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : captureResultCb
//
//DESCRIPTION: Callback handler for all channels (streams, as well as metadata)
//
//PARAMETERS :
//  @frame  : frame information from mm-camera-interface
//  @buffer : actual gralloc buffer to be returned to frameworks. NULL if metadata.
//  @userdata: userdata
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250807 "initialize"
	public explicit_return_type "int"
	nparams 1
	  param in name "callback_ops" explicit_type "camera3_callback_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44250935 "configureStreams"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "streamList" explicit_type "camera3_stream_configuration_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureStreams
//
//DESCRIPTION: Reset HAL camera device processing pipeline and set up new input
//             and output streams.
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : configureStreams
//
//DESCRIPTION: Reset HAL camera device processing pipeline and set up new input
//             and output streams.
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : configureStreams
//
//DESCRIPTION: Reset HAL camera device processing pipeline and set up new input
//             and output streams.
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251063 "configureStreamsPerfLocked"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "streamList" explicit_type "camera3_stream_configuration_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : configureStreamsPerfLocked
//
//DESCRIPTION: configureStreams while perfLock is held.
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : configureStreamsPerfLocked
//
//DESCRIPTION: configureStreams while perfLock is held.
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251191 "processCaptureRequest"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param inout name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : processCaptureRequest
//
//DESCRIPTION: process a capture request from camera service
//
//PARAMETERS :
//  @request : request from framework to process
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : processCaptureRequest
//
//DESCRIPTION: process a capture request from camera service
//
//PARAMETERS :
//  @request : request from framework to process
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : processCaptureRequest
//
//DESCRIPTION: process a capture request from camera service
//
//PARAMETERS :
//  @request : request from framework to process
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251319 "dump"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : dump
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251447 "flush"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

//===========================================================================
//FUNCTION   : flush
//
//DESCRIPTION:
//
//PARAMETERS :
//
//
//RETURN     :
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251575 "setFrameParameters"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 4
	  param inout name "request" explicit_type "camera3_capture_request_t"
	  param in name "streamID" type class_ref 3664951 // cam_stream_ID_t
	  param in name "blob_request" explicit_type "int"
	  param in name "snapshotStreamId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setFrameParameters
//
//DESCRIPTION: set parameters per frame as requested in the metadata from
//             framework
//
//PARAMETERS :
//  @request   : request that needs to be serviced
//  @streamID : Stream ID of all the requested streams
//  @blob_request: Whether this request is a blob request or not
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : setFrameParameters
//
//DESCRIPTION: set parameters per frame as requested in the metadata from
//             framework
//
//PARAMETERS :
//  @request   : request that needs to be serviced
//  @streamID : Stream ID of all the requested streams
//  @blob_request: Whether this request is a blob request or not
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : setFrameParameters
//
//DESCRIPTION: set parameters per frame as requested in the metadata from
//             framework
//
//PARAMETERS :
//  @request   : request that needs to be serviced
//  @streamID : Stream ID of all the requested streams
//  @blob_request: Whether this request is a blob request or not
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251703 "setReprocParameters"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param inout name "request" explicit_type "camera3_capture_request_t"
	  param inout name "reprocParam" type class_ref 3649207 // metadata_buffer_t
	  param in name "snapshotStreamId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setReprocParameters
//
//DESCRIPTION: Translate frameworks metadata to HAL metadata structure, and
//             return it.
//
//PARAMETERS :
//  @request   : request that needs to be serviced
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : setReprocParameters
//
//DESCRIPTION: Translate frameworks metadata to HAL metadata structure, and
//             return it.
//
//PARAMETERS :
//  @request   : request that needs to be serviced
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : setReprocParameters
//
//DESCRIPTION: Translate frameworks metadata to HAL metadata structure, and
//             return it.
//
//PARAMETERS :
//  @request   : request that needs to be serviced
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251831 "translateToHalMetadata"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 3
	  param in name "request" explicit_type "camera3_capture_request_t"
	  param inout name "hal_metadata" type class_ref 3649207 // metadata_buffer_t
	  param in name "snapshotStreamId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : translateToHalMetadata
//
//DESCRIPTION: read from the camera_metadata_t and change to parm_type_t
//
//
//PARAMETERS :
//  @request  : request sent from framework
//
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : translateToHalMetadata
//
//DESCRIPTION: read from the camera_metadata_t and change to parm_type_t
//
//
//PARAMETERS :
//  @request  : request sent from framework
//
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : translateToHalMetadata
//
//DESCRIPTION: read from the camera_metadata_t and change to parm_type_t
//
//
//PARAMETERS :
//  @request  : request sent from framework
//
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44251959 "translateCbUrgentMetadataToResultMetadata"
	preserve_cpp_body_indent public explicit_return_type "camera_metadata_t"
	nparams 1
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : translateCbUrgentMetadataToResultMetadata
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//
//RETURN     : camera_metadata_t*
//             metadata in a format specified by fwk
//==========================================================================

//===========================================================================
//FUNCTION   : translateCbUrgentMetadataToResultMetadata
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//
//RETURN     : camera_metadata_t*
//             metadata in a format specified by fwk
//==========================================================================

//===========================================================================
//FUNCTION   : translateCbUrgentMetadataToResultMetadata
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//
//RETURN     : camera_metadata_t*
//             metadata in a format specified by fwk
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252087 "translateFromHalMetadata"
	preserve_cpp_body_indent public explicit_return_type "camera_metadata_t"
	nparams 9
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	  param in name "timestamp" type class_ref 3650487 // nsecs_t
	  param in name "request_id" explicit_type "int32_t"
	  param in name "jpegMetadata" explicit_type "CameraMetadata"
	  param in name "pipeline_depth" explicit_type "uint8_t"
	  param in name "capture_intent" explicit_type "uint8_t"
	  param in name "hybrid_ae_enable" explicit_type "uint8_t"
	  param in name "pprocDone" explicit_type "bool"
	  param in name "dynamic_blklvl" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//  @timestamp: metadata buffer timestamp
//  @request_id: request id
//  @hybrid_ae_enable: whether hybrid ae is enabled
//  @jpegMetadata: additional jpeg metadata
//  @pprocDone: whether internal offline postprocsesing is done
//
//RETURN     : camera_metadata_t*
//             metadata in a format specified by fwk
//==========================================================================

//===========================================================================
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//  @timestamp: metadata buffer timestamp
//  @request_id: request id
//  @hybrid_ae_enable: whether hybrid ae is enabled
//  @jpegMetadata: additional jpeg metadata
//  @pprocDone: whether internal offline postprocsesing is done
//
//RETURN     : camera_metadata_t*
//             metadata in a format specified by fwk
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252215 "saveRequestSettings"
	preserve_cpp_body_indent public explicit_return_type "camera_metadata_t"
	nparams 2
	  param in name "jpegMetadata" explicit_type "CameraMetadata"
	  param inout name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : saveRequestSettings
//
//DESCRIPTION: Add any settings that might have changed to the request settings
//             and save the settings to be applied on the frame
//
//PARAMETERS :
//  @jpegMetadata : the extracted and/or modified jpeg metadata
//  @request      : request with initial settings
//
//RETURN     :
//camera_metadata_t* : pointer to the saved request settings
//==========================================================================

//===========================================================================
//FUNCTION   : saveRequestSettings
//
//DESCRIPTION: Add any settings that might have changed to the request settings
//             and save the settings to be applied on the frame
//
//PARAMETERS :
//  @jpegMetadata : the extracted and/or modified jpeg metadata
//  @request      : request with initial settings
//
//RETURN     :
//camera_metadata_t* : pointer to the saved request settings
//==========================================================================

${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252343 "initParameters"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : initParameters
//
//DESCRIPTION: initialize camera parameters
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initParameters
//
//DESCRIPTION: initialize camera parameters
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : initParameters
//
//DESCRIPTION: initialize camera parameters
//
//PARAMETERS :
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252471 "deinitParameters"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deinitParameters
//
//DESCRIPTION: de-initialize camera parameters
//
//PARAMETERS :
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : deinitParameters
//
//DESCRIPTION: de-initialize camera parameters
//
//PARAMETERS :
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : deinitParameters
//
//DESCRIPTION: de-initialize camera parameters
//
//PARAMETERS :
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252599 "addOfflineReprocChannel"
	preserve_cpp_body_indent public return_type class_ref 3663287 // QCamera3ReprocessChannel
	nparams 2
	  param in name "config" type class_ref 3661495 // reprocess_config_t
	  param inout name "inputChHandle" type class_ref 3661239 // QCamera3ProcessingChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addOfflineReprocChannel
//
//DESCRIPTION: add a reprocess channel that will do reprocess on frames
//             coming from input channel
//
//PARAMETERS :
//  @config  : reprocess configuration
//  @inputChHandle : pointer to the input (source) channel
//
//
//RETURN     : Ptr to the newly created channel obj. NULL if failed.
//==========================================================================

//===========================================================================
//FUNCTION   : addOfflineReprocChannel
//
//DESCRIPTION: add a reprocess channel that will do reprocess on frames
//             coming from input channel
//
//PARAMETERS :
//  @config  : reprocess configuration
//  @inputChHandle : pointer to the input (source) channel
//
//
//RETURN     : Ptr to the newly created channel obj. NULL if failed.
//==========================================================================

${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252727 "needRotationReprocess"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needRotationReprocess
//
//DESCRIPTION: if rotation needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needRotationReprocess
//
//DESCRIPTION: if rotation needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needRotationReprocess
//
//DESCRIPTION: if rotation needs to be done by reprocess in pp
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252855 "needReprocess"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "postprocess_mask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needReprocess
//
//DESCRIPTION: if reprocess in needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needReprocess
//
//DESCRIPTION: if reprocess in needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needReprocess
//
//DESCRIPTION: if reprocess in needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44252983 "needJpegRotation"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : needJpegRotation
//
//DESCRIPTION: if rotation from jpeg is needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needJpegRotation
//
//DESCRIPTION: if rotation from jpeg is needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

//===========================================================================
//FUNCTION   : needJpegRotation
//
//DESCRIPTION: if rotation from jpeg is needed
//
//PARAMETERS : none
//
//RETURN     : true: needed
//             false: no need
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253111 "getWaveletDenoiseProcessPlate"
	preserve_cpp_body_indent public return_type class_ref 3654327 // cam_denoise_process_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getWaveletDenoiseProcessPlate
//
//DESCRIPTION: query wavelet denoise process plate
//
//PARAMETERS : None
//
//RETURN     : WNR prcocess plate vlaue
//==========================================================================

//===========================================================================
//FUNCTION   : getWaveletDenoiseProcessPlate
//
//DESCRIPTION: query wavelet denoise process plate
//
//PARAMETERS : None
//
//RETURN     : WNR prcocess plate value
//==========================================================================

//===========================================================================
//FUNCTION   : getWaveletDenoiseProcessPlate
//
//DESCRIPTION: query wavelet denoise process plate
//
//PARAMETERS : None
//
//RETURN     : WNR prcocess plate value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253239 "getTemporalDenoiseProcessPlate"
	preserve_cpp_body_indent public return_type class_ref 3654327 // cam_denoise_process_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getTemporalDenoiseProcessPlate
//
//DESCRIPTION: query temporal denoise process plate
//
//PARAMETERS : None
//
//RETURN     : TNR prcocess plate value
//==========================================================================

//===========================================================================
//FUNCTION   : getTemporalDenoiseProcessPlate
//
//DESCRIPTION: query temporal denoise process plate
//
//PARAMETERS : None
//
//RETURN     : TNR prcocess plate value
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253367 "captureResultCb"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "metadata_buf" type class_ref 3646519 // mm_camera_super_buf_t
	  param inout name "buffer" explicit_type "camera3_stream_buffer_t"
	  param in name "frame_number" explicit_type "uint32_t"
	  param in name "isInputBuffer" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : captureResultCb
//
//DESCRIPTION: Callback handler for all capture result
//             (streams, as well as metadata)
//
//PARAMETERS :
//  @metadata : metadata information
//  @buffer   : actual gralloc buffer to be returned to frameworks.
//              NULL if metadata.
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : captureResultCb
//
//DESCRIPTION: Callback handler for all capture result
//             (streams, as well as metadata)
//
//PARAMETERS :
//  @metadata : metadata information
//  @buffer   : actual gralloc buffer to be returned to frameworks.
//              NULL if metadata.
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253495 "calcMaxJpegDim"
	preserve_cpp_body_indent public return_type class_ref 3646135 // cam_dimension_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : calcMaxJpegDim
//
//DESCRIPTION: Calculates maximum jpeg dimension supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : max_jpeg_dim
//==========================================================================

//===========================================================================
//FUNCTION   : calcMaxJpegDim
//
//DESCRIPTION: Calculates maximum jpeg dimension supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : max_jpeg_dim
//==========================================================================

//===========================================================================
//FUNCTION   : calcMaxJpegDim
//
//DESCRIPTION: Calculates maximum jpeg dimension supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : max_jpeg_dim
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253623 "needOnlineRotation"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253751 "getJpegQuality"
	public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44253879 "getExifData"
	public return_type class_ref 3663031 // QCamera3Exif
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254007 "get3AExifParams"
	preserve_cpp_body_indent public return_type class_ref 3650359 // mm_jpeg_exif_params_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get3AExifParams
//
//DESCRIPTION:
//
//PARAMETERS : none
//
//
//RETURN     : mm_jpeg_exif_params_t
//
//==========================================================================

//===========================================================================
//FUNCTION   : get3AExifParams
//
//DESCRIPTION:
//
//PARAMETERS : none
//
//
//RETURN     : mm_jpeg_exif_params_t
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254135 "getMobicatMask"
	preserve_cpp_body_indent public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMobicatMask
//
//DESCRIPTION: returns mobicat mask
//
//PARAMETERS : none
//
//RETURN     : mobicat mask
//
//==========================================================================

//===========================================================================
//FUNCTION   : getMobicatMask
//
//DESCRIPTION: returns mobicat mask
//
//PARAMETERS : none
//
//RETURN     : mobicat mask
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254263 "getFlashInfo"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "hasFlash" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254391 "getEepromVersionInfo"
	preserve_cpp_body_indent public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getEepromVersionInfo
//
//DESCRIPTION: Retrieve version info of the sensor EEPROM data
//
//PARAMETERS : None
//
//RETURN     : string describing EEPROM version
//             \"\\0\" if no such info available
//==========================================================================

//===========================================================================
//FUNCTION   : getEepromVersionInfo
//
//DESCRIPTION: Retrieve version info of the sensor EEPROM data
//
//PARAMETERS : None
//
//RETURN     : string describing EEPROM version
//             \"\\0\" if no such info available
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254519 "getLdafCalib"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getLdafCalib
//
//DESCRIPTION: Retrieve Laser AF calibration data
//
//PARAMETERS : None
//
//RETURN     : Two uint32_t describing laser AF calibration data
//             NULL if none is available.
//==========================================================================

//===========================================================================
//FUNCTION   : getLdafCalib
//
//DESCRIPTION: Retrieve Laser AF calibration data
//
//PARAMETERS : None
//
//RETURN     : Two uint32_t describing laser AF calibration data
//             NULL if none is available.
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254647 "get3AVersion"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "sw_version" type class_ref 3665079 // cam_q3a_version_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==========================================================================
//FUNCTION   : get3Aversion
//
//DESCRIPTION: get the Q3A S/W version
//
//PARAMETERS :
// @sw_version: Reference of Q3A structure which will hold version info upon
//              return
//
//RETURN     : None
//
//==========================================================================

//==========================================================================
//FUNCTION   : get3Aversion
//
//DESCRIPTION: get the Q3A S/W version
//
//PARAMETERS :
// @sw_version: Reference of Q3A structure which will hold version info upon
//              return
//
//RETURN     : None
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3665207 "QCameraMap"
	visibility package stereotype "struct"
	nformals 2
	formal name "fwkType" type "typename" explicit_default_value ""
	  explicit_extends ""
	formal name "halType" type "typename" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13327415 "fwk_name"
	  public explicit_type "fwkType"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13327543 "hal_name"
	  public explicit_type "halType"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3665335 "QCameraPropMap"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13327671 "desc"
	  const_attribute public explicit_type "char"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * const ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 7071031 // val (<directional composition>)
	  relation 7071031 *-->
	    a role_name "val" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7071031 // val (<directional composition>)
	    b parent class_ref 3656887 // cam_cds_mode_type_t
	end
      end

      operation 44254775 "getBlackLevelRegion"
	public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44254903 "sendDynamicBlackLevel"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "blacklevel" explicit_type "float"
	  param in name "frame_number" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}[4]${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}[4], ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255031 "sendDynamicBlackLevelWithLock"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "blacklevel" explicit_type "float"
	  param in name "frame_number" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}[4]${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}[4], ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255159 "openCamera"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : openCamera
//
//DESCRIPTION: open camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255287 "closeCamera"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : closeCamera
//
//DESCRIPTION: close camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : closeCamera
//
//DESCRIPTION: close camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : closeCamera
//
//DESCRIPTION: close camera
//
//PARAMETERS : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255415 "calcMaxJpegSize"
	class_operation preserve_cpp_body_indent private explicit_return_type "size_t"
	nparams 1
	  param in name "camera_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : calcMaxJpegSize
//
//DESCRIPTION: Calculates maximum jpeg size supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : max_jpeg_size
//==========================================================================

//===========================================================================
//FUNCTION   : calcMaxJpegSize
//
//DESCRIPTION: Calculates maximum jpeg size supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : max_jpeg_size
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255543 "getMaxRawSize"
	preserve_cpp_body_indent private return_type class_ref 3646135 // cam_dimension_t
	nparams 1
	  param in name "camera_id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMaxRawSize
//
//DESCRIPTION: Fetches maximum raw size supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : Largest supported Raw Dimension
//==========================================================================

//===========================================================================
//FUNCTION   : getMaxRawSize
//
//DESCRIPTION: Fetches maximum raw size supported by the cameraId
//
//PARAMETERS :
//
//RETURN     : Largest supported Raw Dimension
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255671 "addStreamConfig"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param inout name "available_stream_configs" explicit_type "Vector<int32_t>"
	  param in name "scalar_format" explicit_type "int32_t"
	  param in name "dim" type class_ref 3646135 // cam_dimension_t
	  param in name "config_type" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : addStreamConfig
//
//DESCRIPTION: adds the stream configuration to the array
//
//PARAMETERS :
//@available_stream_configs : pointer to stream configuration array
//@scalar_format            : scalar format
//@dim                      : configuration dimension
//@config_type              : input or output configuration type
//
//RETURN     : NONE
//==========================================================================

//===========================================================================
//FUNCTION   : addStreamConfig
//
//DESCRIPTION: adds the stream configuration to the array
//
//PARAMETERS :
//@available_stream_configs : pointer to stream configuration array
//@scalar_format            : scalar format
//@dim                      : configuration dimension
//@config_type              : input or output configuration type
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255799 "validateCaptureRequest"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : validateCaptureRequest
//
//DESCRIPTION: validate a capture request from camera service
//
//PARAMETERS :
//  @request : request from framework to process
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : validateCaptureRequest
//
//DESCRIPTION: validate a capture request from camera service
//
//PARAMETERS :
//  @request : request from framework to process
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : validateCaptureRequest
//
//DESCRIPTION: validate a capture request from camera service
//
//PARAMETERS :
//  @request : request from framework to process
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44255927 "validateStreamDimensions"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "streamList" explicit_type "camera3_stream_configuration_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : validateStreamDimensions
//
//DESCRIPTION: Check if the configuration requested are those advertised
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : validateStreamDimensions
//
//DESCRIPTION: Check if the configuration requested are those advertised
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : validateStreamDimensions
//
//DESCRIPTION: Check if the configuration requested are those advertised
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256055 "validateStreamRotations"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param inout name "streamList" explicit_type "camera3_stream_configuration_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : validateStreamRotations
//
//DESCRIPTION: Check if the rotations requested are supported
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     : NO_ERROR on success
//             -EINVAL on failure
//
//==========================================================================

//===========================================================================
//FUNCTION   : validateStreamRotations
//
//DESCRIPTION: Check if the rotations requested are supported
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     : NO_ERROR on success
//             -EINVAL on failure
//
//==========================================================================

//===========================================================================
//FUNCTION   : validateStreamRotations
//
//DESCRIPTION: Check if the rotations requested are supported
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     : NO_ERROR on success
//             -EINVAL on failure
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256183 "deriveMinFrameDuration"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : deriveMinFrameDuration
//
//DESCRIPTION: derive mininum processed, jpeg, and raw frame durations based
//             on currently configured streams.
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//
//==========================================================================

//===========================================================================
//FUNCTION   : deriveMinFrameDuration
//
//DESCRIPTION: derive mininum processed, jpeg, and raw frame durations based
//             on currently configured streams.
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//
//==========================================================================

//===========================================================================
//FUNCTION   : deriveMinFrameDuration
//
//DESCRIPTION: derive mininum processed, jpeg, and raw frame durations based
//             on currently configured streams.
//
//PARAMETERS : NONE
//
//RETURN     : NONE
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256311 "handlePendingReprocResults"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "frame_number" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handlePendingReprocResults
//
//DESCRIPTION: check and notify on any pending reprocess results
//
//PARAMETERS :
//  @frame_number   : Pending request frame number
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : handlePendingReprocResults
//
//DESCRIPTION: check and notify on any pending reprocess results
//
//PARAMETERS :
//  @frame_number   : Pending request frame number
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : handlePendingReprocResults
//
//DESCRIPTION: check and notify on any pending reprocess results
//
//PARAMETERS :
//  @frame_number   : Pending request frame number
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256439 "getMinFrameDuration"
	preserve_cpp_body_indent private explicit_return_type "int64_t"
	nparams 1
	  param in name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMinFrameDuration
//
//DESCRIPTION: get minimum frame draution based on the current maximum frame durations
//             and current request configuration.
//
//PARAMETERS : @request: requset sent by the frameworks
//
//RETURN     : min farme duration for a particular request
//
//==========================================================================

//===========================================================================
//FUNCTION   : getMinFrameDuration
//
//DESCRIPTION: get minimum frame draution based on the current maximum frame durations
//             and current request configuration.
//
//PARAMETERS : @request: requset sent by the frameworks
//
//RETURN     : min farme duration for a particular request
//
//==========================================================================

//===========================================================================
//FUNCTION   : getMinFrameDuration
//
//DESCRIPTION: get minimum frame draution based on the current maximum frame durations
//             and current request configuration.
//
//PARAMETERS : @request: requset sent by the frameworks
//
//RETURN     : min farme duration for a particular request
//
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256567 "handleMetadataWithLock"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "metadata_buf" type class_ref 3646519 // mm_camera_super_buf_t
	  param in name "free_and_bufdone_meta_buf" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handleMetadataWithLock
//
//DESCRIPTION: Handles metadata buffer callback with mMutex lock held.
//
//PARAMETERS : @metadata_buf: metadata buffer
//             @free_and_bufdone_meta_buf: Buf done on the meta buf and free
//                the meta buf in this method
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : handleMetadataWithLock
//
//DESCRIPTION: Handles metadata buffer callback with mMutex lock held.
//
//PARAMETERS : @metadata_buf: metadata buffer
//             @free_and_bufdone_meta_buf: Buf done on the meta buf and free
//                the meta buf in this method
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256695 "handleBatchMetadata"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "metadata_buf" type class_ref 3646519 // mm_camera_super_buf_t
	  param in name "free_and_bufdone_meta_buf" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handleBatchMetadata
//
//DESCRIPTION: Handles metadata buffer callback in batch mode
//
//PARAMETERS : @metadata_buf: metadata buffer
//             @free_and_bufdone_meta_buf: Buf done on the meta buf and free
//                the meta buf in this method
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : handleBatchMetadata
//
//DESCRIPTION: Handles metadata buffer callback in batch mode
//
//PARAMETERS : @metadata_buf: metadata buffer
//             @free_and_bufdone_meta_buf: Buf done on the meta buf and free
//                the meta buf in this method
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256823 "handleBufferWithLock"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "camera3_stream_buffer_t"
	  param in name "frame_number" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handleBufferWithLock
//
//DESCRIPTION: Handles image buffer callback with mMutex lock held.
//
//PARAMETERS : @buffer: image buffer for the callback
//             @frame_number: frame number of the image buffer
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : handleBufferWithLock
//
//DESCRIPTION: Handles image buffer callback with mMutex lock held.
//
//PARAMETERS : @buffer: image buffer for the callback
//             @frame_number: frame number of the image buffer
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : handleBufferWithLock
//
//DESCRIPTION: Handles image buffer callback with mMutex lock held.
//
//PARAMETERS : @buffer: image buffer for the callback
//             @frame_number: frame number of the image buffer
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44256951 "handleInputBufferWithLock"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "frame_number" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : handleInputBufferWithLock
//
//DESCRIPTION: Handles input buffer and shutter callback with mMutex lock held.
//
//PARAMETERS : @frame_number: frame number of the input buffer
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : handleInputBufferWithLock
//
//DESCRIPTION: Handles input buffer and shutter callback with mMutex lock held.
//
//PARAMETERS : @frame_number: frame number of the input buffer
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257079 "unblockRequestIfNecessary"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unblockRequestIfNecessary
//
//DESCRIPTION: Unblock capture_request if max_buffer hasn't been reached. Note
//             that mMutex is held when this function is called.
//
//PARAMETERS :
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : unblockRequestIfNecessary
//
//DESCRIPTION: Unblock capture_request if max_buffer hasn't been reached. Note
//             that mMutex is held when this function is called.
//
//PARAMETERS :
//
//RETURN     :
//
//==========================================================================

//===========================================================================
//FUNCTION   : unblockRequestIfNecessary
//
//DESCRIPTION: Unblock capture_request if max_buffer hasn't been reached. Note
//             that mMutex is held when this function is called.
//
//PARAMETERS :
//
//RETURN     :
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257207 "dumpMetadataToFile"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 5
	  param inout name "meta" type class_ref 3665463 // tuning_params_t
	  param inout name "dumpFrameCount" explicit_type "uint32_t"
	  param in name "enabled" explicit_type "bool"
	  param in name "type" explicit_type "char"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dumpMetadataToFile
//
//DESCRIPTION: Dumps tuning metadata to file system
//
//PARAMETERS :
//  @meta           : tuning metadata
//  @dumpFrameCount : current dump frame count
//  @enabled        : Enable mask
//
//==========================================================================

//===========================================================================
//FUNCTION   : dumpMetadataToFile
//
//DESCRIPTION: Dumps tuning metadata to file system
//
//PARAMETERS :
//  @meta           : tuning metadata
//  @dumpFrameCount : current dump frame count
//  @enabled        : Enable mask
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257335 "getLogLevel"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getLogLevel
//
//DESCRIPTION: Reads the log level property into a variable
//
//PARAMETERS :
//  None
//
//RETURN     :
//  None
//==========================================================================

//===========================================================================
//FUNCTION   : getLogLevel
//
//DESCRIPTION: Reads the log level property into a variable
//
//PARAMETERS :
//  None
//
//RETURN     :
//  None
//==========================================================================

//===========================================================================
//FUNCTION   : getLogLevel
//
//DESCRIPTION: Reads the log level property into a variable
//
//PARAMETERS :
//  None
//
//RETURN     :
//  None
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257463 "cleanAndSortStreamInfo"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cleanAndSortStreamInfo
//
//DESCRIPTION: helper method to clean up invalid streams in stream_info,
//             and sort them such that raw stream is at the end of the list
//             This is a workaround for camera daemon constraint.
//
//PARAMETERS : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : cleanAndSortStreamInfo
//
//DESCRIPTION: helper method to clean up invalid streams in stream_info,
//             and sort them such that raw stream is at the end of the list
//             This is a workaround for camera daemon constraint.
//
//PARAMETERS : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : cleanAndSortStreamInfo
//
//DESCRIPTION: helper method to clean up invalid streams in stream_info,
//             and sort them such that raw stream is at the end of the list
//             This is a workaround for camera daemon constraint.
//
//PARAMETERS : None
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257591 "extractJpegMetadata"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "jpegMetadata" explicit_type "CameraMetadata"
	  param in name "request" explicit_type "camera3_capture_request_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : extractJpegMetadata
//
//DESCRIPTION: helper method to extract Jpeg metadata from capture request.
//             JPEG metadata is cached in HAL, and return as part of capture
//             result when metadata is returned from camera daemon.
//
//PARAMETERS : @jpegMetadata: jpeg metadata to be extracted
//             @request:      capture request
//
//==========================================================================

//===========================================================================
//FUNCTION   : extractJpegMetadata
//
//DESCRIPTION: helper method to extract Jpeg metadata from capture request.
//             JPEG metadata is cached in HAL, and return as part of capture
//             result when metadata is returned from camera daemon.
//
//PARAMETERS : @jpegMetadata: jpeg metadata to be extracted
//             @request:      capture request
//
//==========================================================================

//===========================================================================
//FUNCTION   : extractJpegMetadata
//
//DESCRIPTION: helper method to extract Jpeg metadata from capture request.
//             JPEG metadata is cached in HAL, and return as part of capture
//             result when metadata is returned from camera daemon.
//
//PARAMETERS : @jpegMetadata: jpeg metadata to be extracted
//             @request:      capture request
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257719 "isSupportChannelNeeded"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param inout name "streamList" explicit_type "camera3_stream_configuration_t"
	  param in name "stream_config_info" type class_ref 3654583 // cam_stream_size_info_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==============================================================================
//FUNCTION   : isSupportChannelNeeded
//
//DESCRIPTION: Simple heuristic func to determine if support channels is needed
//
//PARAMETERS :
//  @stream_list : streams to be configured
//
//RETURN     : Boolen true/false decision
//
//==========================================================================

//==============================================================================
//FUNCTION   : isSupportChannelNeeded
//
//DESCRIPTION: Simple heuristic func to determine if support channels is needed
//
//PARAMETERS :
//  @stream_list : streams to be configured
//  @stream_config_info : the config info for streams to be configured
//
//RETURN     : Boolen true/false decision
//
//==========================================================================

//==============================================================================
//FUNCTION   : isSupportChannelNeeded
//
//DESCRIPTION: Simple heuristic func to determine if support channels is needed
//
//PARAMETERS :
//  @stream_list : streams to be configured
//  @stream_config_info : the config info for streams to be configured
//
//RETURN     : Boolen true/false decision
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257847 "setMobicat"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setMobicat
//
//DESCRIPTION: set Mobicat on/off.
//
//PARAMETERS :
//  @params  : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : setMobicat
//
//DESCRIPTION: set Mobicat on/off.
//
//PARAMETERS :
//  @params  : none
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44257975 "setHalFpsRange"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 2
	  param in name "settings" explicit_type "CameraMetadata"
	  param inout name "hal_metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setHalFpsRange
//
//DESCRIPTION: set FPS range parameter
//
//
//PARAMETERS :
//  @settings    : Metadata from framework
//  @hal_metadata: Metadata buffer
//
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

//===========================================================================
//FUNCTION   : setHalFpsRange
//
//DESCRIPTION: set FPS range parameter
//
//
//PARAMETERS :
//  @settings    : Metadata from framework
//  @hal_metadata: Metadata buffer
//
//
//RETURN     : success: NO_ERROR
//             failure:
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258103 "extractSceneMode"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 3
	  param in name "frame_settings" explicit_type "CameraMetadata"
	  param in name "metaMode" explicit_type "uint8_t"
	  param inout name "hal_metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : extractSceneMode
//
//DESCRIPTION: Extract scene mode from frameworks set metadata
//
//PARAMETERS :
//     @frame_settings: CameraMetadata reference
//     @metaMode: ANDROID_CONTORL_MODE
//     @hal_metadata: hal metadata structure
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : extractSceneMode
//
//DESCRIPTION: Extract scene mode from frameworks set metadata
//
//PARAMETERS :
//     @frame_settings: CameraMetadata reference
//     @metaMode: ANDROID_CONTORL_MODE
//     @hal_metadata: hal metadata structure
//
//RETURN     : None
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258231 "numOfSizesOnEncoder"
	private explicit_return_type "int32_t"
	nparams 2
	  param in name "streamList" explicit_type "camera3_stream_configuration_t"
	  param in name "maxViewfinderSize" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258359 "enablePowerHint"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==============================================================================
//FUNCTION   : enablePowerHint
//
//DESCRIPTION: enable single powerhint for preview and different video modes.
//
//PARAMETERS :
//
//RETURN     : NULL
//
//==========================================================================

//==============================================================================
//FUNCTION   : enablePowerHint
//
//DESCRIPTION: enable single powerhint for preview and different video modes.
//
//PARAMETERS :
//
//RETURN     : NULL
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258487 "disablePowerHint"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==============================================================================
//FUNCTION   : disablePowerHint
//
//DESCRIPTION: disable current powerhint.
//
//PARAMETERS :
//
//RETURN     : NULL
//
//==========================================================================

//==============================================================================
//FUNCTION   : disablePowerHint
//
//DESCRIPTION: disable current powerhint.
//
//PARAMETERS :
//
//RETURN     : NULL
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258615 "getSensorOutputSize"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "sensor_dim" type class_ref 3646135 // cam_dimension_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//==============================================================================
//FUNCTION   : getSensorOutputSize
//
//DESCRIPTION: Get sensor output size based on current stream configuratoin
//
//PARAMETERS :
//  @sensor_dim : sensor output dimension (output)
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

//==============================================================================
//FUNCTION   : getSensorOutputSize
//
//DESCRIPTION: Get sensor output size based on current stream configuratoin
//
//PARAMETERS :
//  @sensor_dim : sensor output dimension (output)
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258743 "dynamicUpdateMetaStreamInfo"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : dynamicUpdateMetaStreamInfo
//
//DESCRIPTION: This function:
//            (1) stops all the channels
//            (2) returns error on pending requests and buffers
//            (3) sends metastream_info in setparams
//            (4) starts all channels
//            This is useful when sensor has to be restarted to apply any
//            settings such as frame rate from a different sensor mode
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//
//==========================================================================

//===========================================================================
//FUNCTION   : dynamicUpdateMetaStreamInfo
//
//DESCRIPTION: This function:
//            (1) stops all the channels
//            (2) returns error on pending requests and buffers
//            (3) sends metastream_info in setparams
//            (4) starts all channels
//            This is useful when sensor has to be restarted to apply any
//            settings such as frame rate from a different sensor mode
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258871 "startAllChannels"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : startAllChannels
//
//DESCRIPTION: This function starts (equivalent to stream-on) all channels
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//
//==========================================================================

//===========================================================================
//FUNCTION   : startAllChannels
//
//DESCRIPTION: This function starts (equivalent to stream-on) all channels
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44258999 "stopAllChannels"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : stopAllChannels
//
//DESCRIPTION: This function stops (equivalent to stream-off) all channels
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//
//==========================================================================

//===========================================================================
//FUNCTION   : stopAllChannels
//
//DESCRIPTION: This function stops (equivalent to stream-off) all channels
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44259127 "notifyErrorForPendingRequests"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : notifyErrorForPendingRequests
//
//DESCRIPTION: This function sends error for all the pending requests/buffers
//
//PARAMETERS : None
//
//RETURN     : Error codes
//             NO_ERROR on success
//
//==========================================================================

//===========================================================================
//FUNCTION   : notifyErrorForPendingRequests
//
//DESCRIPTION: This function sends error for all the pending requests/buffers
//
//PARAMETERS : None
//
//RETURN     : Error codes
//             NO_ERROR on success
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44259255 "getReprocessibleOutputStreamId"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param inout name "id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getReprocessibleOutputStreamId
//
//DESCRIPTION: Get source output stream id for the input reprocess stream
//             based on size and format, which would be the largest
//             output stream if an input stream exists.
//
//PARAMETERS :
//  @id      : return the stream id if found
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getReprocessibleOutputStreamId
//
//DESCRIPTION: Get source output stream id for the input reprocess stream
//             based on size and format, which would be the largest
//             output stream if an input stream exists.
//
//PARAMETERS :
//  @id      : return the stream id if found
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44259383 "isOnEncoder"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 3
	  param in name "max_viewfinder_size" type class_ref 3646135 // cam_dimension_t
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44259511 "hdrPlusPerfLock"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "metadata_buf" type class_ref 3646519 // mm_camera_super_buf_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : hdrPlusPerfLock
//
//DESCRIPTION: perf lock for HDR+ using custom intent
//
//PARAMETERS : @metadata_buf: Metadata super_buf pointer
//
//RETURN     : None
//
//==========================================================================

//===========================================================================
//FUNCTION   : hdrPlusPerfLock
//
//DESCRIPTION: perf lock for HDR+ using custom intent
//
//PARAMETERS : @metadata_buf: Metadata super_buf pointer
//
//RETURN     : None
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44259639 "setBundleInfo"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : setBundleInfo
//
//DESCRIPTION: Set bundle info for all streams that are bundle.
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//==========================================================================

//===========================================================================
//FUNCTION   : setBundleInfo
//
//DESCRIPTION: Set bundle info for all streams that are bundle.
//
//PARAMETERS : None
//
//RETURN     : NO_ERROR on success
//             Error codes on failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13327799 "mCameraDevice"
	private explicit_type "camera3_device_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13327927 "mCameraId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7071159 // mCameraHandle (<unidirectional association>)
	relation 7071159 --->
	  a role_name "mCameraHandle" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071159 // mCameraHandle (<unidirectional association>)
	  b parent class_ref 3644727 // mm_camera_vtbl_t
      end

      attribute 13328055 "mCameraOpened"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13328183 "mCameraInitialized"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13328311 "mDefaultMetadata"
	private explicit_type "camera_metadata_t"
	multiplicity "[CAMERA3_TEMPLATE_COUNT]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13328439 "mCallbackOps"
	const_attribute private explicit_type "camera3_callback_ops_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7071287 // mMetadataChannel (<unidirectional association>)
	relation 7071287 --->
	  a role_name "mMetadataChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071287 // mMetadataChannel (<unidirectional association>)
	  b parent class_ref 3662007 // QCamera3MetadataChannel
      end

      classrelation 7071415 // mPictureChannel (<unidirectional association>)
	relation 7071415 --->
	  a role_name "mPictureChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071415 // mPictureChannel (<unidirectional association>)
	  b parent class_ref 3662903 // QCamera3PicChannel
      end

      classrelation 7071543 // mRawChannel (<unidirectional association>)
	relation 7071543 --->
	  a role_name "mRawChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071543 // mRawChannel (<unidirectional association>)
	  b parent class_ref 3662135 // QCamera3RawChannel
      end

      classrelation 7071671 // mSupportChannel (<unidirectional association>)
	relation 7071671 --->
	  a role_name "mSupportChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071671 // mSupportChannel (<unidirectional association>)
	  b parent class_ref 3663671 // QCamera3SupportChannel
      end

      classrelation 7071799 // mAnalysisChannel (<unidirectional association>)
	relation 7071799 --->
	  a role_name "mAnalysisChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071799 // mAnalysisChannel (<unidirectional association>)
	  b parent class_ref 3663671 // QCamera3SupportChannel
      end

      classrelation 7071927 // mRawDumpChannel (<unidirectional association>)
	relation 7071927 --->
	  a role_name "mRawDumpChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7071927 // mRawDumpChannel (<unidirectional association>)
	  b parent class_ref 3662263 // QCamera3RawDumpChannel
      end

      classrelation 7072055 // mDummyBatchChannel (<unidirectional association>)
	relation 7072055 --->
	  a role_name "mDummyBatchChannel" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072055 // mDummyBatchChannel (<unidirectional association>)
	  b parent class_ref 3661879 // QCamera3RegularChannel
      end

      classrelation 7072183 // m_perfLock (<directional composition>)
	relation 7072183 *-->
	  a role_name "m_perfLock" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072183 // m_perfLock (<directional composition>)
	  b parent class_ref 3649847 // QCameraPerfLock
      end

      attribute 13328567 "mChannelHandle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 44259767 "saveExifParams"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "metadata" type class_ref 3649207 // metadata_buffer_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : saveExifParams
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//
//RETURN     : none
//
//==========================================================================

//===========================================================================
//FUNCTION   : saveExifParams
//
//DESCRIPTION:
//
//PARAMETERS :
//  @metadata : metadata information from callback
//
//RETURN     : none
//
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7072311 // mExifParams (<directional composition>)
	relation 7072311 *-->
	  a role_name "mExifParams" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072311 // mExifParams (<directional composition>)
	  b parent class_ref 3650359 // mm_jpeg_exif_params_t
      end

      attribute 13328695 "mFirstRequest"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "First request yet to be processed after configureStreams
"
      end

      attribute 13328823 "mFirstConfiguration"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13328951 "mFlush"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13329079 "mEnableRawDump"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7072439 // mParamHeap (<unidirectional association>)
	relation 7072439 --->
	  a role_name "mParamHeap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072439 // mParamHeap (<unidirectional association>)
	  b parent class_ref 3661111 // QCamera3HeapMemory
      end

      classrelation 7072567 // mParameters (<unidirectional association>)
	relation 7072567 --->
	  a role_name "mParameters" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072567 // mParameters (<unidirectional association>)
	  b parent class_ref 3649207 // metadata_buffer_t
      end

      classrelation 7072695 // mPrevParameters (<unidirectional association>)
	relation 7072695 --->
	  a role_name "mPrevParameters" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072695 // mPrevParameters (<unidirectional association>)
	  b parent class_ref 3649207 // metadata_buffer_t
      end

      attribute 13329207 "mCurJpegMeta"
	private explicit_type "CameraMetadata"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13329335 "m_bIsVideo"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13329463 "m_bIs4KVideo"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13329591 "m_bEisSupportedSize"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13329719 "m_bEisEnable"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 3665591 "InputStreamInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7072823 // dim (<directional composition>)
	  relation 7072823 *-->
	    a role_name "dim" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7072823 // dim (<directional composition>)
	    b parent class_ref 3646135 // cam_dimension_t
	end

	attribute 13329847 "format"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13329975 "usage"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 7072951 // mInputStreamInfo (<directional composition>)
	relation 7072951 *-->
	  a role_name "mInputStreamInfo" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7072951 // mInputStreamInfo (<directional composition>)
	  b parent class_ref 3665591 // InputStreamInfo
      end

      attribute 13330103 "m_MobicatMask"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13330231 "mSupportedFaceDetectMode"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13330359 "m_bTnrEnabled"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13330487 "m_bTnrPreview"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13330615 "m_bTnrVideo"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7073079 // m_CdsPreference (<directional composition>)
	relation 7073079 *-->
	  a role_name "m_CdsPreference" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7073079 // m_CdsPreference (<directional composition>)
	  b parent class_ref 3656887 // cam_cds_mode_type_t
      end

      class 3665719 "RequestedBufferInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13330743 "stream"
	  public explicit_type "camera3_stream_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13330871 "buffer"
	  public explicit_type "camera3_stream_buffer_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13330999 "need_metadata"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " metadata needs to be consumed by the corresponding stream
 in order to generate the buffer.
"
	end
      end

      class 3665847 "PendingRequestInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13331127 "frame_number"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13331255 "num_buffers"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13331383 "request_id"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 7073207 // buffers (<directional composition>)
	  relation 7073207 *-->
	    stereotype "List"
	    a role_name "buffers" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7073207 // buffers (<directional composition>)
	    b parent class_ref 3665719 // RequestedBufferInfo
	end

	attribute 13331511 "blob_request"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13331639 "bUrgentReceived"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 7073335 // timestamp (<directional composition>)
	  relation 7073335 *-->
	    a role_name "timestamp" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7073335 // timestamp (<directional composition>)
	    b parent class_ref 3650487 // nsecs_t
	end

	attribute 13331767 "input_buffer"
	  public explicit_type "camera3_stream_buffer_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13331895 "settings"
	  const_attribute public explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332023 "jpegMetadata"
	  public explicit_type "CameraMetadata"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332151 "pipeline_depth"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332279 "partial_result_cnt"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332407 "capture_intent"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332535 "shutter_notified"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332663 "hybrid_ae_enable"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332791 "need_dynamic_blklvl"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13332919 "pending_extra_result"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3665975 "PendingFrameDropInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13333047 "frame_number"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13333175 "stream_ID"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3666103 "PendingBufferInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13333303 "frame_number"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Frame number pertaining to the buffer
"
	end

	attribute 13333431 "stream"
	  public explicit_type "camera3_stream_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13333559 "buffer"
	  public explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Buffer handle
"
	end
      end

      class 3666231 "PendingBuffersMap"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13333687 "num_buffers"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Total number of buffer requests pending
"
	end

	classrelation 7073463 // mPendingBufferList (<directional composition>)
	  relation 7073463 *-->
	    stereotype "List"
	    a role_name "mPendingBufferList" public
	      comment " List of pending buffers
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7073463 // mPendingBufferList (<directional composition>)
	    b parent class_ref 3666103 // PendingBufferInfo
	end

	attribute 13333815 "last_frame_number"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Last frame number requested
"
	end
      end

      class 3666359 "PendingReprocessResult"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13333943 "notify_msg"
	  public explicit_type "camera3_notify_msg_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13334071 "buffer"
	  public explicit_type "camera3_stream_buffer_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13334199 "frame_number"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 3666487 "FlushMap"
	visibility package stereotype "typedef" explicit_base_type "KeyedVector<uint32_t, Vector<PendingBufferInfo> >"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 3666615 "pendingRequestIterator"
	visibility package stereotype "typedef" base_type class_ref 3665847 // PendingRequestInfo
	cpp_decl "${comment}typedef List<${type}>::iterator ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7073591 // <dependency>
	  relation 7073591 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 7073591 // <dependency>
	    b parent class_ref 3665847 // PendingRequestInfo
	end
      end

      class 3666743 "pendingBufferIterator"
	visibility package stereotype "typedef" base_type class_ref 3665719 // RequestedBufferInfo
	cpp_decl "${comment}typedef List<${type}>::iterator ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 7073719 // <dependency>
	  relation 7073719 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 7073719 // <dependency>
	    b parent class_ref 3665719 // RequestedBufferInfo
	end
      end

      classrelation 7073847 // mPendingReprocessResultList (<directional composition>)
	relation 7073847 *-->
	  stereotype "List"
	  a role_name "mPendingReprocessResultList" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7073847 // mPendingReprocessResultList (<directional composition>)
	  b parent class_ref 3666359 // PendingReprocessResult
      end

      classrelation 7073975 // mPendingRequestsList (<directional composition>)
	relation 7073975 *-->
	  stereotype "List"
	  a role_name "mPendingRequestsList" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7073975 // mPendingRequestsList (<directional composition>)
	  b parent class_ref 3665847 // PendingRequestInfo
      end

      classrelation 7074103 // mPendingFrameDropList (<directional composition>)
	relation 7074103 *-->
	  stereotype "List"
	  a role_name "mPendingFrameDropList" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074103 // mPendingFrameDropList (<directional composition>)
	  b parent class_ref 3665975 // PendingFrameDropInfo
      end

      attribute 13334327 "mPendingBatchMap"
	private explicit_type "uint32_t, uint32_t"
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Use last frame number of the batch as key and first frame number of the
batch as value for that key 
"
      end

      classrelation 7074231 // mPendingBuffersMap (<directional composition>)
	relation 7074231 *-->
	  a role_name "mPendingBuffersMap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074231 // mPendingBuffersMap (<directional composition>)
	  b parent class_ref 3666231 // PendingBuffersMap
      end

      attribute 13334455 "mRequestCond"
	private explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13334583 "mPendingLiveRequest"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13334711 "mWokenUpByDaemon"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13334839 "mCurrentRequestId"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7074359 // mStreamConfigInfo (<directional composition>)
	relation 7074359 *-->
	  a role_name "mStreamConfigInfo" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074359 // mStreamConfigInfo (<directional composition>)
	  b parent class_ref 3654583 // cam_stream_size_info_t
      end

      attribute 13334967 "mMutex"
	private explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "mutex for serialized access to camera3_device_ops_t functions
"
      end

      classrelation 7074487 // mStreamInfo (<unidirectional association>)
	relation 7074487 --->
	  stereotype "List"
	  a role_name "mStreamInfo" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074487 // mStreamInfo (<unidirectional association>)
	  b parent class_ref 3664439 // stream_info_t
      end

      attribute 13335095 "mMinProcessedFrameDuration"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335223 "mMinJpegFrameDuration"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335351 "mMinRawFrameDuration"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335479 "mMetaFrameCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335607 "mUpdateDebugLevel"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335735 "mCallbacks"
	const_attribute private explicit_type "camera_module_callbacks_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335863 "mCaptureIntent"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13335991 "mHybridAeEnable"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7074615 // mReprocMeta (<directional composition>)
	relation 7074615 *-->
	  a role_name "mReprocMeta" private
	    comment "scratch meta buffer"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074615 // mReprocMeta (<directional composition>)
	  b parent class_ref 3649207 // metadata_buffer_t
      end

      attribute 13336119 "mBatchSize"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 0: Not batch, non-zero: Number of image buffers in a batch 
"
      end

      attribute 13336247 "mToBeQueuedVidBufs"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used only in batch mode
"
      end

      attribute 13336375 "mHFRVideoFps"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fixed video fps
"
      end

      attribute 13336503 "mOpMode"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13336631 "mFirstFrameNumberInBatch"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13336759 "mDummyBatchStream"
	private explicit_type "camera3_stream_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13336887 "mNeedSensorRestart"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7074743 // mCropRegionMapper (<directional composition>)
	relation 7074743 *-->
	  a role_name "mCropRegionMapper" private
	    comment " sensor output size with current stream configuration 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074743 // mCropRegionMapper (<directional composition>)
	  b parent class_ref 3663799 // QCamera3CropRegionMapper
      end

      attribute 13337015 "mLdafCalibExist"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Ldaf calibration data 
"
      end

      attribute 13337143 "mLdafCalib"
	private explicit_type "uint32_t"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13337271 "mPowerHintEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13337399 "mLastCustIntentFrmNum"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13337527 "EFFECT_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_control_effect_mode_t,
            cam_effect_mode_type"
	multiplicity "[]"
	init_value "= {
    { ANDROID_CONTROL_EFFECT_MODE_OFF,       CAM_EFFECT_MODE_OFF },
    { ANDROID_CONTROL_EFFECT_MODE_MONO,       CAM_EFFECT_MODE_MONO },
    { ANDROID_CONTROL_EFFECT_MODE_NEGATIVE,   CAM_EFFECT_MODE_NEGATIVE },
    { ANDROID_CONTROL_EFFECT_MODE_SOLARIZE,   CAM_EFFECT_MODE_SOLARIZE },
    { ANDROID_CONTROL_EFFECT_MODE_SEPIA,      CAM_EFFECT_MODE_SEPIA },
    { ANDROID_CONTROL_EFFECT_MODE_POSTERIZE,  CAM_EFFECT_MODE_POSTERIZE },
    { ANDROID_CONTROL_EFFECT_MODE_WHITEBOARD, CAM_EFFECT_MODE_WHITEBOARD },
    { ANDROID_CONTROL_EFFECT_MODE_BLACKBOARD, CAM_EFFECT_MODE_BLACKBOARD },
    { ANDROID_CONTROL_EFFECT_MODE_AQUA,       CAM_EFFECT_MODE_AQUA }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13337655 "WHITE_BALANCE_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_control_awb_mode_t,
            cam_wb_mode_type"
	multiplicity "[]"
	init_value "= {
    { ANDROID_CONTROL_AWB_MODE_OFF,             CAM_WB_MODE_OFF },
    { ANDROID_CONTROL_AWB_MODE_AUTO,            CAM_WB_MODE_AUTO },
    { ANDROID_CONTROL_AWB_MODE_INCANDESCENT,    CAM_WB_MODE_INCANDESCENT },
    { ANDROID_CONTROL_AWB_MODE_FLUORESCENT,     CAM_WB_MODE_FLUORESCENT },
    { ANDROID_CONTROL_AWB_MODE_WARM_FLUORESCENT,CAM_WB_MODE_WARM_FLUORESCENT},
    { ANDROID_CONTROL_AWB_MODE_DAYLIGHT,        CAM_WB_MODE_DAYLIGHT },
    { ANDROID_CONTROL_AWB_MODE_CLOUDY_DAYLIGHT, CAM_WB_MODE_CLOUDY_DAYLIGHT },
    { ANDROID_CONTROL_AWB_MODE_TWILIGHT,        CAM_WB_MODE_TWILIGHT },
    { ANDROID_CONTROL_AWB_MODE_SHADE,           CAM_WB_MODE_SHADE }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13337783 "SCENE_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_control_scene_mode_t,
            cam_scene_mode_type"
	multiplicity "[]"
	init_value "= {
    { ANDROID_CONTROL_SCENE_MODE_FACE_PRIORITY,  CAM_SCENE_MODE_FACE_PRIORITY },
    { ANDROID_CONTROL_SCENE_MODE_ACTION,         CAM_SCENE_MODE_ACTION },
    { ANDROID_CONTROL_SCENE_MODE_PORTRAIT,       CAM_SCENE_MODE_PORTRAIT },
    { ANDROID_CONTROL_SCENE_MODE_LANDSCAPE,      CAM_SCENE_MODE_LANDSCAPE },
    { ANDROID_CONTROL_SCENE_MODE_NIGHT,          CAM_SCENE_MODE_NIGHT },
    { ANDROID_CONTROL_SCENE_MODE_NIGHT_PORTRAIT, CAM_SCENE_MODE_NIGHT_PORTRAIT },
    { ANDROID_CONTROL_SCENE_MODE_THEATRE,        CAM_SCENE_MODE_THEATRE },
    { ANDROID_CONTROL_SCENE_MODE_BEACH,          CAM_SCENE_MODE_BEACH },
    { ANDROID_CONTROL_SCENE_MODE_SNOW,           CAM_SCENE_MODE_SNOW },
    { ANDROID_CONTROL_SCENE_MODE_SUNSET,         CAM_SCENE_MODE_SUNSET },
    { ANDROID_CONTROL_SCENE_MODE_STEADYPHOTO,    CAM_SCENE_MODE_ANTISHAKE },
    { ANDROID_CONTROL_SCENE_MODE_FIREWORKS ,     CAM_SCENE_MODE_FIREWORKS },
    { ANDROID_CONTROL_SCENE_MODE_SPORTS ,        CAM_SCENE_MODE_SPORTS },
    { ANDROID_CONTROL_SCENE_MODE_PARTY,          CAM_SCENE_MODE_PARTY },
    { ANDROID_CONTROL_SCENE_MODE_CANDLELIGHT,    CAM_SCENE_MODE_CANDLELIGHT },
    { ANDROID_CONTROL_SCENE_MODE_BARCODE,        CAM_SCENE_MODE_BARCODE}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13337911 "FOCUS_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_control_af_mode_t,
            cam_focus_mode_type"
	multiplicity "[]"
	init_value "= {
    { ANDROID_CONTROL_AF_MODE_OFF,                CAM_FOCUS_MODE_OFF },
    { ANDROID_CONTROL_AF_MODE_OFF,                CAM_FOCUS_MODE_FIXED },
    { ANDROID_CONTROL_AF_MODE_AUTO,               CAM_FOCUS_MODE_AUTO },
    { ANDROID_CONTROL_AF_MODE_MACRO,              CAM_FOCUS_MODE_MACRO },
    { ANDROID_CONTROL_AF_MODE_EDOF,               CAM_FOCUS_MODE_EDOF },
    { ANDROID_CONTROL_AF_MODE_CONTINUOUS_PICTURE, CAM_FOCUS_MODE_CONTINOUS_PICTURE },
    { ANDROID_CONTROL_AF_MODE_CONTINUOUS_VIDEO,   CAM_FOCUS_MODE_CONTINOUS_VIDEO }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338039 "COLOR_ABERRATION_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_color_correction_aberration_mode_t,
            cam_aberration_mode_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_COLOR_CORRECTION_ABERRATION_MODE_OFF,
            CAM_COLOR_CORRECTION_ABERRATION_OFF },
    { ANDROID_COLOR_CORRECTION_ABERRATION_MODE_FAST,
            CAM_COLOR_CORRECTION_ABERRATION_FAST },
    { ANDROID_COLOR_CORRECTION_ABERRATION_MODE_HIGH_QUALITY,
            CAM_COLOR_CORRECTION_ABERRATION_HIGH_QUALITY },
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338167 "ANTIBANDING_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_control_ae_antibanding_mode_t,
            cam_antibanding_mode_type"
	multiplicity "[]"
	init_value "= {
    { ANDROID_CONTROL_AE_ANTIBANDING_MODE_OFF,  CAM_ANTIBANDING_MODE_OFF },
    { ANDROID_CONTROL_AE_ANTIBANDING_MODE_50HZ, CAM_ANTIBANDING_MODE_50HZ },
    { ANDROID_CONTROL_AE_ANTIBANDING_MODE_60HZ, CAM_ANTIBANDING_MODE_60HZ },
    { ANDROID_CONTROL_AE_ANTIBANDING_MODE_AUTO, CAM_ANTIBANDING_MODE_AUTO }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338295 "LENS_STATE_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_lens_state_t,
            cam_af_lens_state_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_LENS_STATE_STATIONARY,    CAM_AF_LENS_STATE_STATIONARY},
    { ANDROID_LENS_STATE_MOVING,        CAM_AF_LENS_STATE_MOVING}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338423 "AE_FLASH_MODE_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_control_ae_mode_t,
            cam_flash_mode_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_CONTROL_AE_MODE_OFF,                  CAM_FLASH_MODE_OFF },
    { ANDROID_CONTROL_AE_MODE_ON,                   CAM_FLASH_MODE_OFF },
    { ANDROID_CONTROL_AE_MODE_ON_AUTO_FLASH,        CAM_FLASH_MODE_AUTO},
    { ANDROID_CONTROL_AE_MODE_ON_ALWAYS_FLASH,      CAM_FLASH_MODE_ON  },
    { ANDROID_CONTROL_AE_MODE_ON_AUTO_FLASH_REDEYE, CAM_FLASH_MODE_AUTO}
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338551 "FLASH_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_flash_mode_t,
            cam_flash_mode_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_FLASH_MODE_OFF,    CAM_FLASH_MODE_OFF  },
    { ANDROID_FLASH_MODE_SINGLE, CAM_FLASH_MODE_SINGLE },
    { ANDROID_FLASH_MODE_TORCH,  CAM_FLASH_MODE_TORCH }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338679 "FACEDETECT_MODES_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_statistics_face_detect_mode_t,
            cam_face_detect_mode_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_STATISTICS_FACE_DETECT_MODE_OFF,    CAM_FACE_DETECT_MODE_OFF     },
    { ANDROID_STATISTICS_FACE_DETECT_MODE_FULL,   CAM_FACE_DETECT_MODE_FULL    }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338807 "FOCUS_CALIBRATION_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_lens_info_focus_distance_calibration_t,
            cam_focus_calibration_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_LENS_INFO_FOCUS_DISTANCE_CALIBRATION_UNCALIBRATED,
      CAM_FOCUS_UNCALIBRATED },
    { ANDROID_LENS_INFO_FOCUS_DISTANCE_CALIBRATION_APPROXIMATE,
      CAM_FOCUS_APPROXIMATE },
    { ANDROID_LENS_INFO_FOCUS_DISTANCE_CALIBRATION_CALIBRATED,
      CAM_FOCUS_CALIBRATED }
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13338935 "TEST_PATTERN_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_sensor_test_pattern_mode_t,
            cam_test_pattern_mode_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_SENSOR_TEST_PATTERN_MODE_OFF,          CAM_TEST_PATTERN_OFF   },
    { ANDROID_SENSOR_TEST_PATTERN_MODE_SOLID_COLOR,  CAM_TEST_PATTERN_SOLID_COLOR },
    { ANDROID_SENSOR_TEST_PATTERN_MODE_COLOR_BARS,   CAM_TEST_PATTERN_COLOR_BARS },
    { ANDROID_SENSOR_TEST_PATTERN_MODE_COLOR_BARS_FADE_TO_GRAY, CAM_TEST_PATTERN_COLOR_BARS_FADE_TO_GRAY },
    { ANDROID_SENSOR_TEST_PATTERN_MODE_PN9,          CAM_TEST_PATTERN_PN9 },
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13339063 "REFERENCE_ILLUMINANT_MAP"
	class_attribute const_attribute private explicit_type "camera_metadata_enum_android_sensor_reference_illuminant1_t,
            cam_illuminat_t"
	multiplicity "[]"
	init_value "= {
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_FLUORESCENT, CAM_AWB_WARM_FLO},
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_DAYLIGHT_FLUORESCENT, CAM_AWB_CUSTOM_DAYLIGHT },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_COOL_WHITE_FLUORESCENT, CAM_AWB_COLD_FLO },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_STANDARD_A, CAM_AWB_A },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_D55, CAM_AWB_NOON },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_D65, CAM_AWB_D65 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_D75, CAM_AWB_D75 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_D50, CAM_AWB_D50 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_ISO_STUDIO_TUNGSTEN, CAM_AWB_CUSTOM_A},
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_DAYLIGHT, CAM_AWB_D50 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_TUNGSTEN, CAM_AWB_A },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_FINE_WEATHER, CAM_AWB_D50 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_CLOUDY_WEATHER, CAM_AWB_D65 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_SHADE, CAM_AWB_D75 },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_DAY_WHITE_FLUORESCENT, CAM_AWB_CUSTOM_DAYLIGHT },
    { ANDROID_SENSOR_REFERENCE_ILLUMINANT1_WHITE_FLUORESCENT, CAM_AWB_COLD_FLO},
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13339191 "HFR_MODE_MAP"
	class_attribute const_attribute private explicit_type "int32_t,
            cam_hfr_mode_t"
	multiplicity "[]"
	init_value "= {
    { 60, CAM_HFR_MODE_60FPS},
    { 90, CAM_HFR_MODE_90FPS},
    { 120, CAM_HFR_MODE_120FPS},
    { 150, CAM_HFR_MODE_150FPS},
    { 180, CAM_HFR_MODE_180FPS},
    { 210, CAM_HFR_MODE_210FPS},
    { 240, CAM_HFR_MODE_240FPS},
    { 480, CAM_HFR_MODE_480FPS},
}"
	stereotype "QCameraMap"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7074871 // CDS_MAP (<directional composition>)
	relation 7074871 *-->
	  a role_name "CDS_MAP" multiplicity "[]" init_value "= {
    {\"On\",  CAM_CDS_MODE_ON},
    {\"Off\", CAM_CDS_MODE_OFF},
    {\"Auto\",CAM_CDS_MODE_AUTO}
}" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7074871 // CDS_MAP (<directional composition>)
	  b parent class_ref 3665335 // QCameraPropMap
      end

      operation 44259895 "erasePendingRequest"
	preserve_cpp_body_indent private return_type class_ref 3666615 // pendingRequestIterator
	nparams 1
	  param in name "i" type class_ref 3666615 // pendingRequestIterator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : erasePendingRequest
//
//DESCRIPTION: function to erase a desired pending request after freeing any
//             allocated memory
//
//PARAMETERS :
//  @i       : iterator pointing to pending request to be erased
//
//RETURN     : iterator pointing to the next request
//==========================================================================

//===========================================================================
//FUNCTION   : erasePendingRequest
//
//DESCRIPTION: function to erase a desired pending request after freeing any
//             allocated memory
//
//PARAMETERS :
//  @i       : iterator pointing to pending request to be erased
//
//RETURN     : iterator pointing to the next request
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3667639 "QCamera3Memory"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Base class for all memory types. Abstract."
      operation 44260023 "cleanCache"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return cacheOps(index, ION_IOC_CLEAN_CACHES);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260151 "invalidateCache"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return cacheOps(index, ION_IOC_INV_CACHES);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260279 "cleanInvalidateCache"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return cacheOps(index, ION_IOC_CLEAN_INV_CACHES);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260407 "getFd"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFd
//
//DESCRIPTION: return file descriptor of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : file descriptor
//==========================================================================

//===========================================================================
//FUNCTION   : getFd
//
//DESCRIPTION: return file descriptor of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : file descriptor
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260535 "getSize"
	preserve_cpp_body_indent public explicit_return_type "ssize_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getSize
//
//DESCRIPTION: return buffer size of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer size
//==========================================================================

//===========================================================================
//FUNCTION   : getSize
//
//DESCRIPTION: return buffer size of the indexed buffer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer size
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260663 "getCnt"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

//===========================================================================
//FUNCTION   : getCnt
//
//DESCRIPTION: query number of buffers allocated
//
//PARAMETERS : none
//
//RETURN     : number of buffers allocated
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260791 "cacheOps"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44260919 "getMatchBufIndex"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "object" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44261047 "getPtr"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44261175 "markFrameNumber"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44261303 "getFrameNumber"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44261431 "getBufferIndex"
	abstract cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44261559 "QCamera3Memory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "// QCaemra2Memory base class
//===========================================================================
//FUNCTION   : QCamera3Memory
//
//DESCRIPTION: default constructor of QCamera3Memory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

// QCaemra2Memory base class
//===========================================================================
//FUNCTION   : QCamera3Memory
//
//DESCRIPTION: default constructor of QCamera3Memory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

// QCaemra2Memory base class
//===========================================================================
//FUNCTION   : QCamera3Memory
//
//DESCRIPTION: default constructor of QCamera3Memory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44261687 "~QCamera3Memory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3Memory
//
//DESCRIPTION: deconstructor of QCamera3Memory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Memory
//
//DESCRIPTION: deconstructor of QCamera3Memory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3Memory
//
//DESCRIPTION: deconstructor of QCamera3Memory
//
//PARAMETERS : none
//
//RETURN     : None
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44261815 "getBufDef"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 3
	  param in name "offset" type class_ref 3630007 // cam_frame_len_offset_t
	  param inout name "bufDef" type class_ref 3646391 // mm_camera_buf_def_t
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufDef
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @offset  : [input] frame buffer offset
//  @bufDef  : [output] reference to struct to store buffer definition
//  @index   : [input] index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : getBufDef
//
//DESCRIPTION: query detailed buffer information
//
//PARAMETERS :
//  @offset  : [input] frame buffer offset
//  @bufDef  : [output] reference to struct to store buffer definition
//  @index   : [input] index of the buffer
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3667767 "QCamera3MemInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 13339319 "fd"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13339447 "main_ion_fd"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 13339575 "size"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 44261943 "cacheOpsInternal"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 3
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	  param inout name "vaddr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOpsInternal
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//  @vaddr   : ptr to the virtual address
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOpsInternal
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//  @vaddr   : ptr to the virtual address
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44262071 "getPtrLocked"
	abstract cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13339703 "mBufferCount"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 7075127 // mMemInfo (<directional composition>)
	relation 7075127 *-->
	  a role_name "mMemInfo" multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7075127 // mMemInfo (<directional composition>)
	  b parent class_ref 3667767 // QCamera3MemInfo
      end

      attribute 13339831 "mPtr"
	protected explicit_type "void"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13339959 "mCurrentFrameNumbers"
	protected explicit_type "int32_t"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13340087 "mLock"
	protected explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3667895 "QCamera3GrallocMemory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Gralloc Memory shared with frameworks"
      classrelation 7075383 // <generalisation>
	relation 7075383 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7075383 // <generalisation>
	  b parent class_ref 3667639 // QCamera3Memory
      end

      operation 44263991 "QCamera3GrallocMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "startIdx" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : QCamera3GrallocMemory
//
//DESCRIPTION: constructor of QCamera3GrallocMemory
//             preview stream buffers are allocated from gralloc native_windoe
//
//PARAMETERS :
//  @startIdx : start index of array after which we can register buffers in.
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : QCamera3GrallocMemory
//
//DESCRIPTION: constructor of QCamera3GrallocMemory
//             preview stream buffers are allocated from gralloc native_windoe
//
//PARAMETERS :
//  @startIdx : start index of array after which we can register buffers in.
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${t0} ${p0}${)}
        : QCamera3Memory(), mStartIdx(startIdx)

        : QCamera3Memory(), mStartIdx(startIdx)
${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 44264119 "~QCamera3GrallocMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : ~QCamera3GrallocMemory
//
//DESCRIPTION: deconstructor of QCamera3GrallocMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3GrallocMemory
//
//DESCRIPTION: deconstructor of QCamera3GrallocMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : ~QCamera3GrallocMemory
//
//DESCRIPTION: deconstructor of QCamera3GrallocMemory
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 44264247 "registerBuffer"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "type" explicit_type "cam_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: registers frameworks-allocated gralloc buffer_handle_t
//
//PARAMETERS :
//  @buffers : buffer_handle_t pointer
//  @type :    cam_stream_type_t
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: registers frameworks-allocated gralloc buffer_handle_t
//
//PARAMETERS :
//  @buffers : buffer_handle_t pointer
//  @type :    cam_stream_type_t
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : registerBuffer
//
//DESCRIPTION: registers frameworks-allocated gralloc buffer_handle_t
//
//PARAMETERS :
//  @buffers : buffer_handle_t pointer
//  @type :    cam_stream_type_t
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44264375 "unregisterBuffer"
	preserve_cpp_body_indent public explicit_return_type "int32_t"
	nparams 1
	  param in name "idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unregisterBuffer
//
//DESCRIPTION: unregister buffer
//
//PARAMETERS :
//  @idx     : unregister buffer at index 'idx'
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBuffer
//
//DESCRIPTION: unregister buffer
//
//PARAMETERS :
//  @idx     : unregister buffer at index 'idx'
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBuffer
//
//DESCRIPTION: unregister buffer
//
//PARAMETERS :
//  @idx     : unregister buffer at index 'idx'
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44264503 "unregisterBuffers"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unregisterBuffers
//
//DESCRIPTION: unregister buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBuffers
//
//DESCRIPTION: unregister buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBuffers
//
//DESCRIPTION: unregister buffers
//
//PARAMETERS : none
//
//RETURN     : none
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44264631 "cacheOps"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "cmd" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : cacheOps
//
//DESCRIPTION: ion related memory cache operations
//
//PARAMETERS :
//  @index   : index of the buffer
//  @cmd     : cache ops command
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44264759 "getMatchBufIndex"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "object" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getMatchBufIndex
//
//DESCRIPTION: query buffer index by object ptr
//
//PARAMETERS :
//  @opaque  : opaque ptr
//
//RETURN     : buffer index if match found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44264887 "getPtr"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: Return buffer pointer.
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtr
//
//DESCRIPTION: Return buffer pointer.
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265015 "markFrameNumber"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 2
	  param in name "index" explicit_type "uint32_t"
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : markFrameNumber
//
//DESCRIPTION: We use this function from the request call path to mark the
//             buffers with the frame number they are intended for this info
//             is used later when giving out callback & it is duty of PP to
//             ensure that data for that particular frameNumber/Request is
//             written to this buffer.
//PARAMETERS :
//  @index   : index of the buffer
//  @frame#  : Frame number from the framework
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : markFrameNumber
//
//DESCRIPTION: We use this function from the request call path to mark the
//             buffers with the frame number they are intended for this info
//             is used later when giving out callback & it is duty of PP to
//             ensure that data for that particular frameNumber/Request is
//             written to this buffer.
//PARAMETERS :
//  @index   : index of the buffer
//  @frame#  : Frame number from the framework
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265143 "getFrameNumber"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFrameNumber
//
//DESCRIPTION: We use this to fetch the frameNumber for the request with which
//             this buffer was given to HAL
//
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t frameNumber
//             positive/zero  -- success
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getFrameNumber
//
//DESCRIPTION: We use this to fetch the frameNumber for the request with which
//             this buffer was given to HAL
//
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : int32_t frameNumber
//             positive/zero  -- success
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265271 "getBufferIndex"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 1
	  param in name "frameNumber" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufferIndex
//
//DESCRIPTION: We use this to fetch the buffer index for the request with
//             a particular frame number
//
//
//PARAMETERS :
//  @frameNumber  : frame number of the buffer
//
//RETURN     : int32_t buffer index
//             negative failure
//==========================================================================

//===========================================================================
//FUNCTION   : getBufferIndex
//
//DESCRIPTION: We use this to fetch the buffer index for the request with
//             a particular frame number
//
//
//PARAMETERS :
//  @frameNumber  : frame number of the buffer
//
//RETURN     : int32_t buffer index
//             negative failure
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265399 "getBufferHandle"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getBufferHandle
//
//DESCRIPTION: return framework pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr if match found
//NULL if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getBufferHandle
//
//DESCRIPTION: return framework pointer
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr if match found
//NULL if failed
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265527 "getPtrLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getPtrLocked
//
//DESCRIPTION: Return buffer pointer. Please note 'mLock' must be acquired
//             before calling this method.
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

//===========================================================================
//FUNCTION   : getPtrLocked
//
//DESCRIPTION: Return buffer pointer. Please note 'mLock' must be acquired
//             before calling this method.
//
//PARAMETERS :
//  @index   : index of the buffer
//
//RETURN     : buffer ptr
//==========================================================================

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265655 "unregisterBufferLocked"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 1
	  param in name "idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : unregisterBufferLocked
//
//DESCRIPTION: Unregister buffer. Please note that this method has to be
//             called with 'mLock' acquired.
//
//PARAMETERS :
//  @idx     : unregister buffer at index 'idx'
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBufferLocked
//
//DESCRIPTION: Unregister buffer. Please note that this method has to be
//             called with 'mLock' acquired.
//
//PARAMETERS :
//  @idx     : unregister buffer at index 'idx'
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

//===========================================================================
//FUNCTION   : unregisterBufferLocked
//
//DESCRIPTION: Unregister buffer. Please note that this method has to be
//             called with 'mLock' acquired.
//
//PARAMETERS :
//  @idx     : unregister buffer at index 'idx'
//
//RETURN     : int32_t type of status
//             NO_ERROR  -- success
//             none-zero failure code
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44265783 "getFreeIndexLocked"
	preserve_cpp_body_indent private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : getFreeIndexLocked
//
//DESCRIPTION: Find free index slot. Note 'mLock' needs to be acquired
//             before calling this method.
//
//PARAMETERS : None
//
//RETURN     : free buffer index if found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getFreeIndexLocked
//
//DESCRIPTION: Find free index slot. Note 'mLock' needs to be acquired
//             before calling this method.
//
//PARAMETERS : None
//
//RETURN     : free buffer index if found,
//             -1 if failed
//==========================================================================

//===========================================================================
//FUNCTION   : getFreeIndexLocked
//
//DESCRIPTION: Find free index slot. Note 'mLock' needs to be acquired
//             before calling this method.
//
//PARAMETERS : None
//
//RETURN     : free buffer index if found,
//             -1 if failed
//==========================================================================

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13340471 "mBufferHandle"
	private explicit_type "buffer_handle_t"
	multiplicity "[MM_CAMERA_MAX_NUM_FRAMES]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13340599 "mStartIdx"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3668023 "qcamera_hal3_jpeg_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13341111 "jobId"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " job ID"
      end

      attribute 13341239 "client_hdl"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " handle of jpeg client (obtained when open jpeg)"
      end

      classrelation 7076023 // src_frame (<unidirectional association>)
	relation 7076023 --->
	  a role_name "src_frame" public
	    comment " source frame (need to be returned back to kernel after done)"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076023 // src_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7076151 // src_reproc_frame (<unidirectional association>)
	relation 7076151 --->
	  a role_name "src_reproc_frame" public
	    comment " original source frame for reproc if not NULL"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076151 // src_reproc_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7076279 // fwk_frame (<unidirectional association>)
	relation 7076279 --->
	  a role_name "fwk_frame" public
	    comment " source framework buffer"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076279 // fwk_frame (<unidirectional association>)
	  b parent class_ref 3661623 // qcamera_fwk_input_pp_data_t
      end

      classrelation 7076407 // fwk_src_buffer (<unidirectional association>)
	relation 7076407 --->
	  a role_name "fwk_src_buffer" public
	    comment " original framework source frame for reproc"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076407 // fwk_src_buffer (<unidirectional association>)
	  b parent class_ref 3661623 // qcamera_fwk_input_pp_data_t
      end

      classrelation 7076535 // pJpegExifObj (<unidirectional association>)
	relation 7076535 --->
	  a role_name "pJpegExifObj" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076535 // pJpegExifObj (<unidirectional association>)
	  b parent class_ref 3663031 // QCamera3Exif
      end

      classrelation 7076663 // metadata (<unidirectional association>)
	relation 7076663 --->
	  a role_name "metadata" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076663 // metadata (<unidirectional association>)
	  b parent class_ref 3649207 // metadata_buffer_t
      end

      classrelation 7076791 // src_metadata (<unidirectional association>)
	relation 7076791 --->
	  a role_name "src_metadata" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076791 // src_metadata (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7076919 // jpeg_settings (<unidirectional association>)
	relation 7076919 --->
	  a role_name "jpeg_settings" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7076919 // jpeg_settings (<unidirectional association>)
	  b parent class_ref 3663159 // jpeg_settings_t
      end
    end

    class 3668151 "qcamera_hal3_pp_data_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13341367 "jobId"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " job ID"
      end

      classrelation 7077047 // src_frame (<unidirectional association>)
	relation 7077047 --->
	  a role_name "src_frame" public
	    comment " source frame (need to be returned back to kernel after done)"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077047 // src_frame (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end

      classrelation 7077175 // fwk_src_frame (<unidirectional association>)
	relation 7077175 --->
	  a role_name "fwk_src_frame" public
	    comment " source frame"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077175 // fwk_src_frame (<unidirectional association>)
	  b parent class_ref 3661623 // qcamera_fwk_input_pp_data_t
      end

      classrelation 7077303 // metadata (<unidirectional association>)
	relation 7077303 --->
	  a role_name "metadata" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077303 // metadata (<unidirectional association>)
	  b parent class_ref 3649207 // metadata_buffer_t
      end

      classrelation 7077431 // jpeg_settings (<unidirectional association>)
	relation 7077431 --->
	  a role_name "jpeg_settings" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077431 // jpeg_settings (<unidirectional association>)
	  b parent class_ref 3663159 // jpeg_settings_t
      end

      classrelation 7077559 // src_metadata (<unidirectional association>)
	relation 7077559 --->
	  a role_name "src_metadata" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7077559 // src_metadata (<unidirectional association>)
	  b parent class_ref 3646519 // mm_camera_super_buf_t
      end
    end

    class 3668279 "hal3_stream_cb_routine"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(mm_camera_super_buf_t *frame,
                                  QCamera3Stream *stream,
                                  void *userdata);
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3668535 "qcamera3_ext_section"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13344183 "QCAMERA3_PRIVATEDATA"
	public type class_ref 3668535 // qcamera3_ext_section
	init_value " VENDOR_SECTION"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344311 "QCAMERA3_CDS"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344439 "QCAMERA3_OPAQUE_RAW"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344567 "QCAMERA3_CROP"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344695 "QCAMERA3_TUNING_META_DATA"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344823 "QCAMERA3_AV_TIMER"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13344951 "QCAMERA3_SENSOR_META_DATA"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345079 "QCAMERA3_TEMPORAL_DENOISE"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345207 "NEXUS_EXPERIMENTAL_2015"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345335 "NEXUS_EXPERIMENTAL_2016"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345463 "QCAMERA3_SECTIONS_END"
	public type class_ref 3668535 // qcamera3_ext_section
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3668663 "qcamera3_ext_section_ranges"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13345591 "QCAMERA3_PRIVATEDATA_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_PRIVATEDATA << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345719 "QCAMERA3_CDS_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_CDS << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345847 "QCAMERA3_OPAQUE_RAW_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_OPAQUE_RAW << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13345975 "QCAMERA3_CROP_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_CROP << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346103 "QCAMERA3_TUNING_META_DATA_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_TUNING_META_DATA << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346231 "QCAMERA3_AV_TIMER_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_AV_TIMER << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346359 "QCAMERA3_SENSOR_META_DATA_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_SENSOR_META_DATA << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346487 "QCAMERA3_TEMPORAL_DENOISE_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " QCAMERA3_TEMPORAL_DENOISE << 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346615 "NEXUS_EXPERIMENTAL_2015_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " NEXUS_EXPERIMENTAL_2015 <<16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346743 "NEXUS_EXPERIMENTAL_2016_START"
	public type class_ref 3668663 // qcamera3_ext_section_ranges
	init_value " NEXUS_EXPERIMENTAL_2016 <<16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3668791 "qcamera3_ext_tags"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13346871 "QCAMERA3_PRIVATEDATA_REPROCESS"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_PRIVATEDATA_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13346999 "QCAMERA3_PRIVATEDATA_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347127 "QCAMERA3_CDS_MODE"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_CDS_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347255 "QCAMERA3_CDS_INFO"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347383 "QCAMERA3_CDS_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347511 "QCAMERA3_OPAQUE_RAW_STRIDES"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_OPAQUE_RAW_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347639 "QCAMERA3_OPAQUE_RAW_FORMAT"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347767 "QCAMERA3_OPAQUE_RAW_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13347895 "QCAMERA3_CROP_COUNT_REPROCESS"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_CROP_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348023 "QCAMERA3_CROP_REPROCESS"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348151 "QCAMERA3_CROP_ROI_MAP_REPROCESS"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348279 "QCAMERA3_CROP_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348407 "QCAMERA3_TUNING_META_DATA_BLOB"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_TUNING_META_DATA_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348535 "QCAMERA3_TUNING_META_DATA_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348663 "QCAMERA3_USE_AV_TIMER"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_AV_TIMER_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348791 "QCAMERA3_AV_TIMER_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13348919 "QCAMERA3_SENSOR_DYNAMIC_BLACK_LEVEL_PATTERN"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_SENSOR_META_DATA_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349047 "QCAMERA3_SENSOR_META_DATA_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349175 "QCAMERA3_TEMPORAL_DENOISE_ENABLE"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " QCAMERA3_TEMPORAL_DENOISE_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349303 "QCAMERA3_TEMPORAL_DENOISE_PROCESS_TYPE"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349431 "QCAMERA3_TEMPORAL_DENOISE_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349559 "NEXUS_EXPERIMENTAL_2015_SENSOR_DYNAMIC_BLACK_LEVEL"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " NEXUS_EXPERIMENTAL_2015_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349687 "NEXUS_EXPERIMENTAL_2015_SENSOR_INFO_OPTICALLY_SHIELDED_REGIONS"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349815 "NEXUS_EXPERIMENTAL_2015_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13349943 "NEXUS_EXPERIMENTAL_2016_HYBRID_AE_ENABLE"
	public type class_ref 3668791 // qcamera3_ext_tags
	init_value " NEXUS_EXPERIMENTAL_2016_START"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13350071 "NEXUS_EXPERIMENTAL_2016_END"
	public type class_ref 3668791 // qcamera3_ext_tags
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3668919 "qcamera3_ext_opaque_raw_format"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Property Name:  org.codeaurora.qcamera3.opaque_raw.opaque_raw_strides

Type: int32 * n * 3 [public]

Description: Distance in bytes from the beginning of one row of opaque
raw image data to the beginning of next row.

Details: The strides are listed as (raw_width, raw_height, stride)
triplets. For each supported raw size, there will be a stride associated
with it.
Property Name: org.codeaurora.qcamera3.opaque_raw.opaque_raw_format

Type: byte(enum) [public]
  * LEGACY - The legacy raw format where 8, 10, or 12-bit
    raw data is packed into a 64-bit word.
  * MIPI - raw format matching the data packing described
    in MIPI CSI-2 specification. In memory, the data
    is constructed by packing sequentially received pixels
    into least significant parts of the words first.
    Within each pixel, the least significant bits are also
    placed towards the least significant part of the word.

Details: Lay out of opaque raw data in memory is decided by two factors:
         opaque_raw_format and bit depth (implied by whiteLevel). Below
         list illustrates their relationship:
  LEGACY8:  P7(7:0) P6(7:0) P5(7:0) P4(7:0) P3(7:0) P2(7:0) P1(7:0) P0(7:0)
            8 pixels occupy 8 bytes, no padding needed
            min_stride = CEILING8(raw_width)
 LEGACY10:  0000 P5(9:0) P4(9:0) P3(9:0) P2(9:0) P1(9:0) P0(9:0)
            6 pixels occupy 8 bytes, 4 bits padding at MSB
            min_stride = (raw_width+5)/6 * 8
 LEGACY12:  0000 P4(11:0) P3(11:0) P2(11:0) P1(11:0) P0(11:0)
            5 pixels occupy 8 bytes, 4 bits padding at MSB
            min_stride = (raw_width+4)/5 * 8
    MIPI8:  P0(7:0)
            1 pixel occupy 1 byte
            min_stride = raw_width
   MIPI10:  P3(1:0) P2(1:0) P1(1:0) P0(1:0) P3(9:2) P2(9:2) P1(9:2) P0(9:2)
            4 pixels occupy 5 bytes
            min_stride = (raw_width+3)/4 * 5
   MIPI12:  P1(3:0) P0(3:0) P1(11:4) P0(11:4)
            2 pixels occupy 3 bytes
            min_stride = (raw_width+1)/2 * 3
Note that opaque_raw_stride needs to be at least the required minimum
stride from the table above. ISP hardware may need more generous stride
setting. For example, for LEGACY8, the actual stride may be
CEILING16(raw_width) due to bus burst length requirement.
 QCAMERA3_OPAQUE_RAW_FORMAT"
      attribute 13350199 "QCAMERA3_OPAQUE_RAW_FORMAT_LEGACY"
	public type class_ref 3668919 // qcamera3_ext_opaque_raw_format
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13350327 "QCAMERA3_OPAQUE_RAW_FORMAT_MIPI"
	public type class_ref 3668919 // qcamera3_ext_opaque_raw_format
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3669047 "qcamera3_ext_opaque_raw_format_t"
      visibility package stereotype "typedef" base_type class_ref 3668919 // qcamera3_ext_opaque_raw_format
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 3669175 "QCamera3VendorTags"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 44278583 "get_vendor_tag_ops"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "ops" explicit_type "vendor_tag_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_vendor_tag_ops
//
//DESCRIPTION: Get the metadata vendor tag function pointers
//
//PARAMETERS :
//   @ops   : function pointer table to be filled by HAL
//
//
//RETURN     : NONE
//==========================================================================

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44278711 "get_tag_count"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "ops" explicit_type "vendor_tag_ops_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_tag_count
//
//DESCRIPTION: Get number of vendor tags supported
//
//PARAMETERS :
//   @ops   :  Vendor tag ops data structure
//
//
//RETURN     : Number of vendor tags supported
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44278839 "get_all_tags"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "ops" explicit_type "vendor_tag_ops_t"
	  param inout name "g_array" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_all_tags
//
//DESCRIPTION: Fill array with all supported vendor tags
//
//PARAMETERS :
//   @ops      :  Vendor tag ops data structure
//   @tag_array:  array of metadata tags
//
//RETURN     : Success: the section name of the specific tag
//             Failure: NULL
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44278967 "get_section_name"
	class_operation preserve_cpp_body_indent public explicit_return_type "char"
	nparams 2
	  param in name "ops" explicit_type "vendor_tag_ops_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_section_name
//
//DESCRIPTION: Get section name for vendor tag
//
//PARAMETERS :
//   @ops   :  Vendor tag ops structure
//   @tag   :  Vendor specific tag
//
//
//RETURN     : Success: the section name of the specific tag
//             Failure: NULL
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44279095 "get_tag_name"
	class_operation preserve_cpp_body_indent public explicit_return_type "char"
	nparams 2
	  param in name "ops" explicit_type "vendor_tag_ops_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_tag_name
//
//DESCRIPTION: Get name of a vendor specific tag
//
//PARAMETERS :
//   @tag   :  Vendor specific tag
//
//
//RETURN     : Success: the name of the specific tag
//             Failure: NULL
//==========================================================================

${inline}const ${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44279223 "get_tag_type"
	class_operation preserve_cpp_body_indent public explicit_return_type "int"
	nparams 2
	  param in name "ops" explicit_type "vendor_tag_ops_t"
	  param in name "tag" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//===========================================================================
//FUNCTION   : get_tag_type
//
//DESCRIPTION: Get type of a vendor specific tag
//
//PARAMETERS :
//   @tag   :  Vendor specific tag
//
//
//RETURN     : Success: the type of the specific tag
//             Failure: -1
//==========================================================================

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13350455 "Ops"
	class_attribute const_attribute public explicit_type "vendor_tag_ops_t"
	init_value "= NULL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3798839 "vendor_tag_info"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 13966135 "tag_name"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 13966263 "tag_type"
	public explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 3798967 "vendor_tag_info_t"
      visibility package stereotype "typedef" base_type class_ref 3798839 // vendor_tag_info
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 309815 "HAL3"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1738423 "QCamera3Channel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3660471 // channel_cb_routine
	class_ref 3660599 // QCamera3Channel
	class_ref 3661239 // QCamera3ProcessingChannel
	class_ref 3661879 // QCamera3RegularChannel
	class_ref 3662007 // QCamera3MetadataChannel
	class_ref 3662135 // QCamera3RawChannel
	class_ref 3662263 // QCamera3RawDumpChannel
	class_ref 3662391 // QCamera3YUVChannel
	class_ref 3662903 // QCamera3PicChannel
	class_ref 3663287 // QCamera3ReprocessChannel
	class_ref 3663671 // QCamera3SupportChannel
      end
    end

    artifact 1738551 "QCamera3CropRegionMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3663799 // QCamera3CropRegionMapper
      end
    end

    artifact 1738679 "QCamera3HALHeader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3663927 // stream_status_t
	class_ref 3661367 // reprocess_type_t
	class_ref 3663159 // jpeg_settings_t
	class_ref 3664055 // metadata_response_t
	class_ref 3661495 // reprocess_config_t
      end
    end

    artifact 1738807 "QCamera3HWI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3650487 // nsecs_t
	class_ref 3664311 // optype_t
	class_ref 3664439 // stream_info_t
	class_ref 3664567 // QCamera3HardwareInterface
      end
    end

    artifact 1738935 "QCamera3Mem"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3667639 // QCamera3Memory
	class_ref 3661111 // QCamera3HeapMemory
	class_ref 3667895 // QCamera3GrallocMemory
      end
    end

    artifact 1739063 "QCamera3PostProc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3661623 // qcamera_fwk_input_pp_data_t
	class_ref 3668023 // qcamera_hal3_jpeg_data_t
	class_ref 3668151 // qcamera_hal3_pp_data_t
	class_ref 3663415 // qcamera_hal3_pp_buffer_t
	class_ref 3663031 // QCamera3Exif
	class_ref 3661751 // QCamera3PostProcessor
      end
    end

    artifact 1739191 "QCamera3Stream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3668279 // hal3_stream_cb_routine
	class_ref 3660855 // QCamera3Stream
      end
    end

    artifact 1739319 "QCamera3StreamMem"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3660983 // QCamera3StreamMem
      end
    end

    artifact 1739447 "QCamera3VendorTags"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3668535 // qcamera3_ext_section
	class_ref 3668663 // qcamera3_ext_section_ranges
	class_ref 3668791 // qcamera3_ext_tags
	class_ref 3668919 // qcamera3_ext_opaque_raw_format
	class_ref 3669047 // qcamera3_ext_opaque_raw_format_t
	class_ref 3669175 // QCamera3VendorTags
      end
    end

    artifact 1752887 "vendor_tag_info"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3798839 // vendor_tag_info
      end
    end

    artifact 1753015 "vendor_tag_info_t"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3798967 // vendor_tag_info_t
      end
    end
  end
end
