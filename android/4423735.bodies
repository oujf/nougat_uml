class InputDeviceManager
!!!44983095.cpp!!!	onInputEvent(in node : std::shared_ptr<InputDeviceNode>, inout event : InputEvent, in event_time : nsecs_t) : void
    if (mDevices[node] == nullptr) {
        ALOGE("got input event for unknown node %s", node->getPath().c_str());
        return;
    }
    mDevices[node]->processInput(event, event_time);
!!!44983223.cpp!!!	onDeviceAdded(in node : std::shared_ptr<InputDeviceNode>) : void
    mDevices[node] = std::make_shared<EvdevDevice>(mHost, node);
!!!44983351.cpp!!!	onDeviceRemoved(in node : std::shared_ptr<InputDeviceNode>) : void
    if (mDevices[node] == nullptr) {
        ALOGE("could not remove unknown node %s", node->getPath().c_str());
        return;
    }
    // TODO: tell the InputDevice and InputDeviceNode that they are being
    // removed so they can run any cleanup, including unregistering from the
    // host.
    mDevices.erase(node);
