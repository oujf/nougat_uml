class NotifierListener
!!!45014967.cpp!!!	getNotificationsFrom(inout dev : camera2_device) : status_t
    if (!dev) return BAD_VALUE;
    status_t err;
    err = dev->ops->set_notify_callback(dev,
            notify_callback_dispatch,
            (void*)this);
    return err;
!!!45015095.cpp!!!	getNextNotification(inout msg_type : int32_t, inout ext1 : int32_t, inout ext2 : int32_t, inout ext3 : int32_t) : status_t
    Mutex::Autolock l(mMutex);
    if (mNotifications.size() == 0) return BAD_VALUE;
    return getNextNotificationLocked(msg_type, ext1, ext2, ext3);
!!!45015223.cpp!!!	waitForNotification(inout msg_type : int32_t, inout ext1 : int32_t, inout ext2 : int32_t, inout ext3 : int32_t) : status_t
    Mutex::Autolock l(mMutex);
    while (mNotifications.size() == 0) {
        mNewNotification.wait(mMutex);
    }
    return getNextNotificationLocked(msg_type, ext1, ext2, ext3);
!!!45015351.cpp!!!	numNotifications() : int
    Mutex::Autolock l(mMutex);
    return mNotifications.size();
!!!45015479.cpp!!!	getNextNotificationLocked(inout msg_type : int32_t, inout ext1 : int32_t, inout ext2 : int32_t, inout ext3 : int32_t) : status_t
    *msg_type = mNotifications.begin()->msg_type;
    *ext1 = mNotifications.begin()->ext1;
    *ext2 = mNotifications.begin()->ext2;
    *ext3 = mNotifications.begin()->ext3;
    mNotifications.erase(mNotifications.begin());
    return OK;
!!!45015735.cpp!!!	onNotify(in msg_type : int32_t, in ext1 : int32_t, in ext2 : int32_t, in ext3 : int32_t) : void
    Mutex::Autolock l(mMutex);
    mNotifications.push_back(Notification(msg_type, ext1, ext2, ext3));
    mNewNotification.signal();
!!!45015863.cpp!!!	notify_callback_dispatch(in msg_type : int32_t, in ext1 : int32_t, in ext2 : int32_t, in ext3 : int32_t, inout user : void) : void
    NotifierListener *me = reinterpret_cast<NotifierListener*>(user);
    me->onNotify(msg_type, ext1, ext2, ext3);
