class BakedOpState
!!!46102839.cpp!!!	tryConstruct(inout allocator : LinearAllocator, inout snapshot : Snapshot, in recordedOp : RecordedOp) : BakedOpState
    if (CC_UNLIKELY(snapshot.getRenderTargetClip().isEmpty())) return nullptr;
    BakedOpState* bakedState = allocator.create_trivial<BakedOpState>(
            allocator, snapshot, recordedOp, false);
    if (bakedState->computedState.clippedBounds.isEmpty()) {
        // bounds are empty, so op is rejected
        allocator.rewindIfLastAlloc(bakedState);
        return nullptr;
    }
    return bakedState;
!!!46102967.cpp!!!	tryConstructUnbounded(inout allocator : LinearAllocator, inout snapshot : Snapshot, in recordedOp : RecordedOp) : BakedOpState
    if (CC_UNLIKELY(snapshot.getRenderTargetClip().isEmpty())) return nullptr;
    return allocator.create_trivial<BakedOpState>(allocator, snapshot, recordedOp);
!!!46103095.cpp!!!	tryStrokeableOpConstruct(inout allocator : LinearAllocator, inout snapshot : Snapshot, in recordedOp : RecordedOp, in strokeBehavior : BakedOpState::StrokeBehavior) : BakedOpState
    if (CC_UNLIKELY(snapshot.getRenderTargetClip().isEmpty())) return nullptr;
    bool expandForStroke = (strokeBehavior == StrokeBehavior::StyleDefined)
            ? (recordedOp.paint && recordedOp.paint->getStyle() != SkPaint::kFill_Style)
            : true;

    BakedOpState* bakedState = allocator.create_trivial<BakedOpState>(
           allocator, snapshot, recordedOp, expandForStroke);
    if (bakedState->computedState.clippedBounds.isEmpty()) {
        // bounds are empty, so op is rejected
        // NOTE: this won't succeed if a clip was allocated
        allocator.rewindIfLastAlloc(bakedState);
        return nullptr;
    }
    return bakedState;
!!!46103223.cpp!!!	tryShadowOpConstruct(inout allocator : LinearAllocator, inout snapshot : Snapshot, in shadowOpPtr : ShadowOp) : BakedOpState
    if (CC_UNLIKELY(snapshot.getRenderTargetClip().isEmpty())) return nullptr;

    // clip isn't empty, so construct the op
    return allocator.create_trivial<BakedOpState>(allocator, snapshot, shadowOpPtr);
!!!46103351.cpp!!!	directConstruct(inout allocator : LinearAllocator, in clip : ClipRect, in dstRect : Rect, in recordedOp : RecordedOp) : BakedOpState
    return allocator.create_trivial<BakedOpState>(clip, dstRect, recordedOp);
!!!46103479.cpp!!!	setupOpacity(in paint : SkPaint) : void
    computedState.opaqueOverClippedBounds = computedState.transform.isSimple()
            && computedState.clipState->mode == ClipMode::Rectangle
            && MathUtils::areEqual(alpha, 1.0f)
            && !roundRectClipState
            && PaintUtils::isOpaquePaint(paint);
