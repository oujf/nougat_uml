class GpuPixelBuffer
!!!46361655.cpp!!!	GpuPixelBuffer(in format : GLenum, in width : uint32_t, in height : uint32_t)
    glGenBuffers(1, &mBuffer);

    mCaches.pixelBufferState().bind(mBuffer);
    glBufferData(GL_PIXEL_UNPACK_BUFFER, getSize(), nullptr, GL_DYNAMIC_DRAW);
    mCaches.pixelBufferState().unbind();
!!!46361783.cpp!!!	~GpuPixelBuffer()
    glDeleteBuffers(1, &mBuffer);
!!!46361911.cpp!!!	map(in mode : AccessMode = kAccessMode_ReadWrite) : uint8_t
    if (mAccessMode == kAccessMode_None) {
        mCaches.pixelBufferState().bind(mBuffer);
        mMappedPointer = (uint8_t*) glMapBufferRange(GL_PIXEL_UNPACK_BUFFER, 0, getSize(), mode);
        if (CC_UNLIKELY(!mMappedPointer)) {
            GLUtils::dumpGLErrors();
            LOG_ALWAYS_FATAL("Failed to map PBO");
        }
        mAccessMode = mode;
        mCaches.pixelBufferState().unbind();
    }

    return mMappedPointer;
!!!46362039.cpp!!!	getMappedPointer() : uint8_t
    return mMappedPointer;
!!!46362167.cpp!!!	upload(in x : uint32_t, in y : uint32_t, in width : uint32_t, in height : uint32_t, in offset : int) : void
    // If the buffer is not mapped, unmap() will not bind it
    mCaches.pixelBufferState().bind(mBuffer);
    unmap();
    glTexSubImage2D(GL_TEXTURE_2D, 0, x, y, width, height, mFormat,
            GL_UNSIGNED_BYTE, reinterpret_cast<void*>(offset));
    mCaches.pixelBufferState().unbind();
!!!46362295.cpp!!!	unmap() : void
    if (mAccessMode != kAccessMode_None) {
        if (mMappedPointer) {
            mCaches.pixelBufferState().bind(mBuffer);
            GLboolean status = glUnmapBuffer(GL_PIXEL_UNPACK_BUFFER);
            if (status == GL_FALSE) {
                ALOGE("Corrupted GPU pixel buffer");
            }
        }
        mAccessMode = kAccessMode_None;
        mMappedPointer = nullptr;
    }
