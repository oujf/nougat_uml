class Signal
!!!46832055.cpp!!!	Signal()
    mSet = true;
!!!46832183.cpp!!!	~Signal()
    pthread_mutex_destroy(&mMutex);
    pthread_cond_destroy(&mCondition);
!!!46832311.cpp!!!	init() : bool
    int status = pthread_mutex_init(&mMutex, nullptr);
    if (status) {
        ALOGE("LocklessFifo mutex init failure");
        return false;
    }

    status = pthread_cond_init(&mCondition, nullptr);
    if (status) {
        ALOGE("LocklessFifo condition init failure");
        pthread_mutex_destroy(&mMutex);
        return false;
    }

    return true;
!!!46832439.cpp!!!	set() : void
    int status;

    status = pthread_mutex_lock(&mMutex);
    if (status) {
        ALOGE("LocklessCommandFifo: error %i locking for set condition.", status);
        return;
    }

    mSet = true;

    status = pthread_cond_signal(&mCondition);
    if (status) {
        ALOGE("LocklessCommandFifo: error %i on set condition.", status);
    }

    status = pthread_mutex_unlock(&mMutex);
    if (status) {
        ALOGE("LocklessCommandFifo: error %i unlocking for set condition.", status);
    }
!!!46832567.cpp!!!	wait(in timeout : uint64_t = 0) : bool
    int status;
    bool ret = false;

    status = pthread_mutex_lock(&mMutex);
    if (status) {
        ALOGE("LocklessCommandFifo: error %i locking for condition.", status);
        return false;
    }

    if (!mSet) {
        if (!timeout) {
            status = pthread_cond_wait(&mCondition, &mMutex);
        } else {
#if defined(HAVE_PTHREAD_COND_TIMEDWAIT_RELATIVE)
            status = pthread_cond_timeout_np(&mCondition, &mMutex, timeout / 1000000);
#else
            // This is safe it will just make things less reponsive
            status = pthread_cond_wait(&mCondition, &mMutex);
#endif
        }
    }

    if (!status) {
        mSet = false;
        ret = true;
    } else {
#ifndef RS_SERVER
        if (status != ETIMEDOUT) {
            ALOGE("LocklessCommandFifo: error %i waiting for condition.", status);
        }
#endif
    }

    status = pthread_mutex_unlock(&mMutex);
    if (status) {
        ALOGE("LocklessCommandFifo: error %i unlocking for condition.", status);
    }

    return ret;
