format 213
"jni" // android::frameworks::base::services::core::jni::jni
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Workspace/AndroidSourceCode/nougat_src/frameworks/base/services/core/jni/"
  cpp_src_dir "D:/Workspace/AndroidSourceCode/nougat_src/frameworks/base/services/core/jni/"
  classview 474935 "jni"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 5751607 "CecEventWrapper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " RefBase wrapper for hdmi_event_t. As hdmi_event_t coming from HAL
 may keep its own lifetime, we need to copy it in order to delegate
 it to service thread."
      classrelation 10986807 // <generalisation>
	relation 10986807 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 10986807 // <generalisation>
	  b parent class_ref 5751735 // typedef7
      end

      operation 46947255 "CecEventWrapper"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "event" type class_ref 4383287 // hdmi_event_t
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract} {
        // Copy message.
        switch (event.type) {
        case HDMI_EVENT_CEC_MESSAGE:
            mEvent.cec.initiator = event.cec.initiator;
            mEvent.cec.destination = event.cec.destination;
            mEvent.cec.length = event.cec.length;
            std::memcpy(mEvent.cec.body, event.cec.body, event.cec.length);
            break;
        case HDMI_EVENT_HOT_PLUG:
            mEvent.hotplug.connected = event.hotplug.connected;
            mEvent.hotplug.port_id = event.hotplug.port_id;
            break;
        default:
            // TODO: add more type whenever new type is introduced.
            break;
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 46947383 "cec"
	const cpp_inline public return_type class_ref 4382391 // cec_message_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mEvent.cec;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 46947511 "hotplug"
	const cpp_inline public return_type class_ref 4382647 // hotplug_event_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mEvent.hotplug;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 46947639 "~CecEventWrapper"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      classrelation 10986935 // mEvent (<directional composition>)
	relation 10986935 *-->
	  a role_name "mEvent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 10986935 // mEvent (<directional composition>)
	  b parent class_ref 4383287 // hdmi_event_t
      end
    end

    class 5751735 "typedef7"
      visibility package stereotype "typedef" explicit_base_type "LightRefBase<CecEventWrapper>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 5751863 "HdmiCecEventHandler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Handler class to delegate incoming message to service thread."
      classrelation 10987063 // <generalisation>
	relation 10987063 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 10987063 // <generalisation>
	  b parent class_ref 5751991 // typedef8
      end

      operation 46947767 "HdmiCecEventHandler"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "controller" explicit_type "HdmiCecController"
	  param in name "event" explicit_type "sp<CecEventWrapper>"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw}${abstract} : mController(controller),
          mEventWrapper(event) {
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 46947895 "~HdmiCecEventHandler"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 46948023 "handleMessage"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "message" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        switch (message.what) {
        case HDMI_EVENT_CEC_MESSAGE:
            propagateCecCommand(mEventWrapper->cec());
            break;
        case HDMI_EVENT_HOT_PLUG:
            propagateHotplugEvent(mEventWrapper->hotplug());
            break;
        default:
            // TODO: add more type whenever new type is introduced.
            break;
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 46948151 "propagateCecCommand"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "message" type class_ref 4382391 // cec_message_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        jint srcAddr = message.initiator;
        jint dstAddr = message.destination;
        JNIEnv* env = AndroidRuntime::getJNIEnv();
        jbyteArray body = env->NewByteArray(message.length);
        const jbyte* bodyPtr = reinterpret_cast<const jbyte *>(message.body);
        env->SetByteArrayRegion(body, 0, message.length, bodyPtr);

        env->CallVoidMethod(mController->getCallbacksObj(),
                gHdmiCecControllerClassInfo.handleIncomingCecCommand, srcAddr,
                dstAddr, body);
        env->DeleteLocalRef(body);

        checkAndClearExceptionFromCallback(env, __FUNCTION__);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Propagate the message up to Java layer."
      end

      operation 46948279 "propagateHotplugEvent"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "event" type class_ref 4382647 // hotplug_event_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // Note that this method should be called in service thread.
        JNIEnv* env = AndroidRuntime::getJNIEnv();
        jint port = event.port_id;
        jboolean connected = (jboolean) event.connected;
        env->CallVoidMethod(mController->getCallbacksObj(),
                gHdmiCecControllerClassInfo.handleHotplug, port, connected);

        checkAndClearExceptionFromCallback(env, __FUNCTION__);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 46948407 "checkAndClearExceptionFromCallback"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "methodName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        if (env->ExceptionCheck()) {
            ALOGE(\"An exception was thrown by callback '%s'.\", methodName);
            LOGE_EX(env);
            env->ExceptionClear();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " static"
      end

      classrelation 10987319 // mEventWrapper (<directional composition>)
	relation 10987319 *-->
	  stereotype "sp"
	  a role_name "mEventWrapper" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 10987319 // mEventWrapper (<directional composition>)
	  b parent class_ref 5751607 // CecEventWrapper
      end

    end

    class 5751991 "typedef8"
      visibility package stereotype "typedef" explicit_base_type "MessageHandler"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

  end

  deploymentview 418103 "jni"
    //deployment diagram settings
    deploymentdiagramsettings
     end
  end
end
