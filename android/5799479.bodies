class ToolbarActionBar
!!!47153335.java!!!	ToolbarActionBar(inout toolbar : Toolbar, inout title : CharSequence, inout windowCallback : Window::Callback)
        mDecorToolbar = new ToolbarWidgetWrapper(toolbar, false);
        mWindowCallback = new ToolbarCallbackWrapper(windowCallback);
        mDecorToolbar.setWindowCallback(mWindowCallback);
        toolbar.setOnMenuItemClickListener(mMenuClicker);
        mDecorToolbar.setWindowTitle(title);
!!!47153463.java!!!	getWrappedWindowCallback() : Window::Callback
        return mWindowCallback;
!!!47153591.java!!!	setCustomView(inout view : View) : void
        setCustomView(view, new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
!!!47153719.java!!!	setCustomView(inout view : View, inout layoutParams : ActionBar::LayoutParams) : void
        if (view != null) {
            view.setLayoutParams(layoutParams);
        }
        mDecorToolbar.setCustomView(view);
!!!47153847.java!!!	setCustomView(in resId : int) : void
        final LayoutInflater inflater = LayoutInflater.from(mDecorToolbar.getContext());
        setCustomView(inflater.inflate(resId, mDecorToolbar.getViewGroup(), false));
!!!47153975.java!!!	setIcon(in resId : int) : void
        mDecorToolbar.setIcon(resId);
!!!47154103.java!!!	setIcon(inout icon : Drawable) : void
        mDecorToolbar.setIcon(icon);
!!!47154231.java!!!	setLogo(in resId : int) : void
        mDecorToolbar.setLogo(resId);
!!!47154359.java!!!	setLogo(inout logo : Drawable) : void
        mDecorToolbar.setLogo(logo);
!!!47154487.java!!!	setStackedBackgroundDrawable(inout d : Drawable) : void
        // This space for rent (do nothing)
!!!47154615.java!!!	setSplitBackgroundDrawable(inout d : Drawable) : void
        // This space for rent (do nothing)
!!!47154743.java!!!	setHomeButtonEnabled(inout enabled : boolean) : void
        // If the nav button on a Toolbar is present, it's enabled. No-op.
!!!47154871.java!!!	setElevation(in elevation : float) : void
        mDecorToolbar.getViewGroup().setElevation(elevation);
!!!47154999.java!!!	getElevation() : float
        return mDecorToolbar.getViewGroup().getElevation();
!!!47155127.java!!!	getThemedContext() : Context
        return mDecorToolbar.getContext();
!!!47155255.java!!!	isTitleTruncated() : boolean
        return super.isTitleTruncated();
!!!47155383.java!!!	setHomeAsUpIndicator(inout indicator : Drawable) : void
        mDecorToolbar.setNavigationIcon(indicator);
!!!47155511.java!!!	setHomeAsUpIndicator(in resId : int) : void
        mDecorToolbar.setNavigationIcon(resId);
!!!47155639.java!!!	setHomeActionContentDescription(inout description : CharSequence) : void
        mDecorToolbar.setNavigationContentDescription(description);
!!!47155767.java!!!	setDefaultDisplayHomeAsUpEnabled(inout enabled : boolean) : void
        // Do nothing
!!!47155895.java!!!	setHomeActionContentDescription(in resId : int) : void
        mDecorToolbar.setNavigationContentDescription(resId);
!!!47156023.java!!!	setShowHideAnimationEnabled(inout enabled : boolean) : void
        // This space for rent; no-op.
!!!47156151.java!!!	onConfigurationChanged(inout config : Configuration) : void
        super.onConfigurationChanged(config);
!!!47156279.java!!!	startActionMode(inout callback : ActionMode::Callback) : ActionMode
        return null;
!!!47156407.java!!!	setListNavigationCallbacks(inout adapter : SpinnerAdapter, inout callback : ActionBar::OnNavigationListener) : void
        mDecorToolbar.setDropdownParams(adapter, new NavItemSelectedListener(callback));
!!!47156535.java!!!	setSelectedNavigationItem(in position : int) : void
        switch (mDecorToolbar.getNavigationMode()) {
            case NAVIGATION_MODE_LIST:
                mDecorToolbar.setDropdownSelectedPosition(position);
                break;
            default:
                throw new IllegalStateException(
                        "setSelectedNavigationIndex not valid for current navigation mode");
        }
!!!47156663.java!!!	getSelectedNavigationIndex() : int
        return -1;
!!!47156791.java!!!	getNavigationItemCount() : int
        return 0;
!!!47156919.java!!!	setTitle(inout title : CharSequence) : void
        mDecorToolbar.setTitle(title);
!!!47157047.java!!!	setTitle(in resId : int) : void
        mDecorToolbar.setTitle(resId != 0 ? mDecorToolbar.getContext().getText(resId) : null);
!!!47157175.java!!!	setWindowTitle(inout title : CharSequence) : void
        mDecorToolbar.setWindowTitle(title);
!!!47157303.java!!!	setSubtitle(inout subtitle : CharSequence) : void
        mDecorToolbar.setSubtitle(subtitle);
!!!47157431.java!!!	setSubtitle(in resId : int) : void
        mDecorToolbar.setSubtitle(resId != 0 ? mDecorToolbar.getContext().getText(resId) : null);
!!!47157559.java!!!	setDisplayOptions(in options : int) : void
        setDisplayOptions(options, 0xffffffff);
!!!47157687.java!!!	setDisplayOptions(in options : int, in mask : int) : void
        final int currentOptions = mDecorToolbar.getDisplayOptions();
        mDecorToolbar.setDisplayOptions(options & mask | currentOptions & ~mask);
!!!47157815.java!!!	setDisplayUseLogoEnabled(inout useLogo : boolean) : void
        setDisplayOptions(useLogo ? DISPLAY_USE_LOGO : 0, DISPLAY_USE_LOGO);
!!!47157943.java!!!	setDisplayShowHomeEnabled(inout showHome : boolean) : void
        setDisplayOptions(showHome ? DISPLAY_SHOW_HOME : 0, DISPLAY_SHOW_HOME);
!!!47158071.java!!!	setDisplayHomeAsUpEnabled(inout showHomeAsUp : boolean) : void
        setDisplayOptions(showHomeAsUp ? DISPLAY_HOME_AS_UP : 0, DISPLAY_HOME_AS_UP);
!!!47158199.java!!!	setDisplayShowTitleEnabled(inout showTitle : boolean) : void
        setDisplayOptions(showTitle ? DISPLAY_SHOW_TITLE : 0, DISPLAY_SHOW_TITLE);
!!!47158327.java!!!	setDisplayShowCustomEnabled(inout showCustom : boolean) : void
        setDisplayOptions(showCustom ? DISPLAY_SHOW_CUSTOM : 0, DISPLAY_SHOW_CUSTOM);
!!!47158455.java!!!	setBackgroundDrawable(inout d : Drawable) : void
        mDecorToolbar.setBackgroundDrawable(d);
!!!47158583.java!!!	getCustomView() : View
        return mDecorToolbar.getCustomView();
!!!47158711.java!!!	getTitle() : CharSequence
        return mDecorToolbar.getTitle();
!!!47158839.java!!!	getSubtitle() : CharSequence
        return mDecorToolbar.getSubtitle();
!!!47158967.java!!!	getNavigationMode() : int
        return NAVIGATION_MODE_STANDARD;
!!!47159095.java!!!	setNavigationMode(in mode : int) : void
        if (mode == ActionBar.NAVIGATION_MODE_TABS) {
            throw new IllegalArgumentException("Tabs not supported in this configuration");
        }
        mDecorToolbar.setNavigationMode(mode);
!!!47159223.java!!!	getDisplayOptions() : int
        return mDecorToolbar.getDisplayOptions();
!!!47159351.java!!!	newTab() : ActionBar::Tab
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47159479.java!!!	addTab(inout tab : ActionBar::Tab) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47159607.java!!!	addTab(inout tab : ActionBar::Tab, inout setSelected : boolean) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47159735.java!!!	addTab(inout tab : ActionBar::Tab, in position : int) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47159863.java!!!	addTab(inout tab : ActionBar::Tab, in position : int, inout setSelected : boolean) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47159991.java!!!	removeTab(inout tab : ActionBar::Tab) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47160119.java!!!	removeTabAt(in position : int) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47160247.java!!!	removeAllTabs() : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47160375.java!!!	selectTab(inout tab : ActionBar::Tab) : void
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47160503.java!!!	getSelectedTab() : ActionBar::Tab
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47160631.java!!!	getTabAt(in index : int) : ActionBar::Tab
        throw new UnsupportedOperationException(
                "Tabs are not supported in toolbar action bars");
!!!47160759.java!!!	getTabCount() : int
        return 0;
!!!47160887.java!!!	getHeight() : int
        return mDecorToolbar.getHeight();
!!!47161015.java!!!	show() : void
        // TODO: Consider a better transition for this.
        // Right now use no automatic transition so that the app can supply one if desired.
        mDecorToolbar.setVisibility(View.VISIBLE);
!!!47161143.java!!!	hide() : void
        // TODO: Consider a better transition for this.
        // Right now use no automatic transition so that the app can supply one if desired.
        mDecorToolbar.setVisibility(View.GONE);
!!!47161271.java!!!	isShowing() : boolean
        return mDecorToolbar.getVisibility() == View.VISIBLE;
!!!47161399.java!!!	openOptionsMenu() : boolean
        return mDecorToolbar.showOverflowMenu();
!!!47161527.java!!!	invalidateOptionsMenu() : boolean
        mDecorToolbar.getViewGroup().removeCallbacks(mMenuInvalidator);
        mDecorToolbar.getViewGroup().postOnAnimation(mMenuInvalidator);
        return true;
!!!47161655.java!!!	collapseActionView() : boolean
        if (mDecorToolbar.hasExpandedActionView()) {
            mDecorToolbar.collapseActionView();
            return true;
        }
        return false;
!!!47161783.java!!!	populateOptionsMenu() : void
        if (!mMenuCallbackSet) {
            mDecorToolbar.setMenuCallbacks(new ActionMenuPresenterCallback(), new MenuBuilderCallback());
            mMenuCallbackSet = true;
        }
        final Menu menu = mDecorToolbar.getMenu();
        final MenuBuilder mb = menu instanceof MenuBuilder ? (MenuBuilder) menu : null;
        if (mb != null) {
            mb.stopDispatchingItemsChanged();
        }
        try {
            menu.clear();
            if (!mWindowCallback.onCreatePanelMenu(Window.FEATURE_OPTIONS_PANEL, menu) ||
                    !mWindowCallback.onPreparePanel(Window.FEATURE_OPTIONS_PANEL, null, menu)) {
                menu.clear();
            }
        } finally {
            if (mb != null) {
                mb.startDispatchingItemsChanged();
            }
        }
!!!47161911.java!!!	onMenuKeyEvent(inout event : KeyEvent) : boolean
        if (event.getAction() == KeyEvent.ACTION_UP) {
            openOptionsMenu();
        }
        return true;
!!!47162039.java!!!	onKeyShortcut(in keyCode : int, inout event : KeyEvent) : boolean
        Menu menu = mDecorToolbar.getMenu();
        if (menu != null) {
            final KeyCharacterMap kmap = KeyCharacterMap.load(
                    event != null ? event.getDeviceId() : KeyCharacterMap.VIRTUAL_KEYBOARD);
            menu.setQwertyMode(kmap.getKeyboardType() != KeyCharacterMap.NUMERIC);
            menu.performShortcut(keyCode, event, 0);
        }
        // This action bar always returns true for handling keyboard shortcuts.
        // This will block the window from preparing a temporary panel to handle
        // keyboard shortcuts.
        return true;
!!!47162167.java!!!	onDestroy() : void
        // Remove any invalidation callbacks
        mDecorToolbar.getViewGroup().removeCallbacks(mMenuInvalidator);
!!!47162295.java!!!	addOnMenuVisibilityListener(inout listener : ActionBar::OnMenuVisibilityListener) : void
        mMenuVisibilityListeners.add(listener);
!!!47162423.java!!!	removeOnMenuVisibilityListener(inout listener : ActionBar::OnMenuVisibilityListener) : void
        mMenuVisibilityListeners.remove(listener);
!!!47162551.java!!!	dispatchMenuVisibilityChanged(inout isVisible : boolean) : void
        if (isVisible == mLastMenuVisibility) {
            return;
        }
        mLastMenuVisibility = isVisible;

        final int count = mMenuVisibilityListeners.size();
        for (int i = 0; i < count; i++) {
            mMenuVisibilityListeners.get(i).onMenuVisibilityChanged(isVisible);
        }
!!!47162679.java!!!	requestFocus() : boolean
        return requestFocus(mDecorToolbar.getViewGroup());
