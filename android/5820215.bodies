class NotificationVisibility
!!!47364407.java!!!	NotificationVisibility()
        id = sNexrId++;
!!!47364535.java!!!	NotificationVisibility(inout key : String, in rank : int, inout visibile : boolean)
        this();
        this.key = key;
        this.rank = rank;
        this.visible = visibile;
!!!47364663.java!!!	toString() : String
        return "NotificationVisibility(id=" + id
                + "key=" + key
                + " rank=" + rank
                + (visible?" visible":"")
                + " )";
!!!47364791.java!!!	clone() : NotificationVisibility
        return obtain(this.key, this.rank, this.visible);
!!!47364919.java!!!	hashCode() : int
        // allow lookups by key, which _should_ never be null.
        return key == null ? 0 : key.hashCode();
!!!47365047.java!!!	equals(inout that : Object) : boolean
        // allow lookups by key, which _should_ never be null.
        if (that instanceof NotificationVisibility) {
            NotificationVisibility thatViz = (NotificationVisibility) that;
            return (key == null && thatViz.key == null) || key.equals(thatViz.key);
        }
        return false;
!!!47365175.java!!!	describeContents() : int
        return 0;
!!!47365303.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeString(this.key);
        out.writeInt(this.rank);
        out.writeInt(this.visible ? 1 : 0);
!!!47365431.java!!!	readFromParcel(inout in : Parcel) : void
        this.key = in.readString();
        this.rank = in.readInt();
        this.visible = in.readInt() != 0;
!!!47365559.java!!!	obtain(inout key : String, in rank : int, inout visible : boolean) : NotificationVisibility
        NotificationVisibility vo = obtain();
        vo.key = key;
        vo.rank = rank;
        vo.visible = visible;
        return vo;
!!!47365687.java!!!	obtain(inout in : Parcel) : NotificationVisibility
        NotificationVisibility vo = obtain();
        vo.readFromParcel(in);
        return vo;
!!!47365815.java!!!	obtain() : NotificationVisibility
        synchronized (sPool) {
            if (!sPool.isEmpty()) {
                return sPool.poll();
            }
        }
        return new NotificationVisibility();
!!!47365943.java!!!	recycle() : void
        if (key == null) {
            // do nothing on multiple recycles
            return;
        }
        key = null;
        if (sPool.size() < MAX_POOL_SIZE) {
            synchronized (sPool) {
                sPool.offer(this);
            }
        }
