class BitwiseOutputStream
!!!47382327.java!!!	BitwiseOutputStream(in startingLength : int)
        mBuf = new byte[startingLength];
        mEnd = startingLength << 3;
        mPos = 0;
!!!47382455.java!!!	toByteArray() : byte
        int len = (mPos >>> 3) + ((mPos & 0x07) > 0 ? 1 : 0);  // &7==%8
        byte[] newBuf = new byte[len];
        System.arraycopy(mBuf, 0, newBuf, 0, len);
        return newBuf;
!!!47382583.java!!!	possExpand(in bits : int) : void
        if ((mPos + bits) < mEnd) return;
        byte[] newBuf = new byte[(mPos + bits) >>> 2];
        System.arraycopy(mBuf, 0, newBuf, 0, mEnd >>> 3);
        mBuf = newBuf;
        mEnd = newBuf.length << 3;
!!!47382711.java!!!	write(in bits : int, in data : int) : void
        if ((bits < 0) || (bits > 8)) {
            throw new AccessException("illegal write (" + bits + " bits)");
        }
        possExpand(bits);
        data &= (-1 >>> (32 - bits));
        int index = mPos >>> 3;
        int offset = 16 - (mPos & 0x07) - bits;  // &7==%8
        data <<= offset;
        mPos += bits;
        mBuf[index] |= data >>> 8;
        if (offset < 8) mBuf[index + 1] |= data & 0xFF;
!!!47382839.java!!!	writeByteArray(in bits : int, inout arr : byte [[]]) : void
        for (int i = 0; i < arr.length; i++) {
            int increment = Math.min(8, bits - (i << 3));
            if (increment > 0) {
                write(increment, (byte)(arr[i] >>> (8 - increment)));
            }
        }
!!!47382967.java!!!	skip(in bits : int) : void
        possExpand(bits);
        mPos += bits;
