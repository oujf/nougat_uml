class Matrix
!!!68992439.java!!!	Matrix()
        native_instance = native_create(0);
!!!68992567.java!!!	Matrix(inout src : Matrix)
        native_instance = native_create(src != null ? src.native_instance : 0);
!!!68992695.java!!!	isIdentity() : boolean
        return native_isIdentity(native_instance);
!!!68992823.java!!!	isAffine() : boolean
        return native_isAffine(native_instance);
!!!68992951.java!!!	rectStaysRect() : boolean
        return native_rectStaysRect(native_instance);
!!!68993079.java!!!	set(inout src : Matrix) : void
        if (src == null) {
            reset();
        } else {
            native_set(native_instance, src.native_instance);
        }
!!!68993207.java!!!	equals(inout obj : Object) : boolean
        //if (obj == this) return true;     -- NaN value would mean matrix != itself
        if (!(obj instanceof Matrix)) return false;
        return native_equals(native_instance, ((Matrix)obj).native_instance);
!!!68993335.java!!!	hashCode() : int
        // This should generate the hash code by performing some arithmetic operation on all
        // the matrix elements -- our equals() does an element-by-element comparison, and we
        // need to ensure that the hash code for two equal objects is the same.  We're not
        // really using this at the moment, so we take the easy way out.
        return 44;
!!!68993463.java!!!	reset() : void
        native_reset(native_instance);
!!!68993591.java!!!	setTranslate(in dx : float, in dy : float) : void
        native_setTranslate(native_instance, dx, dy);
!!!68993719.java!!!	setScale(in sx : float, in sy : float, in px : float, in py : float) : void
        native_setScale(native_instance, sx, sy, px, py);
!!!68993847.java!!!	setScale(in sx : float, in sy : float) : void
        native_setScale(native_instance, sx, sy);
!!!68993975.java!!!	setRotate(in degrees : float, in px : float, in py : float) : void
        native_setRotate(native_instance, degrees, px, py);
!!!68994103.java!!!	setRotate(in degrees : float) : void
        native_setRotate(native_instance, degrees);
!!!68994231.java!!!	setSinCos(in sinValue : float, in cosValue : float, in px : float, in py : float) : void
        native_setSinCos(native_instance, sinValue, cosValue, px, py);
!!!68994359.java!!!	setSinCos(in sinValue : float, in cosValue : float) : void
        native_setSinCos(native_instance, sinValue, cosValue);
!!!68994487.java!!!	setSkew(in kx : float, in ky : float, in px : float, in py : float) : void
        native_setSkew(native_instance, kx, ky, px, py);
!!!68994615.java!!!	setSkew(in kx : float, in ky : float) : void
        native_setSkew(native_instance, kx, ky);
!!!68994743.java!!!	setConcat(inout a : Matrix, inout b : Matrix) : boolean
        native_setConcat(native_instance, a.native_instance, b.native_instance);
        return true;
!!!68994871.java!!!	preTranslate(in dx : float, in dy : float) : boolean
        native_preTranslate(native_instance, dx, dy);
        return true;
!!!68994999.java!!!	preScale(in sx : float, in sy : float, in px : float, in py : float) : boolean
        native_preScale(native_instance, sx, sy, px, py);
        return true;
!!!68995127.java!!!	preScale(in sx : float, in sy : float) : boolean
        native_preScale(native_instance, sx, sy);
        return true;
!!!68995255.java!!!	preRotate(in degrees : float, in px : float, in py : float) : boolean
        native_preRotate(native_instance, degrees, px, py);
        return true;
!!!68995383.java!!!	preRotate(in degrees : float) : boolean
        native_preRotate(native_instance, degrees);
        return true;
!!!68995511.java!!!	preSkew(in kx : float, in ky : float, in px : float, in py : float) : boolean
        native_preSkew(native_instance, kx, ky, px, py);
        return true;
!!!68995639.java!!!	preSkew(in kx : float, in ky : float) : boolean
        native_preSkew(native_instance, kx, ky);
        return true;
!!!68995767.java!!!	preConcat(inout other : Matrix) : boolean
        native_preConcat(native_instance, other.native_instance);
        return true;
!!!68995895.java!!!	postTranslate(in dx : float, in dy : float) : boolean
        native_postTranslate(native_instance, dx, dy);
        return true;
!!!68996023.java!!!	postScale(in sx : float, in sy : float, in px : float, in py : float) : boolean
        native_postScale(native_instance, sx, sy, px, py);
        return true;
!!!68996151.java!!!	postScale(in sx : float, in sy : float) : boolean
        native_postScale(native_instance, sx, sy);
        return true;
!!!68996279.java!!!	postRotate(in degrees : float, in px : float, in py : float) : boolean
        native_postRotate(native_instance, degrees, px, py);
        return true;
!!!68996407.java!!!	postRotate(in degrees : float) : boolean
        native_postRotate(native_instance, degrees);
        return true;
!!!68996535.java!!!	postSkew(in kx : float, in ky : float, in px : float, in py : float) : boolean
        native_postSkew(native_instance, kx, ky, px, py);
        return true;
!!!68996663.java!!!	postSkew(in kx : float, in ky : float) : boolean
        native_postSkew(native_instance, kx, ky);
        return true;
!!!68996791.java!!!	postConcat(inout other : Matrix) : boolean
        native_postConcat(native_instance, other.native_instance);
        return true;
!!!68997047.java!!!	setRectToRect(inout src : RectF, inout dst : RectF, inout stf : Matrix::ScaleToFit) : boolean
        if (dst == null || src == null) {
            throw new NullPointerException();
        }
        return native_setRectToRect(native_instance, src, dst, stf.nativeInt);
!!!68997175.java!!!	checkPointArrays(inout src : float [[]], in srcIndex : int, inout dst : float [[]], in dstIndex : int, in pointCount : int) : void
        // check for too-small and too-big indices
        int srcStop = srcIndex + (pointCount << 1);
        int dstStop = dstIndex + (pointCount << 1);
        if ((pointCount | srcIndex | dstIndex | srcStop | dstStop) < 0 ||
                srcStop > src.length || dstStop > dst.length) {
            throw new ArrayIndexOutOfBoundsException();
        }
!!!68997303.java!!!	setPolyToPoly(inout src : float [[]], in srcIndex : int, inout dst : float [[]], in dstIndex : int, in pointCount : int) : boolean
        if (pointCount > 4) {
            throw new IllegalArgumentException();
        }
        checkPointArrays(src, srcIndex, dst, dstIndex, pointCount);
        return native_setPolyToPoly(native_instance, src, srcIndex,
                                    dst, dstIndex, pointCount);
!!!68997431.java!!!	invert(inout inverse : Matrix) : boolean
        return native_invert(native_instance, inverse.native_instance);
!!!68997559.java!!!	mapPoints(inout dst : float [[]], in dstIndex : int, inout src : float [[]], in srcIndex : int, in pointCount : int) : void
        checkPointArrays(src, srcIndex, dst, dstIndex, pointCount);
        native_mapPoints(native_instance, dst, dstIndex, src, srcIndex,
                         pointCount, true);
!!!68997687.java!!!	mapVectors(inout dst : float [[]], in dstIndex : int, inout src : float [[]], in srcIndex : int, in vectorCount : int) : void
        checkPointArrays(src, srcIndex, dst, dstIndex, vectorCount);
        native_mapPoints(native_instance, dst, dstIndex, src, srcIndex,
                         vectorCount, false);
!!!68997815.java!!!	mapPoints(inout dst : float [[]], inout src : float [[]]) : void
        if (dst.length != src.length) {
            throw new ArrayIndexOutOfBoundsException();
        }
        mapPoints(dst, 0, src, 0, dst.length >> 1);
!!!68997943.java!!!	mapVectors(inout dst : float [[]], inout src : float [[]]) : void
        if (dst.length != src.length) {
            throw new ArrayIndexOutOfBoundsException();
        }
        mapVectors(dst, 0, src, 0, dst.length >> 1);
!!!68998071.java!!!	mapPoints(inout pts : float [[]]) : void
        mapPoints(pts, 0, pts, 0, pts.length >> 1);
!!!68998199.java!!!	mapVectors(inout vecs : float [[]]) : void
        mapVectors(vecs, 0, vecs, 0, vecs.length >> 1);
!!!68998327.java!!!	mapRect(inout dst : RectF, inout src : RectF) : boolean
        if (dst == null || src == null) {
            throw new NullPointerException();
        }
        return native_mapRect(native_instance, dst, src);
!!!68998455.java!!!	mapRect(inout rect : RectF) : boolean
        return mapRect(rect, rect);
!!!68998583.java!!!	mapRadius(in radius : float) : float
        return native_mapRadius(native_instance, radius);
!!!68998711.java!!!	getValues(inout values : float [[]]) : void
        if (values.length < 9) {
            throw new ArrayIndexOutOfBoundsException();
        }
        native_getValues(native_instance, values);
!!!68998839.java!!!	setValues(inout values : float [[]]) : void
        if (values.length < 9) {
            throw new ArrayIndexOutOfBoundsException();
        }
        native_setValues(native_instance, values);
!!!68998967.java!!!	toString() : String
        StringBuilder sb = new StringBuilder(64);
        sb.append("Matrix{");
        toShortString(sb);
        sb.append('}');
        return sb.toString();

!!!68999095.java!!!	toShortString() : String
        StringBuilder sb = new StringBuilder(64);
        toShortString(sb);
        return sb.toString();
!!!68999223.java!!!	toShortString(inout sb : StringBuilder) : void
        float[] values = new float[9];
        getValues(values);
        sb.append('[');
        sb.append(values[0]); sb.append(", "); sb.append(values[1]); sb.append(", ");
        sb.append(values[2]); sb.append("][");
        sb.append(values[3]); sb.append(", "); sb.append(values[4]); sb.append(", ");
        sb.append(values[5]); sb.append("][");
        sb.append(values[6]); sb.append(", "); sb.append(values[7]); sb.append(", ");
        sb.append(values[8]); sb.append(']');
!!!68999351.java!!!	printShortString(inout pw : PrintWriter) : void
        float[] values = new float[9];
        getValues(values);
        pw.print('[');
        pw.print(values[0]); pw.print(", "); pw.print(values[1]); pw.print(", ");
                pw.print(values[2]); pw.print("][");
        pw.print(values[3]); pw.print(", "); pw.print(values[4]); pw.print(", ");
                pw.print(values[5]); pw.print("][");
        pw.print(values[6]); pw.print(", "); pw.print(values[7]); pw.print(", ");
                pw.print(values[8]); pw.print(']');

!!!68999479.java!!!	finalize() : void
        try {
            finalizer(native_instance);
            native_instance = 0;  // Other finalizers can still call us.
        } finally {
            super.finalize();
        }
!!!68999607.java!!!	ni() : long
        return native_instance;
