class RotationPolicy
!!!47472823.java!!!	isRotationSupported(inout context : Context) : boolean
        PackageManager pm = context.getPackageManager();
        return pm.hasSystemFeature(PackageManager.FEATURE_SENSOR_ACCELEROMETER)
                && pm.hasSystemFeature(PackageManager.FEATURE_SCREEN_PORTRAIT)
                && pm.hasSystemFeature(PackageManager.FEATURE_SCREEN_LANDSCAPE)
                && context.getResources().getBoolean(
                        com.android.internal.R.bool.config_supportAutoRotation);
!!!47472951.java!!!	getRotationLockOrientation(inout context : Context) : int
        if (!areAllRotationsAllowed(context)) {
            final Point size = new Point();
            final IWindowManager wm = WindowManagerGlobal.getWindowManagerService();
            try {
                wm.getInitialDisplaySize(Display.DEFAULT_DISPLAY, size);
                return size.x < size.y ?
                        Configuration.ORIENTATION_PORTRAIT : Configuration.ORIENTATION_LANDSCAPE;
            } catch (RemoteException e) {
                Log.w(TAG, "Unable to get the display size");
            }
        }
        return Configuration.ORIENTATION_UNDEFINED;
!!!47473079.java!!!	isRotationLockToggleVisible(inout context : Context) : boolean
        return isRotationSupported(context) &&
                Settings.System.getIntForUser(context.getContentResolver(),
                        Settings.System.HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY, 0,
                        UserHandle.USER_CURRENT) == 0;
!!!47473207.java!!!	isRotationLocked(inout context : Context) : boolean
        return Settings.System.getIntForUser(context.getContentResolver(),
                Settings.System.ACCELEROMETER_ROTATION, 0, UserHandle.USER_CURRENT) == 0;
!!!47473335.java!!!	setRotationLock(inout context : Context, in enabled : boolean) : void
        Settings.System.putIntForUser(context.getContentResolver(),
                Settings.System.HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY, 0,
                UserHandle.USER_CURRENT);

        final int rotation = areAllRotationsAllowed(context) ? CURRENT_ROTATION : NATURAL_ROTATION;
        setRotationLock(enabled, rotation);
!!!47473463.java!!!	setRotationLockForAccessibility(inout context : Context, in enabled : boolean) : void
        Settings.System.putIntForUser(context.getContentResolver(),
                Settings.System.HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY, enabled ? 1 : 0,
                        UserHandle.USER_CURRENT);

        setRotationLock(enabled, NATURAL_ROTATION);
!!!47473591.java!!!	areAllRotationsAllowed(inout context : Context) : boolean
        return context.getResources().getBoolean(R.bool.config_allowAllRotations);
!!!47473719.java!!!	setRotationLock(in enabled : boolean, in rotation : int) : void
        AsyncTask.execute(new Runnable() {
            @Override
            public void run() {
                try {
                    IWindowManager wm = WindowManagerGlobal.getWindowManagerService();
                    if (enabled) {
                        wm.freezeRotation(rotation);
                    } else {
                        wm.thawRotation();
                    }
                } catch (RemoteException exc) {
                    Log.w(TAG, "Unable to save auto-rotate setting");
                }
            }
        });
!!!47473847.java!!!	registerRotationPolicyListener(inout context : Context, inout listener : RotationPolicy::RotationPolicyListener) : void
        registerRotationPolicyListener(context, listener, UserHandle.getCallingUserId());
!!!47473975.java!!!	registerRotationPolicyListener(inout context : Context, inout listener : RotationPolicy::RotationPolicyListener, in userHandle : int) : void
        context.getContentResolver().registerContentObserver(Settings.System.getUriFor(
                Settings.System.ACCELEROMETER_ROTATION),
                false, listener.mObserver, userHandle);
        context.getContentResolver().registerContentObserver(Settings.System.getUriFor(
                Settings.System.HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY),
                false, listener.mObserver, userHandle);
!!!47474103.java!!!	unregisterRotationPolicyListener(inout context : Context, inout listener : RotationPolicy::RotationPolicyListener) : void
        context.getContentResolver().unregisterContentObserver(listener.mObserver);
