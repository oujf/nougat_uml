class FasterStringBuilder
!!!47662135.java!!!	FasterStringBuilder()
            mChars = new char[64];
!!!47662263.java!!!	clear() : PointerLocationView::FasterStringBuilder
            mLength = 0;
            return this;
!!!47662391.java!!!	append(inout value : String) : PointerLocationView::FasterStringBuilder
            final int valueLength = value.length();
            final int index = reserve(valueLength);
            value.getChars(0, valueLength, mChars, index);
            mLength += valueLength;
            return this;
!!!47662519.java!!!	append(in value : int) : PointerLocationView::FasterStringBuilder
            return append(value, 0);
!!!47662647.java!!!	append(in value : int, in zeroPadWidth : int) : PointerLocationView::FasterStringBuilder
            final boolean negative = value < 0;
            if (negative) {
                value = - value;
                if (value < 0) {
                    append("-2147483648");
                    return this;
                }
            }
            
            int index = reserve(11);
            final char[] chars = mChars;
            
            if (value == 0) {
                chars[index++] = '0';
                mLength += 1;
                return this;
            }
            
            if (negative) {
                chars[index++] = '-';
            }

            int divisor = 1000000000;
            int numberWidth = 10;
            while (value < divisor) {
                divisor /= 10;
                numberWidth -= 1;
                if (numberWidth < zeroPadWidth) {
                    chars[index++] = '0';
                }
            }
            
            do {
                int digit = value / divisor;
                value -= digit * divisor;
                divisor /= 10;
                chars[index++] = (char) (digit + '0');
            } while (divisor != 0);
            
            mLength = index;
            return this;
!!!47662775.java!!!	append(in value : float, in precision : int) : PointerLocationView::FasterStringBuilder
            int scale = 1;
            for (int i = 0; i < precision; i++) {
                scale *= 10;
            }
            value = (float) (Math.rint(value * scale) / scale);
            
            append((int) value);

            if (precision != 0) {
                append(".");
                value = Math.abs(value);
                value -= Math.floor(value);
                append((int) (value * scale), precision);
            }
            
            return this;
!!!47662903.java!!!	toString() : String
            return new String(mChars, 0, mLength);
!!!47663031.java!!!	reserve(in length : int) : int
            final int oldLength = mLength;
            final int newLength = mLength + length;
            final char[] oldChars = mChars;
            final int oldCapacity = oldChars.length;
            if (newLength > oldCapacity) {
                final int newCapacity = oldCapacity * 2;
                final char[] newChars = new char[newCapacity];
                System.arraycopy(oldChars, 0, newChars, 0, oldLength);
                mChars = newChars;
            }
            return oldLength;
